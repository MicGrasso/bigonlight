(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   4042534,      77697]
NotebookOptionsPosition[   3992209,      76935]
NotebookOutlinePosition[   3995230,      77000]
CellTagsIndexPosition[   3994610,      76984]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "Info on the notebook:\nThis notebook uses the BiGONLight package to compute \
observables in conformal EdS model.\nIt is structured as follows: \n- model \
set-up:  give the 4D metric tensor components as input and compute the 3+1 \
quantities lapse \[Alpha], shift ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Beta]", "i"], TraditionalForm]],ExpressionUUID->
  "bd3730f0-7a2d-4a9f-b432-554aef8d09d1"],
 ", spatial metric ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Gamma]", "ij"], TraditionalForm]],ExpressionUUID->
  "f9dff866-30ad-407c-b704-1bc9477c1737"],
 ", extrinsic curvature ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", "ij"], TraditionalForm]],ExpressionUUID->
  "c76a3ddd-4705-48d7-8cd4-3428667e6530"],
 " and the normal vector ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "\[Mu]"], TraditionalForm]],ExpressionUUID->
  "f1118b21-8a95-4373-97b0-e10c6c77ff6f"],
 ";\n- geodesic: provide initial position and tangent vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["x", "\[Mu]"], ",", " ", 
     SuperscriptBox["\[ScriptL]", "\[Mu]"]}], "}"}], TraditionalForm]],
  ExpressionUUID->"e15da994-229a-4ea5-bc8a-b4a92e03913a"],
 " as input to find null geodesics;\n- parallel transported frame: give the \
initial conditions for a frame ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    SuperscriptBox["\[Phi]", "\[Mu]"], "\[Alpha]"], TraditionalForm]],
  ExpressionUUID->"c2204f2b-8b6a-4942-96a8-40f58c7f39fe"],
 "that will be parallel transported along the computed geodesic (we use the \
SNF, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     SuperscriptBox["\[Phi]", "\[Mu]"], "\[Alpha]"], "=", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["u", "\[Mu]"], ",", 
      SubscriptBox[
       SuperscriptBox["\[Phi]", "\[Mu]"], "1"], ",", 
      SubscriptBox[
       SuperscriptBox["\[Phi]", "\[Mu]"], "2"], ",", " ", 
      SuperscriptBox["\[ScriptL]", "\[Mu]"]}], "}"}]}], TraditionalForm]],
  ExpressionUUID->"b9fadb69-57b9-457f-911d-b443178e3bd0"],
 " with ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["u", "\[Mu]"], TraditionalForm]],ExpressionUUID->
  "36e9a3b8-6a10-4833-93f1-2afd1376e9e0"],
 " the four-velocity and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    SuperscriptBox["\[Phi]", "\[Mu]"], "A"], TraditionalForm]],
  ExpressionUUID->"150aa216-b72e-4d8a-abbf-ee2bfe4474d7"],
 " two orthonormal vectors)\n- optical tidal matrix: compute the optical \
tidal matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     SuperscriptBox["R", "\[Mu]"], "\[Rho]\[Sigma]\[Nu]"], 
    SuperscriptBox["\[ScriptL]", "\[Rho]"], 
    SuperscriptBox["\[ScriptL]", "\[Sigma]"]}], TraditionalForm]],
  ExpressionUUID->"b9326d18-67bc-4f01-a134-f552b38e316e"],
 " in the parallel propagated frame; \n- BGO: compute and solve the Geodesic \
Deviation Equation for the Bi-local Geodesic Operators along the null \
geodesic;\n- observables: compute the optical observables in the BGO \
framework: redshift, redshift drift, angular diameter distance, luminosity \
distance, parallax distance, distance slip, convergence and shear.\n"
}], "Text",
 CellChangeTimes->{{3.828532459873345*^9, 3.828532645131907*^9}, {
   3.828533065293714*^9, 3.8285330865837193`*^9}, {3.828533125877118*^9, 
   3.828533161838572*^9}, {3.828533211136179*^9, 3.828533231988625*^9}, {
   3.828533278175935*^9, 3.828533296186132*^9}, {3.8285334048455763`*^9, 
   3.828533532470398*^9}, {3.828533607546936*^9, 3.828533682706334*^9}, {
   3.828533748739994*^9, 3.828533765163383*^9}, {3.828533802962296*^9, 
   3.828534094519711*^9}, {3.828534125017651*^9, 3.8285342339359083`*^9}, {
   3.8285343630835752`*^9, 3.828534678482643*^9}, {3.828534770965375*^9, 
   3.828534833558296*^9}, {3.828534864160202*^9, 3.8285349151594667`*^9}, {
   3.828586469597722*^9, 3.8285864708723907`*^9}, {3.828586516331785*^9, 
   3.828586568966566*^9}, {3.828674260432325*^9, 3.828674276574336*^9}, {
   3.828674344024229*^9, 3.82867447868591*^9}, {3.8286746008778687`*^9, 
   3.8286746671481237`*^9}, 3.828674705106344*^9, {3.8287623510563927`*^9, 
   3.82876235801728*^9}, {3.828870826159029*^9, 3.828870827121621*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"35b64677-826f-4a1a-acba-5c0550400bc0"],

Cell["\<\

Set the current directory as working directory and load the package.\
\>", "Text",
 CellChangeTimes->{{3.828586149111617*^9, 
  3.82858628935385*^9}},ExpressionUUID->"900f8435-49f8-4f52-9666-\
ef4d77c9ff03"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Needs", "[", "\"\<bigonlight`\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.760101852351226*^9, 3.760101932452969*^9, 3.7609625758454742`*^9, {
   3.764584564023209*^9, 3.764584564744216*^9}, {3.764586603616695*^9, 
   3.7645866038673477`*^9}, {3.764586634654381*^9, 3.764586634830989*^9}, {
   3.774017704323851*^9, 3.7740177044799747`*^9}, {3.774247842799635*^9, 
   3.774247843230096*^9}, 3.779026991533369*^9, {3.779092181519856*^9, 
   3.7790921886488934`*^9}, {3.781869196380845*^9, 3.781869197021347*^9}, {
   3.79361246078651*^9, 3.793612461594412*^9}, {3.7986130319527903`*^9, 
   3.798613032437089*^9}, 3.8098623751131783`*^9, {3.8098624644198647`*^9, 
   3.809862500257184*^9}, {3.813742651280895*^9, 3.813742684239555*^9}, 
   3.832484816246119*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"7291dc37-5aa3-4c48-9fe3-3c8215a372ce"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"prec", "=", "16"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$PreRead", "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "/.", 
       RowBox[{
        RowBox[{"s_String", "/;", 
         RowBox[{
          RowBox[{"StringMatchQ", "[", 
           RowBox[{"s", ",", "NumberString"}], "]"}], "&&", 
          RowBox[{
           RowBox[{"Precision", "@", 
            RowBox[{"ToExpression", "@", "s"}]}], "\[Equal]", 
           "MachinePrecision"}]}]}], "\[RuleDelayed]", 
        RowBox[{"s", "<>", "\"\<`16.\>\""}]}]}], "&"}], ")"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"MachinePrecision", "\[RuleDelayed]", 
     RowBox[{"s", "<>", "\"\<`prec.\>\""}]}], "&"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.813742686586665*^9, 3.8137426870667267`*^9}, {
   3.814016799494837*^9, 3.8140168019032097`*^9}, {3.814019029806114*^9, 
   3.8140190301566887`*^9}, {3.8140190796810226`*^9, 3.814019080321498*^9}, {
   3.814022203942501*^9, 3.814022228952993*^9}, 3.814022321323264*^9, {
   3.814022353886689*^9, 3.8140223543299217`*^9}, {3.814022408958475*^9, 
   3.814022446175249*^9}, {3.814022480256871*^9, 3.814022480380159*^9}, {
   3.814022522732595*^9, 3.8140225266526203`*^9}, {3.814022574890091*^9, 
   3.8140225828309526`*^9}, {3.824873640673904*^9, 3.8248736638337517`*^9}, {
   3.824875603083047*^9, 3.8248756155622597`*^9}, {3.825231371133946*^9, 
   3.825231377075892*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"cf80fc0c-ac6f-4ff0-8271-01ff249eebac"],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{
  3.814022233265379*^9, 3.814022282478215*^9, 3.814022322602161*^9, 
   3.814022357888568*^9, 3.8140224502522793`*^9, 3.814022481184965*^9, 
   3.814022528422844*^9, 3.814022584236112*^9, 3.814022616108141*^9, 
   3.814256595396688*^9, 3.814259924567751*^9, 3.814709448587441*^9, 
   3.81477527647472*^9, 3.8165125876560373`*^9, 3.816606862609859*^9, 
   3.8167565113982563`*^9, 3.816768520349415*^9, 3.81694819892585*^9, 
   3.823328048606855*^9, 3.82366278417523*^9, 3.8239545946668243`*^9, 
   3.823961972574494*^9, 3.824460882610079*^9, 3.82478124587141*^9, 
   3.824785493705576*^9, 3.82479130881061*^9, 3.82480741599513*^9, 
   3.824807519588603*^9, 3.8248736684485407`*^9, 3.824873995882712*^9, {
   3.824875604436982*^9, 3.8248756165637417`*^9}, 3.825231379131468*^9, 
   3.825479197981118*^9, 3.8314588096727667`*^9, 3.832495781116152*^9, 
   3.8325735982538652`*^9, 3.832589405184745*^9, 3.8326448875967703`*^9, 
   3.832661108514126*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"97128763-f2b2-4eb3-bc1d-2e4612b4b8f0"]
}, Open  ]],

Cell[TextData[{
 "\na generic direction can be written as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ScriptV]", "\[Mu]"], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ScriptV]", "0"], 
      RowBox[{
       SubscriptBox["\[PartialD]", "0"], 
       RowBox[{"+", 
        RowBox[{"\[Gamma]", "(", 
         RowBox[{"sin\[Chi]", " ", "cos\[Xi]", " ", 
          RowBox[{
           SubscriptBox["\[PartialD]", "1"], 
           RowBox[{"+", "sin\[Chi]"}]}], " ", "sin\[Xi]", " ", 
          RowBox[{
           SubscriptBox["\[PartialD]", "1"], 
           RowBox[{"+", "cos\[Chi]"}]}], " ", 
          SubscriptBox["\[PartialD]", "3"]}], ")"}]}]}]}], "=", 
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[ScriptV]", "0"], "(", 
        SubscriptBox["\[PartialD]", "0"], ")"}], "\[Mu]"], "+", 
      RowBox[{"\[Gamma]", " ", 
       SuperscriptBox[
        OverscriptBox["N", "\[RightVector]"], "\[Mu]"]}]}]}]}], 
   TraditionalForm]],
  InitializationCell->True,ExpressionUUID->
  "a55238b4-dd9e-42a9-b251-50a71cae244d"],
 " with respect to the local tetrad ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[PartialD]", "\[Mu]"], TraditionalForm]],ExpressionUUID->
  "754498e4-583a-4d2b-a939-dfd33c555452"],
 ". \nIn particular for a null direction ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ScriptV]", "0"], "=", 
    RowBox[{"\[PlusMinus]", "1"}]}], TraditionalForm]],
  InitializationCell->True,ExpressionUUID->
  "40c0b6e5-c6ba-4504-bcad-622a04c11f4e"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "=", "1", " "}], TraditionalForm]],
  InitializationCell->True,ExpressionUUID->
  "7672ca05-c08a-4a62-a03a-3ea95a1ed8a4"],
 ", while for a timelike direction ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ScriptV]", "0"], "=", 
    RowBox[{
     RowBox[{"\[PlusMinus]", "c"}], " ", "\[Gamma]"}]}], TraditionalForm]],
  InitializationCell->True,ExpressionUUID->
  "c2939e96-94f0-4312-8224-3f0524c72f06"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Psi]", "=", 
    RowBox[{"c", " ", "\[Gamma]", " ", "\[Beta]", " "}]}], TraditionalForm]],
  InitializationCell->True,ExpressionUUID->
  "bee79a63-b7c8-465c-acda-8c0183070a4c"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "=", 
    FractionBox["vel", "c"]}], TraditionalForm]],ExpressionUUID->
  "9c2a62cd-302a-45f1-9fe8-a7518c5dfc96"],
 " the normalized velocity and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "=", 
    FractionBox["1", 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox["\[Beta]", "2"]}]]]}], TraditionalForm]],
  ExpressionUUID->"00e440b8-f771-4fc7-8c2b-3589b13339a5"],
 " the Lorentz factor.\nimport data on files\n\
BGO=<<\[CloseCurlyDoubleQuote]BGO_data.m\[CloseCurlyDoubleQuote];\ntotN=<<\
\[CloseCurlyDoubleQuote]geodesic_data.m\[CloseCurlyDoubleQuote];\n\n"
}], "Text",
 CellChangeTimes->{{3.781432253174608*^9, 3.781432314738253*^9}, {
   3.781432401012904*^9, 3.781432430694079*^9}, {3.781432596490514*^9, 
   3.781432800794051*^9}, {3.7814331349278*^9, 3.781433173733938*^9}, {
   3.781436531225905*^9, 3.7814365898728247`*^9}, {3.781436677905074*^9, 
   3.781436793202076*^9}, 3.7814368358453827`*^9, {3.781436912157914*^9, 
   3.781437212103121*^9}, {3.7828030508070183`*^9, 3.782803057306368*^9}, 
   3.793797368470922*^9, {3.793797427942718*^9, 3.793797429601818*^9}, {
   3.7937993148625727`*^9, 3.793799334080988*^9}, {3.793823111807909*^9, 
   3.7938231132291517`*^9}, 
   3.83249579728891*^9},ExpressionUUID->"079ad037-7702-459b-a691-\
572686106543"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalV]", "[", 
    RowBox[{"Vt_", ",", "lorentz_", ",", "direction1_", ",", "direction2_"}], 
    "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"V0", "=", "Vt"}], ",", " ", 
       RowBox[{"\[Gamma]", "=", "lorentz"}], ",", 
       RowBox[{"\[Chi]", "=", "direction1"}], ",", 
       RowBox[{"\[Xi]", "=", "direction2"}]}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"V0", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "+", 
      RowBox[{"\[Gamma]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "\[Chi]", "]"}], 
          RowBox[{"Cos", "[", "\[Xi]", "]"}], 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Chi]", "]"}], 
          RowBox[{"Sin", "[", "\[Xi]", "]"}], 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Chi]", "]"}], 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}]}], 
        ")"}]}]}]}], "\n", "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StandardPlotStyle", "[", 
    RowBox[{
    "size_", ",", "sizelegend_", ",", "ylabel_", ",", "xlabel_", ",", 
     "title_", ",", "legend_", ",", "position_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ft", "=", "size"}], ",", 
       RowBox[{"ftL", "=", "sizelegend"}], ",", 
       RowBox[{"yL", "=", "ylabel"}], ",", 
       RowBox[{"xL", "=", "xlabel"}], ",", 
       RowBox[{"pt", "=", "title"}], ",", 
       RowBox[{"list", "=", "legend"}], ",", 
       RowBox[{"pl", "=", "position"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{"list", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"yL", ",", "\"\<\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"xL", ",", "\"\<\>\""}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"FontSize", "\[Rule]", "ft"}], "]"}]}], ",", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"GridLinesStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Gray", ",", 
            RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], 
         ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{"pt", ",", "Bold", ",", 
            RowBox[{"FontSize", "\[Rule]", "ft"}]}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"yL", ",", "\"\<\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"xL", ",", "\"\<\>\""}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"FontSize", "\[Rule]", "ft"}], "]"}]}], ",", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"GridLinesStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Gray", ",", 
            RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], 
         ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{"pt", ",", "Bold", ",", 
            RowBox[{"FontSize", "\[Rule]", "ft"}]}], "]"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"LineLegend", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"list", "[", 
                  RowBox[{"[", "m", "]"}], "]"}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "ftL"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"m", ",", "1", ",", 
                 RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}], 
             "]"}], ",", "pl"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"Print", "[", "\"\<Error\>\"", "]"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.781433215883875*^9, {3.781433254340206*^9, 3.781433285587756*^9}, {
   3.78143331670609*^9, 3.781433362118814*^9}, {3.78143342947511*^9, 
   3.781433454507286*^9}, {3.7814334932540617`*^9, 3.7814335667755117`*^9}, {
   3.781433605798806*^9, 3.78143360849023*^9}, {3.781437297839316*^9, 
   3.78143730326125*^9}, {3.781437335281474*^9, 3.7814373529646597`*^9}, {
   3.781438003352951*^9, 3.781438099376728*^9}, {3.793804604362645*^9, 
   3.7938046054623127`*^9}, {3.793806446410447*^9, 3.793806527803322*^9}, {
   3.7938082962931223`*^9, 3.793808430188772*^9}, {3.7938085101984787`*^9, 
   3.7938085782310247`*^9}, {3.793808623366458*^9, 3.79380863370398*^9}, {
   3.793808741010597*^9, 3.793808815913678*^9}, 3.793808934379683*^9, {
   3.793944693446206*^9, 3.793944702574498*^9}, {3.795098314133596*^9, 
   3.795098317392212*^9}, {3.795099670300127*^9, 3.795099675838731*^9}, {
   3.7951006309227962`*^9, 3.79510064213387*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"525520bd-91ad-4470-9e81-1168489e15ae"],

Cell[CellGroupData[{

Cell["FLRWSolver", "Title",
 CellChangeTimes->{{3.7601018550221663`*^9, 3.760101877626479*^9}, {
  3.761653898239925*^9, 3.7616539414929237`*^9}, {3.777877520224846*^9, 
  3.777877524229579*^9}, {3.781872983224083*^9, 3.781872985803129*^9}, {
  3.813742695027742*^9, 3.8137426979697247`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"effa3edc-2806-4972-8df0-080827701c8f"],

Cell[CellGroupData[{

Cell["Import data from spacetime simulation", "Section",
 CellChangeTimes->{{3.760179705830826*^9, 3.760179725555457*^9}, {
   3.762190609682498*^9, 3.76219061325602*^9}, {3.762190744218953*^9, 
   3.7621907749821577`*^9}, {3.764478003246757*^9, 3.764478006744501*^9}, {
   3.767590223384047*^9, 3.767590258328867*^9}, 3.7778175686754827`*^9, {
   3.823664388725803*^9, 
   3.823664402254472*^9}},ExpressionUUID->"b499d465-6e10-48c7-aaf8-\
5b2dda0e1e09"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.814274028762611*^9},ExpressionUUID->"4b62894b-f0c0-43a8-92a3-\
bbd6778e3ab9"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"i\[ScriptCapitalH]", "=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{
           "\"\<Data_FLRWSolver/res_0.05/H.average.asc\>\"", ",", 
            "\"\<Table\>\""}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"__", "?", "NumericQ"}], "}"}]}], "]"}], ",", "All", ",", 
        RowBox[{"-", "2"}]}], "]"}], ",", "prec"}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.814709485327647*^9, 3.814709520339398*^9}, {
  3.816948266183742*^9, 3.816948270293056*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"c8b57949-8555-45ee-aabb-50cc07be673f"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i\[ScriptCapitalH]", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ">", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "8"}]]}], ",", 
      RowBox[{
       RowBox[{"rel", "=", 
        RowBox[{"i", "-", "1"}]}], ";", 
       RowBox[{"Print", "[", 
        RowBox[{"ToString", "[", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"i\[ScriptCapitalH]", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"i\[ScriptCapitalH]", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], "]"}], 
       ";", 
       RowBox[{"Break", "[", "]"}]}], ",", 
      RowBox[{"rel", "=", 
       RowBox[{"i", "-", "1"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "@", "i\[ScriptCapitalH]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8147095681666737`*^9, 3.814709663213896*^9}, {
  3.81470972572466*^9, 3.814709843452075*^9}, {3.814709978142503*^9, 
  3.814709981494936*^9}, {3.814710073927146*^9, 3.814710074004058*^9}, {
  3.814710272431299*^9, 3.814710277981677*^9}, {3.814710335439398*^9, 
  3.8147104939848623`*^9}, {3.814710782375762*^9, 3.8147107904170313`*^9}, {
  3.816607090372512*^9, 3.816607098370962*^9}, {3.816756639918706*^9, 
  3.8167566465755653`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"1847c416-798d-47ff-b3c2-4c22c3b8eda0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"i\[ScriptCapitalH]", "[", 
    RowBox[{"[", 
     RowBox[{"3119", ",", "2"}], "]"}], "]"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{"i\[ScriptCapitalH]", "[", 
    RowBox[{"[", 
     RowBox[{"rel", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
   "rel"}]}]], "Input",
 CellChangeTimes->{{3.81471065957764*^9, 3.8147106701739683`*^9}, {
   3.81471079965792*^9, 3.814710816020389*^9}, 3.816607123238962*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"f479d3d9-7818-4685-9b5e-130b23115cbb"],

Cell[BoxData[
 RowBox[{"-", 
  "5.6468940353810496738925377847680408437645`16.*^-18"}]], "Output",
 CellChangeTimes->{
  3.814710671408203*^9, {3.8147108050795403`*^9, 3.8147108167091503`*^9}, 
   3.814775299229608*^9, 3.816512603762333*^9, 3.816607016650861*^9, {
   3.816607104750029*^9, 3.81660712575913*^9}, 3.81675665085884*^9, 
   3.816948285765304*^9, 3.823328078939555*^9, 3.823664201098844*^9, 
   3.823954606343821*^9, 3.8239620041914177`*^9, 3.824781267609489*^9, 
   3.824785508637957*^9, 3.825479236918393*^9, 3.832495829418769*^9, 
   3.832567434876865*^9, 3.832589419662623*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"8c5b0e91-13ee-4c94-9bbf-21dc17f02c47"],

Cell[BoxData["64400"], "Output",
 CellChangeTimes->{
  3.814710671408203*^9, {3.8147108050795403`*^9, 3.8147108167091503`*^9}, 
   3.814775299229608*^9, 3.816512603762333*^9, 3.816607016650861*^9, {
   3.816607104750029*^9, 3.81660712575913*^9}, 3.81675665085884*^9, 
   3.816948285765304*^9, 3.823328078939555*^9, 3.823664201098844*^9, 
   3.823954606343821*^9, 3.8239620041914177`*^9, 3.824781267609489*^9, 
   3.824785508637957*^9, 3.825479236918393*^9, 3.832495829418769*^9, 
   3.832567434876865*^9, 3.8325894196651497`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"0a19e1dc-7265-40ad-b2cd-edcffc6ad700"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"i\[ScriptCapitalH]", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "rel"}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.814709542462983*^9, 3.8147095539861717`*^9}, {
  3.814710531293662*^9, 3.814710549310824*^9}, {3.8147106337817574`*^9, 
  3.814710646770186*^9}, {3.814710679387924*^9, 3.814710694292884*^9}, {
  3.814775322176498*^9, 3.8147753227577353`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"cd4ea91e-e240-4fe2-a728-e406301cae26"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJxcnXl4nVW1uJOc0yYtSJlkVMrYzPPJPJyTeW7moWnmoU3TtEnbtCC92ArK
qBRBBAWEH4igIFRARPEACghclBaRCwgKCCqT0Mxz8jvnrHft/Tz6z332/b5v
D2uvvd79pmk5r2e4rj8kKCjohoWgIP//lf8dcy+v+P+3zpvS8Zuy40NoH2jM
Gfzt6E1nOPX5eu9dZ8X/7cLV2q7Oef2Sjzckhmk7PGftG/eM5KzV9uk57kCH
2l+Td6+vt6YT9Hlazs/G/lzVc6K2U3Lerf7OLTtP1nZ8zqkPlbx/6anarvCW
Hx8SfdVp2m70HghM0MzX+9iL+5668yx9Hu31z+7Br2jbnbP+W5/WPnGOttu9
DR/ce9tz5+r37d5r8rr+efR8fV7m9XXmW7Bd3+TSX3wrPuYONJ/u8Ua2Hfr9
VIR9HghftImPN7DcWDufl/zTi9d2p3fZ312itjd6kwP/s+sb+O5//sedYts/
+uK+P1SkMf5Ksvc1X/RaMkw7x7fY1r4s2gfqvLIhur4W755Ah9pfjvd+X2/X
5Nn99W3uN24u0PYm78lXPPO//6+ItnuHt9S3Gw+V0H6633tZYIN1/FrvI3f4
J6jtXu+/F37q22Htr9/7Vd/s3q3W9oC37olzfDui73d5rzrtrVdm6o+5gwNp
OeINpF+Tjd+4P11ajrkd/uddO7zh/u1ttfsR2I62Y26n//ldXd5A+Dq0//Ny
XvAvt4v2uyPeRf/0enQ9O72B7vp0vELvlsD/NH4d3tufO/fw7gHbfvX8t+e+
PqjxrvH6o3fdkG1nBRJa+8v07gpsCPN/b9j7k9v8HTLfrl6vv7ffjvK9e8Tr
21xfSut6er3Fj0/4MpDvz93m3R84INoe8vom51uyzq/V60tmX5faX4/3bP/x
/Qb9ndvjrfEftyv4/q7t3sDx+JbNj0A6X6X97fQe86ffNfq83HtRYMH03zni
DWzvd465Pw38P3Z5A9txSPvf6n3eH77v6ny6vfP+5d50zB3mf+5p8Aamd7M9
z4HubtH2oPeHP/D/T+Pb7T0yU+87wRrPXq//tD1yxzH3R/7n63Z7MwIFQeOz
xTscSGidf6n3xyP+DdH+d3j92ffBveRfzS6vv7cv7jvmXhOYX5238LohX0rb
/flaoMAcc6/2P79htzdQrh6y+x8oL4dZ3zMd3jMDE9T83e7d6D++j+n52uIN
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
f3+X7Ibnk8LnT3fDc94P3QnPbX/Cc1vPhOca32F4bvNFeE78WpTnfJ82BM95
/9ld8Jz5PLALnk8avxCeaz1Xnuv8huE5561S/Zzn60fgud1P4bmNj/Cc7weG
4Dn72zIEzy1fhOe8/5n6OfnlGoHn5OMZu+H5JPdr9XP7XHiu89E/P5+U+8lx
u+H5pPER4fmk+Xmf8Jzxv7cLnk+a+7XwXPm6E54z/5hd8HxSeP62+jnzKdkO
z4nnfv3zc63fynPbf2DcoCnz5z/C8ynz83fh+ZT0N7Mdnk8R72F4PmXyVXg+
ZfJPeD4l5/U19fMpme9VynP6u3UnPJ8yPiE8t23hOf29MAzPdX7K8ynx+bbd
8HyKfBuB51PuU/ztbPXzKcMn4Tn9pQ3Cczue8Jz4XDACz6fM/UV4zvpeGILn
U8R7EJ5PyX6cugueT0m+PKl/fq7jD8Fz+73wfEr8q1J5zvxKhuE5/Tfsgufa
HoHn9HfXEDyfMvdX4bndb+E5+3PGTng+Zeqx8Jz3s9TPp8zPj4XnxP/+IXiu
/Q3D8ymT/8JznZ/y3M5XeD5l7g/Cc8a/eCc8nzL1THjO818Nw3Nd7054bvNf
eE7/9yvPpwxvhOf0t38XPJ8yf54jPKe/gl3wfMr4vfB8yvBSeG7jJzyfghc7
4TnvT6qf63oG4fmUqY/Cc83XnfDcrk94bs+D8FzzbSc8t/snPLfnS3hu8014
Tv9X6e/D8Xyd/vn5lLnPCc81n7fDc/LhTfVz1hO6A54z/tm74PmU+X0p4bk9
n8Jzux7hudaXHfBcz+sQPJ8y90fh+ZThpfBcxxuC53Z/hOfE86NBeM77z47A
c/tceK77tQ2eT5n7qPCc9n3683ba4SPw3K5feM563x2B55of2+G5XY/w3OaL
8Jz5fVt/3q75PQLP7fjCc94f2AbP7f4Kz+15E55rvdgOz23/wvMpc38Qntv6
Ijy3+SY8t/stPGd+vcpzjec2eG7rl/B8yvx8R3hu653wXPdrGzzX/NwJz219
Fp7rerfBc8sz4bmuZxs8Z72Hh+C58kD//HzK/HmY8Fz7H4LnWk+3w3PNhx3w
fNqcJ+H5tPFX4fk0+6V+Pm1+viY8nzbnT3g+LeP77m/C82n8dhCe2/eF59OG
78Jzxju2HZ4zv5Yd8Fzf3wbPp82fJwnPp42fCs+nzZ+XCs+Z3692wHOd7yA8
t/0Lz6fNeRCeM55DeT5tfp4gPLfrEZ5P/9efn9Pu2gbPGT9N/Xza1Bfhua5f
/Zz2GYPwfNrwXniu+6V/fj5t7nvCc8ab2QHPp42PC8+nze/XCM9t/IXn+v4A
PJ82P78Qnk+b/BWeT5v6IzzX9Q7Bc52v/j7ctMlX4bmNh/B82viZ8Hza/L6J
8FzjMQTPbf4Kz+1+Cc+Zf/U2eK7xGoTn06aeC8/1+TZ4Pm3Op/B82px/4Tnr
iRiE5zZewnPdjyF4zvsfDcFzO1/hucZvJzzXeA3Ac80/5bnGYxs81/nrn5/b
/BOeTxtfEp4z33Xb4Lk9H8JzXZ/+PpyeR+W5XZ/wfNr4u/Bc93cAnk8b3grP
p019F54znyPb4Pm04YvwfNr8vFR4bp8Lz+34wnPaR7bD82lT/4XnNh+F5/Y8
C8+Z/8g2eK71ZAie2/MoPLfrFZ7zfER5buMvPJ82vio8nzY8Fp7b/BSe63wH
4bmuR/3c1mPhuT3vwnOtz9vguebjdniu7QF4ruNtg+f2ufBc828Anms+D8Bz
Ox/huebnADy3PBCes55bB+G5nt8BeD5t7v/Cc1vfhef2ufDczkd4rvujPNd4
bIfnms8D8FzjNwjPNd76+3D6/iA8p/+EAXiu+bgdnuv61M91/AF4rvVlEJ7r
edwOz2fMfUZ4PmP4JTyfIb/Uz2dM/ROez5CP2+H5DPEagOcz5veDhOczpj4J
z2eoJzvg+YzhgfCc90cG4DnjPbYVnvN+2054zvsxynPm/1kfPGd964bgOeNf
vB2e0/8lW+E5/T04BM95PrkdnjP+j7fA8xmJr2MHPJ8x91Ph+Yw5r8LzGdmf
2wfgucanH57zvE39nPFHB+A5z28dgOeMf9UAPJ8xvx8qPJ8xvBOes37ffV54
btcjPGe+92+B5+TLs33wnPHf3ArPabcMwPMZwzPh+Yw5f8Jzxp9Rnuv6tsBz
HW8Ans+Y+iY81/0ZgOeaf/3wfMbwX3jOeAuD8JzxXFvgOd9/2AfPZ8zfhxGe
zxi+Cc+Jd6j+fvuMue8Kz3W8fnhu4yM81/3th+d2vcJzxjvSD8/1PGyB59rf
NnjOeFnb4Dn5fkofPOf5/q3wnO/f2QLPZ0y9E57b/RGeM78r+uA5z5/cAs9t
W3iu8RuE53Y+wnN7noTn9n3huc6nD56z/sP98Jz8+mgrPNfz1A/PNX+3wnM9
f4PwnP2r6IPn9P/ZFng+Y/78WHiu9acPnrM/L2+B57SP2wbP7f4Jz1nf01vg
uW0Lz3X9W+C5jr8Fns/w59H98FzzbQs81/j2w3PNP/37ajr/AXjO/K7bCs/t
eRKeE68Lt8HzGcNT4bnWyy3wXM93Hzwnvi/0wXPm4+6D55qvffB8xtw/hee6
fz3w3MZLeK71S/++mp7HPniu+7EVnivv9O+r2feF5zPm/ic8nzF//0d4zvsl
/fDctoXnxCN9CzzX/VQ/t/kpPLf7KeHT+rIVnut52wbPLT+F59pfDzyf5f1+
eD5r/n6q8HzWnF/h+Sz7sxWez3Ke+uA57Yht8HxW5tvSD89nJf4HeuD5LOd1
Gzyn/4p+eE77qq3wnO+zeuH5LPV/Kzyn7eqD57PGp4Tns4aXwnPtvw+eM/+B
LfCceLRtged8H7MVns/K+blpKzyfNfVBeD4r+1PfA8+Z32O98HzW8E14Pmvq
ifCc5+v64Tnze7AXns+afBCe831CHzyfNX8fU3hOu28LPNfx+uE5/d/fC89n
TX0Wntt4CM+Z32vd8Nz2JzxnvHO3wnO7v8Jz3a9+eE6+OXrgOf0d3grP+T60
H55rPnXDc9or3fCc/i/ph+fM//ZueM78PtS/r0Y83+yB5za/hOe8/+NeeK7f
b4Xns6YeC891P3rh+azhv/B81tQj4fmsqX/Cc51PNzzX/eiB57z/ch885/nT
PfBc57sVnuv57IXnxOMrvfBc490Dz2dNfRaeazy74TnjuXvg+azhg/Cc8YZ6
4bnGsxee6/N+eK770wfP9fz2wnOev9MFz3V8/fvnnMf6LfBcz2cvPLf7KzzX
9XXDc/p/rwue6/t98Jz9fXYLPNfz1wvPZw3vhedaH7vhOes5rh+e63z74fms
8Q/hOf2l98BzWz+E57ofPfBcz2MPPJ81/36B8NyuT3iu56cLnuv574Pns+a+
IDzX/eiG5+TLSD881/rSD8+J19P98Fzzvwee63y74Lmutw+e63z64bnGrxee
23ojPGf8C7vhudarPnhu1yM8t/MRntv8E55rvvXCcz1PyvPZ/+K51vtueK75
0QPPdX698FzrYTc8Jx9e64PnPL+uG57reD3wXOtBHzyfI9598HyO3//uhudz
xh+E53Pcp3vhuT7vgudzEt/Rbng+x5//98Bzxivoh+dzzL8Xns8xv154Pkd+
dMNz5ndGHzy37wvP58y/VyA8ZzxHLzynvx93w3OdTw885/mHvfCc9aZ3wfM5
U8+E56x3pAuez5nzITzX/rrgOe8ndMHzOVN/hed2PcJzfd4Nz4lXfR88p7/D
ffCc9TzbBc+J/0AfPNf5d8Fzux7hOfON6ILndr7Cc/p7UP2ceH+lC54zv5v6
4Dn9z/bC8znysxees76sHng+Z/JdeK7jd8NzzadueK7jK8/n5Pfl13fCc7t/
wvM5+f2vJzrhOeP7+C88p73QDc/p/9wueE67qxuez+FfvfB8ztwXhOf2ufB8
ztR/4TnPT9F/T2bO3I+E56w3ogeeE4+BTnhO+6MOeK7npQue6/p64TnxGNV/
T4bxDnXDc9sWnmt+98BzG3/huc0f4bnuRx88t/krPNf16L8nw3g39cBzzY8e
eK71pRue23ogPLffC8/teRae6/nohueav93wfM7cj4Xnc/L7maWd8HxO/v7Z
w53wXPO5C57b+ic8t/shPJ+T39e+pROea3x74Dnt+i54bvNReE48Xlae63jK
c/KppRueE5/3OuG5rX/Cc/tceK71pgeecz7SO+A564/vgOes5/QOeD7H7x92
wnPWs07/PZk5wx/huZ4v5bmtx8Jz3d8eeG7bwnPaXZ3wXPe/G56zn591wXNd
fzc8Z38mu+C51kvlOd/v7IbnNh+E55oPHfCc9Xi74bk9X8Jz+n9eec7zfd3w
nOereuE59fOUDnjOfO7vgudz8vuf93XCc54PdsPzefn+9C54Pi/5ck4XPJ83
+SY85/3GLng+L/l0lvKc96u74Pm8zHd/Bzyfl/Xv74Ln89yvOuC5fS48nzf1
VXg+L/P/sAOe8/2xLnhOO0l5znraeuD5vOTDv5Tn86Z+Cc/nJZ9dnfB8XuIX
3Q7P5w0vhOfMz+cnwnPWG9wNz3U93fB8XvZzvhue8/yybnhOfNd1wnOeX9wJ
z+flfFzRDs/nTT0RnrMfbyrPWd93u+A581vVA8+JV1wPPNf5Kc95flh5Tvw2
dMNz3f8eeM58zu2G54x3oB2e017phOfz5n4uPNf+u+A5739LeT5v7hvCc8b/
YRc8J15Pq5+TL591w/N5OZ+VynPiWdUFzxmvpAuezxt+Cc/t/gvPed7XDs+1
/w54Pi9/v+O5dnjOeq/rhOfzpr4Kz3ke2gnPmc83uuA549/ZDs81f7vg+bz8
vvJ9bfCc/Zxsh+fM748d8Jz3wzvgOfn3ehc8Zz9b2uC5na/w3NYD4Tn5MtQB
z+el3md3wvN5U++F53Y+wnP6b+uA5zbewnO+P64dnnNen+iA59puh+fzpv4L
z7XedMJz1n/PZniu47fB83n5fV9XOzyfN/4nPNf+2+A5+XhGNzwnP4a64Dn5
udIFz+fN/UB4rvvVBs+pPw9shufabofn9PdkFzzXfFSea3zb4Dn5HtoBz3X+
HfDcng/hOfNJ7YLnxG9AeW73S3iu8eyE5+TPm23wfN74hPBcn3fAc60Pm+E5
6/moHZ5rPrTDc9Y/0wHP5819SnjO/Aa64Lm+3wrP9XxuhudarzrgueZ7BzzX
+LTDc3s+hOc2P4Xneh464TnxP64Lnuv+tMNz8udoOzzX+r4ZnnPemrvguebn
Zni+YPggPF+Q/bhgMzxfIH/a4Dnt6A54viDxKOyA5/p+JzynHb8Zni+QP+3w
fIH93AzPF2R9L3bA8wX8sh2e8/35XfCc8Z/rgOcLcp6zW+E53/e1wXPtrw2e
L5jzIjy37wvPF0y8hecLEu+aNniu8WiD5wsm34XnC9zXNsNz1tuyGZ7zfHIT
PF/gftYGzxfMfVl4zvNDnfB8wdz/hecL1PtWeL7AfnfAc11vKzxnvkOb4Tnf
n90BzxfMfVR4ruvdDM9tvgjPF6R+/3YzPF8w51F4zvvh7fBc49EKzxfkvC20
wvMFU2+F56z/pnZ4znzXt8Bz1rNb/71X4vfbVni+gA93wXObj8JzXU8HPCe+
Z7fBc91P5bl9X3i+YM6v8HzB8ER4bucjPOf9kWZ4znl0dMDzBXO/FJ5rPqqf
Lxi+Cs91/5Xnej6V5/a8Cc/1vGyC58TnUCs8Zz6hLfBc860VntM+vROes38z
zfCc89KwCZ7r/Jrgua0PwvMFUw+F53oe2uE5/e9vhefk56NN8Jx4ftYMz3U+
HfBc86sZni+Yei881/hugue63hZ4bscTni+Y+io8J75trfDc1jPhueZ/GzzX
etIKzxfMfUN4rue/DZ7z/QNN8Jx8PNYJz3W/NsNz+jvWDM9Zz20t8FzjvRme
a33ZDM8X8NsWeG7nIzy3+SM8J99ebILnWm9b4bmO1wnPbf4Iz9mfi5Xnmj/N
8Jz+S1vhuZ6nTfBc60kzPGe/4tvhOfXpGeW5nt92eM5zTys81/PfDs/t+8Jz
zZdWeK7rbYHnC//F8wVzXxKeaz62wHPd/xZ4bnkhPNf60A7Ptb60wPNFU/+F
54umngjPF8mXdni+aHgmPF/k72M3wfNFiV9yMzyn/3v032/n+780w3Ntt8Fz
xr9Ceb7IepTni+zHZni+CK/a4Pki9yvluY7fDM+Z38P677cvkk/677fTvq0Z
ni8avgnPad/WAc8Xyc8OeK7r3wTPic8Dm+A581tpgue0Hc3wfJH9VJ4vkt/t
8HzR+IDwnPnesgme2/gIzxk/vhWeL5r6LDxfND4pPNf9aILn9JetPNf5bYLn
2lae0x5qh+eLnO9N8HzR+KzwnPhd1wzP9f02eL5o6o/wfJG/D9wMzxdN/RGe
2/gKz7XdDM8XzfkUnut+Ks9tW3i+aO5XwnP2Y38LPCc/25rgOedltA2e8/yd
Jniu8WqH5+zne5vhOfH5sBWe6360wnONTyM81/xqgeeLpt4Iz3W9rfBc49kK
zzUfWuE5+7GuBZ7redoMz3n/KuX5orn/Cs9pD2yG55q/LfDc1g/hucarGZ4T
n5EWeK7xaYHni+a+KDzn/D/WBs9tPRCea7yb4Pmiub8LzzV/2uC5zr8Zni/C
r1Z4znxnleecnz+2wHPN/2Z4rudxEzzX9TTBc613m+G5zrcRntv9EZ5rPrfC
c7v/wnOt38pz1nfTJniu+dgIz3U+rfBc92MTPOf5h8pzzZ8meE58spvguc1P
4bnmxyZ4rvnTDM8XjX8Jzzl/65vg+aK5bwjP7fqE5zZ/hOdafxvhua2PwnN9
vwmeLxqfEJ5rPBrhuT0vwnPd/wZ4vmjud8LzReNLwnPd/0Z4rvV7MzzX/jfB
c83nzfB80dwPhee2LTxfNPebwLyClqgXm+D5kpy/mRZ4vsR9shWe076vCZ4v
mfkJz5eIdys8X+LnnQ3wXN9vhedLnN8GeL7EfrTA8yV8sAWe8/05LfB8SfJh
Xv97LEusbxM8Zz3eJni+RH1rhudLEp8fNsBznv9Neb4k5yevBZ7TX04LPOf5
SgM8Z/1FLfCc/tsa4TntszbBc51/Azy38RKes54rG+D5kuR7dyM8Zz+im+A5
8elrhuesp70ZnvP9BernjH9pCzwnH05uhedL5r4pPF+S+nW98pz1nNMMz5lv
ZQM81/g1wXP2+6EGeK7xbILn9PejJniu+9cMz8mHhzfB8yU571XN8Jz2dcpz
zacGeL4k9e3VFnjOfFe3wnP6/08TPNf+N8Fzvq/dBM91f1rgOfNdaIDnvH9T
AzxfMrwUnrMf/Y3wfMnwQXjO/m5rgedLUh8u3wTPdf82wXPa2Q3wnHwMbYTn
jPd+PTxnfqc3wXPi9ajynP070ATPWV9GAzxnvpXN8HzJ3F+E58RnbSM81/db
4LnmWxM8J/7xzfCc9lg9PF+SepfeAM/J97tb4DnPp1vgOfn7UQs8Zz7XtsBz
zccmeM56c9TPmW9NEzynfbQBni8ZvgnPie+dynOtDy3wXPNFea7j18Nz9vuf
zfCc/SvbBM/p/556eM7+ndIEz5nfCU3wnP7jlOfE68N6eE6+fL0eni8ZHgrP
Nd6N8Jx4RinPyYdf18Nze76F5+zvac3w3NYH4Tnx+V0LPF8yfi08Z323NMDz
JeM/wnPGe6QRntt6LDy39VB4TvsnDfCc9S83wHOtP/Xw3I4vPFdeNMNz9uuB
Bniu9b4Zni+Z+77wfMn4ovB8yfiM8NyeH+G58qgRnms9boLnygP182Xi3QjP
l4lvPTxflvn2N8PzZX7eXQ/Pl+FTAzzn++cb4Ln2rzxf5v5WD8+X4Y3ynPdb
GuH5MvebenhOO6QJni+b/BeeL/PzwiZ4vmzqg/B8mf1vgOfLJl7C82XOTz08
X5b8HmuG58vwtg6eL3N/b4bnfH9cIzxnPTc2wXPmV6V+bucrPKddq/99Nda3
rR6es55H6+H5MjxogOe0/9kIz3n/4Xp4vmzOn/DcPheeL0s9OLkenjP/7zfA
82Xut43wnPjdWQ/Pl019FJ4vm3otPGd9f1KeL3NelOfE7yrlOfFPboLny9SX
JnjO/JPr4bmuvw6eL5v6Izxn/OOa4TnzjWuE53Z9wnPicX0TPCe/Vxrhuc1X
4Tn5XVoPz5nff+rgOeenqwGe835lHTzn+d0N8Jz1P9oIz4nPS3XwnPz7bR08
17bynPevq4fnxGOoAZ4vm/ogPOf7rzfCc/b3tgZ4buuD8Jz1/6UBnrOePzbA
c9rX1sFz1veTeni+bHxReG7Pn/B82fBKeM5+JTXCc1sPhOfs/z118Jz9u7EO
nrO+7Dp4rvlfC8/1fDTAc80v/e+raT1TP182/iU8t/shPOf8hjfCc+ZztB6e
637UwXP6u7IenvN+TQM8J/5FDfBc60kjPNfz1AjPNT6N8Fz3U3m+bPxAeM75
eqIentP/q7XwnP5Pr4Pny+b+KDzXeCrPdb9q4TnxXamD59p/PTy3+SY8J34f
18Jzm2/Cc/o/VgvPWe9z9fBceVULzznfmfXw3M5feM7zx+vgue5nPTzX+dfD
82Xz35cTntt4C8+Jx1gdPLfPhee6//XwXOt5HTxXPtbCc+VBAzwnHm/Ww/MV
eFYPz1dkvzbVwvMVGW9DIzzn/dvq4PkK+VkLz2nX1MNz+mushecr8KoOntO+
qRaer+ATdfCc9lW18HwFn62D5ysSn9V18HxF4p1TD89X+PPpBniu7Xp4zvsH
auH5Cj8vqIPnK/x+VgM8XzH1WHi+wv2sHp5r/3XwfMXwRnhO/4/UwnOeP1wH
z1fkPF1aC895PlYLz+k/sxae8zy+Dp7z/XwNPGd+22rhOftzch08J57LdfCc
/f6Z8pz5xinPV+BXLTxf4f6p/71U4rm/Dp6zv1UN8Jz9vE55vsJ9uwGes5+F
tfB8BT7Uw3PWE10Hz+mvrBae2++F55pv9fCcfHyrDp6zvqQGeM77r9bBc+Lj
qYXnK8LXvbXwnPWu6H8vlf0ZVZ6vUC9r4fmKqY/Cc11PLTxnPS/VwnPme1M9
PGd9Icpz5nep8nzF8EF4bvsTnrNf79XBc/KhoRae2/0VnhOfyVp4bs+L8Jz9
u6IWnq8YXgjP7fyE57o/dfCceP6qBp4z3+Pq4DnvX14Dz4nv47XwXOtXDTwn
nuHKc11vDTwnnrfUw3M9P/XwXOtRDTy351N4vmL4JDznvKXXwXP2+4JaeG7r
pfCceBXVwHPW85taeK71V3lOf/018Jz9urEGntvzLDznvKythee2XgjPbX0W
nuv8a+G51s86eG7rofDcrl94rs/Vz20+Cc/teRWeE4/1yvMV44fCc/Iluwae
k49v1sBzrWc18Jx8+VMNPF8x/BOeaz1UnhOf62vguZ2v8Nzmt/B8xdwnhOda
b2rguX1feG7ri/DcnnfhOfsfWgvPbf0Vnuv8a+A55zlOeW7zX3hOfE6rg+dB
Hq1XgfMeHOQJzH9HHXwP8kh+cP4dQR6Zbw28D/LI+HVSD1bp+zXwn/a11IfQ
II+ef7kPBHn0PAfqxRr6P13vB0EevS8E6sdxQZ7Av8/6djX3hSCP+Fed1JMv
Md6Len9gvN/VSn1ZF+QR36zhPkH/J1NvTgryyP1U7xfM79FqqT+nMD/ffUfu
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
3ieV4+fBUm/XlODnwdTHEvyc+KWV4ufk58Ey/Jz8O74SP+f9sQr8nPOUWY6f
6/pK8HPNjxL8XPO5DD8nXu/B8yrm+y14vlHPawl+Tr2IqcTPNd5l+LnmMzyv
I78qS/FzrQ/wvCEY/6jAz3X/y/HzYKmvp5Xh5+T/WyX4OfX00jL8nPkNluHn
tt6In2t9K8fPtf4V4+eMd2Mpfs55ObUUP6feflCOn+t5LsHPtT5V4ufBnsB/
v2+yAj/X8wnP+4lXTjF+Hiw+lViOn3PeIovx82C5Dx0rxc+ZX10Ffq7rLcbP
dfxy/Jz5PVuCn1PvHqnAz+n/Z/B8OJj7RzF+buub+Dn16f/K8XN4VViCn5PP
+SX4OeeppxQ/1/HL8XM9L2X4ueZTCX4ezH2mBD/X+JXi55yvq8vxc92/cvyc
fO0rwc857+3l+LmtX4F5HQyW+8Q5xfg563eV4Oc6/1L8XPsvxs+J38tl+Dnj
rS/Hz7W+l+Pnmp9F+Lmtv+LnvP/3Ivxcz3cxfs55O1qKn/P+rcX4Ofl6RTF+
rvMpxs85n8Pw/AbW31aEn2v9KcHPLR/Fz6mHq4vxc+4rG0rwc8a7pwg/Z79L
ivBzrafw/Fadbyl+rvWqCD9nvdeW4efaXzl+rue1DD9nvq+U4efU6+ZS/Fzv
V2X4uT1/4ueav0X4uZ6nIvxceVqOnzP+ecX4Od//vQQ/1/0qwc+VV0X4uY4P
z3/K+zcW4eec78dL8XOttyX4OfePuWL8XPsvxs+VL6X4ud434fkvlPfw/BGt
/8X4Oefx7WL8XPO/ED+nHl0Czx/X+1Ihfk7/W4vxc51vIX6u/ZXi5/p+GX7O
/eKBQvxc20X4udarMvxc62chfs75aC3FzzV/SvFzeNBQip8TrxuK8HNbj8XP
4dm/4PnznOf1hfg5/b1ZjJ/rfb0IP1f+FeHnet8uxs/tfU38nPHuL8HPdf/L
8HPqT3URfk59LC/Ezy3fxc+1v0L8HB5NlOLn1LvZQvxc+yvCz/W+WYqf2/uI
+Dn783Epfq73l1L8nP5Ti/FzvY8V4+d6Xorxc+V/CX6uzwvxc83nYvzc7qf4
udajEvyc/Ywrxc8130vwc72PlOLn5MvLxfg53w+V4Ofw6dcl+LnuRwl+rvcn
eP6x1ssi/FzPZwl+znwOF+PnWn8K8fNgft5ZhJ/b5+Lnmt8l+Lm9/4ifw8v/
K8HP2d8/FODn1OcX4fmkvR+Jn7O+k0rxc87fEwX4ufoqPJ+19VH8XOdTgp8r
/4vwc/WNYvyc/b28CD/X+1gxfk484ovw8xDObwl+HsL5LcbPQ7hPlODnIfL9
GDx3hsh6by3Az0MYvwQ/DzG8FD8PkfuPsxg/DyGe8HxNCPlbiJ+HcP+A58eF
mPMofs78XynCz0PwyyL8XL8vws9DJF5zBfi5rrcAP+f90AL8nPXGF+LnIfg0
PD81hPpVgJ8zv8FC/DxEeHRJAX4eQj0rwM9DqB/F+HmI1PNPi/HzELNf4ufE
95ki/DxEzmt/AX4egr8V4ec6XiF+HsL9qgQ/DzHnQfw8hPtWAX5Of28V4Och
1JMi/Jz5pxbh58Tjh/n4eYip5+LnIZz3Qvyc+a8vws+Zz7eK8XP6O60IP7fv
i59r/ubj57r/8Dw+hPtpIX5OPHcU4+fE4+8F+HmI8OXVIvxc41uIn+v8ivDz
EOp3IX4eIvX7qSL8PAReF+Hn5H8+PM/Q/MnHz8n/5QL8PIQ/v8zHz0O4bxXj
5yHmPit+Tru1AD+n/4Zi/Jx4HV+Mn9t8FT9n/VXF+HmIuR+In7Pfo0X4OfF2
F+DnWg8K8XPdn0L8XOORj5+HSH3bXYCfE5+Dhfg55yGyED+38RA/5/nWQvxc
86sYP9f+C/Fz8ru9AD8nH+oK8HPOS1E+fs76TynAz6lXvvuU+Lnudz5+Tr1b
yMfPNf8L8HN9vwA/DxH+xOTj5+TrzUX4OfFyFOHnGu8i/FzzIR8/Z/2HC/Bz
zmtiIX5O/TivAD/X/S3Cz1l/VyF+Tvy+k4+fs/+3FOHnIXJ/PZqPn7P/pxbi
58TbFx/xc+b/ZB5+Tr4/k4efM7/CQvyc+KUV4eesz7ef4uf2ufi53W/xc9bz
YR5+znl+vwA/h29nFeHnel4K8XPW+3oefq71tRA/Z7+a8/Fzxj8pHz9n/CsK
8HP286p8/DxEfMF33sXPyR9vIX6u/C3Ez2mv5OHnNp6BeR4kH57Nw8/p70Ae
fs56fpOHn3P+/1WIn3P+H8rHz3U/i/BzrYf5+Dnj/SsfP4ePzYX4Ofv7dj5+
Tv/rCvBzu3/i5+TTCYX4Od/fkY+fc14G8/BznmcX4udan+D5d6mHvviIn+v5
zcfPtb98/FzPSz5+znrvycfP2a9OeH5LiNxPywrxc/JjMg8/p15tzcfPlb8F
+Dn752uLn5NPZ8LzO+x9SPzcxlP8XO8DBfi5vR+Jn9v7i/i51t88/Jx86srD
zzmvi/n4uY23+Lmt1+LnWm/z8XPN93z8nPz4Vj5+bvNf/FzrSR5+zvjr8/Bz
zmNGPn6u/ILnh9kfH0/Fz/V7eP6I1uM8/Jz4XpqHn+v5zsfPQ+T+fXkBfs58
N+Tj5/DfV2/Fz219ET/X+wo8/w35EZeHn9u2+Dn5dkI+fk6+fJqPn7OfL+fh
58T/cD5+Tn9Dhfi5xrsAP9f7dj5+zvfVBfg553U6Dz+35038XPmQh58r3/Px
c71fw/OX9P6Vh5+zXzsK8HPO93ABfm7rp/i5rqcAP6c/3/1M/Jz9dhbg58yv
Nh8/5z7myw/xc12/+rnO14OfE9+YQvxcz3sefk69SsrDzzlPr+Th58rTPPyc
8f6Qh5/b5+LnyodC/Jz431yAn7OeQwX4uW2Ln5N/Fxbg59STy/Lxc+L3szz8
XO9TBfg5/Y3m4efKlzz83H4vfk69y87Dz/V+koef6/MC/Jz72Ivw/FOb7+Ln
+NBb+fg563cV4Ofkf2QBfs75uLEAP7e+I35u7//i55zX59XPWb/vffFzvb97
8HPO/6YC/Jz8bIDnMxrvPPycevd5Pn6u9QaezyuPPfg58d2fh5/r/SMfP9f6
lY+f23gE5hXkID/z8XMHvpaPnztYfwF+7pD6da8HP3ewX+rnDu4PHvzcIT/P
aijAzx2y/hvz8HMHPp+Hnzv4+ZYHP3ew//n4uUPy6xEPfu7g51n5+Dnvv52H
nzskX37uwc+Z3zt5+LmD85yHnzuk/szl4+cOc38XPyce8fD8VPr/FJ5/2cZH
/NyBD+Th54y/Px8/d+C7+fi5g/tRHn7ugP95+DnxG87Hz5nPK/n4OfEszMPP
Heb+Ln7ukHz11R/xcwe/f+vBzx2Sr7N5+DnzuxGeX8D8qvLxc/LlW3n4uQN+
e/Bzh9TDAQ9+zvzuhecRDvjvwc+Jfxo8j3Zw/4LnMexvpwc/Z76bPPi5fS5+
zv5E5uPnDs97/vaSGz93mPuY+Dn51O7Bz+1+i587+HlcHn7u4Ocfefi5w9Rn
8XPWX+XBz+n/KXie4ZD76anq54z3KDzPIn8WPfg53/va4ue6Xx783IHP5ePn
5NuPPPi5zicPP+f9u/Pwc+afn4efa/w8+Dnvb/Dg53p+Pfi5ni8Pfs541+Xh
5+zvDW78nPWt9+DnnMer8/Bz7T8fP9fz6sHPyZ81Hvyc/BzJx8/1/Hnwc+rR
aXn4uUPq4Zn5+DnrPcGDnzukfvr2U/yc/D7Jg58z3jp43sx++PxA/NyBH+Tj
59STR+F5K+8fy8HPHYaP4ufU12kPfs56v5WLnzs8p/ufv5ODn3PeSzz4ua1n
4ucO4w/i5+TfrfC8l/XclIefa/334OfM7yMPfs763OrnDs/5/vaf3fg5+fS+
Bz+39Vf8nP7+pH7uMPcH8XOH50P/+//Mxs8dxg/Fzzm/J+Th5zz33UfFzx34
dj5+7vC87X/+1Vz83GHud+LnNl7i5+RbOTzfS/vjfPzcIbx2qZ9r/qqfsx//
8uDnzOfNPPzc1ifxc4e5D4ifM7+hbPyc9inw/OvE1xePQB4ddHjO8f/fndn4
Ofl9Ug5+rvUBnl9B/fpJPn7O/Hd48HNbT8XPWW91Nn6uvIbnVzs8b/mfb3fj
5//F82tpXw3Pr9P9cePnzO/KLPyc/dirfu7wfOLvP8+NnzP/HDd+rufBjZ9z
vh7Jxs/p/5Is/Nwh98VMD36u/MrDzzkfe/Pwc1uvxc8Z/+xs/Jzzc10ufu7w
nOvv7x85+LmDP6/Ix8/hSWEOfs55OtWNnzs8H/j7i87Bz/X8ZeHnWq/z8XP2
/0E3fk48fpSNnzPf/bn4OeNfC89/TL18yoOfO/h9+1z8nHrenYWfOzwX+b//
fQ5+rvcJ9XP2NyMPP3d4zvC3v5+Dn5P/W934Oef3fXj+EPkSnoefs3/nZOHn
1JNfZ+Hndj/Fz/X+oX5u71fi59TTlz34OefPnY2fE+/bs/BzPc95+LnD80//
+3/Lwc/teRE/Z7zhLPyc+c7k4uecz2Z47qXe1sHzp3S9Ofg5843Jw8/Zz1AP
fs77z8Pz3zs8G/zt3Fz83J5H8XOH+fmL+Dn7c1YOfq7nFZ6/AL8eyMXPiddl
Ofi5w/O+v/0rN35O/nXl4OfM76o8/Jz5X5OJn+Mj98PzVxyeT/3PF3Lxc4fn
HX/7jRz8HD66cvBz9uPObPxc+ZqJnzPe3iz83O6P+Dn11ZmNn9v7jfi5zRfx
c4fnY3/7+Vz83OFZHzh/8Pxtve958HPOZ4IbP6cenAbP/+7w/Nvf3ym5+Dn1
4Cvw/D3q0+ce/NzeV8XPtb548HPGG8/Bz1lPdjZ+Tr2OzcbP2Z/vZeLnnN+j
Ofg58Tk3Gz+nHZeDn3M+nvXg5zy/NBM/J9+f8ODnPP9ZDn5O++Rs/Fzrvwc/
53wn5eLn1MeH4fk49XnOg587PF/1v/9YLn5u2+LnDs8F/vaJOfg5fDmQjZ/j
cx948HObP+LnxGsxCz9n/v/IwM/1/Lrxc/U3eL5EfarPws8d5ucHgbwNcpr6
Jn7uNPkkfu408RQ/d1If1M+dch6z3Pi50/NXf/uiHPzcafglfu6EX1n4uVPy
KSQTP3d6/uV/fksOfu409Ur83Ck8OUH9nPfPduPnTrkffi8XP3fy+5+5+LnT
8zf/+9/Nwc+dxhfEz51ynrdk4OdOc98VP3dKPIcz8XMnvMzEz51Szw668XOn
1IvuHPzc6TktUK/c+LnTc6a/XePGz4nHm7n4Of3/zIOfE8/fZeLnzOfJTPzc
KfkQk4GfO03+ip/T31MZ+Dn796sc/NzJ39dw4+fEIyILP3fCVzd+7vS86/9+
VQ5+Tj7lqJ87pb5enIOfOz3/8LencvFzJ38epn7ulPq2xY2fs94rMvBzJ/fV
XPzcae4/4ufk62s5+LnuZyZ+zn63evBzp5yHJ3Pxc9bXko2fO/n9FDd+Trx/
l4ufE+/3MvBz4tuXgZ87PWf7289l4+f2ufi5k/qYi587+fsM2fi57ncWfu70
nOV/XpqNnzv5+1u5+LnGJxM/5zz+NBc/13zJws+d/Pl7Ln7O/hVk4ef2PImf
63nLwc85T1+G58XEoykDP6e/87Lxc/Jrdy5+znzqM/Bzvv9zOn7OeuIy8XP2
KzgHP6eeXJCFn3Oers/Gz538+ZT6OfO5IxM/J75jWfg55/cPOfi5k79/nIuf
63rd+Lmelxz83On5yP/8ODd+znquzMDPnYaP4ues7y+Z+Dn7fzAHP6e/Q9n4
udMT7n8+mo2fk0/5Gfi5Pd/i5+T/5Vn4OfXozlz8XOt3Dn7u5O+r5eLnzP+5
dPyc/s7KxM+pVyfC863EtzMLP7f7LX7u5O8jwvNB+ivPws+d5r4nfs7+/iAd
P7fnT/yc/bs3Cz9nPoMZ+Dnx2JCFn/N+TiZ+rvU7HT9nvZek4+e016bj507j
y+LnzH85Cz/n/bsz8XObv+LnxGdHOn6u88vEz1nfp1n4Ofn7pPq5k9+vy8HP
bbwD8zjolJ9XvJiLn1seiJ/TXszAz/m+Ngs/Z741Wfg5zx/Iws81f3Pxc82H
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
8XPlSTJ+Tjs3BT8nn9JT8HPGW3bh53p/ScbP9ftU/Fz5kYyf63lIxs/53hd/
8XP1lxT8XOuzCz+n/50p+Dnv3+vCz+35ED+3vBY/t/Vb/FzPewp+znpbXfg5
35+SjJ/rfQGeL/G9w4Wf07/vfAT+b9Bq/r5lMn6+Wp6PwvOQ1TLe75Px89WS
b8HJ+Plqfr7lws9pX5qMn9N+wIWfr8Y3k/Hz1fy+rAs/Z7xEeL6W+fju/+Ln
q6nfyfg5/c8k4ee0ffdf8XPaccn4Of356rn4OfP5Igk/Jx5/S8bPmc83Xfg5
31e48HPmf1sSfs77LyXj57Qvg+en8/7zyfg54x+E52fS/+tJ+Dnr3e/Cz2mP
ufBz2j9Kwc9Xm/uy+Ll9Ln5OPJ5Jxs95XpiKn682+Sh+TjyOuPDz1fg+PL+Q
7x9Mxs81n+D5htWmPoifs/67k/Fz1u9Kwc95ngzPo4nHjhT83MZD/Jz5vJWE
n682913xc11PEn7O83PgeaLOx4Wfs19Bqfg54/niJX5Of99Pwc/t+RA/53w0
pODnvP/rZPyc999w4eerzf1H/JznoernxKcsCT+3+S9+zvv1Lvyc9s9T8HO+
X0rCz9mPD5Pxc9orLvyc98904ees574U/Jzxz3Lh57x/sgs/p79N8LyE+fzT
hZ8T/0tc+Dnxz3Th58TrHy78nO/n4Hkl472fhJ/reUzBz5nfaBJ+vtrcb8TP
9Xwn4ec2P8TP9Xwl4+f0vwmeNxCPniT8nP62puDnfH9vMn5u65H4Oe9/Nwk/
13qQhJ+zvuuT8HPWfwI8b+f5EDzvWG18QPyc9x9Lws/p/6kk/Jz3f5mEn2u9
ceHnzD/ehZ/z/aILP9d6noSfa74l4efs73Mu/NzWe/Fz+lsLzwfp75gLP9d6
lYSf8/wReL6D+X4Az3cy/ldS8HPG+1MSfs73LyTh5xpPeL5b9yMZP6f/lWT8
XNeTjJ/beIif2/wUP7dt8XPiXZWEn9v1ip/TLkjGz3k/DJ7/D/PxxUP8nP73
JePn9v3Aewd5/154/g3mn5yEn9t8ET/X+u/Cz1eb+4T4uZ6PRPxcn8Pzq7T+
JuLn9JcDz68hvrcm4ee0g5Lwc/pbTsLP6e878Pw7Ws+T8XPev9qFn9P+RjJ+
zvp9fBA/J15ueH4j47+YjJ/b+i5+zvfnwfOb2e+D8Pz7q819Tvyc91e78HPe
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
PS/i55LfB3z3KfFzGe9AGzz/XPLhoK9eip/zfWE4fs73X9uAn8v4B34QiZ/z
/KoI/Jx4RWzAz8m3kkj8nP0KjsTPJd4HfPc18XPJ14ONG/Bz1vshPJ+T7w8m
RuLnEp8DN8HzBZ4f3YCfr+HPiyPwc+ZXuAE/5/3iDfj52sD6D64Kx8/XyvcV
Efj5WonX1zfg52upz+rna6W/+Q34+Vr+PHsDfr5W4vVTeB66VurJ3y7Cz9eS
L+rna/n95Yvw87X8/P8i/HxtYD0HT9mAn6815038nPcPXYSf6/f/n6s7j7N/
rv//f2ZfzsycbfZ9fb8RSVQU5hDZyZI1slO2bNliJmSJPhUi2bcI2bKkRjMh
2ckShShrSbaQeL/P9/Wex/XM+V1+f77e55zX6/l8PB/Px/1xe97PnDc9zxhv
x/L43P2eWA6fG+8Wy+Fz1w/S80Kz39dbhM+bY3+ll8fncb/UHxbjc/O7cxE+
b17gkeBz90/6zeDzZt9/XQ6fm98HZT5vjvz/3GJ87vrmCXze7PdzlsPnzb5f
M4HPm2M/DE7g81jfVLbM5+X5lfncem63CJ+L5/YT+Nz7M4vwufxoo+eLIj5T
Gy/G5+J/Z5nPzfe7y+HzZvo0gc/F6//o+Yrulzw/+LzZ93sX4fPmBf4NPm9e
4JHgc9ffp+erNC/U7+Bz499tAp+LX/NifG68jcvh83j/9NaL8Ln4fEDPP2f9
G+j56vL/d2U+9/ytJvB5c9SH/en5F+TTAcvhc/mwXJnPzffIRfjc68cswufW
p3ECn8uPeyfwufEuncDnMb7pfRbj82b1awKfe/93JvC59/fS8y+pF9ssh8/l
T345fC6eKy3C5+K5xgQ+F88dF+Nzzzt0Ap+L5/r0fLPmBT4LPpcvRy2Hz81/
9eXwuf22Gj3fUrw/OYHPje/NcXxuf+cX4XPr99I4Pvf6/ovxebP+aBE+N56/
lfnceL+4CJ+bT8cEPlf/vroYn6vPCe8Fn4vPI+P43PunnLd/zf03nsDnzb4v
Sc938/51JvC59fv1Ynwuf/47js/Vx5vo+V704cAJfK7+vE7P93H/VSfwuXyr
L/O5eF89gc+Nd/Fy+NzzT12Ez8t6tAifi+fJi/C5/fM2PT+ool/B5+afxDP4
XP27ewKf2z+vLMLn6ss/6Plh6sGdE/jc8/+yCJ9b75XKfG4+b03gc+u1/CJ8
XqnPwefq17ET+Dzil5oq87nP77YIn1uvwxbjc/O5ajE+F4/SOD43/48W4XP3
S/g/+Ly8Pxfhc/ujm55/t7we4/hcvq4ygc/l59w4Prd/FpX53H55ZxyfNy/0
H8Hn4v/YBD4Xj3fH8bl82W4xPm9eOC8LPjffcybwufcfvQifNy+cbwSfi//o
BD4v68sEPpfPW0/gc/E5dByfi3+Sz8Hn4n8wPf+J5280gc/LejiBz8V3pcX4
vNwPTODzSj4Hn6unmTKfi8+V9Pwi89mHnl9sfZ6awOeVfiT43PNvoOeXGf/1
i/C514ect19hPbco87n1+uo4PpdPmy7G566fW4TP7Y/aRfi8oq/B556XW4zP
rVfTYnxe3s/j+Fz8k347+Nz12xP43HxeHcfn7je4CJ83L5xnBJ/Lzz+N4/NK
/Q4+N779xvG58WxV5vOyHizC5z7/F3r+a/NdfzE+L+vFBD6v7Nfgc3r7xwl8
7v0PTeBz1/eM43Prm+y/4HP76116fqf8OGECn8vn4UX4XD902yJ8Ln/zE/hc
/h0xgc+9v3kCn9svh9Pz+4z/6XF8XsmH4HP1cU16/qB4pSfwufu10fOHrVfC
o8Hn7v/1RfhcPn40hs/Vo68twuf2y070/HHXY/T8CfrW67z9T/qFTnr+lP20
6QQ+F+8Xx/C5+CT6GnwuH9ei588Y3yXj+Nx+T4/jc/lavRife//BE/hcvWse
x+ficcA4PhfPsxfhc/r7wAQ+d7+fTuDzcv+9CJ+b7+7j+Nz795jA567PHMfn
5js+gc+tb98ifF65Dj63P0bH8bn5Tozjc/PZZAKfy9fWMp97vcV5+1uV+hd8
Lh9fGMfn6tXfxvG55zWV+dz916bn78n3JB+Dz/WjSbyCz+XHYeP4XL4+Po7P
3f8b4/jc+BrH8Xl5/OP4XP7O0PMl4vWpCXxe2d/zeZZKL1wHn6fxzQQ+T8fz
/jWBz9P6sQl8no76t0GZz9ML9S343PvXXoTP0xG/2+h5Yzry/bOL8Hnaebrz
9ub0Ag8Hn7vf98bwuec9OIHP05GfG47j87j/9MgifO7zd9LzrPdP0fNc2t/z
jePz9EL9DD5P+/+ox/G5+x+2CJ+733n0vDMd8f/cOD53nez34PO08+AxfJ52
/uG8vdf1zybwufV5bAyfp33fj54PWI9qej6Y9vfoY/hcvC4r83nl+cHn4v/a
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
8Z/7dJnP5dcuw/g8xju99iA+r/Qzwefq7419+Nx6/WcIn6t/1/bhc/HYqszn
8unpQXyuvh09jM9bfd96EJ/bz/3D+LxSL4PPW50v0PNbop8oXdiPz1sXeCD4
XL9TN4jP7Zfz6Pnt8uPAIXyuvn/Yj8/FI8mn4HN6sP0gPtcPnN2Pz+VLHT2f
lc+n9eNz/c9z/fg89v/cdmU+N//XB/G5fFyFnt8tf/5Mz39PPyaG8Ln4jJX5
3HjWo+f3Wp/DynxuPZb04XP1tnEAn9vvjwzhc/3fl/vxufp2wwA+L/djffhc
vjQN4XN6deUgPtdf1gzjc/FffxCfm+9J/fhcvny7D5/Tp3Pp+VPitfoQPpcP
nx7C5/rjsQF8Tq8PHcDn4pntx+f23/1lPo/1LO3bj899Pj+Az+Xb3AA+F799
6PnfKvEIPlevSn34XD1O8iv4vLy/6PnL1nPjPnwu/97qw+fyda0+fE4/zh/A
5+Lzcj8+Vz9P68PnlXocfC5+p9PzN9SLv/bhc/dLroPPre9TQ/icnq/Yj8/V
gxX78Ln4PTGAz43n0TKf47fxAXxuvQcG8Dl97qHnH9D7nPP2/9LzZnr+of24
Y5nP1Y9SPz5Xb84ewufy+f+G8Ln6vCo9X2q8fx3A523+Hrcfn7eFHjw1gM/b
Yr0Tng0+b4v9+PAgPm+LevRtel7XFs8/uReft8X+Pqgfn7dFPreV+bzN76v1
4/O2yNdv9eLztohHzQA+b5tf7+k7evG5++3Yh8/bYn2/NIDP2yL+/+vD5/H5
1L/78XlbrO/pA/i8LfbD8fQ83xbrffQgPm+L/X7CAD5vi/V4uxeft0U9/FEf
Pvf5NfvwecRjanfn7d1t0b93DeLztqjXhTKft0X9uJee97nfLoP4vG2+3kzt
R88HzOfIfnwe45tqLfN5m7/voOfD1nefAXwe45/abQCfx3ynT+jF59a3ux+f
i8fN/fi8LerPK2U+tx479eNz8zt7AJ/Hek9t3Y/P2yKfb+rD523+Hoqer9jm
9w978bn5T5X5XH48X+Zz4xnvxefic2sfPm9b6I+Cz+XrTn343Hhv78XnbQv9
Z/C5968ygM9jPKWuXnzeFvq9Zy8+l883DOLzNvrSi8/bFvZ/8Ln43UfP17Re
W/Xi8zZ/P0DP17bev+vH5+aX6G/wueud6fk64r96Lz53v3vo+RfbFng5+Fy+
v9iPz9sWzkOCzyv7M/jc+u3fi89j/NNJPIPPY7+VHu7H5+X87MXn5vPtfnwu
Xp+g55vF/pku9uFz631JLz5v8/cevfi8zd/Tl/lcvq/Qh8/bnKf24fPI99Tw
ID63/r30fFvje6kHnxt/ex8+F99vlfm8LfjtB/343P5eu8zn9ttWffi8bUE/
g8/lx2/p+S7q20w/PrceB/bj86jn04n+B5+b30dlPo/9lvrBAD6PfJ96cgCf
i89Bffjc+D43gM/l47U9+Dz0ZGqdXnxuva/oweeV/R18Lr//R8/3k1/J+4PP
6VESv+DzNuf1vfjc/Z/sxefy++c9+Nx6X9mDzyvPDz4P/Zm+kZ4fWtkPwecV
fQk+N95z+/C5eC3Xj8/d/5k+fO75p/Xgc+uR6sPn6tEGPfjc58/uw+f2z429
+Fy9OWMAn8d4poo9+Fw9PLkHn4vPw/T8ePvhjV58br1+34fP3e/Kfnxe0bvg
c+txYh8+V9/+3YvPrd/vynyuP7iInn9Pvi9Pz0+L9Uol+hV8Lt77lvlcPRns
w+fu/8NefN7m9/wG8HnUr6nP9OPztoXzp+DzSr0MPjeen/Thc/VkRXr+Y/vl
aXp+tuvd+/G5eP+8H59bn8k+fB77dSrfj8/F+/EefO71N3vxuX7g8334XL3b
hp5f6PlJfxl87nlf6sfnsR6p6R58bj0zvfi8bYGfgs/Vi3368Ln12KgXn1u/
3frwuXj9qBefq0cJPwWfy7cW5+0/1w+9Q8+v0f/c0oPP5eN4Dz63v/frwefq
+f29+NzzhnrwuXz5WT8+tz8v7sfn+tUXe/C5/ukDen6z/fefXnxe6eeCzyv6
HHxe1gN6/iv1c+U+fG59L6Xnv67s/+Bz8VmvB5/rR8+j53e4/kYfPjefxl58
rr79vgefV/ZD8Ll6fWcPPldPevrwufHd0I/P1aMxev57+/17vfi83A/Q8z+0
Oe/sw+fml8Q7+Nx6P9eNz81nnT587vlb0PMH1ZNHy3xO77bvwefW+/wefO5+
XT34nN4e3ofP5cvzPfhc/7ZlDz6vrE/wOf45uB+fW59CLz6X/7/ox+fidUYv
Pldf1ujB52X97cbnnndIDz5XX67qxud4Z9Myn7v/y9343P79Ej1/wXx37cbn
6sW/e/C5/Eiug899/pu9+JxeL9+Lz8X7gh58Lr/36sXn8n+8zOdeX9yHz613
fy8+x08/7MbnXt+tF5+L92Pd+Nz1tvT83+J1cjc+V9936Mfn1r+pD5+rn0f3
4HP15bg+fK7efaEPn1ufd3rwuft/lp6/T8/e68PnXj+Qnv9XvXq+G5/L/2T/
BJ9bz45efK7enN2Lz93/rD587vOZPnwuvuk+fJ6ZP7+aOqUPn2eiHkx24/NM
5NPnu/F5ZmG+wecZfNKDzzNRD3/Zjc8zC+cxweeZ6If278HnGd9n68PnmZjP
3j343OeT/Ak+z0Q97u/G55mI10+78Xkm9vu5vfg84/eY6XnG/JJ6GXyeifx4
oAufZ/w+Tx8+N56je/G55x3Xjc8zkb//68bnnpfEL/g84lU6pBefi88x3fi8
Er/g8xjP1Hvd+Nx8xvrwecb3D+h5v/V4rRufZ6K+rtCNzzOht0k/G3xuflv0
4vNM8PZsLz433qS/Cz6vxCf43P1+343PM/isB59nFvI/+Nx4fkbPF8fnp4/q
xueZyOeDevB5Jupjb5nP4/Wpg7rxufHf1oXPXf+5F59n/H/h9HzlyvuDzyvx
Cj7P6K+68bnx/6wbn4v/ld34PLOgX8Hnmaj/X+zD5xm/X9mDzzPBY4k+BJ9n
Qi+378bnmeC7E3rweYa/14vPM/4/GHq+Zsb3xbvxeSb6sf168bl8fJ6eT9ov
m3Xhc/kzSM/XievpqS58Lj7DPfjc/XbqweeZ0OezevB5ZqF/CD6XH3t24/OM
71OU+dzzsj34POPvJen5xtbj0i58Lp73duNz++W0bnxu/pf14nPr9S4930L+
HknPvyz/zuvC564f78Ln5pvpxufqz9fo+Tbmd0MPPrder5T53PWZXfjc9eZd
+Dzj/Iue75hZ6DeDzyOeUzNd+Fy81+nC5/Ll3h58Lh5HdOHz2D+pA3vxufp6
TRc+j/FMf7MLn8unt+j5HhH/UqLvwefy78AufJ7xe9Xd+LxyHXwuH/7ahc8z
zu978bn8Or8Ln5vvcfR8P+PZvgufux7uwufq4w3d+Nz+W4ueH+T+23Xhc/v5
R2U+F79ULz6v7M/gc/P9bxc+V6/f7sLn8veNLnwez596uBufe/2BbnxO77br
xefqa1I/g89jPKX2bnwe+Ze6oxOfZxZ4Lvg86kfqn534XP6/1onPrX+pC5/L
1+4ufC6fn6HnJ9C3jXvwufzIdOFz96vvwefq8w7d+Fy8D+3C5563pBufR/6W
rurC59brs134XH1qc95+uvidRM+/bz/e1YnPK/Um+Nx63tmJz0PPUmf34HN6
fWs3Prceb3bjc+u3Hj0/y3os34XP1aMv0POzMwv9d/C5/Lycnv8knjf1/S58
nvH7gl343H55pwufi19tDz5XD3/dhc/t77924nN6dnAPPhfPP3Tjc/l1VBc+
zyz0u8Hn6ulz9Pwy8XqLnl9u/A904nP93yVd+Fw93bYTn/v8Q1343H45tROf
V/Ir+Fw9XIOeXxt6Ov2nbnzuft/pxOfq+e7d+Dzj9+ro+Q3q1QP0/Eb1bjl6
fpP5Ht6Jz83n4E58rr+Y7MLnGb8H2o3Pjf8f3fg87j/VS89/pX/apROf05NF
nfhcPq1X5nPPr+7G5xW9CD6X35t14nPX3+3E5+rlG534XH29vROfy9c3O/G5
/fvLTnwuXkk/FHxu/93Zjc/1Yyv04HPjv7YTn8u3Y7rwuf1Z7MLnxvNsFz7X
L7V143P3X6UTnxtvcw8+t5+X78Tn1nOuE597/Sfd+Fx/8clufJ5Z4Nfgc/s/
iVfwuf2zbRc+l+93dONz8UnqT/C5eHfS86eNd7obn1ufpF4Gn1f2V/C5/D68
G59b7yZ6/pz4V3Xic/XkAnr+vPx8tBufy79SJz43nqTfCj5Xn+7twufev3I3
Pne//3Xi80p8g8/Nf4Kev6p+v0HPX6M3X+7G5/K9uxufu9+LXficHhxFz//l
/Tl6/ob+528d+Fx+rN+Fz+VvOz1/S/1etwufq9+tnficfl/Yjc/V2yRfgs/t
173o+Xvq42qd+Fz92asTn1vfGXr+X/mc6E3wufkk+RR8Tj+36cLn8uskev6x
+jLcic/la6I/wecVvZzX81TW74Pp35Pr+fFf1onXs/H+M7tj/yfX8/GspffV
2ci/lP4+uY7zwE48H5+fOk99SK7LehV8n13ox+brRXIdv0fagfezfr9N/Uiu
5+fbVeb/7ML85+tJch2//9DhPCC70B/P15cG75/odD6QjXjNdkS9aYzXS3d0
OC8w3+06ov4k1/P5sJZ+oznmO/159Si5Dj7sdJ7geR/hjXTW96k6nS9ko/63
qFfJ9fyyJP1gnDeI772dUb9ajfce/Uqb8VarZ23Gl+yPaO/F9ztdUd+S6/i9
eP1M1ngHuqLeZWP9U9t3Oq8wvgKeyWX9nkWn8wvv3x/f5GP809d0Os/ILuyH
+XQvmN96nc43stGPVquXyXX8nnGH8w758+eOqJ+d4vmVLucfWf5kR9TTriy/
Qv/U5f6PdUR97c46D+hwPpKN86nL8VOPfH+l03lJNvbnXR1Rf3uzUX/W0m8l
1/P9wm87oh73me/Rnc5Tsv6/ZrzVH/tt+owu5yvW47aOqNcD1vvmDuctrt9p
j/o9KH8263D+Ih5NnVHPh7KhX7t1Oo+xvq+0R30fzvr7hk7nM+53i3o/kvV7
lh3Oa7ILejJf/0fd740O5zfZ0IfXOkIPxuzflzqc53j9487Qh/FsnA/f1+58
x379dkfoxYT6kax3nPdEPpdWph+L5HtXh/OfrL//6gw9WSw/H+lwHpRd6B/m
9WW5yv6N86Gs35ftDL1ZPht6cG+H8yLrvzqeXMHrSX2K86PK9bweJdfzvNfS
4TzJenyKPiXX8/V8pfL5knjXdoRerRSvp3bpcN4U9S+1X2fo1ydjPFMJj8f5
k/E1doaerSz+7eXzqMjPVNI/zuvbp+Tnkg7nU/bvD9pD71YRr8Yu51X0YTP6
9+ksv6DD+ZX1nW4PPVxVvfhBh/OsrN8X6wh9XM36PdbufMv+OaQ99PIzXj+4
3XmX/Xx0R+jnZ+3Pb7Q7/6Inj3aEnn4uxlP6bbvzMPm9e3vo6+rq04h+eg31
JtMReruGejLW5bxMfJJ6O6+/n7efk/WJ8zPj37Mz9PgLsV9TO3Y4T1O/9qDP
a2b93mi78zXz27g99HotevKVDudt9ne2K/R7bfX88nbnb/bTxe2h50X7Z1v9
e9H4Lu0IPV9HPm2hn1/HeH/WGXq+rv22VrvzOs8/ryP0/Ivq3z/bnd/Ro8vp
+XoxntQZHc7zKvkwX67WV3+PLTjfU5+T/m9ez79k/xxTcN5n/V7uCj3fgH4c
3+H8z3h7C6HnG8qPuwvOA73/4c7Q843ky0H0fCPx+X1n6PnG1iPpB+K8ULyS
fJrX803Ed78O54fGl/Tv87fb1PyS/ibOE7ML/ei8nm8m3je3O1+0n68vhJ5v
Ln9voOebe97H+dDzLSI+qSvanT/af+8XQs+/HPV0epOC80j1+pL20PMtY/1m
/9PpfDLmX1y/PfR8K/m3Trvzyrgu/rMj9HzrSn7E+WVlvef1fJvYT5NrtjvP
dL+z8qHnX4n9NHdap/PNiPfsaR2h564nT+xy3hnzmVu1EHq+nft/puD8M+pR
8dlC6Pn29HWFTuehUZ/nEv2f1/MdYv2LKxWcj0b+FZ8shJ7vGPk824mvdor8
n93becpOMZ+5wwrOT+ljokfzev5VzxssOE+Nejybo+c7x3rNJvoe56vif1A+
9HyXyNfiV+j512I8Uy3toedfU+93oue7qmfbt4eeuy5WtzuPjfwt/rMz9Hy3
iN/skoLzWXq5dSH0fHf1aauC89rYT5Ofcp6zR+Tz3Ofo+Z70dyN67npuhfJ5
rv3zZ+c9e0X+zj3f4XxXfC8shJ7v7f5b55332p+r0fN9Iv9mv9/u/Jd+PtQZ
er6veG9YcB5c6Qfm9fzr0e9NvpF3Pmw9R+j5fp7/SLvz4ljP4ortoef707NH
250fy8d8Z+j5AfbfennnybFek8u1h54faP0TXorzZfqa6Pe8nh8U8Z/7Zrvz
Zvulvz30/Jvuf2C78+f4/NwT+dDzg6P+zH4n7zxaff57Z+j5Ierb3+n5IfTs
/5xfHYp3zu9wXq0+N7WHnh8W+33u5E7n1/b/lfT8cPpwBT0/3HzfoeffUg8G
y+fb5rNWR+j5Ee73CXx8RIxv9l/0/Ejr+WHB+bfPJ3owr+dHRb7NXVFwHm49
LyqEnh8t/55udz4uH9ZoDz0/xn7ZNe+83HgPpuffjvWcXZp3fh7jmVySDz0/
NtareCI9Pzb6v9L6hdDz4+j3B3nn65Hfc+/kQ8+nYr/NJvVsXrem1evvF0LP
p9XzzfH5d8RnshB6/h35cE+78/hY/8kj6fnx8fzil/D5CZX9MK/nJ0Q9m6vr
cF4f45+cLoSen0jPkvWP83vrkeoIPf+ufnPdvPN8+3/n9tDzk/Sfz+Sd7+uP
Jgqh5yerZ2vlnfdbj1F6fop6+Nm883/rv08h9PxU9XePAj9AfU70dV7Pv2c/
fg2fn2Z/tXWGnrsuNuLz0+3v/TtCz0+3PxsL/AP1Men/5/X8++63bwc/gT7d
ng89/z/5fQs9/4H9mPST83r+A/X9yg5+A175XXvo+Q+DF0sP5vgP6tEK7aHn
/5/r8CPs36586PkZ9KFY4E9EvKbfzoeenxn3n+1r51dEvzL3+ULo+Vn6zdUL
/Av6tVt76PnZ8r29nZ+hP1kXn59jvzxIz8/RD91Hz3+CPwY6+R3xevHkjtDz
c+2P+jz/g149jM9/WukPww+R79u0h56fJ/5HFPgj9seZ+dDz8+lLko/hl1jP
c9tDzy+I/TKb5Ef4J/qT7+dDzy+s6Gv4KZX9Nq/nF5nfH+n5RXjjUXp+sX7v
vQ5+i3w7Lh96fknlOvwXPP+pfOj5pfbXbJ4f4/zs4Hzo+WXqw4/x+WXqT7J/
5/X88qgvswfQ88vpyTO50PMr9H97t/NvIt5zp+dCz38W4yuugc9/pj94i55f
6bylkOfv2B/J9byeX2U9L2zn97jfK/nQ85+bzx0F/k+Md3K5Quj51XhtcYEf
ZHyb50PPr4n6X7wjxx9Sj9/qCD0vXz/Uzi8q92u50PNfGG/CG+EfGe/x7aHn
10U/M/nLHD9JPr2XCz2/nn4808Ffcv5zfiH0/Ab6mfRD4TfJ99ZC6Hn5etcc
/0l9u7U99Pwm8dk5x4+S7/fT818a/970/GbnFz8qhJ7fHHoyOZPnV6kfGxRC
z29xXrIbPb9VvVg+H3p+q/zYAZ/fpl683B56flvEc/LEAn9Lf/flXOj5r/DQ
V9r5XfH54nA+9Pz2Sn0N/0s9PCsXeu56KtGr8MOM51p6/hv9wI9y/DH5/mQu
9HxGvGYK/DL96cP0/A7j78Dnvy2fl9Pz3+Llnen5LJ67jZ7PqY8v5flr5ndj
IfT8d3iymOO36U/n6Pmd7l/W8zutT8Ib83p+l/28fgc/jr4saQ89v9v+34We
3+186qD20PPfq2eP5fl1zqOOzoWe3xOvF8/D5/dEPszV0PM/0INH8/w8z0v6
93k9vzfqyeQpef6e56+SCz2/T36fQ8/vw2Nn0vP79ROvtvP/1Ic/FkLPH4h4
zCU8FH4gfXk3F3r+oPp7f4E/aL3Hc6HnD+kfNsfnD9G/PXOh5w/bvyvT84fl
z/YdoeeP0LeN8Lnr2QfbQ88f1X+sR88fxbuJHs3r+R/p5e/p+R/lw3H0/LFK
PoT/GPk9+UIu9Pxx+rdygR+pfj2XCz1/wv76CJ8/oV9euT30/En53JPnVxp/
dz70/E/q2Xl5/mWs3+y2+dDzp2K9iz/I8TPV31faQ8+ftp67t/M38c/F7aHn
f6bHTXl+p/PM7+VDz/8if56h58+4Prs99PwZ/HlGOz/U+n0hF3r+rPraQs+f
E7/3sqHnz4nH21l+qfV8Pxd6/lf15LA8/1Q9Wp2eP288H9DzF/RjN+PzF+Tn
AQX+Kp56sxB6/jfnLdfS87+rN7/A53/XX79Gz1+Uj/8ohJ6/qB58o50fK5/2
pOcvOW/5a4E/iyd+Wgg9f9n4C/T8Ff3/dvj8lbKfkuPf2l9n5ELPX8WPX8bn
r4nnvdnQ89f075vk+Lvq44a50PN/6KfvzfF75c9d9Pz1WL/JKXz+Or37OBt6
/i/Xn8fn/9I//zcfev6G86FvFfjDFR6b1/N/45mbC/xi/d43C6HnbxrPdfj8
TfX1M7nQ87fsn0Nz/OTK9byev61e7kfP37b+h9Lzd9STawr8ZvXhOnr+rvmv
mOc/y+cXC6Hn/xH/vej5f+TvokLo+Xv0PtHr8Kfd79Vc6Pn7+sursvzqyvnY
vJ5/IN+ezPOvze8UfP5f9enZLD/beeV69PxD5/sn4fMP1d9MPvT8f+rvVIHf
Tc//Lxd6/pH93EzPP9JvlfKh5x/rN0+h5x/rL6bx+RL1qjnHH8ebN+HzpRU9
Dr9cvfxuLvS8hI8XO29P5WL/VOf457noh9bO8c+9/tV2/nkuPn9Ann+ei/3x
Yp5/Hp+f3DfPP8/F+q2W45/n/H8hBf553L/0So5/nov1fSnHP89F/u+T45/n
+Lv4vD7uP/taln+ei/39apZ/HtfTT+f45/H56f2z/PNc8Me38Xlj3K/0XJZ/
Hu8vXpzln+cW+DX881z0V8n+DP88F3r1mzz/3HiyOf55LnhpM3reYr6pPP88
F/3HifS81XqckOOfx/2Kx9PzNuNJ8iH885z/byvLP8+FXj1d4J/nIv8/yPHP
Yzyl+7L885jv3Bn0PCceST6Efy5+b+X457mon9/K8c9z0S9tlOWfW79rc/zz
3Hy+Fr9b4J/H/Iv75fjnuajvx+Lzjlz4HSvk+Oe56Mc3o+edMb6p3XL8c9ef
w+ddnvcKPu+Wj1dn+eexXqUXCvxz63NxgX+eC57Y3Xl7b+Tr5MpZ/nnEt5Tw
WvjnkU+z1+f555X8Cf884pO6Ls8/j/hM5nL88xz/Jsc/z0V/+Zsc/zwX5zmf
dN4+6PO/L/DP5d9Fef658Uzk+efx+anVc/zzyJfiWfh8JOf/78nxz+N+kw3O
20djvxfXpufJ9Xz/Wu28fSyuU1fk+Oe56Ic3yfPP5cO3s/xz6/NGln8ez5/7
VpZ/HvkxfXiWf259f0LPF/n8A/R8cW6hfwv/XH5emeWfx/unk3oV/rl86nfe
vny8njowyz/P+fsAfL5C7L+5ZP3DP496OP10ln9uvXbL88/Vtz/m+ecRj6kj
c/xz873PeftKkW+le+j5J3N+rzbPP4/5zL2X55/nnN/h85VzC+dh4Z9HPs/+
Kss/z8V58GP0fBX7799Z/nnky+RtWf55boHPwj8Xj6o8/1x+JP1T+OexvrMv
5Pnn4vOVHP/c/VbF55+JfCxVZfnnsR6p57P8c/NdjZ4n1y/N61mGfy5f38zw
z3P+/4Ec/zzHH83zz3P4P8s/N/478bnr0s5Z/nl8fu5n+Pzz9s8ZWf55rviP
ZdePZ/jn8mv7LP+c/gxm+eex36Y/leOfx34vrZvnn6vH38rzz9X3Q/D52uLz
TXw+af1/luefx/rOXYHPixV9Cf9cfu+Az9cRv2S/hH8e8yndkOGfq3+n5/jn
9H4rev7F0JOpO3L887hfcYaeu55eM8s/tz83pufrx3hTNVn+eTxvtoqef8n8
vofPN4jnlZL9Fv55XE/2Om/fMFf817Lx/C/DP88VB5Y9/8MM/zzysZjUo/DP
Yz3m9sjyzyM/5lbK8s+9/4Ac/9x8X87wz8Xn/iz/XP1dm55van/9Pss/tx+3
y/LPxSvZT+Gf53zfqI1/HvoyeQc930K+fDnLP/f+lfL8c+uzCT3/svo+5Lx9
S3q1JT3fUn5tnuGf04sjs/zzyP9Ump5vrd5n6fnWMb+5LD7fRr09KMs/14/8
Kcs/p1f7ZfnnOd8fpOfb0rdD8fl29DpZj/DPc+H3VOf55/qD1zP8c/n/3yz/
3Pp8Isc/16+dg893zMX3NdIZ/rl6dFqWf66eH57hn9Pzu3L8c/N7J8s/tz8/
keef66e2wec7G+9p9HyXuP/syfg8uV52XlXcOsc/zxVfXPb8j9r4597/Wo5/
HvcrTtPzXenLDTn+uf4vm+Wf5xbOr8M/zxX7l41nswz/POf7S1n+OT3/YoZ/
nisOLrt+ro1/bj9ckuOfq18X0/O9YryTtTn+ebw++Rl6vndFv8I/12/+JMs/
zxVfXXb/lTP888r6hn8e9Wzuq/h8X8/fKcs/zxXbl63viRn+OT55N8s/t1/H
6Pl+6vft9Hy/Sv0O/zxX7J3Xzwz/XH++Pj4/gN6f28Y/t/83zPLP6eOfc/xz
6/eXLP/c8+vy/HPxuAiff1P/VI/Pv1mp7+Gf688eoecHq7/TbfzznO8HZPnn
FT0K/7zST4d/rh7unOOf61fG8vxzPHFqjn+e8334DP888mv6Xxn+ufEfn+Gf
q/fX5fjn9CHpP8M/N592en5kjD/1N3x+ZCW+4Z+rl11Z/rn124CeHy3f12jj
n9tfd2T45+pLsl/CP88V/7ZsPqu18c/1E4fQ829X8jf8c/X90Cz/nL5enuWf
47c/5PjnOb8ngc+nrEeyPvPLOh31tHh+ln9e0evwz3PFvy8b34YZ/rl8/DDL
P49+qXQlPT+evg+18c/px8n0/ATvf7mNf269b6HnJ+oPT8Ln38UrP8jyz81v
xHn7SV5/i56fFHqa+j4+P5lerEDPT8aXK2X457HfUnu28c/t9286bz81V3xl
2YB+3cY/zy2c34R/7nlHZPjn+p/k9fDP8X+il+Gfqx8ftvLP1ffP5fjnueJr
y95/Uxv/3P7bqo1/Lp/PwOf/V8mX8M8r+zP8c/3l93L880q9D/+cfiXxD/8c
P26T4Z+rx39q5Z/L9+vo+Rnq5z/b+Of69xXa+Of2ez89P9N6fTLLP8/5ffk2
/rn1Oo2e/1i82/H52VHvS+dk+Oc+f3KWf+7+72f4584L/p7ln+OdI9v45/Qq
6b/CPxeP8Sz/nN415/jn4n01Pv9p9IOlpzL8c/3/+ln+uf10fiv/XH9/Pz0/
X/3aPcM/D32fe5+eX6A/ucd5+4Xq+Y+z/HP1d68s/5webpTjn4vXVhn+OR6d
yfLPK/1I+Of6g5fpeXLdt+z9P83wz/WTSb8R/jk+bsrxz53nnUbPL4t8K3XS
88v118dm+Of4q5ueX5HjF9HzK+RjJz3/WeRb6eEM/9x5yjg+v9J5XdL/hX8e
+VN8h55fpb5v28Y/j3gUe5y3/5y+XNLGP9e/1tDzq/WTV2f457ni68teT+p9
+Ofq1wv0/Fr75V16fq36+F6Gfx6fn3qFnv/C+z+d45+HPky9luGfW69H6fn1
+sd9Wvnn7r8owz8PPkk1tPLPvb5zK/9cP3lnG/88V+xe9vxDM/zzXDG37HpJ
C/881mv6whb+eejD1KWt/HPj3SXDP6/Ur/DP6fOuWf659diZnifXHcuuf9HG
P5e/67Xyz9XHt1r559FPTp6Q5Z/H/UuXZ/jn6u+19PxXxpvEP/xz5xUT9Dy5
Hlr2/Bdb+efi+zo9/7X9+tdW/nnO9/no+W/owWP4fCZXzC+7XqmVf64+rZbh
n+eKXctePzXDP4/6M/WXNv65fi7pl8M/p6cnZfjn9HSsjX8uPke38c+dV4xn
+Ofy519Z/rl6dGcr/1x+51v55+pPUl/CP7e+6Vb+uX5yNsM/F++92/jn6uMt
Lfxz+bNrK//c+ta38c/tv5Po+T327w70/A/q0Vcy/HPnWe+18s/x+bv0PLl+
ednrr7fyzz1/zHn7ffLl7Fb+uX7g1Vb+ufU/iJ4/UKlX4Z/L7yfp+YN4Zq0s
/1x93AOfP6R+3oLPH6Jfu2T55+rbXCv/3Hrv18o/p193tPHPnRdun+Wf8y+u
weeP6pe2yvLP7fcrW/jn6td/Wvnn+pFN8flj9HMYnz9uvue08c9DP0tfpOdP
OH/7Bj5/wv54IsM/x3NrtPDPK6+Hfx71J3VKK//c/PP4/Cnj2YueP61/TvZX
+OfBY6mBDP/cflvUyj/Xj/Rl+Of6wUPw+V8qr4d/rl4k/Wz45/IjuQ7/XL04
oI1/niv+e9n7D2/hnztPbMzwz+M8IFVo5Z/Hfi1dluGf659+0co/Vw++jM+f
V5+vbuWf2w/Vrfxz+3nTNv65fu+qFv65/HqGnv/deNdu45/j/z3x+Yu54hvL
Xj+Wnr8Y851O9Df8c/n2ED1/ST/yYIZ/rt7/IcM/V+9PbuWf4+VVsvzzyn4P
/1x+3tXGP7df9szwz42/NcM/t5+/luGf61+vxef/UB9OT/PPxXc7ev66evFh
hn9uvRO9CP/c+VZPK/+8sp7hn6vHF9PzN2J8paQ/Dv/ceiT7Lfxz/eVHLfxz
PJ7EK/zz0I/ps1r55+r75S3881if0o/o+dvq4Ur0/G3nnxu28M+dH+yb4Z+L
x5n0/N2KHod/XjnvDP9cPLZI88/1Lye18M/ttx+n+ef283da+OfWY+00/1x/
Vd3GP7cfzm/jnzsffDzNP9cffTfNP7f/dmjln+eKPctef7OVf66e/ZOe/y/6
mdRq9Px/9Pm9Fv55rP9Uh/P2jyr9Qvjn+O6LLfxz+X5Zmn/u9Qvo+ZIKr4R/
bn3XyvDP1cvT6XlJfT4xwz/PR76/Ss+T6/n9fmYb/zwf+Tvbwj/PF99cdv8n
0/zzfIznmTb+eT6+H/dYmn/u/ufR8+Q6fl8izT/PR/+e8En45/noJ3+T5p/n
ox7t38Y/z8/3M9O99Lw+H7zR0cY/z/v/4lr553m/35Dmn+f9vgA+b8wXO5c9
7x163hjjLd1Bz5vyoc+bpvnn4nFjM/88H/txBXyeXMfvh7Xxz/N+zzXNP88v
5E/45/nQk/8088/zoTf7tfDP4/XpY/F5cj3fH57byj/PRz/T2cI/z/v97Db+
eX4h/8I/N761W/nn+fDbftjMP89Hvm/Vwj8Xv5fpeS7We/rvLfzzfOTvv/F5
cj2//9Zv4Z/no9++r5l/ng89HGrln+d9/7qFf25+M83888i3qT/Q807v37GV
fy6fWuh5Vz7qw2ut/PO4Xyqp7+Gf5/0eYpp/no/z7Oda+ed539dq4Z/HeqUe
auWfR75MfyrNP4/4pQ5P889dt9LzPs8fT/PP86GfN6f555H/U48188/zxX8u
m09yHf555FupO80/j3iXfp7mn+ej/z2tjX+e9/8PNPPP86E3u9Hz4bzfa0zz
z+2nY5r55+Y/1cY/j3yYXrmFf24+r6T55/bP1mn+eTxvKuHB8M8j3qX9W/jn
8nW8jX+enz//mvpTK//c/hts5p9b7/42/nnsj6l10/xz8f5lM/887+81m/nn
6lmyv8I/V2/WSPPP88XCsvff3co/9/xVW/nn8vEuer6CetPQwj+Xb39r4Z/L
7x+38M/tl/3p+YrydeMW/rn4rEvPV5IfK6T555V6GP651z9M889j/NNfxefJ
9bxeZun5pzzvgyb+ufFvTc9XifikutL886jfpcZW/rn9MdrGP/f8VCv/PL/Q
X4R/no9+bqyFfx75WPpOK/9cPX8izT/PBw/e1Mw/zy/02+Gf5+N84Opm/nne
77c088/Vt49b+efi8dMW/nm+OLzs+q1m/rl6fi09X8P+erCJfy5/Hmvhn0e8
Uts0889jPKl0M/+8Eq/wz+3PVVv45/JpRXq+pngVW/nn6ud0M/88H/x1fQv/
PB/+3mda+efG/6c0/1x8Xmvin8d6TZda+ecVfQj/XD4sbeafV+If/rn6dmAz
/5zeTdPzL1b0Ifxzn7+Hnq+nHg0088/zfs8Sn6+vnqbx+frqxbtp/rnn1bby
z0NPpvvS/PN8fF/h/Rb+eT761QvS/HN6878m/jl927uFf05vv9nEP6fP1zXx
z2P8Uxe38M/p+2lp/rl6clUT/1z9OT7NPzefFeh5cj1/vvhuM//cfv5Wmn8u
v55q4p/n4/x3vzT/PB9+3c7N/PP8Ao+Ff56P/u6NNP887//roOdftj/2o+db
hv5P1zfzz2O/zd7ZxD+P/TtZ28w/j3oy+zV6vnXo0+ynmvjn+YXzuvDP8/P8
N3lwE/889nuxrOdfUR/T9Hzb+HxxpWb+eeTz3J1p/nmsx2QLPd8u7l/qbeKf
R/4Vn2/in8fzUns388/1Q19p4p/Heszd1sI/j/00e1YT/1x/+Bo934ne/bSZ
fx75X3yFnn819mexsYl/HvOZOy/NP498LObT/PPI38mdWvjnkY/FU5r557E/
J5P+OfzzyIfUkib+uX76qGb+uf33QTP/XD2aSfPPY//M3Zrmn0c+z17exD+X
X0m9Cv881ntyn2b+eSW+4Z/n/T1QM/88H+d3Sb6Gf57398tN/PO88/Ym/nns
19nOJv65/D+jiX+ej+97vJDmn+uX/6+Jfx56OZvEL/xz9fvH9HzfSr8Z/nm8
PtuQ5p/Lv43o+Tfyvj/VzD+P+cyu08w/d7/JZv55pT8N/zz2S+nDZv65169r
5J/T2xWa+Ofq73JN/HP17Gp6fpD4X9HEP49+bfLrLfxz9WOMnn8z4jF5SRP/
XH6f38w/pz9Jfod/Hvtp9okm/jleOrOZfx76Ucyl+ef0ZNMm/rn4f6mJfy5e
NfT88OjXZ+/G54frL+5u5J9HvqV+28Q/198nPBj+eeTb3EwT/zzyf+7wZv55
9KuppB8N/zziU3qrkX8e6zW9b5p/HutRXNzEP496MLd3E/88+s/JPZv459Fv
zv4lzT+PfmKuN80/z8d50HNN/HP95GAT/1y+PJrmn0f9nXskzT+n1+c38s/z
/v6ymX+e9/+lNvLPI1/n7mvin9uP/0vzz+2/99L8c/Ev0vPj9Us3pvnnUe8n
r6PnJ8TrxUSfwj8X7/828c/12+838c/p+Wea+efRX0x+u5F/rj9JrsM/D72Y
3C3NP4/9PffpJv65/fcnfH5yrO/cmfT8FOO9mJ6fgl8vauKfq9/bNvPP9Rd7
NfLPo77O9TTxz/HfHD0/Tf//50b+eazf3FH0/PRY79Lv6Pnpofdzid6Gfx7r
P/vDRv55zC/1O3r+f/Lrhmb+uX6k1Mg/j/05+alm/nm8XvyokX8e8S4e28g/
z/t9hGb+ecy3+G4j/zzq7+R9af65fPpZE/+8Un/CPw89mNwSn58ZvD97TzP/
nP682cA/j35+8sg0/zz289x/m/nn+pFsE/88+u/UH5r459EfTW7cxD+3Xx9t
5J/H54u9jfxzerpHmn8ezyuuT8/PpQ+1Tfzz6H/mvtfIP8e3hzXxz2P/F49v
5J+HXs6u18g/t/770fPz9c8b0PMLjO879PwCfHNBE/8cL6Xw+YX474MG/nml
3wj/XD3+QRP/PO43e3oT/xwv3dPEPze+Q5r55/T2x438c3q7fzP/HA+uSs8v
c97QRM8vi/oz3dnIP8f/5zXzz+P5c3c18s9jP0w+js+v0D+2pfnn6tnGjfzz
0PvS/k3888iH4gaN/HP95q8a+ef6/72a+OfRX6Xm6PnP9QtVjfzzyOfZrzbx
zyv9Zvjnsb6Tx9Pza/BrfxP/XL9fpOfX2t9Jvxj+OR6dbuCf638/18w/j/0z
tTk9vy7GO7dKM//cec469Pz66B/nvtrIP1dvRxv55/Txhgb+edSP0r2N/HP9
3Sv0/KbQq8mr6flN0R/PJnob/nlcT/23kX9ufyf8F/55xKOU9D/hnzvP2KiZ
f65fnWzkn6vfxzXzz9Xnf+HzW83n2kb+uXif1sA/1y+s2sg/x7dzDfxzfHxS
A/88xjtZwOe309+LmvnnwavFZH3CP1ePdm3kn+OfhJ/CP4/1mEr2S/jn8mew
mX8e45tK1iP8c/E8soF/Tj/+0cA/1199n57/Nu//b6Hns+p7Bz2fU9+/0cA/
V99vaeSfW/8afP67GH9xxyb+OR66ppF/rp/Yq5l/rt/ZsoF/rj/6ZCP/PO/7
iw38c+f5tzfwz2P/TX6pgX+u3m7azD9Xb7ob+ef6jf808s/1T8l+Dv8cD+/U
xD+Peli8pIF/bn88QM/vU18exOf34ftj6Pn9lf4j/HPx3rqJfx75Wrqanj+Q
933LRv65eru0gX8uH7Zt4J/rbz9Nzx+q9Bfhn+Prjxv4584/Ez0K/5xebUHP
H4n+d245ev4oHvlrPf+cXp7ZyD+P/VNsw+d/NP7tGvnnEe/JJN/CP8erRzfw
z9WDnkb+uedf08A/p7eT9PwJ+2nTRv659Ur4Ivzz0IPSq438c/3k0nr+ufU6
mZ4/pR5+VM8/1x+/gc+fxucj+PzPwSvTqzfyz4NXi4sa+OeRz3Nr4vO/0MN/
1PPP6dkdDfxz59U/pOfPWt+NGvjn6sXJjfzzeH7x7w3884hXcb0G/jne/nkD
/9z+e5aeP6+ferGRf66eZBv5585Dk/oZ/rl6eF89/9z5ysoN/HP98Ofo+d/V
26828M9jvxeTfin8c+9/vZ5/7nwi2U/hn6v3f6/nn+sPOxv45/rRYxr45/j1
+Qb+OR68rJ5/rr8/vIF/rj41NPDP1f9fNvHP43xz9nMN/HO8fFED/1y93aue
f65fOa+Bf07v/1fPP7cfkv4s/HPnjec28s/N92sN/POyv1fPPzf/FfD5G85H
Tqrnn9PvbRr457H+s0l8wz/HH1s38s/1k6c28c/1X1vS87f038fV88+d995G
z9+mr9fV88/tr6R/Cv/cem/WxD/nhyT1I/xz+nFIPf9cPvysnn/u/HTtRv65
8+1LG/jn+ts1mvjn+CvRp/DPK3od/rl6+HE9/1w/f08D/5x+LaLn/1VfflPP
P6eXib6Hf67eHV/PPxfvhB/DP9dP/4Kef2S+G9Xzz/mjRzTwz/Xjh9fzz8W/
rYF/rr+8rJF/rv94opF/Tl/2p+dLK/kd/rn68SA9TxXivP6BRv55Ic5vV6/n
nxd837aRfx7vL65Szz8vRP7vXs8/L8yf78wl9Sn880L0z8ON/PNCnA/+u4F/
HtezJ9Hz5Dp+r5We1xWiv/9uPf+8EPMbquefF+I8sEDPk+v585FCA/+8EPlw
VT3/3P3+2MA/L8zreWrtev55Ic4z927gnxfi+xSfaOSfFyI/zq/nn8f8J5N4
hX8e9y8m+hL+eSH065x6/nkhzgffq+efF6Kf/go9bzGfLel5ayH6i6SfDv+8
EP39043888JCvQ//vBDnN1c28M8Lke/rNPDPC5Ffx9TzzwtxPrZ2A/885lu8
oIF/Xgh+WNLAPy/E+XhS3+L4rzDPr3M/auCfy4d96/nnhejv7qnnnxdCP0+l
5+0Rz+nf1vPPY/5TG9DzjoK/D2/gnxfi+4NJvQ//vOD/v2nknxf8fUA9/zzy
cXoVfN4tvx9s4J/HdWrdev55IXjqknr+ecHfV9Pz3ojf7FF1/PPIn+k/1/HP
C/6/w3r+eSF+z227Bv55Ier5zfS8P+JV+kYd/9z9v17HP4/9NndfHf+8EP3R
xvR8MPbL7Cn1/PNC9Pd70/OhwkK9DP+8EPUu6R/DP4/5z/XS8xHrl1yHfx7X
sx31/PNCfN/q8Xr+eYx38rF6/nmsx+Q7DfzzyJ/ZfzXwzwtxXvUAPR8vLPQT
4Z+L59fr+edxXWyu55+L59V1/HPPG6Pni9WnXev55/H+0i71/PPYL6kj6fly
UU+mL6zjn0f+TR7WwD+P+02vXcc/L8R55s30/BPWa5t6/nkheCmp1+GfF4J3
m+j5iurFW3X8c/l4eh3/3Hrt3MA/j/HN/a2Of64e/ZSer+zzf6njnxfm9Xh2
swb+ufX9UT3/XDyeqOOfx/5MJf1o+OfW/5E6/nnMb+rAOv65fFxczz+P+jr9
LD1fVTyOpeerqdd71PHPCwv6Fv65+B5czz9Xjx+u559bnx3q+OfG/3Et/9z+
/bCWf14IfnyGnq8uf2+s45/Lj9/R8zWMd+M6/nncf/JX9Pzz8fzixXX8c+NL
8iX8c3qSaeCfG88Hdfxz8Xuvjn9uPTat55+Lx9t1/HPvX7OOf16I7y/d0sA/
N/4N6vnnsd9LH9TzzwvFF5Z9fkt8XlRfTqrjn1u/Z+v454XwL35Iz9e1n/9Q
yz+3foN1/POC3wOu55+bz2F1/HPxnK7nn4e+l56s5597fZSer2//J/Uv/PNK
/Qv/3P2TfAn/XHyur+Wfy/9d6/jnPn8APd/Q53ep45/Ln1It/9x8t6njnxei
v8o38M/t13p6von7fVDLPw89m7uFnm8qvv+p5Z/Lh+3r+efy8cM6/rn9s0MD
/1z9+34t/9z4Xqnln7v/hfX8c/H4ay3/3PNereOfq59r1vPP5fdxtfxzz1uh
jn9ufp+q55+L1/21/PN4/9zy9HzreH8xqQfhn1uPo+n5NurXb2v55+6/Ty3/
3P3H6Pm2xp+u5Z8X4u+t+hv45573dXy+vfhcV8s/L8R5a9K/hX+unt/ewD+X
H7fS8x3F59Ja/rn1ea+Wfy4+G9XxzwsLPB3+OT16oZp/rl4V6fnOhfBPNsLn
O7v/P+j5LvbX8zX8c/F5qZZ/rv4k1+Gfi89r9fxz6/lENf/ceFas5Z9br2Nq
+OfyZWV8vrv7j9Twzyv6Hv65/Xl4Df9c/Tushn8e/WXpkQb+efSHU6P4fC/x
Harjn3ve4fR8b+vXj8/3Vq+6avjnlXod/nllfcM/N//davjnrtP0/OvieWMN
/1y93bmWf+71ner457H/J6sa+Ofy99o6/rn41dXwz+Xjl/H5AYXg602dtx8g
XlvU8s89L+G/8M/lw6XV/HPXP63ln4vXO9X8c59PrsM/1/+u5rz94EL4fc/R
84P1i0808M+j/5t9op5/Xtmv4Z+bzzg9P9T63kvPD1MPf4/PD7O+j9bwz+Vz
Dz13Pf3Hav65/bdnPf88+sFiUv/CP9fvb+u8/Qj5t0ct/9z9SvT8SOPdv5p/
jmdzNfxz4/lqLf/ceK+p5Z9bz9uq+eeFOM/6Jz4/Rj9UquGfy9eta/nn8unj
Gv6513ep5p+7fpWeHyef3qrln1vPc2v55+KzXTX/3P2Tehz+uXo0Wcs/r/Rz
4Z/LlxPr+OfWa5U6/rn5rEjPTxDP++v45/JhpVr+efTvk434/ET7cQ96/l35
+oNq/nkhzqNqGvjnxrNcLf88+uGp6+n5ycb3hWr+ufcfUMs/N97xGv55hb/D
P1ff5mr45/Jht1r+ufnN1PDPrXd9Lf9cPP9Vxz+XP1fV8s/L9aqaf17R//DP
jW9Dev59/exLdfxz+XZmHf9cPfhtNf/ceH5dzT/3/o3p+Q/Ft6aGf24+b9fw
z82/SM9/JN92q+afy7fWav65569Jz880nyPq+Ofq7/bV/HP3342en+X569fw
zwsL53/hn3t91Vr+uXjO1vHPzedvNfxz+T1Txz8X78ur+ef07tka/rnrf1fz
z83vlBr+ufnvjM9dT32Dnp/n+ts1/HOfn6zmnxvvJD0/3/u3oOcXmN+p1fxz
8Xqymn/u9atr+efqz6fx+UXi/dlq/rl8fbSaf278AzX8c/nwFj2/RHyOq+af
268X1vLPjffkOv65/H6tln8u/i/X8s8r9SH8c/G4t45/Tk+fr+Wfe/3KGv65
9Xiuln9eqU/hn4tPwu/hn9svA9X8c/X91mr+ufl9mZ5fJT/66fnP1Z8Ha/nn
Pr8nPr9a/DbE59eoj9dW88/Fa2d6fq33X1HHPzfeP9fwzz3/m7X8c5//XRX/
3OffruafW89Ta/jn1v/EGv65+v5IDf9cv5b0l+Gf258v4vMbvX/Lav65+nJj
Lf/c857H567nkvwO/9zrn6zhn7tfoofhn3t/ppZ/7vlJ/xr+uXx6u5Z/Lr+P
qOGfW6+T8fmt4nUpPr/NeJP6HP65/bW4hn/u+efX8s/Ff7Na/nmlPoV/7vMb
0/Nfe39vDf/cePtq+OfysY6euy6uUc0/9/qbVfxz++O2Ov65fF2Dnt9h/tfW
8M89f586/rnxflTHP3f9hVr+uf2U8F/4557/CD3/nftfR89/J9+mq/nnPr8m
Pr/T/kv2Y/jnPr9GLf9cfnbg87s978o6/rn8a6nhn9tPL1Xxz61nYw3/3Hq+
is/vEc+/VvHP5duzVfzzcj9ZzT93/6XV/HPXH1Xzz8UrqQ/hn3u9j57fb30e
reOfqwfvVvPPrf+V1fxz+bkjPX/Q+Fet4Z9bv7tq+Ofq28XV/HPr31DPP1cv
M9X8c/Gvw+ePyM9f1/DP/396/qj5VNfyz63X1+v45+bz42r+udffx+ePuf9/
6vjn7v/zOv65/b0rPX9cPDvr+Ofy4fvV/HP3/7iKf258CX+Ff26+L9Txz8X3
nzX8c/l0RC3/3Pg2oedPm8/uVfxzzz+2mn9uPc6p4Z+7X7K+4Z9b7zF8/hfx
Xtt5+zM+v3ct/9z+eKWKf26899Txz80v6e/CP1efv1bLP7cfPoXP/2r/fauO
f+79n6zjn4v3PvT8ef3SU1X8c/n3ZBX/3HrsXs0/F98/1/LPK3oW/rn5n1LF
PzefT9Twz+Vnsr7hn8vftav458ab5Gv45+J7QA3/3P2vp+cv08vhGv659/+l
mn/u+Vfh81c9f/06/nklf8I/Vz9eoeevqQc71/DPxbeAz/9hP76Pz/8pX56v
4Z+73330/HXxvL6Wf+56a3zuenrtav45fbuxin/u/Um/Ef659di9ln9uf/TW
8s+t72w1/1y8h6r458Z7VRX/3P68vZp/Ll+Tfin8c/nxWhX/3PneQdX8c/nY
W8c/F5+Lqvjnnr+omn9uPttX8c+N/2h8/p79WU3P3/P+e2v555V+N/xz+23L
Ov65+NxKzz9wvy2r+Ofm914N/1z+3VDDP7f+F1bzz+XPb+j5/8r1vYp/bvzJ
dfjn5fPCGv55hQ/DPy/3U/T8Y+t1ahX/3PWZ9HyJ+O1Az5ea35X4fGnl/CH8
c+u7CT5Ptcf8vlLDP2+PeG1YzT+P6+Iutfzz9nj+FjX88/bI5yOq+Odeb6Dn
NXH/6Q1r+OftUd+2wue18f7UIVX88/aI30FV/HPXbXX8c8+7top/Hq+XVq7m
nxv/H2r55/H65F3O28vXe1Txz73/1Sr+ufEuR8+bYnzFg/B5U7u/D63hn8f1
7MG1/PO4/9TeNfxz432enifX8/l2SQ3/PJ4394cU/zyeN53oZ/jnxrtZFf+8
feF8IPxz83+4in/u/jvT84x4J/U3/PP4/Nz6Vfxz8d+gmn9eWZ/wz43/Hnqe
E4+kvw3/3HyPreKfe/+a1fxz+ZDoZWw317+p4p97f7GGfx7Xs5+n5x3mV+28
vdP1B1X885jP9Dsp/rn7f6aaf26+q9Xwz+P+k5/G593mu1IV/9x8bqTnPbE+
xV9U8889P1n/8M/tnxXweV/7Qj8b/rnnv5Tin7v/Xvi833xfruGfx/pN71XD
Pze/pF6Ef+7+4/h8UD6OVvHP5e+w8/Yh978Inw+731+dt7su9uDzEdfPpPjn
xt9TxT8Xj+3p+ah83Yaej8mPH+DzMePZtJZ/7n6n1vLPrdfjKf6568Za/nnE
Y661in9u/g9U8c/tjy/W8s+NP3l/+Oeen67in8v3ZD+Ef+5+ST8f/nnEa+oo
er68+61VzT+PeJeS/A3/3PhureKfu9/B1fxz6/l6Nf88rovvVPHPXe9Twz9X
D3Z13v5J492thn9eyZ/wz31+D3q+ste3qeWfty+c94Z/Ll/+VsU/t357VfHP
zW+rGv65+G1ewz9Xjy9O8c/L9SjFPzee3ir+ufVM+vXwz+VPkk/hn4vPcTX8
c/k6ic8/635Ppvjn5pPoU/jnnv/psn9u/g3V/HP5eBs9X12+nOC8fQ2fPzvF
P7ee2Sr+ufttQs8/bzzvO2//gvffVs0/t79uwedrms/KNfxz8384xT/3emMV
/1x8v5fin6tP/6zmn8uHe1L8c/Xnghr+uddPTPHPre+ONfxz6/HFFP9c/X29
in8uf5ev5p+L96FV/HOfv6yaf+79yevhn3v+D2v45+IxWs0/9/rOztvXl29X
0PMvifeKVfxzr38Cn29gvh/V8M/F858p/nn7wnlz+Ofim/R74Z9b77fo+Ub0
crUU/9zzX03xz72/hM83sR9er+Gfi88fq/jnnn8tPt/U+j2f4p+rfy/W8M/l
47Mp/rn43E/PNze+e6v45+Z/MT7fwvtL9PzL5vunFP/c+iT1J/xz+bprDf9c
vTs3xT833o/p+Vbud06Kf25+/TX8c9e/pufbGN+7Vfxzz7ukmn+uvq1YzT/3
vN/X8M/Vg6er+efy87vO27cTvzZ6vr3xbZrin7v/9vh8B/3ZTIp/bryn0/Md
fT7pH8I/t97/SfHPxedQer6TelJw3v5V9/tt2T83/iQfwj+3PivS8529nvRr
4Z9b/wvK/rnxnEHPv2b//qiKf+75V6X45/Kvpuyf609eTPHPxf8z9Hw38xug
57uL18vV/HPjeamaf249/1bNPzffK6r55z7fXsM/N96Et8M/tz9vr+KfW882
fL6366Pp+d6ev27ZPzffenq+j/V/nZ7vK747VvPPze/eFP/c+Fav4p/Lh63p
+Tesx2fx+X7G8zN67nq2K8U/N75T6bnrqWfo+QHqVXuKf+71d6r55+0L5xnh
n5tPJsU/N740PT9I/byp7J+3L/Bl+OfmO0bPD25f4O/wz9vDrzynNBP+uXjs
h88P0Q98XJoJ/9zzN8Xnh5rvxvT8MOPZAJ8fZr4Xpvjn7Qvnf+GfG19zFf/c
ejZV8c/Vt+ur+Ofu31/NPxevO+n5kV7/oJp/Lr6pKv65+z1Vmgn/3PWJ1fxz
8787xT+nZ+uX/XPja6Xnx6hPR9Hzb4tPYzX/XH7vhs+PNf9Cin9ufG/Q8+PE
6xl6fpz6chM9nxLvu6v45553VxX/vD2+77x6aSb8c/st2c/hn7cvfJ8m/HN6
9XKKf+55a6f4596/Kz0/wXotruafm98BKf659x+Y4p97/dIU/7zSH4Z/Xum/
wz+3Hu+XZsI/F6+rnbefbD/8HJ+fIh6fx+en2K+vlGbCP1fvfum8/VTjWY6e
f8/zPlPFP6/Uh/DPPe/TVfxz+dZUzT83/rvw+en0dFt6/n33Owefu55evZp/
bn6J/oR/Lv82S/HP5cOeZf88Pj98XIp/7vr9Kv55fH7XU6v45/H5r51cxT8X
r1/Q8zNivYfWSfHP5dMIPj9Tvj+X4p+bX56en+V5GXp+lvuti89/bPxnlWbC
P4/3D6dS/HP5fxw9P0d+7Jvin5vfIVX8c5+/gJ7/JJ530Sop/nn7/PeHU7ct
nQn/XD4X6flPjf+wav55vP58wm/hn1uvC6r45zGei1bA5+fLl6uXzoR/bv2z
pZnwz9vj9z2eL82Efx6ff/4jen5hfH74tBT/XHz/UpoJ/1z8fpvin8d4Lv5x
2T+Pel1asnQm/HP1fLHz9kvifhe/XcU/j+tdt6vmn7t/Pz6/VH4P0/PL4n4X
31bFP3e/rej55RHfudnSTPjnMf8Xbqzin4vXl1L8c+u/STX/nJ5ck+KfR7xS
m5dmwj+33q0p/rn9emTZP5dvh6T45zGfrxWr+Of2TxM9d506eOlM+OfimdSf
8M89by16fo31mMTn18Z8hibp+bXi8USKf66/qq/mn6u3j6T45+rRg0tnwj9X
H1cuzYR/Lp9XTvHPxWs3en6D+/126Uz45/H683fS8xvl7xw+vzHud/H2zttv
ivF/bVt6nlzP/33XX+n5LyOfJjOlmfDP1adBen6z/uZ4eu76+S3w+S0xv11v
SfHPK3oV/rn4d+HzWyN/pj+1dCb8c/mT9EPhn8uf9Zy3/8p+uaqKf27++RT/
XHwur+KfqydJvxT+uXqX1Nvwz2N+L/zReftvvL5/Ff/c+l9Xmgn/XLyOWjoT
/nl7/P3W0Utnwj83njPx+R0Rz9nHl86Ef67eJHwa/rn8TPQt/HP1f8UU/9z8
/0nP5+T/f5eEnv/O+vwLn/8uxjPVW5oJ/zzGP3wCPXc996fSTPjn9vd3Uvxz
4z8Cn9+tXh1Lz+8un//R899b7yfL/rnnX7B0Jvxz8f9Win8uHx8p++fybcfS
TPjn+pV3l86Ef25/p1P8c/mX6Fv45zGeXRtT/HPxeoie3289+5fOhH+uPuxL
zx+Qf7cvmQn/vHJeF/65epSsd/jn6vt79Pwh8fgKPX8ID3yuNBP+ufGuWpoJ
/9z1HfT8EfE5ozQT/rl82xyfPyqfj6Pnj8Z4iv8ozYR/bn2S9Q3/POI3d/vS
mfDP5UeiP+GfW/91qvjnlfOI8M/p1TZLZ8I/t3/fXDIT/nnE56JjUvxz8e1N
8c9j/SevWToT/rnxP+m8/SnjuZyel69rSzPhn9uPl9Dzp8XzUnr+Z/WziM//
LB5JvoV/Tv+OXDIT/rn9esbSmfDP1e8kX8I/N75rSzPhn1v/5en5s5X+P/xz
80/0Lfxz+rduaSb8c/FapzQT/rn1fH5p6PnzrndbMhP+ufkkr4d/rt96PcU/
j/sX1yjNhH+uH/oSPf+berI4xT+P+79QLPvnxt9SxT/Hd8eVZsI/1w+vXvbP
zefCJaHnL4l/PT1/GT8XSjPhn8uXm5bOhH8unzvo+Sv6jaSeh3/u+ZssnQn/
XL+R8EL45+rRd523vyaeLfj8H5X1Dv/ceic8G/658fyyNBP+ufVP8iH88wr/
hH+ufiT9Yvjn9HxDfP6GfOgu++c+3+X7cP/2+Z1T/HPvf2BJ6Pmb6t3BVfxz
n29bMhP+uXr/hyWh52+pL3cvmQn/3PufWjoT/rl+88ilwefvWI+6JTPhn+t/
k/UO/1y+HbM09Pxd+bbPkpnwz9XrJ5fOhH9uvRO9Cv+8zIOlmfDPrdchS2fC
P7f/6/C566GNU/zziP/kUaWZ8M/1q52lmfDP6VnCG+Gfe95P6fmH+oF3nLd/
GOs7/c6SmfDP4/6zby+ZCf/cfF9fMhP+uf52fXr+kXzZnJ5/rP4l/Xf45z7/
Dj1fQk/y9HyJ9TiDni+l759dOhP+ufmMLQk9L1V4dn6dUh3R/3xv6Uz45x2R
7zek+Ofx+gvP0vPker4/XdV5e7XPr1L2zzsi3zuWhJ7XdMT6b0bPa+Lzux6V
4p/H54sPLZ0J/zxef+Ehel7XEfv/tiUz4Z/H+Kab6Xm9+71Fz+s7FvQ0/PP4
fOo/H4eeN8Tn526k540dkQ+7lmbCP++IeO6Gz5tifHMJT4V/bnxJ/MM/j/mm
Ej0K/zzuV3p/6Uz45x3Rj51Oz9PG/9THM+Gfx/OKn6XnLeI1Rc9b47r049JM
+Ofx/OFjnLf/P6bOOz6q6unDa0NQ7JSERBMriAoiKlayqCD2AiiKmlgRAQEL
2DD7A0XACqKgIAkoKhZQQFSMJNgbomLDQpLtLZvtLe095vts9v3zfu7de8+Z
MzPfmXmCHtib+Xqr9PxA7P9gW434eW/594B26flBel/t7PYa8XPWs7W1Rvxc
9ytrWqXnh+i6pAA9z11fQH9+KPvd3Co957rWxLP4uexv29BaI37eu2teqPFV
b+YxHdLzXrJX7ca2GvFz1nMbet5Hv7fsi55zbRvbViN+3lv1Rw/0vK/eX95o
gZ/jvxPQ8wLWG26tET/v3VmvWMd0qD8vxF+8rdLzfpz3he3S837Ey9XM24t4
fmFrjfg553F2u/S8WPetr1vg51qP9dl29eeH63nbn63qzw9nvyYexM/x17mt
0vMj9Lx1Tqv0vITvmfwofo6972XeXir7lI1Cz7mu/LFVen4k9jkvx8+xz9Ht
NeLniocKU++In+vatsQCP9d5lU2ywM85vyPba8TPdb5l96Dnx2CPaW014ufs
77A26fmx5AfTv4mfs58P22vEz/n9E+h5f/a3X4f0vL/8v/K9jhrxc/lDx9ut
NeLnij/L+I4a8XPiYy16fjz+OaZN/flAzuvNdun5CfIXS1u79PwE3tfeUiN+
zv23WmvEz7Hnqo4a8XP2t7y9Rvyc7wU6asTP89fi5/jXsnbp+WC+d35rjfi5
nq+fboGfEx+OVun5/7sWP8ff/0HP/9+1+Dn5yfTD4uf4179t6s+HYs95bdLz
odpP9UQL/Jz97UTPT9X76ua2Sc9P034qDqU/Pw1/Opj+/HTiYXBrjfg5evBb
i/rzYfjvVvR8mNZf1xc9PwP/qOmoET/XemsL2mvEz3VdtXeOn2PfDR3S87Pw
38JW6flZxONt6PnZOs/KO1trxM9Z//tt0vNz8NfX6M+5tl2U4+fcv7qtRvyc
9WbapOfDiaeX0fPh5Mcr0PMy4snUx51+YGU9HvTcin6dyrx9BO87N8fPOR9j
f/Fz8snwthrxc873EObt53MegdYa8XP8Y2VLjfg5evtPm/T8Auw7FD0fiR7V
dkjPR2IPc17i53zv1NYa8XP06Rr0/ELi58526fmF+P+2Nun5aH3felu79Hw0
+pRCzy/iPLuj5xex/iNy/JzzvZr+/GL209ImPb+E832pXXp+CfnC9EPi51p/
5ZYW6fml1BOH5fg53zP9lfg5+eq9FvXnl+O/Y9Dz3LW5L37O70+1wM85/0Vt
0vMr8d+jOqTnV7LfS9Dzqzi/XW014ufEzwP051djry/apedXs/6yVun5GNb7
Sov0fAz1Xw39+Vjiay16PpZ8MqRVej6O8zHnJX6OPz/UKj2/Bv+9tl16fi3+
8EVrjfg56zf1gfg5+53RWiN+jj5PRs+vo/56Aj2/Dn0Z3yY9v57nTf0ifk5+
ub1V/fkE/OGnDun5BPxtB/35DbJHR0Wr+vMbenf1h+LnvbvmFeLn7OfAVvXn
N1GfdGPefhPvn0t/Xs73+7ZIz8vJvytb1Z9XoC97tGreXsHvh7VJz29mP1vb
a8TPqSe3oOe3YO/tbTXi5+hNZVuN+Dn6eVe7+vNb8X9TX4qfU9+NaZGe34Z/
mmvx83w9JH7Oeg6iP7+D97dlped38PtlLZq3T+zN/68VPZ/I/k5ulZ7fiX+d
3yI959o2Fz2fhL+ORs8n4X/3t0rP7yJ+HqI/n8zzu9Hzyaz3ujbp+RTdr13Q
Lj2fQn4Y0iI9n8r7O1ql51O1v1qjn+LnnOebrdLzu4mvA1ql59PId2vQ82mc
x69Z9efTsY8fPZ+OP93eIj2fQTzf2iI9n0G+79UCP2d9X2al5/egPwe2w8/x
5/3oz+9lvata1J/fx3nNb5We30d8/dQqPb8ffd+7Rf35/fiLk/58Jva7tU16
znXZ88zbZ9HPjGqXns/i/tIW6fkD2OuPdun5A9jnZ/T8QfRsvzb4OfFdjJ4/
xPvPbZGeP4SefNUuPX8Yf53bIj1/mP28iJ4/Qv54AD1/hPjuT38+m3w2rV16
Ppv9z2qRnj/K9zai54/y/vtbpOeV7Hdiu/TcRn5d1So9t7GfY1vg5+Tb+9tq
xM/xt9o2zdvn4N/+dun5HPyrul39+Vzy/foW6flc1n9lu/T8Mdb3AXr+GP60
oa1G/By9u6FFev4459OzRXo+j/rjpjbp+Tzi9cx2+Dn56wH68yeItzHo+Xzy
y/705/M572Vt8HPOy+Rv8XPeV9paI37O/m7NSs8XYr/hLdLzJ4mnp+nPn+R9
h9GfP4W/m3wqfs55m35Q/Bz7jEfPnyYeXsxKz5/J1wPi58RXf/T8WeqfAW3q
z7m2XNwqPX+O+21t0nOuLevbpOeLWG8/9HwR9jq7VXq+ON8fip/Tv1RmpefP
oycHoOfPkz/2b5GeL2G9g1ql50vy8SV+Tv7YFz1/kfxch56/iD8toT9fyvMv
tEjPl3Iee6Dny7CXiTfxc/Zn6hvxc/L7M23wc/TraPrzl4mHZ5i3v8z3Lm6R
ni/n/DZlpefLqUcfb5Oer+D6dvR8BfEzKQs/Zz+HtMPP8Z816PlK8us7WfXn
K/n9p23wc/Rseav0vAo99mWl59XE52XoeTX54uqs9HwV/hZvk56vIj+YfCx+
zvv3ykrPV3P/z6z0/FXsNxM9f5XnTX0hfk58/pCFn+Mvk9ql52uIpxno+Rrs
Zeot8fN8/SV+Trx+koWf4x+jW6TnbxAvPdql52+ipx1Z6fmbfO+mVun5Wta/
D3q+lnz3eAv8nHh1t0rP38b+Jp+Ln+MfNvrzd7DPsW3S83fwp0lt0vN38/Ms
8fN8PS1+zvpOzfFz7HdwFn6O//Zqk56vp553Mm9/j37vEObt77HeMvrz93n/
C1np+fvEn61Ver6BfPd5q/R8A3rzB/35Ruz9LP35RvL31lbp+Sb02NR/4ues
/wT0/APWf1yr9PwD8smkVun5Zuz1Lv35ZuwzLAs/xx8eyUrPP+S8BrdJzz/i
/aa/Fj/Pn5/4Oec1rlV6/jH7K2uRnm/Bv/6hP9+CPvdslZ5/wvfXZaXnn/C9
31rh5+zn4Rb4OfVBNAs/J/+uzUrPP2W/g9HzreSXA9qk51s5z6os/Jz6rLRF
el7H+f3QJj2vwx6/Z+Hn6KW7RXq+jXw+oBV+jr9uzUjPPyP+7s/Az/P1kvg5
/vRhm/T8C57PZKTnX+APA9DzL/GnKczbv8Q/jmmDn5OfIxnp+VfcN/W7+Lne
X5bJws/Rj/ey8HPy26ct0vNv8vYWP8c+B7dJz79lPaYeED/Hvyyt8PN8fSV+
Tv44Jgs/xx6bW6TnP/D+QfTnP7C+vzPS8+3o37oW6fl28uPwNvg5z/+ThZ/j
f/Mz0vMd+N8VWfg56xvfIj3/Kd/fiJ8TbzfSn//M+4ZlpOc/8/zNbfBz/OHR
LPyc9SymP9/JeXZn3r6T8zo9Cz9nP/dl4efo2T1Z6flvrH9Yi/T8d/Lteej5
76xnbUZ6/gffH90mPf+D8zqlBX6O/4ey0vM/yacntUjPd1HvLc9Iz3exvusz
8HP6fUcWfk58TUTP/87Pc8XP+X2fLPyceunlLPwc+xzZKj3/l/qnH/P2f8k/
fdHz3cx3rmHevpv1tqfh59jvKfrzeuLrAvS8ge8tRs8byB8j0PNG4v/7Vul5
7npWRnpuZ3+PtkjP7fn8Kn5OPsu2wM9Z75ZW6bmT9Q5thZ/j38609NyFPph8
Jn5OPB6fgZ/jb96M9NyN/U2+Fz/n+bta4efUC+a8xM9Zb31Geu7leQ967sMe
vTLwc+qh3zLScz/Xh2Xg56x/SRZ+znldnpWeB9HXy5i3B1n/vlnpeRPPz8tK
z5s4n5FZ6XmI+m0+/XkIffiqBX5OPFtapOfN+fm7+Dl69WkGfo5+Z+nPI3w/
mYGfE2/3ZeDn6NUM9Dyaz0fi58Tb+gz8HH8flIGfcz7+LPyc/LIaPU/k+3nx
c/LNTS3wc/q38eh5kvz5N3qeYn9F6HkKey9Pw8/JN39mpOdp7HkIep4hPnZm
pOcZ9vNrGn7OerZn4OfE/7cZ+Dn5e0/68xb8KdMCP8ff9s5Iz1vJR5+g523k
s7NbpOdt2HcYet5OPngkAz+nPp1Mf97B997NSs8tffj/b2Xh530Uj7n+fI8+
0vPBGen5Hnq+Y0WL9HzPPorvaWnpOdeV/jT8vI/ywasZ6flefK86Iz3fu4/0
3dSH4udc78pIz/fpI3/6hv7cXHfmg0voz7vp+Y4b0tJzc91pn0UZ6fm+feQv
32fg56x/DnreXffrZqLn3fV7a48M/LyPzuNE+vMevO+ytPR8P+239mj0fD/d
t3Wk4edav62qBX6u99eZekz8vE+nv9a9noWf9+maR4ifa3+VS9DzA/h+OC09
P1DnY3s3DT/v0+Xf4ud8b1Iafs793zPwc33f+m0Wfo59a1rg5+zH5G/xc51n
2biM9PzQPl35T/xc77NNSMPPed/Lafg559UNPe/FeT+TgZ/LXtZlafg5+z8o
Iz3vw/2TW+DnfeT/k1rg5zxfT3/eV/ax3IKeF+g8O75JS88LZI+y6Vn4ud5X
Zs5H/Bx7m/MQP8cfNmbg58THnVnpeRHn2ZqGn7P/whb4udZfdxt6Xoy90mn4
OeufmoGfY58jstLzI1i/iSfxc/zr9gz8nPM5LQ0/x5+fQM9Leb8jLT0vJd73
R8+P1HqtizPS8yPZX1Uafo69Ainp+VHE897o+dHs70T0/Gj2Z85f/Fz2tFYx
bz9G67McjZ4fi73bMvBz4nNaVnp+HO8/PA0/xz5D6M/7s7+PMvBz1vtVGn6O
P89EzwfovDtM/y1+zvenoufHY5+P0/Bz7bd2nzT8nPy3KQ0/x37n5Pg5/mLy
i/i5rsvM8+Ln2GdjGn7Oemam4ef4z5cp+LmetxxEfz5Y67MdkIWfc78H8/aT
se816PnJ2K8gAz9nfevoz4cQn2dk4ed8fzrz9lPkX5VTs/Bz8snYFvh5n67+
Tvyc805k4OfcH5yFn2OPDzLS89O4/11aen46378iDT8nP/6Ang/TejoOTsPP
8deJGfg5+e2CNPyc+OiRhp8TT+vT0vMzub8Xen4W/nJuGn6OfV5Az88mvooz
8HN+vzsNP8c/TD4RP8c/p6Sl5+fyvo9T8HOdf63pv8XP8Y8t6Plw8pPRd/Fz
/HtJGn6O/4xHz63sbxH9+QjZ01Kclp6PIL7uzkjPz9PztaYeFT/X87YT6c/P
5zxeSsHPWf/Dafg5+/uZ/pzrsiXo+Uji6dws/JzfH5GBn+PPM7Lw87xeip/z
vvvS8HPWb/RI/Jz3m/MTP8df6unPL0IvT0/DzzmfQzPS84v1/tq70vBzro3/
ip/z/uo0/Bx/DWfg5/jbUvT8UvazJSU9v4z3XZeFnxM/x6Hnl3Nem1Lwc/zJ
n4Kfc94PpaTnV3De7hT8nPz1RRp+jj5elIWfcz5j0vBz6qvdKfi51muZkoKf
s54dGfg5+eSYDPwcex6fgp+znyfR87H400T683E8v3cafo5/daTg53z/liz8
vE/XvEb8nHg/JAM/x/4m34uf5/Ol+DnxMi4FPycf/ZaGn3N/Jnp+Peu7Cj2f
wHk1peDnum81+it+Tj78IwM/p74ckZKe36j9WH9Cz2+kfnkrBT+nPp6Wkp7f
RD4eTX9ejt7sSsHPyW+mvhY/Zz2TUvBz/GFnCn6OP5pr8XPW+1sKfs56z0vD
z4mHl1Pwc87jpxT8nPx0fRZ+zu//TMPPsWdJFn7O82Oz8HPipy0FP8c/VqLn
d5Bvd6bh5+hDI3o+kXqnF/35nex/FPP2O/n9Eyn4OfnFmYSf5/VF/By9bkzC
z8m3+9CfT+b9j6Tg59R3pj4RP+f6+gz8nP31Qc+nkm/vTcHP2c8jafg5/rVP
Cn6Ov5yRgp+j198n4ef8fl0afs7+jL3Fz7H//Wn4Ofq0gf78HvLBshT8nHh4
KwM/Zz370p/fiz8OTsPPqfeXpuHnxOdLGfg5+aVfCn6Of5j8L37ep2s+I37O
eTyehp/jvyUZ+DnxUYOeP8D5/pmEn5OfGlLwc/ypF3r+IPrwbwp+Tvy8loKf
873Z6PnD2GN5En5OfTs6Az8nnky8ip9j34cy8HPW91ISfs7vV6bg5/Snr6bh
5+TztiT8nPOdhJ7bOK/v0/Bz9ptNw8+x79gU/Bz7X52Cn7O+rfTnc8i3Rl/E
z3lffRJ+nr8WP8/3O+Ln+MfaNPwc//s5CT/H3/dMwc8535X05/PY/440/Jx8
XZGEn6Nfi1Lwc9a/MAk/J39el4afo69PJOHn+X5C/Bz/WYCeLySer0zBz8mH
PvSc6w5Tj4uf4y/2JPwc+9yfhJ8Tbwen4Of49wj0/Bn2053+/BnO09Sf4ufc
P4v+/FnsuzMJP+d7K9Dz58gPd6Xg5/jrihT8nP3sQM8Xc97m9+Ln+KOJf/Fz
4vmUFPyc/U9Ez5fw/klJ+Dn11x1J+Dn50uit+DnPP5eGn2OP69Pw83y9IH6O
3jydhJ/jT0H682XEszkf8XOur0bPX8qfp/g553V1En6Of5h8KX5OvF9Mf76c
9dSn4ef4zyHo+Qr8Zyb9+SvE14Fp+DnnvzsJP0evV6HnK4nvvdHzKvLRWeh5
Ffv/Gj2v5ryGoefV5Jvl6Pkqfr8MPV/Febai56ux/2fo+WrsMTkJPydfdE/C
zzk/c57i57x/jyT8HH9sT8DPid/Nafg5/tiLefvr6PN69Px1zv/xFPwc+25N
ws+pb0fTn7+JHo9Kw8/RvzfS8HPywZo0/Jz88k8Kfs76z6Y/f5v9VdOfv835
XZKEn7OeC5Pwc/zLxI/4Od9bjJ5zXXcner6O/a9Ows+J16/R8/X42zlJ+Dnn
NSANP+d8/0zAz9HTliT8nHg8NQk/x79MPyF+Tjx+hJ5vwJ8iSfg5/htNws/J
z81J+Dm/Pxg930Q8DEjCz6nfPEn4Ob+fSH++mf6hMgk/Z7/G/8XPseffSfg5
/cFfSfh5vp8UP+d8lqLnHxPfJh+Kn+fnJ+Ln+MdBSfg5z8dS8HPmIYei55+w
/g305zXk35PQ8xqe96bg53n/Ez/P+5P4Oet9NAU/J16OSMHPycfLE/Bz4mNm
Cn7O93ul4OfobSIBPyceFqXh5/hjPAE/J/9cnoSfk8+DCfg59enj9Odf5P1d
/Bw99STg56zn8xT8HHtuQ8+/wj/2SsHP8f9H0fOviWej/+Ln7Kc4DT/H343/
ip9jj/8l4Ofsb3YCfo5/JZPwc+JrSRJ+jv+Y+BA/J38aPRA/5/090fMfOL8w
ev4D638WPd+e12vxc/QjkISfE4/+JPyc85+egJ8TL9sT8HP2e2Mafk592J6C
n6MPUxLwc+JjThJ+Tr4Ym4afk0+X0Z//QvzenoCf877T0POdfK8iAT/P12vi
5+znugT8HPsOpz//HXt8kICfk5++TcLP+f5R6Pkf+fpA/Jx8ZPpX8XP88VH6
813E87A0/Bx/NvEsfs56TP8lfo5/rE/Az9lfbRJ+jr+8lYCfY883EvBz7PNa
An5OPm1LwM/Rk9UJ+Dn+1ZqAn3PeR+b4OfFewry9HvusSMDPqfe+QM8byC+f
oeeN6LGJd/Fz3ncrem7HXsMT8HP86V303MH7aujPHeSrsxLwc/zRkoKfc95r
kvBz8tP4FPwcf3suAT/HHua++Dn7GYOee8gfQxLwc+x1eQp+jr1eTMLP0YMz
kvBz3reI/tzH/s5Hz/38/tcE/JzzMvW++Dl6czx6HuT6+wT8nHgpTMDP8Ydj
kvBz/MWJnoc4v5OYt4fy9Yv4OfaalICfY8976c/DPN8vCT/HHiY+xM/Z75Ep
+Dn22CcBP8f/Jybh56xvjwT8nO/PSMHPyecV6HmcfPVxEn7Ofq5KwM/Rh44E
/Bz/MNfi55z/JQn4Ofnf1H/i5/jbTSn4OesblYCfc17voedp9KA1CT/nfetS
8HPydSQBP+f+Reh5lnornICf83waPW8hno2eiZ9T/41Kws+pV5ck4Of8PpCA
n1MfPZ+An3Nt7ouf876/YvBz7LkrBj/vK31+BT031532/V8cfq77tsHoubnu
rM/dSfh5365+QPyc+6EcP++r+DomDj/vq3g8hf58776y7/Np+Hlfnecc9Hyf
vsqX98fg5/n3iZ/rexZzX/xc9+tsSfh5X+13Zhx+3lfnuz0OP9f9jgcT8PO+
0tef0PMe7OdE5u09+vLvtdDz/bT+2mPpz/djvXUx+Ln2W/cder4/9i1Fz3v2
7eJl4uf6vtVci5/r/R29k/Bznu+bgp9jjyk5fs51TRJ+3lfzvIOYtx/Ut6te
Fj/nfG9Jws+x1x1p+Ll+b7mD/vwQ7cd2C3p+KPb5AD0/FPttoD8/TM833BCH
n3M+G5Lwc62nY0IKfq7vld6InvfWeurX0Z/3kT1KrkPP+2j9pXvSn/fVehrG
pOHnfVW/rUnBz1n/2hj8XOdRlkTPC/t29Rvi56x/BXreD/9Jx+DnOu+60Un4
Oeu5OA4/Z/3JGPxc9y3+FPxc9qh+CT0/XPcrInH4ud5veZ55+xF63nZGGn6u
/VaY+Bc/5zwakvBzva9hUAp+rv1VPR2Hn+OPx6Xh57qu2h2Hn2v9VafH4ef4
Q/8cP2e/cxPwc+J3Fnp+tOxfe3Icfs75/R2Dn+v5KlOvi5/r+yVT0fNj5U+l
f8Tg57JHdV0Sfo4//xqDn7O+gTH4Of74Ywx+jj/sRX8+APuUxOHnvG9GHH6O
v5h6Tvxc6+uYGYOfc79fHH6u/dS/ybz9RNmvbHIcfk48Gj0RP8dexTH4udZX
f0MCfo791iXg5zrfUnMtfq77HRvi8HPZpyGMnp/MeX8Ug58T37fE4OfY59IE
/FzP159Of36K7lcY/RI/J19n4/Bz/Lc8Bj+X/ao2xODn2m/1nyn4uexV8RJ6
fpquqwcxbz9N9q038Sl+jv93i8HPsc839OfDZL+S12Lwc51n3ZPo+Rmcj6kn
xc9Z32f052cSPyPi8HPO63H0/Cz0JRiDn/ftmleIn8s+1SY/ip+z33vR83Ow
588J+Lmuy837xM/1vpKjmLef27eL34ufk8/nx+Hn7P+JOPwc/Tbx2SnnVj3f
YPoX8XPtvzQchZ/LnhUfJOHnel9ZKAo/lz3Ld8Th58RbbQJ+zv5PRM+5rhwY
h5/reVuG/vwCra/6I/R8pNZXsQ/z9pGyb/XcGPyc+uB/6Pko8uVK9PxC8kN5
An5OfjocPR9N/K9Fz0drf1X2JPxc1yX9Y/Bzva/2/Tj8HP87PgU/Jx9vRc8v
wZ/mJeHn5P/JMfg58TmX/vxSni+Mwc+5H43Dz9G/5jj8XPspvzUGP8/Hq/g5
/nlzjp+Tbypi8HOtv9z0G+Ln+Pf+zNuvkn1sNVH4OfVPcRJ+TnycF4ef4x/W
OPwc+14Tg5/37ZqXiJ+jd1ei52PJT+Za/Bx9vhQ9v6ZvF68VP8d/PozCzznf
bQn4OfayxODn2OuMOPycfDotAT9nvTUJ+Dn3tyTg57rf0B6Fn2s/lVeh5xM4
vyr68wnolz8JP6demIOe30A+ew89v1H7tZn6QPwc+87O8XPeNzjHz6mnTT8p
fk49eG8cfk6+2xqHn5M/Vkfh59RXZyfh59qf9dck/JzzeSUKPyd/FaHnt+Tj
T/wc//42Bj/X8w2DY/Bz6seKOPyc9x0ah5/jj7uj8HPe/xf9+R3kt33pz+/g
+VVx+Dn1zEfo+US9v24jen6n1lf6Yhx+Tj6K059PQr9mR+Hn6M+/cfg5+TGF
nk8mP4xAzyez39dj8HPq+xL68ym8/6c4/Jx8tQf9+VTqqY3o+d3kkwbm7Xej
nyYexc+Jz31j8HPy5bM5fk6+7MW8neu635m3z8C/bkDPZ6CHzfTn91DvbozC
z4mH0TH4OfXCfgn4ufyl5B/0/D7yUbcE/Jz3TY/Dz8k3iSj8PF+viZ8TD4vp
z2fir9dG4ed9u+Yb4ufE94fM2x+gHvRF4eforScKPyc+0szbH8S+fZLwc963
DT1/iPW/lYSfE++VCfg567dH4eecr6n/xM/x51ASfs73xuX4OfWbySfi57zf
mYSfE58v5Pg573sGPbdx39SH4udcT4zBz6knfonCz8l3F8Th58Tjuhj8nPgv
Rs/nkq+2R+Hn5N/eMfg5+fBH9Pwx6uVX0fPHWe84+vPH0Vs3ej4P/z8pCj8n
vk29IH7O+Q/I8XPsd3kCfk683BOFn3N+/dHzBeTHvZi3L+D9W9DzhfTrxj/F
z7nfEYefo28fxuHnip/af9Hzp8gnFyTg5/Q7k+Lwc873qCj8XNflv8Xg5+hz
cRx+jv+UMW9/ln6iMA4/Z14wHz1/jvebekH8nHp9QQx+Tn66lnn7IuJzPHq+
mOtvEvBz+tmeSfg5+eVg+nOuLd44/Bx9vDTHz8m/D8fg5/QzJh7Ez/HvKfTn
L/L9feLwc/T/LvR8KfXqJ+j5Mn6/CD1fht73jMLPybdn05+/RP3bHoOfU29O
pj9/mfi+iXn7cuYLpn8XP2f/E+nPVxBP1zJvX0F8vIKev8L8pZL+/BXsb+JT
/Jx8NIZ5+0rqvZ+j8HP2a/ot8XPi62T0vFr7LZ9Jf15NfXFdDH5Oft/JvJ3r
ShN/4ufMi4ZF4efUt/Poz1+l39+Nnr+q9VvmMG9/DX99IAo/xx8ezfFz8ut+
Sfg5+fE09Px16mfj/+Ln+Pv9Ufg56/FE4Of0RzvQ8zfRj97o+ZvYw8SD+Dn6
XEV/vpbzXomev0U9OSYOP0fPogn4Oed/awJ+Tj09KwY/z/uL+Dn5oTAKP6ce
vS8GP6cfMv2S+Dn67UXP17P/vlH4Oc9nY/Bz7H9ljp8T76ZeEj8nn18RhZ9j
v9tj8HPsb+pB8XPywyz6843UO89F4efUcybfiZ/jv3PQ8028b78cP9d6601/
JH7Oej5j3r4Z+56Onm+Wf5QdEIOfc76DEvBz9KB7DH7OeZpr8XP6hUfR84/R
e1M/iZ9zvWcMfk79E4jAz+mPD2fe/gnn60PPP8GfTf8ofo49P0fPa2Qvax/m
7Z9S7zUyb/8U/+rNvH0r+vNADH7O/OUx+vNa9Gouel6XP3/xc/L9Nubt2zif
PXP8nPrL5DPxc/Jnnyj8HH9rjsHPyRdf5vg5+XtcFH6OvZdG4ef5/lH8HH9d
H4efUz8ex7z9K/LNMXH4OfXIyQn4OXpQwrz9a/xxnyj8HL2fQn/+DfubmuPn
nN+7OX5O/F8Zg5/zvU8j8HPqyblR+Dnv+yQCPyeejkjAz/H31gj8nHnCnCj8
HHu0RODnxM++6PmP1E8TEvBz4uOyOPyc+sD0k+Ln+XmK+Dn6+wL9+U+8b30E
fk49kKE//1n7rTgrBj9HH2ti8HPqtb1z/Jz6LBqFn/P+yVH4OfOs46Pwc66H
5/g58bIePf8d/305Aj/P15/i59R71VH4OftfF4efk0/86PmfrP9a9HwX/vJq
HH7OvK80Dj+n/7s5Dj/HPgUx+Dl6W868/W/yy44I/Bw9uToKP0cfn4nAz3l+
URR+znp+Rc93Uy8eHIOf5/tN8XPs/3MMfk4+NNfi58RPzxj8HD25FD1vJL9c
lePnzAMOTMDPWe+3cfg59XxdFH5OfjX+Ln6u+Cp9KAI/Zz3GP8TPsf+WCPyc
+vhh+nMX9Ugt83Y38fVpHH6OP26OwM/JR6dF4eecxwNx+Dnv3xSDn7Oe+5i3
+8h3TRH4eT7/iJ+Tb6eg5wHm9wOj8HPsNTkOP0cPJqHnQeJ3bRR+jv1ej8DP
+f5tUfg533dF4Oe8rzoCP8fer9CfNzNP3RWHn7O/66Lwc/xlQgR+Tj7sG4Gf
028cFIefw3cuR8+j1FvGf8XP8/4qfk79a+pL8XPWuyAOP2e+0SMGPyc/7BOD
nzO/eSwKPye+zo/Cz9GzbfTnKfqb8yPwc/xhjyj8HH9oi8DPyQ9D4vBz+rnB
zNsz1FPJCPwcPXwzDj+nPronAj9n3nhsHH7O9cn0563U2+Z58XPibUgEfs68
bF0Efo6+rIjDz4nXSVH4Ofpp8qX4OfnbGYWfF6g/WRqHnxfIXivoz/cokD/0
icPPdd1xNf35ngU6T08Yfq7rspej8POCrvpY/LxA9cZ49Hxvvj8qDj/X8+Wm
3xI/13XJs1H4eYHy+zUR+HmB+p8eOX6u9VufjsLPdb9uZAx+XqD8/kiOn+t5
20Nx+HmB+qNrI/Bzrv8Kw891XZtCz/fTdcmp9OfmurM+PyfHz9nPQei5ue70
58oo/FzXDV+g5z31vqqB9OcHFEjf5qHnB/A9H3p+oH5fvSkKP2f/xn/Fz1l/
NgI/1/269VH4OfY4gv78YD1f/jB6fojuW6tj8HPtz/p2FH6u8y4pZN5+qJ6v
mBKFn8v+trfQ88N0/nWD0fNeer6hLQw/135Lz4rAz+UfJb+h5330e9sBcfg5
51uInvfV8/WmP9N4A/scSn9eoPMo2xmFnxcovndH4OfY+6IY/Fzvrzb9k/h5
QRevEj/X+23HRODn2MPUG+Ln8tdKRxh+jr8vQM+LtZ/qi6Lwc32/ogU9P1zP
lz8fgZ9rvfWLIvBz9vdDBH5OfJyCnpfofbYrI/Bz/POpCPyc672i8HNd1/0Z
hp9z/07686O0nrJN9OdHEf//Mm8/Wt8vb0fPj8Yfr8zxc57/I8fP5W/15lr8
HPteEYefc57lOX5ewH8/Iwo/x5/X0p/313VFd/rz/uynIQo/13X1vvTnA/Q9
2xj68+Px7zuYtx+Pf22KwM/1vGVVFH7O9cYI/Jz3hSLwc76/AD0/Ufup+gM9
P0nnZ10Qhp/LHyx/oOeDdH51mRj8vKDr7zfEz9nPSPSc64pK+vOTZe/a8ej5
yfKf2o9z/Jx8MigOP9f51doj8HPs/QPz9lM4r8kR+Dl6cXIEfi57NdjC8HP8
9ewY/Jx8/nEYfs7+hqHnp2m95a4cP8d/Hw7Dz/X9six6Pgx/fBk9H8b776I/
P0PXlUei52cQXyUR+Dn+/VAUfq771gH052fpvu33HD9HD9eG4efEdyAKPycf
3BSDn+MfT6Pn55Bf7ovCzzmP18Lwc+w3LQo/xx69I/Bz8lcBfw9XJn8pvS0M
P9f3Lb+H4efEz6fo+QjO65cw/FzPVyToz8/L67f4Of5xHHp+PudxLPP288mf
QebtF/C+4RH4OfboRn8+kvhcFIafozfvouej2M+eOX5OPjH+IX7O8/UR+Dn5
8Qr689HE0ykR+Dn5pHcUfq77dVvR84vQk10R+Ln233En/fnF2l+lqZ/Fz6k3
LozCz4nv0WH4Ofr2M3p+qdZX66M/vwz7+sPwc+6vD8PPWf8e6Pnl+OuZUfg5
+ejdMPyc83g2Aj9nveMi8HPdb3gKPb+K+Db+K36OPa+IwM91XXl5BH6Ov5j+
T/xc7y+fnePnxMfcCPyc+jAagZ9znj9F4efE28ow/Bx/Po/+/BryxXsR+Dn1
UXf0/FrOe1wUfo7e3cXfw40nP9nR8+uoHxoi8HOev415+/XYa0uOn+u6bCn9
+QStr/Yu9HwC9p4dhZ/zvWwYfs75/kl/fiP501yLn8se//Fc8XPytfm9+Dn5
/Q/0vFznXToxAj/nPAeh5xWcz7ocPycfJcPwc+qXK9Hzm/P+KX6u+Ki7JQI/
J17upT+/Ff80/ih+rv1V2nL8XN+3/MW8/baCrnmD+Dn57dEw/Jx6b0MYfl7Q
NV8QP0evsvTnE1mvLww/1/6qxkTg5+zX1Mfi5+SLd8Lwc/zzphw/p96fGoOf
8/7Tc/ycerkhDD9Hb+ag51PIh6Y+Ez+Xfa3+CPwcPT6Rv4ebSrzuCsPPyS9t
zfBz6qMncvyc/Q0Nw8/xt+PQ8+msx/iz+Dn91K1h+Dn+XRKDn1PPjGXefg/x
f2YEfo49zkTP7+X96+nP7+X8FqHn9+Gv34Th59Sv9VH4Of1etxw/px9YGoGf
E28p9Hwm9lqd4+daX8lvUfg5+e8V+vMH8vWZ+Lne13F7jp8XdM0TxM95f4b+
/CFdN1wWhp8TT1vpzx/megJ6/jD5vjkCPy+w7ttZ7zXDz9GPbej5bPJBT/R8
NvmnPgw/Jz+MRs8fJb6mh+Hn+fzVqec26oU+Ufg58Wz0Vfwcvd8DPf8f/cWd
Yfi57FG9k/58Dv1CAfP2uezX5GPxc+qF5WH4Ofb9DT1/jPy7XxR+jr9Mpz83
1z3/W8/CZvg59fC+OX5O/H8fhp+zf+NP4ufEr+kHxc+Jt1dy/Bz//Zb+fAH2
vzUKP+e8Fobh58TX9ej5woKu+bH4Od9fSH/+JPVBEXr+FPbtF4afU2/e3Aw/
L+jiN+Ln2PN99PwZ/P/SCPyc/Hg5ev5sQRdfEz+nPzoMPX8OexwUhp8zTzgw
DD/X96ofYd6+iH57JHq+mPcZfxQ/J38fEIafF1hT/53vqGb4OfnnQPR8Cfac
QX++hP29jp6/wHq6o+cv4l/nRuHnvO9s/h5uKfY4Ez1fqvdb9grDz7W++uUR
+Dn5cnuOn1NvTQzDz6k3t4fh5/jrixH4OfWI8Q/xc+r7k6Lwc9b3BfP2FdQ3
afSc69oB9Oev4H83heHn5L8BYfh5QdffA4mfky8Ob4af41+mfhE/Zz+RMPwc
/zgKPa/O95Pi5/iDqe/Ez8mX14Th58T73Bw/x9+PDMPP83omfs76H47Cz9Hz
jWH4ua6rC8Lwc/Tinwj8nHnNiCj8nO/3pD9/nXzxJ3r+BvntgBw/z+cX8XOe
/yMMP+d8z0XP1xIvPcLwc/qLIVH4OfXisgj8nPrgJfrzt9nf6Gb4Ofb9JgI/
p//6Cj1/l/MZmOPnfH9NM/yc+GgJw8+p767N8XP8xYKer6deGNoMPye/lIfh
58TnZTl+Tv/aHIaf875QGH6O/RaE4ec8X4meb6T+LGqGn/P9f5rh55y/0SPx
c+Ypf0Xg59Tjl4Th59TrB6Pnm6mvqkPwc56fFYafo99vhuHnBdbMf+v/qhl+
zjzUPC9+Tj/yZxh+jp5NisDPtd6GQVH4OecxAj3fovWX3hCFnxdY0/+t97kQ
/Jz19WfeXsO8ZTN6XoO+jkfPP2V9i5i3c91wFP35Vvz/2zD8HH+9hHl7LfY5
Fj2v4/vP0Z/XkT+d6Pk2/NnEp/g514fy9+2f5fsz8XP5Q8eWMPyc+x+h55/n
6udm+Dn14t/o+RfMsx8Lw8+ZnwxDz7+UntfVhODn+F9JGH5OfjH9hPi5zrfj
3mb4Ofm+JQI/Jz76huHnnHefMPyc/GLqRfFzfv8bev4d8bI4x8/pl4weip9T
/37cDD/n+qUQ/Jx4nYye/4B9Xw7Dz4mfM+nPuS6ZH4Gfo6emXhE/p7/dzLx9
B/XGWObtO/D/fcLwc/LNVfTnP1GPhtHzn9lvaQR+jn/ODcHPqXcOpz//hXq3
rBl+jl6+hJ7vJD6MP4ifF1h7/Pf75mb4Of1XoBl+jr8cEIKfU3/9mOPn2Oe4
Zvh5gXW//97naIafc37bQvBz7peH4Of0By/Qn+9C735Hz3fhD6YfFT/XeusO
bYafo+cnM2//m/w8tRl+zv0tOX6Ofz4VgZ8zX/Hm+Dl6+gT9+b/Uc9+j57uJ
lzdC8PN8/SR+Tj+yOgQ/p7/ZSH/ewH13E/wc3pLrzxvJH0ei5+Y6+V98LQvB
z6mH9g7Dz+kn9kbPHdjvwRw/x7/ebIafk/+8Ifg58bcFPXfh/+c1w88LrN3/
u25php/jH981wc/J//1D8HN+v5H+3IN+RJvh59SXxt/Ez9H/9ei5j/V/kePn
1DPbmLf70WOjB+Ln+Pef9OcB/Hseeh6En1Wg50HOcy/0vKnAuv9/6z0wBD8n
nxXSn4f4/gk5fq78Z93eDD9HPy0h+Dnx+l4Efk68HEt/Hsb/ptCfR6j/3snx
c/Rtv2b4Oevd2gw/Jz/HmuDn+fwkfs5+10Tg59TTAfrzOOd1H3qeoF94Gj1P
MO9Kh+DnzOd6R+DnBdbEfw8MD8HPqZ/Lcvwce4xCz9OsfwB6nqZ+TjTDz/Gv
mU3wc/zx3TD8HH+o4O/hssTDkSH4Of79axh+zn5uoD9v1XnZ5qHnreSzGSH4
Ofbsn+PnzJsODsHPWf97TfBz8vlPzfBz6sf3m+DnhbL31hD8vLDrvvh5oeL/
MPpzc90Zv0dE4OeF+t7ZOX5e2KmfZZtD8PNC5cs69Nxcd/pvSxP8vFD+3wc9
31vv75gWgZ8Xqt5/hnm7ue60/1r0vFthZ362TmiGn2s/tjL0fF+t33JpCH5e
2JV/xM8LFT/BJvh5oez9OHreo1Dxejp63kP7tUVC8HP9vmRgGH5e2OlvZeeG
4Of6ff2uMPyc9S9ogp9rvaV/oOc9Zf86WxP8XL8veR09N9ed+Wogen6g7Fc6
lv7cXHfqzYJm+LneX31sjp9rfZX3NsHPdT5VhfTnB8vetUYfxc9lv7ovmbcf
Ivs0LA3Dz3Xf9lUIfl7Y5W/i54Wd+bNyO3p+mH5fEUTPe+n7HX2Zt/fi/O9G
z3sXdub/ji+a4ed6v83Un+Ln/N4Vhp/rfKo/DsPPZS/L7c3wc/x5YRh+Xqi/
x/wgDD/n/k3N8HPZo3w/9Lyfnq+8Hj3vp+/XnhCGn7P+K9DzIp133ctN8HP5
vyXbDD8v7KoPxc/1vLW5CX6u73dEQ/Dzwi5+J36u/VUfn+PnrN/0c+LnhV39
j/g5/jw6DD/X+0qq0fMjdV2ezPFz+UvtiU3wc92v3BmEnxd2zgesfzTDz7Uf
W1MYfl6oedqPIfg5+5lEf34M/vpjM/yc/PBdCH5eaI3/973Pg/Bz7P85en4c
9rgtDD/X/bKpTfBz8kfvJvi57FP6JP35gMIuPRU/l39ah9CfH08+7N4EPyee
30XPT+D9e4Xg59jfnKf4Of5h+kfxc52v5Y1m+Dn3U0H4Ofl0ZQh+Tn7ZTn8+
qLCr/hI/17U1GISfc16+EPxc/lhZFoKfk++L0fMhsm/tc03wc+LpafT8FJ2P
dTd6foriuawxBD/X+6xP0p8PJT9MzvFz7DuoGX7Oek4Mwc/lP5ZBTfDzvD+I
n2t9Zb80wc/1fssB9OfDyIen058Pw1/uRs/P4PfbmuHnsmf5PPrzM4m/bmH4
ufZTZ/xF/Jx8aeob8XOdj2VbEH6OfSYH4efyl2qTD8TP0ZMPmuDn5MseTfBz
5bfKTAh+rvdbVzTDz7FXFj0fzn4D6HkZ/vpCM/yc50fl+Ln8s3JUCH6OPkab
4Ofk++VN8HPitwA9P6+wqx4RP5f9ypqD8HPy3TnM2y8gv4wMws8Vj+Xn0J+P
RI/LmuDnxNcvzNtHcX1WE/wcPenfDD/n954g/Jz42RmCn1NvzKc/H419vm6G
n8vetYuC8HP2N7QJfq79lJ2Gnl+MfgylP79Ez1t/CMHPyWdzcvxc9+vmB+Hn
1Bfd6M8vQ//2zvFz8tUfQfi5nu8YSH9+OfbcEYSf8/yqHD9nvZfTn19Z2FWv
ip+Tb9pD8PO8/4qfKz7rvM3wc32vcmQz/Fz2Kns1BD/XfuvvCsPPye8rQvBz
2b/sKfrzseTrm4Lwc/znCfT8Gl1XWprg55y3PQQ/Jx9c1AQ/R3/OoD8fT3wu
boKfcz57BuHn1GvOJvg59tufefv17H8Gen69/L9uUAh+znpHBeHn1B93NcPP
lQ87jgvBz/Hfcej5jcSzKwg/J999iZ7flM9v4uc6z/IH6c/Liff2Zvg5+eOG
Zvg5+ePPIPycfNQ7BD/HXqU5fk79cTh6fgv15oQQ/Bz/XYqe34r9rwnBz3lf
N/T8tkLrAf99L0p/fhv509TH4uc6n45NTfBz8vdVIfi5+oXKK0Pwc97/SwB+
Tny9HIKfc74/BeDnxMdbTfBz9vcCej5J37MtDsHPZU/rjWH4Oed/YjP8nHxg
6i/xc+LxZPR8CvF2QBB+XtjZ35UNCcHPOY8e6PlUvd86ogl+Lns3HI+e3835
DwzBzzmPs5vg57x/fhP8XPutOpZ5+3Stp/6YHD+Xf9VlmuHnrNcbhJ/L3rVv
oOe562VB+LnO0/ZTE/wcPa1sgp+r36pLBeDn5P+b0fP70fvWEPyc/sGJns/U
7y03MG+fib/3Rs9n4R9HNMHPqSfODMPP8/2X+Dn5ORSCn2Pfg9HzBzkPdwh+
nvcP8XPsewH9+cPko3+Ytz9MvH/WDD8nf5wTgp+jt7/Rn88mXueh57OxX78g
/Jx8sgw9f5R8/R56Xql8UjuK/tyGvdNB+Dn1mel3xc85P1OfiJ+TH+4Owc/x
/49C8HPqt1fQ87nE+49N8HP5V+2dIfg5698Qgp/rftmkAPyc/ewRhJ/jb7cF
4OeFXfMJ8fP8+YufMy/4Cz1/Qvbo+LUZfo69dzbDz1nPL+j5AurtaU3wc773
Mv35QvzlrCD8nPc/0gw/Rw9XBeDn3LcF4ed87/hm+Dnx+XQIfp6vp8TP0Uvj
D+Ln9L+RJvh5rv+hP3+W8/k7AD8vtMb++/26Zvh5Ydf8WPyc+w+j54s4j7vQ
80XEo/E38XPO94Im+Dn+1I3+/Hni4fsA/Bz9SgTh5+TnF9HzJcTbIej5C1z/
g56/yPWP6PmLvC+Fni9lfb4g/DzvH+LnxNOrzNuXUe+Z/lP8XPnJclEQfk69
0T0EP0e/B6PnL6OHe6Lny3l+AP35cuoXE//i5/RTBwfg5+SjQAB+nr8WP9d5
dJjzFz+nH7wePV+p79uubYKfs39/E/ycedApIfg59eog9Lya+cG4Jvh5vn8Q
P+d7DzFvX00/9zl6vprzPj4IP9d5mgXAz5lXLWmCn9MvGH8SP+d9k9HzNejn
Bczb15A/36U/f531nBmAn6N/rzNvfwN9+pL+/A3qTVM/ip8Tz4MD8HPqV6NP
4ueyp+WYZvg5/Uo7/flb5McpTfBz9KgUPX87n6/Fz/GPn0Pwc/JTAf35u+hX
eRP8XPutPZX+fB3ne0MAfk5+qGqCn+fPS/xc+7edQH/+nt7XcX8Qfk59eHUA
fk7/8HEQfk5+fTEAPyffTAvCz9EvazP8nHy2OAA/5/xLgvBz7GP8QfycfLEu
CD9Hj65Hzz/Q92tvDsLPqb9+DMDPmV84mLd/yLzhsCD8nPh6xw8/p95fHYSf
U/9ta4Kf47+2APycerOW/nxLXq/Fz3n/J03wc/Qx5Iefcz6jQ/Bz7Bfww885
n+Ho+ad5fRM/J17mMG/fij9/FYKfs1/jH+Ln5K9NAfg5/mv3w8+ZX39Jf76N
fP9LEH5OPf1TEH6u522vNsHP8fd4AH6OXjnQ889Z737M278gf13ZBD+nPv+r
CX6OPUtD8HN+f0SOn+Mv8/3wc/q7E4Pw83z+Ej8nXrb74efUU88wb/8mX7+J
n9MvFYTg58yXFtCff0d+GR+An5OvGgLwc857KXr+Pe9fh57/QD1waQB+zv29
A/Bz6iPTf4ifM0+zouc/kp82oec/4r/nBuDnxLupD8XP+f2LQfg58XV6AH7O
909Bz38mvt/0w8+pD2/2w8/RS9Pfip/rvDuMv4ifk99WN8HP8We/H35O/Pr8
8HPy3b0B+Dn5bnoAfk598lgQfo59qvzwc+ZbL9Kf/0E8HJ7j58Tjbj/8nPnL
VX74OXo9FD3fRT9fGoCfc/7jQ/Bzvn8tev438fNqAH6OP84Iws/x12wQfs56
eobg5+S3RvT8X+LtsAD8HH98GD3fTT44FT2vZ/0mH4ufwytmNMHPef8lAfg5
+n82/Xkj+WgAet5I/E6hP7fTjx7GvN3OvKEBPXfgz7PRcwf1Zu8g/Jz64iE/
/Jz13oueu9DnNfTnLvLtFei5G3/e7IefUz/Zm+Dn6PdDAfg5/fTH9Ode+MDc
IPxc90tbA/Bz9OI6+nOfnq8w/i5+Tv1zWhB+Tn68zg8/h1dcip4HyYemXxU/
xx99Afg5vCNBf96E3hp/FD+Hlyz2w8/Jh6eg583Uwyej583cXx6An+NfLwfg
53x/DHoe0XWD0Xfxc/qfJ/zwc97/RhP8XPmzMtefx/T76sPpz2O6X7UwAD/H
/34Nws/R/x7oeYJ4/dgPP9f36sc0wc/JR6f54ef4+4FN8HPFZ9UQP/yc/mkj
ep6GN45ugp9T3yxAzzOc/3k5fk5/PigAP0cvjvHDz3VdP5N5e4vOv2JdAH5O
PLj88HP2uyEIP4eXzGLe3ka+OAk9b5N/NXzUBD/XesrvDsLPeb/RD/FzxW/V
tBw/76f8b/pH8fN+mqdPCMDP+6l+PcwPP+/XGd8lLvR8z36aV68Mws/7Kb/d
EISf9+u0V8VVAfh5P+nPriD8XM+X/Mq83Vz/dz4lJn7Fz/neF374uZ6vvDAI
P++n/LpPEH7O+rc3wc/7yV/moOfmulO/Hg7Az/W9jjk5ft5P+rQ1CD/vJ94y
MwA/7yd9C/rg53q+/i4//Lxfpz+Wz2yCn8u+lhPRc3P93/mUvO6Dn2t/ZRub
4Oe6X+Xxwc/1++qpQfi57Ndg+knxc9nXcqQffo59HOj5Qf3Ek2/0w8+1/tqi
APxc59sw3g8/x559A/BzPV/1fAB+rv2WPOODn/frqu/Ez2Xf6h/R88O0Xts3
Pvi5vmddSH/eS/Yvfww976X91n1Bf967n+LP9P/i5/3Eu23oubnujKdHAvBz
Xdcl/fBzrb/jwyD8XOup3hyAn+v9JUPozwt1frWDmLeb6//irXRqE/xc/lTR
5IOfc56eIPy8H/9+0Qc/13rLKtDzYq2n/GYf/Fz+Wv+KD36u82z4xwc/Jx6W
+eDnsm+Fsbf4uc631NR74ufypw6T/8XPtX7rpUH4uexft8MHP9f9usv88HO9
v+FJH/yc75n+Qfxc8V75vwD8XPaurg3Az7Ueq+l3xM91v/TRAPycfJMJwM9l
v7JNQfg5/vJhAH6u31sf8cPPZb+SzfTnx2m/9Wf74ef9OvNlQygIP9d1RSAI
P9d+St9Bzwfw/P1++LneV/mBH35OPK4Jws/1e+sZPvi5/Kd+UgB+rnhoWOeH
n/dTv2fiUfxc36te64efc743B+Dn2n9dYRB+no9X8XPO9zUf/Jx8My4AP+/X
1S+Ln8u/Kqt98HNdV03ww8+xz/fo+RC9r+Qa9PwU8vnTAfg5+fVnP/xc/lQx
n/58qN5nqaE/P5X1XEp/fqrsU9HLBz8nXzztg59zHuf74eeKt9LBQfg5+cLk
E/Fz+ZNtQwB+Trz19MHP++nv/Ub74Ofy94pz/fBz5fey24Pwc/LHWX74OfY4
zwc/J18sz/FznUftQPT8bH2/fDp6fg7fvxY959p2XAB+Lv+qL0TPz9X9hrAP
fq77tZt88HPi2eOHn6O/J/rh5/p9dQP9uVX2s57ig59r/VXHoucj9PuyZwPw
c+xXiZ6fp3xkPYD+/Hzi828f/Bw9MvlM/Jx4rvDBz+U/td2Yt4+UvesbvfBz
9O1zP/yc/HwSej5K661sDsDPsfd+fvi59ld9Pv356Lx/iZ9rP7UpP/yc89zi
h5/jX1Y//Lyf6vcjmLdfTL1wTRB+rvxevtUHP0cPtnvh56zfnI/4OXo8Gz2/
jPd/5IOfy59rjwjAz7Xeyi+98HPZp+FcH/xc3y97yAc/R59e9cPPye8WH/xc
7y/7Hj2/St+3WHP8nPOejp5fjT9cHICfy16V96HnY/T76mV++Dn1xa/052Op
Hy4KwM+Jtzd88HOtr7SG/vyafp3z58pn/fBz+Udl2As/1/fqrAH4ufZT9bUf
fq71VTV54efKT2X9c/wcew0LwM/J5z768+sVL6XvBODn2GupD36u8yufSn8+
gXxxgR9+rvxc/xrz9huoj2J++Dn2Nf2n+Dn6bvxN/Lxf13xP/Fz2slwehJ/z
+7+88HPqp2F++LnW13G3H36u99f9EICfk69N/hY/p17c4YWf67xrz6Y/v0X2
Kf8SPb9V/le60Qc/5/wPQs9vw78r0fPbZJ+SHX74ufzBNtkHP+f7Y9DzO7Tf
hhN98HP8f5cPfq79Vp9Gfz5R769q9sLPpa+2i/3wc623IoWeT0IvZnrh5zpv
6x0B+Dn2GuGHn9OfjKA/n4y+mf5Y/FzPl+7hh59TD73mhZ9T372Ank/V87Z2
H/yc+meNF35OPJp6QPyc9bT64OfowTj0fDr1hcnv4ufU3xf74Oc6745e6PkM
nU/9xczb75F9q+ag5/fk87v4Oedj4lv8nHhd54Ofky/9OX5OvrnWCz+nHl3k
hZ+jB8+j5zP1/uof6M9nSu/r2r3wc/KPyX/i59RrT9KfP0C/lPXCzzkPo0fi
5/jLRObtD+p9Vb/74OfUGxd64eect6m/xM/R26AXfk7/+6MPfk79eb8Xfk79
NBY9n636wWb6J/Fzzsf0h+Ln9I9/+eHn6HOND35OfH3EvN2GXt/phZ/re9aX
/PBz9PgDH/yceuNoP/yc/miAF35OvWr0Q/yc/vQWL/ycerrcCz/X+ixH+eHn
2k/1jV74ueK3upj+/HHlv8rxXvh5v675pvg59v3KCz+XPSpbvfBz5cP62+jP
5+NvQ9Hz+dRLJj+In2OPXl74ufJD7WFe+Ln8sWGAD35OfrvXDz/P16/i59Tf
AfT8KV1b3kDPn9L+qnozb38aPXjXCz/X8xVX++Dn+Msb6Pkz+IuJL/Fz9OXs
HD+nPnzEBz8nf3dHz7mu39cHP0cP9vbBz+Xv5Yu98HP6i4/88HP06XQf/Jx4
PxA9fx5/8KDnS8jnK3zwc+LnXT/8nP58Lz/8nPj+xwM/53ya0fOl5Mc36M+X
0j8/74Ofcz5rmLcvY31Gb8TPyd8r/fBz/L3WBz9H3009LH5O/1Huh58rvmz/
eOHn8udS0x+In1PPfuWHn8t+ld+g569Qb3yLnnNdeyj9+Ury35fo+UreP9UL
P8ffD/LBz/GXA3zwc+ZJ6+jPq+nPrT74Ofn0XvrzVToPmzl/8XOtp2OrB35O
fjH5Ufyc+rnCCz+n313ihZ/TX97khZ/jnw70fA313XVe+Hk+nsTPqc/GeeHn
vH8gev6GzqP+MS/8nH7rEvT8TeYNK9DzN/P9ofg59d1F6Planv+Reftb+N9Y
+vO30QuPF36OP430ws/xj7888HPyy9f05+/qPC2veeDnel/5c8zb1xF/VR74
Of3YuV74OfH8iwd+jp4u8MPPsfdl6Pl72o9lshd+jr6t9cHP0Q9TT4uf4+9D
vPBz9HKFF35Of2Dui5/r+Y5BXvi51tuxygc/p39/CT3/QPdLUh74OfY4Bz3f
jD/djZ5vph58Fj3/kPi8k3n7h/n6UPwcfWlGzz+i/jP5V/wce5l+Vfyc59d6
4OfMjy+nP99CfXWPB35OPTUvx8+ZZ1Si5zWyj82cr/i5vme70Ac/z+cL8XPq
/Z7051upL37zws+Zp86iP6+lfz3DBz+X/StvQ8/rZG+bhf58G/n7bvrzbdQn
S73wc+bp233wc/Zn6gHxc+ZlA+nPP6d/zNCff0H/e5QXfk59nvDBz5mvltCf
f0n896c//wr/GOeDn9N/XIaef03+64eef631WAq88HPO630v/FzxXH4Rev4t
+eRvD/yc+nIk8/bvqKd3e+Hn2PNvL/wc+9xPf/49ernaAz+X/zTci57/wLzp
VA/8HL0cip5vJ98u9cDP5Q/W7zzwc12Xnkx/voP4XEJ/voN50An05z+hrycw
b/+JeWLMCz+nvhiPnv/M+55Az38hfsd44Ofk23ke+Dn9mt8DP0dffR74Oed9
sQd+jn17oee/EW8PeeDnzBdnoee/5/tR8XPyZ08v/JzzGO6FnzOfG+6BnzM/
OcsLP6eeXOWBnzMvvtsDP0dv9kLP/0LvfvHCz5mfvISe/42etqDn/5D/bvXC
z+FJ5czb/yU+BjJv/1f3q0z/IX6Of5r8J35O//U0el6Pva5Bz+uZBy1Azxuo
j4xeip9TXxzOvL2R/vQTL/yc+j9Ef24nHnw++Dn+b/Rd/Jz7pei5g/rKj547
mb985IGf5/Ob+Dl6+Bb9uYt83dsLP0d/e6PnbsV3xW/ouQd/vBc99zBvuwc9
98LTTP0ofk5+Mf4ifg5/M/2u+Dn9dJkHfk4/8qoHfk68fo+eB4jXPdDzIPMq
ixd+Tv/7Jf15E/HQip435fVN/Jzfb3fDz+kfFnng59SfdvrzZuqzzV74OfOd
BR74OXr+Hnoeycer+Dm/n+uBn6Nvb6HnUerNBg/8nP5qtgd+zn7WoOdx/GuE
F36Ov7+KnifI3w+i5wntx7LSCz+X/zXc54GfE89Z9DzFvGh/D/yceJ7sgZ/z
/UHoeZr5WjcP/Bw+ZuJH/Jx5xOX051nqIS/9eVa/r6hDz1vIn21u+Dn13wQP
/Bx/L6Y/b6V/b/DCz6lHz/XBz+nPxnng54rX2peZt7czTzf5RvycfvwdD/y8
SPPhKei5ue6cN5p6X/xc9xtMPSd+XqS/r3vGBz8vkh52pz8315318Rw3/LxI
9YnVAz8vUn66mf587yL1rys98POiTv+x1rvh50XyRwt6bq4749s8L36u99VX
oufd9PuKdg/8vEj86CwP/FzPV/7hhp/rfdZr0XNz3VnPzELPexRpvv8Cet5D
+6m4xw0/1/MNYQ/8vEj5r8kDPy/SvOB7N/y8SHzxBPS8J8+beBM/Z/9veuHn
Rfr73klu+LnsW/WtG36u/ZR95YafF3XxDPHzIuXTIz3wc73fttsDPy9SPVvv
gZ/LHg3X058fUqR5VpEHfq7zqF6Gnh/K74d54eeyR93pXvi5zrc06oWfy1/K
LvPBz4u64k38vKhrHih+zv4XeuHn7PcEL/xc51t+PHreV+fV4ELP+2r/lY+j
5wXaT+1c5u0FrP8Y9LxQ76vfBz0vZL2PeuHnuu4o98DPZQ/LJx74uc7XUuaG
n2PPXl74ud5flnLDzxVftqQbfq7zqfvOCz+Xv5V+jZ4foe/XLnbDzznfZjf8
vIj/nh7z9hL8600P/Fz+U/66B36u9TZ43fBzra/jRvSc68o+9OdHsZ9GN/y8
iP9fpRt+ru/X29zwc+WTkko3/FznW3oWes51hdEX8XPFS0epG36u8y5f4oGf
6/ulj7jh50XSu7Ve+DnnsRY97y/7lj7rgZ8XiY8M8cDPdV0y0w0/1+9LL6A/
P172Lj8BPR+o9VYPRM9P0O/Lf3DDz8mXjR74OfsfQH/OdaW5L34u+9U3oOcn
FXX1r+Ln+GeMefsg/Oss+vPBio/yY+jPBxd1zc/Ez/HfRV74ufylfgh6PkTf
K30APR+i99vcXvg5+rDDAz8nH05Dz4fqfEqmo+dDFe8NE9zwc/zB1MPi5/Ln
um888POiznq54RHm7afpPEseQs9P1/uq17nh51pPRdIFP9f9un3Q82Hk25vR
8zP43gz0/Az06U03/Fzft5l4Fj+XPUtMvIqf43+vu+Hn8j/bBPT8bM7vIvSc
65JJXvg5+fBCN/xc67VORM/P1fss73ng58Sb1wU/lz2qPqE/H671Wk2+ED8n
fi9Fz63o9/XouVX+aluPno+QP1RmPPBz+UPZqW74ufZba/KB+Lm+3/GOF36u
+LANdcPP5f/1p7jh5+Svpej5BUX89y6Yt4/EXkbfxc91XlVB9HwU8TrMAz9H
Lz3o+YU6z2or/fmFul8xnP58NHrg9MDPOb9zvfBz2cM62w0/x/6z0fOLWd/R
bvg55/G7G35OvfGYB36ueLAd4Yafy75Vz3jh53z/Pjf8HD39wwM/1/urCtHz
y/X9jqPpzy8nPnZ64Ofyz9pebvi53tdRjJ5fST7d5oaf631lR9OfXyX/rzzQ
DT+nPrvdDT9nvUeg51eTrz6jPx9TxH+vBj0fI/+oPZj+fKz03HIH/flY8vNh
Xvg5+W0PN/yc+u4aN/xcemUZ64afk3/Ge+DnxNNKF/ycfLB3jp/r2rLaDT/P
6634uc7L8jr9+fXy38qX3PBz3a940Q0/V3zU7nbCz/HXgBt+Tr4y9Z/4Oflk
jhN+Tj65kP78RuLJxI/4Of69ywU/1/MdDzvh56xnUY6fa/8VDznh5zrfqoXo
eYX2W2Jzwc85L1OPi59TLzzugZ8TP3OYt99CvtiJnt9K/fSjC36u/ZeUuODn
6McON/yc+ulLJ/yc/U9zws/lfyUn+uDn2l/pty74ud5nneWBn8v/aqe64Ofo
dWmOnxMvvV3wc92v6uWCn7O+u1zwc87/S/T8LvTaxIv4Ofl2ogt+rvOs+4z+
fArXk33wc/lrxe3o+VT05gAv/Bx9ut4JP6f+/CDHz9HHTej5NPLzDej5NMVH
3btO+Dn1xp5O+DnxsWeOn6M/77jh59p/dQd6fg/9wxr683vIF1c44edF+veU
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
apM/xM+L9fdsMTv8vFj8uNoJP9d11RkO+Ll+Xxeyw89lr/rZDvh5sfL7xy74
Ob//zAE/LxbfW2WHn8sedZc64ef6ffU85u2HaP22i+jPD9X7Sta54Odaj83o
i/h5sfqTp53wc9m3fDp63kvnX/coet6ruMvfxc/1/o7jHfBz7PUV83Zz3dlP
7e+Bn2t9FdMc8HP5S/kyO/xc+ynd7oSfy14dpt8SPy/uzId1K1zw82LNa5e7
4OfFXfWz+Hlx579/aih2wM9Zzxfoubnu1KMr6c+LsedROX6u9da9m+PnvP9n
O/y8WP2WuRY/Zz+35vi53tfwCf15CfG3ww4/l70a/PTnpVpf9Y3oean81bKD
efuRnNfxTvh5serlcQ74ebH0+1s7/FzrszU44Od6vmq3A36Of/7jgJ/L36o+
t8PP9fuGd5i3Hyt7l01k3n4s+aObG36u/FH/hhN+Tn563Qk/Z71D6M/7637Z
R+j5AF2Xj6A/H6DvVR3mhJ/zvlY7/Jz4nuOGn8s/y5Lo+Qms74wcP5c9K963
w895/+0u+Lniq8LmgJ/rPCtfpz8/CXsOQ88H6Tyqb0LPB8mfGprt8HPet8oF
Py9W/TKN/vxkfb/8U/rz3PWFTvg57z+OefsQ/O9Y9PwU5aOGo9DzU4q7eJv4
Ofl2Lno+VOsp3YSen6rz7nDb4eeK53qXHX6O/7+Pnp+m++VGb8XPZQ/rZPSc
67qH6c+HEc+77fBzrafifif8XPaobXPCz/W8zfTz4ufYazB6fqb8u7SnG36O
v3+Jnp+F/y6yw8/Z7yoH/Fz+UDGa/vwc9GJhjp+TX9Y54efkZ+Pv4ufy3/Ll
6Plw+WPtcPrz4fK/+nNz/Jz47umAn8tfS5Y44Of4h9EP8XPyXSN6PkL+UBui
Pz9P522rZ95+HvY29bf4udZrKaE/P1/xWHUV/fkFWl+Hk/7cXP/Xf1R9jZ6P
1PnWXuKEnxPPJej5KPRpNno+iu/XOuDnrNfEh/g5evuQA35OvrE64efUF92Z
t1+k73Xc64Cf63yt5lr8nPjYywU/5zxG0p9fovOs3YCeX8J+jH+Ln2u9lgHo
+aXUJ6vR88sUb7bPXfBz4m+2C36u/dheQc8v1/qr+9rh5zqfCuPv4ufo70Dm
7VdqP3UtLvi54rXU5D/xc9nHejj9+VXyx4Y70fOruT/ODj+nHtplh58TP3eg
52PQj/dc8HN9r24Iej5W/mcz8SJ+Tr11uR1+ruetd7jg5+j9DU74uc6rfA39
+bX4tyfHz7Xf6tfoz8fr/CqPRM+vQ29/tMPPeb/Jb+Ln5J997fBznV91I/P2
CeTDBhf8XPFTfqEdfk7+HmWHn+s8LT3oz2/U+xv2pT+/sbhr3i9+Tr56IcfP
db51Y+nPy7U/21z0vFzrse3I8XN9r85mh5/rumJfJ/wcf/gGPb8Z/z3LDj+n
nngQPb9F59lwuh1+Tv37dY6fk29m2uHn5LtK5u23YY+hdvi58ldHW46fF3fN
f8XPVY803MO8/Q79vnYoej4Re5t6S/yc+DwNPb+T+jFGf34n7x+Mnk9i/dNy
/Fz+12DiVfyc/LjGDj/HHkfa4eeyR11/F/yceu4W5u1TyN9Hu+DneT0SP6ce
W4me342/VaPnd3MeE5zwcz1feT3z9mk6z9IJLvg59uiDnk/nvHba4efE669O
+Dn54lAX/Jz6/EA7/Jx+7ikX/Jx4/M4FP6df6W6Hn0v/ao0/i5+TX4yeip+T
z75shJ+j/5854ec6b+tc9HymzqfSxt/DzaL+sTBvn0U/WumAn9O/GX8XPyd/
bUHPH6SfbbfDz3W/9FM7/Jz80dYIPyeeZjnh5+jDh3b4OfXoqQ74Of1PshF+
TnzOcMDP0fuNdvi53lc2yAk/pz6N2OHner58HfP2SvxlCnpuk71sbif8XOdd
3R89/x/+eRx6/j/FW8lbdvg5/eCxDvg5evgqej5X1xanHX7O/ety/FzrrTf1
u/i57NexphF+Tj6rssPPtd66Igf8XP1R6fNO+LnqgZIrcvxc8VfdDz1/gvh6
yQ4/57z/tMPP8/2I+Dnx/Ycdfk7/+hx6vlDrqejphJ/r+XpzLX5O/XYlev6k
/KdqRI6f63wtV6DnT1HP7+GCn5P/utOfP63f1y+gP39G/lyxsxF+jr0WN8LP
WW8ix8+Lu3iv+Dnx9r4Tfl7cNY8SP2e+YPxd/Fz2rZyR4+dab/1e6Pli9HB+
I/yc/Fdph5/Lvh1vOeHn6NMIO/yc93uZt7/AfGID/fmL+PNdOX7O+j62w8/p
p0x8iZ+Tv02/Ln7O+R+Bni9TfFZH7fBz1eslM9Hzl+g3P22En5M/30fPXyb/
nEB/vlz7t55qh59r/5bfnPBz6okh6PkK5U9LrBF+jp7+hZ6/gr/vx7x9pa5L
u6PnKzm/y3L8HP97wQE/x16XoOfVXJt8KX5O/VuHnq9iPjQSPV+FfT5h3r6a
+tn4k/g585LbGuHn1Cfn5Pg59emZTvg59VlFI/wcvTmd/nwN68844OfKb7Uv
NcLP0YOFdvg5/mr6ffFznV/lPDv8PN//iJ8zj5pjh5/ruqyQefta+VPl+fTn
a1nfOw74ufKNtcIJP6c/HZLj51p/1e9O+Dl6dEUj/Jz866A/f1fn3XCEE36O
/5h6Sfxc+yu5uBF+rvOpHouer5e9rXMb4ef4/z12+Dn1UU0j/Fz7rf+Nefv7
xO989Px9nj/ICT/HvvFG+Dnz1cf4e7iN5C9T74uf4682J/wcfylEzzcxP9vQ
CD+nv3qa/pzr//5+U/ycemx9I/xc+aHW3wg/x19n8fdwHyreSyvs8HPy/03o
+Ufkm7cb4efo6Tr684/pt+5uhJ/T7w1Bz7fk51/i58wTnDl+Tn00uBF+Tn1f
n+Pn1FPP2OHnzHvKHPBz5kezcvycfmgher4VvTTX4ue6X9dhh5+jN1fY4eeK
h45bGuHn5B9zLX5O/fGSE36u/ZUMQ88/y9cf4ueyt7UOPf8cPRvKvP0L7F/e
CD8n/5l4Ez/Pz/PEz6lPjT6InxNfJ+X4OfO1axvh58wDxjXCz/n9++j5N6z3
ykb4eb5/ED/H/x9l3v4t+cHUM+LnxG+mEX7OvMHEl/g59eDTOX5OP3gX/fkP
1G990PMfiP+/6M+3s/7zGuHn9G9TnPBz+t27+Hu4H8mHAfR8B/HxXiP8HP0Y
ybz9J3jGukb4OXqxOcfPiZft6DnXdWc0ws+pX59Hz3/B/iX05zv5/emN8HP8
YV2On+v7ZVMb4efE95RG+Dn9+zgn/Jx4Mf4qfq7zLFvVCD8n38Ub4OfUowud
8HP819wXP+d8Tf0pfk6/djl/D7eL/nUgev4X+e23Rvg5+nI7ev43/c3PjfBz
6oMm+vN/WO8NjfBz/PuYHD+Xv1SsZ97+L/vZi/58N/F7bY6fwwPsDfBz5oVj
GuHn7OfqRvg586DT0PMG+ot/7fBz+tF0I/yceeVfDfBz8s9J6LmdfuBP+nMH
6zX6IX4OPzHxIH6O3tty/JzzuNABP8f/e6LnLvLvefTnbuLLR3/u5ny6OeDn
9Hvn0p97dL7l5zjg5/ARXyP8nHlQWSP8nPlqkRN+Lv+uPYL+3E88ft8AP6fe
26MRfo6+Tm+EnzMPSdnh55xXbzv8nPpwciP8nO+f0gg/R89Xo+ch8uUAB/yc
/PWBHX5OvRxtgJ8z3/0ZPQ/LHpUm34qf870XG+Hn6NWT/D1cFP09h/48mu8X
xM/Ry28a4efM616nP4/jr5+g53Hqszb0PIE/HUF/nqA/dDXAz8lvq+zw87w/
i59rfZbfmLdz3VDQCD/Hv0c44OfoiyfHz9Fro6fi54pnSw16niXfv83fw2U5
35vQ8xb6jcX051xXPWuHn+s8yq6xw88VT2VD6M/b0AdHI/yceqwH/Xk789ef
cvwcvra7EX5Ofq1vhJ8frvX/H1PnHd909X7xqKgoSouizDYpKIirFRcOvgk4
QBFbF4qKDSIKCrSKC1ATnChIKy7AkaoIDrBFAcWVuMHR7D0+KQ7crRsR6e9D
zjv29+d9fdLPuPe5z3nOc+6BdvDcHBfWNw2e71am9zXxU/p5mfi5eV36eZn0
/4Y8+rnGTXO3oJ/r7z3b8ujnZerX/FHUz8vUL3sbft6N3x8OP9+zTOszAn6+
p96vaWMe/Vxj2/Nb0M/LVD92gud7l0nP/CmPfl4m/Gqh395d3+84Bn7eXe/v
fjWPfl6m/vly+DnjzlbwfF+9r/erPPp5meLTrGekn+v9Ld/k0c/1e+uANvTz
sv/qZ+nnGntezqOflyn+PtmCfq6xe0Mb+nmZ9k/Vl+jnvP8TRf1c3+/cRr/d
HBfqNTM/ST/X/XzfgOelWh/X4eB5rzL1U66g395L1639tqCflyk/R/Po5/p9
/cvw8wM1v43/A88P1PfZbUX9XPdrtn6Jfq71zC/No58rPtpb6LcfrPkt2aMN
/VzfbzPzq/RzrX91n6J+rvdzP5xHP9e4JrcF/VzrWflPHv28rLB/Wp6Hn/fT
dfuDefRzxY9rBvycsee6Lejnel/78fDzAZrvur05DzdQ61Hvh58PZD3vyqOf
l0mfO6qon2s+az4v6udl6s9+tgX9XM+rc4PnVs1H/aSifq75aH8tj36u93Hd
04Z+rufVzcujn2vsH7QF/Vzx2jCIfvsg9tvrbejnxPud8PPBZcovZv6Sfl4m
PPkyj37O89bk0c8VDw3j2tDP9bxOVxv6ud638g74+RCtj2NtG/q54qfkB/j5
UH1/x5Y29HP292lt6Ofkr1vA88M0P/ZbwPNhGleeVdTP9X1eRxv6uea7OQae
H6H71z+bRz/X830vgOdHsl5zwfMjidcb29DP9X0lJ+XRz3W/qu7g+dF6X8Os
t6SfK5+03FTUz9nfq8DzSs1/x/Pw8yq9b60/j36uePaYY+nnul753Bb0c32v
0R08H679UrUMfj687D99T/p5WQF/Ssx4ln6u+1dvz6Ofa3/UPdKGfk6+qizq
51q/6h1b0M8VX6WT2tDPNW4cCj83x7vqsfqJ4PmJmr/q39vQz7WfOh4Az0cQ
z++2oZ8TP4u2oJ9rvpvM+lf6ub63voJ++8l6/0rbFvRz/X3H+UX9XOtTOT6P
fq7vb74TPD8VfDDxRPq5nhdYBz8fqfkoHU+/faTWw2/irfRzvU/p2Dz6ueaj
Zix4bi8TP2yDnzv4fS6Pfq75bTgdPB+l+PacBp6P0vzVjqbfPlrvlzfxXfo5
eDo6j36u7w+Y9ZH0c92/bv8t6OeKv9L98+jnep+mfeHnZ2g+XD3y6Od6Xs1z
4PmZzIc5ln6u/GfpDp6P0e9Lu4PnYxT/LdPh52M1H1ZzP0k/1/Oar96Cfq74
aPwcPD+L+ufJPPq59qtjN/j52cTDVPj5OK1vw5FF/Zz5XJZHPycfPLQF/Vz7
teYY8Hy8vq/JHEs/B9/eB8/PVbwaZr0k/Vz70XNUHv1c820MKern+r72n8Hz
GvbDpDz6edl/9b30cz3f8mMb+jnf+0Ae/VzX8xeB5+drf1e2FfVzfV/HV+D5
Bcy3WY9KP9f7dtbk0c/1Pg2vgecXaT9ZzfiVfq7nW3Lg+QTNZ90d4PnFxMtz
9NsvZr7N/Cn9nHrh+Tb0c/ZPd/rtE/V7v8mHpJ8LjwI94OeX6vfW5UX9XPHW
1NSGfs5+/wc8v4z52r2on/M+JXn0c82X/yT67ZOoX8N59HPdr3EyeH6Fnt/5
WRv6ueav/Zo29HM9L3BUUT/X+zcFwXOnnl/SUNTPiS9LG/q55r/9MPB8MvFk
8jHp59TvQ4r6ue7v/A08n6L9XLMBPJ8CXp5f1M+pT7/hPNxVul9gch79vKt+
k36u/WQ7Zwv6ueLB8ObRzzV/zXPA82s0f6XtefRzfY99kYF+rvWyxem3T2M9
S7egn3P/NW3o59pfDWvA82upV+a1oZ+DN56ift5Vn0k/J/9Z8+jnen7VF/Dz
mWWO3rvmY56Bfq73d5j1mfRz6v3HwfNZyl+BUBv6OfnyY/C8jnic1YZ+rvet
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
6Odaf29rDv1c7+frk0Y/1/N90zPo59Qj9+XQz8HXg9Lo57re9GIG/Rz94Afw
PCC8s56aQz+nX/UXeB6kH23uV+nn1Gcj4Och9ueADPo59fR19NvD7P/DwPMw
9WrfDPq54s3Ig+cR+JFZP0s/V/zZP0+jnxP/03Po59Qj+4LncfbTnWn0c/pn
5UX9nPrgPfA8AT4fZqCfk9//SKGf0y9cDD9PkR9vTKOf8z23gedp6u1wDv0c
vHaA5xmth6MjjX6u5xsmXko/1/6wfQ4/z8IPNsHPc/z+jwz6Of2DijT6ub7X
uhF+bsBXfs6gn5Pf/gLP87qfa10W/Vz8pHMO/fY28KcZPN/C/hiaRT9X/nH5
U+jnih/b4Tn0c/SKcBr9XPNrNKTRz6l/4uD516z/mDT6ueIt3wief0P/f2cK
/VzraXSDn29lfXqA51v5/fk59HPFv30UeP4t9fuINPo5eNAjh36u9fP8k0Y/
R4/wZtDPmf9/M+jn+nv7jyn0c76/Lo1+Tr0zM41+znp8m0I/h0/PyqCfo299
mUI/J//+lEE/1/Od32XQz+n3JFPo5/DfF7Lo54oH1/I0+jl4cXAa/Vzx7hrK
ebhfuX4o/PxXnj8hjX6OvhUHz38Dr9qy6OfoF8+C579r/mx9s+jn8NlL6bf/
oXzijIHnf+r7bQeB53+i5/Up6ue6njfrMennur/v7DT6OfNTkkU/1/w0VefQ
z5WPXWdn0c+p97rBz7fTr/Kl0M/5e0ca/Zz6cQz8/B/Nj/v0LPo5+DmafvsO
+m+3pNDP6X+8BZ7/C57cCD/fqXixnJhFP6ff9msa/VzzZasEzy3WQnzXtqfR
z62F93UfnUY/txbyi+O6NPq5Vf/e1s/w892t2v8v0W83x8X4kn5uFZ+cBp6b
40L/YEgO/dyq9Xsefm6OC+eNr4Kf72kVn7kSfs64yQo/38uqfDSpqJ9b1e+Z
mEE/t6p+MeNV+rlV/bNoGv3cqn5dJI1+rvvbLsyin+v+nofBc3Nc0KN75dDP
dX9vQwr93Ppfv0X6uebPeXYK/dyqf59tzxz6uVXxvyd4vp9+n98jg35uFf8a
DT/fX/NlM+tR6edWnRc9NYt+btX+d6XQz5mvm+Hn5rjQj9uQRj+36t8/qaff
bo535SPjhgz6uVX9yvUp9HN9n+vXFPq5Vfnp8Cz6uVV6wcqifq75s64Azw9U
/Nimgee9mc/BWfRzq/j9EWn0c81Hk5kfpJ+z3t+n0M+Zj+fT6Of6fufhKfRz
q87zX5NCP2c9JmbRz63iQ5dm0M8Vz9beWfRzPc8bS6OfW1WvXgKe92c+WsHz
AYo/xyL4+QC9n686jX6uv3ffBz8fqP3gPieNfq54tD2UQj9XvDprUujnVuUX
M19JP9fvHS74udUqPF+YQj+36rzbLfBzm1Xny3em0c8VD/YbwPMKxafvjjT6
OfH6Wgb9nPnekUI/13xb7gDPB1tVv5r5Rfq59b/6Rfq5Vfh1A3h+iObbcw14
fqhVePNLCv3cKr5xWRb9nO9vo98+RPnFcin8fKieb1uVRj/X/FoOT6Ofkx+G
pNHPtX9dT4PnwxT/tY/Sbx+mv3eaeCH9nPhLpNHPrQU861wCnpvjwnnDnpyH
O1L70/FjEv1c6+W8Ajw/SvHjXVzUz7V/LJ+D50crXm0T0+jnVtUHJr+Xfk58
XpFCP+/Kd9LPdT/3XUX9XPnZ8Sl4foziwb2Dfvsx7JfT6LcP1/za+qbQz/W9
tfYM+rne3+idQj9XvDjjSfRz5TfrTPrtx2n9HA+m0M+1/vY90+jnvN9K+u0n
sL+aM+jn+p78KPj5ieCRiRfSz7W+Nn8S/VzP956SRj9X/LmPot9+kt7HvRw8
P0nrZbsrhX4ufPSafFX6ufJT7REZ9HPNh317Cv2c+HwFfn6qVf2FY9Lo5+yX
GfDzkYpvexw8H6n3b5oOP/9fVzxKP9f+s+xIop/r95ZcGv1ceOG7sKifd8Wr
9HPy10L4+Sitb5NZL0o/1/xYyuDno/V+tR+A56exP28u6ud6P9dFafRzXTfe
hZ+frvzjfTKFfm4V/6+Gn5+h9bYsS6Gfkx96ptHPFR9Gawr93Cq++i54Pob9
d34K/dyq86hfZdDPld87TbyRfq75sK9Lo59rfQyTH0g/Z753gudnK5+60uD5
OL6vNYl+Tn7snkI/V7x4Xkijn4Ov+9FvH898Hgk/H6/49JySQj/X/vN1JtHP
9feO8+i3Vyu/NZn5Q/o59cu2JPq54stt8ifp5/qezhdS6OfCk6a/i/q55sv1
Zwb9XPFtPSKFfq7952lKoZ+rPnO1J9HPmc//gecXUj/8lEQ/V33gG5ZCPycf
plLo5/oeS00a/Zz9ODSFfk4+2gk/v1j1SK0TPL/Eqv7C5BT6OfXFGvB8oq43
bU2inysejRcz6Oda/85VGfRzvY+vPIV+Dn5+nkI/76q/pJ+TD9fDzy9XfNh7
w88ngc8tafRz4vepJPq5vq9pKfycsWVBCv1c96v1gee1yu+eifBzJ/k5nEQ/
V3y5eqTQzzU2zHpQ+rm10J+1mPlF+nlXvSr9XOvvGpZGP9f+zJv5Q/q54qXz
1RT6Ofv/giT6udbb0ZJCP+f3l8HPpyr/ND2QRD+nvj8Ofn616hHXyKJ+rvt7
TH4j/Zx64EPwfBp8YQF4Pk145htOv3268NvxVxr9nPn8DX5+LfXrPuD5ddRb
j6bQz7vwSfq5/t67BTyfof1rN+t/6efs/8fA85mKD++KJPq51te2E34+qytf
SD+HL50Dntcpf9nNeJF+rnxU+0QS/Zz9ek4G/Zz8/hT8/Hrie1QK/Rz+82gS
/Zz53wiez9Z6edeB57OJh1Aa/Vz52WbW39LPwasv0ujniu/a5hT6uZ7vcsDP
b9bzbZuS6Ofg8Wbw/BbNt+tB+u23sB/Pg5/fqt83nQee3wp/OL6on2t+vLkU
+rmuGwZ4Pteq8w19wfO58NsH4OfzxH+d96XRz5VPLOb9pJ/ret7MX9LPlQ/y
cfj57Vovw+Tb0s+Vf2xHFPVzxWPTEPD8Ds1v517wc5fi3+NIop/D51qS6OfK
f/aHU+jnvN8E8Hy+4t+yOol+zvebY+nnqp+cL6bRz4VfTf1T6Od8/78p9HPy
5QlJ9HPqlw/A83uUz907EujnwoPac8Hze8k3Zv6Sfq7n+yrT6OeqB2qPBs/v
0/x5m5Lo5/C1M8DzBYoP7xzw/H6tpzeSRD8Hj9eC5w+Qv9oT6Od6/7xZT0s/
1/e5/OD5Qu6/kH77IvDzPPB8kfDY/WkS/Zz9bY6ln1N/NCbRz8ErM/9IP9d+
qLUm0c+Z/xUp9HPl4873wfNGvb97QRL9XPnOMxU8fwi+93YS/VzzbQvBz5eQ
vy6m376E+sGeRj/X/byPpdDPNT+OSSn0c32PfUkK/Vzvb98/iX6u97e9lkQ/
J1/vgJ8/Rj/o5iT6OXjXM4N+rvxjKcmgn1NP3JhEP9d+8fVJoZ9Tb78Ani+j
X3VPCv2c9x2fQj8Hr51p9HPrf3qX9HP28ybw/Em9v3UTeP6k8r11ehL9XPf3
bIWfP0X9cTR4/rS+11cGP3+a/swA+u0e6t9lSfRz7t+WQj9nfzvB8ybxvc6T
wfNnwM8O+Pkzwg/7bin0c753cxL9XPjmfA5+/hzv+xp4/pzyg3c6eL5C191b
E+jn4hPuNWn0c+qTm8Hz58n/y1Po59q/rr5J9HPd32Mk0M+13zpN/JN+rniy
mvlG+jnv91EK/Rz+fXsS/Zx8NC+Jfg4eL0yhn6s+sJrxKf1c8e7omUQ/V771
9qffvror/0k/53ufTqCf0z/YJ4l+rvUx7kyhnwuPfCuT6OfEkxU8b6afeAZ4
3qz96jkePG/RfnX8kkY/J3/uk0I/px94EHi+lv1sgOevUr+8mkY/B7+30m9/
TfvF2rOon+v3TcPg5+uEF02/JtDP6YdcBz9fr+91xcDz9YrvJnP9pZ8rH1re
TKCfkx9mF/Vz9uc/SfRz3d/YEzx/Q/VT7Z7g+Rtd9Zb0c+rrHxLo56ovOndP
o58rf9V+Rr/9TfL70+D5W+DpPUn0c62nbUAS/Vzzkf8IPH9bvzfuSqKfU1/d
mUQ/F97UupLo59rfzrIU+rne1zU7gX5OP2FVAv1c329dTL/dR/2TTKCf6/vs
zybQz8UffN3B8/fhi93B8/e136xfpdDP4StrwPMPqI+XJtDPdX9XGDz/kHz0
aQL9XPFjOMHzj/R++ZXg+cf0q5ck0M81f5aZ8PNPtH8tz6TQz+l3bUugnzOf
5lj6OfXiSWn0c8Wj08Q36efav+7tSfRz7XfP0CT6Ofg9JIl+rnj0vZVAP6c+
PwJ+/rn4pXNhEv2c/HB3Av1c8er7MYF+Tr/cHEs/V77zvQs/b4XfP1LUz6kH
zHiTft7V/5N+Dh/8JoF+zv2t4Hmwq58h/Zx+zEbwPKSx43X4eUj5w92cRD+n
32NPoJ/rfh5HAv2ceuTcNPo5+eVM+HlU+692Nfw8hr7TlEA/J7/0gJ/H9fe+
GUn0c/p7gQT6Of3ImfDzBP2AEHiehA88mkA/Jx91JtHP6YdvT6Cfw/+uSKKf
k48/gZ+n0bMmJNDPu/Kb9HP6s4MT6Ofk98vA8yz1kPn30s9VLzjN69LPyScV
SfTzLr4u/Vzv5/k+gX7O/vkugX5Ov6Y6iX6u+LCY+Ub6ueIpfz78fIv2U/7c
BPo5/Ov1JPo56zE/iX6u3/u2gudfwe/PAs+/gh/PTaCfU5/Po9/+NfF/WgL9
XPzCeUZRP1d95H0BPN9K/fZiEv1c72M14036OXpCjwT6Of2nGxLo59Q3MfD8
O/ZHfRL9HHw4JYF+zv7zgOc/UE/skUQ/h88uBc9/1Hp2VsHPf9L6e48Fz3+C
H5h8RPo5/cej6Lf/rPiyPpxEP6ef/UkC/Zx+zgfgeQd6xCT4eQf5+oME+rn2
R9OkBPq56jnbr0n0c/SjhgT6OfXy/Un08674lX7exbekn6OfmfEl/Vzr23Qg
/PwP6p9xSfRz3d9t7n/p5+iZfeDnf8IfxybRz+mvtyXQz8H/F+i3b6N/U5JE
P+d9TDyQfg4e9kiin6vesjwFP9+OfmPGh/Rz6r9IAv1ceOfpBp7/o/dxnwCe
7xCe2a9Oop9THxwHnv8LXoxIoJ/ruvF5Av0cvfLjJPo5/Zj36bd3aj5cP6fQ
z23qf91L/W6OC/zWHEtPt+nvG9j/5rjw/6ncDX/fzabzG40J5QNzXMDDxeC/
OS7kj4H073bT31vL6Nfvrvs7PowrX5jjgp52aAI93qbzlln0OnNcjB/p8zbx
id7wgz10P+e5SfR6m+bLvF7IL+a4UO98Tz3RzaZ/LypJvjHHBX/ROdQX5rjQ
v74ppfzD710V1Bt72oRXd5OPzHHBL3RWEr3fJr5VllB+2lPPd/SgHtmL54+m
n2iOC/7Og6lPzHHh3yPpk1D+MseF8/Ajk5wPsEnPMPNJIZ+Z48L59J1JzgvY
1J/4h/xmjot4ofMDNvWXe5DvzHHh/PAfSc4T6Pe2vcl/5rjQX7kwxfkCm/Dj
GvKhOS7s124JzhtoPdzPxZUf99H6d1bT39hX9/d9lFC+3Ff3t/1AfbSv4slj
1oOFcOlhU71bm+B8gk31xl3k0x6KR+ed9EN6aP47XeTX/fR+lksTnF+wObQL
yLf76f6OftRX5rjw71HMSSr/7q94cxxM/2R/7Z/Om8jH+2v9Xa9Sf+2v5/nC
9E972lQv/Bjn/IPW1xKEf/VUPFm/j3MewqZ+3Ezyd4nWy3ZPnPMR2q95ky8X
8nmJ1i8/lH5MifaLty2u/F5qE7+eSj1Xqvt3mtcL+b5U6+nOxzlPob83LEnl
/16KP9ud1HvmeBf+WWuTwoNexP+pCc5baP87k3HhwwE24dmyBOcv9P2OEeCF
OS7gZTzOeQztX8/F4MeBmk9HNM75DO1P36PgyYGK984b6QcdqPWyBePCl956
X08l9WRv3d/7CnjTW/Hn/jnBeY6u/VrAn4MUD8aMOOc7tB4Osz4q4JE5LvTz
zPpY5z30/U1TwKeDdb32/TjnP3T/Jhv88+Cu/azzIIov+07wq09XPtH5EMW/
NwOe9VH+9N5G/dqX+EgnhG/muNBPfzvO+RHdz/gLvOur9a6dQH3bj3x7YlL4
109/79oY53yJTed7jgUP+xG/NfSz+iteHCafLOBjf8W/uzLJ+RPlP2sv8LK/
8le+NcF5FN3f90BS+Mk4/0WC8ynMz2cJ4ekAxU9nD+rngVqv2iHg60DlB8cn
1NNc9xrg7UDbf/xY51n0PIc3IfwtU7xYd09wvkX5I78beFym+Gk6Lc55F5vO
8zXFhc/l2m8uc6zzL+T7MHhdrvg07HHOw9jUHz0Q/LaSr9clOB+j+LctiwvP
bcqX3j/inJdRPHmbE8Jzm+LR/Qn9OXO8a7rsNfD3Cr2v4+E452k0v15bSnhe
ofvb96Ler9B+ty6OC88HsR8G0s8bpP3nfge+P0jr3/RtnPM3mi/HG0nh+WDy
yT8JzuOw/k8mhOeDhRfukQnO5+i65Qnw/BDwuyXJeR2b9Jdq8PwQ5TfnS+h9
h6i+sBwHnh+qv7fG4pznUT51jwXPD7X9p4fpfA/ra9Y7BTwfovl0VcI/hmh9
LKcnhedDyE+j6C8O0fdb7ksIz4cqHpxb4CdDtd88n8WF50PJrzPjnA8SXvlO
QW84jPzzW5LzQjbpM/PpV5jjwnmLIeD5YVof3yEJ4fkw5QvL4/Qrh1H/jUCf
GKb5yh8P3xkGfh5Lf+Nw4mU4/Odw8GsReH448XZlnPNH2q/2yXHhuTku8N9u
cc4jKd+7+9IPOUL7wfAnOJ/E+/rB8yOpT+4pnlfS7zsPSAjPj9T3Wi6Lc35J
1z0T48LzozT/jhkJzjMpXi2bwPOjtJ5N5ljnm8CTHTHh+dHC16aSBOediPee
CeH50cpvtukJzj9pPXxz0FMqlQ87L4pzHkrx65iaEJ5XKv48s+FrVdQnB4Hn
VaqvXC+A51Xs5zr0lyrqn/Fxzk9Rn1yWEJ4fw9+vh98dIzxxXQKeM+6cBt8b
bvuPPxbwfDj1wsXg+XDwx6w3Cng+XPnI7olz/krzbfGA58cqP/kmJzmPRf57
Ii48P5b471Y8nyX8sv8vLjw/jnzyeJzzWoov6yNx4flxmn+LEeP8Fut/IXrQ
8bb/zgPoPBfPPx08P0HrXZuIcb5L+9P6AHh+gtbT/Qt4fgL516ynCnh+IvXE
wwnOf8GHvgfPT9R8+BaD5ydqPl2LwPMR4OP94PkI7mfmmwKejyA/fhTjvJiu
52+KC89Por4YmuD8mPazczh61EngT4x+9UnU94MSwvOTtZ5Nc8Dzk5nfI8Dz
k/U93jdinDejHrgRPD9F9Z/1M/jwKcIL5/Xg+Sl6f8d+cc6jUY+9FReen9qV
P3Q+TfnCeiB4fqrez3EzeH6qvtcw80kBz0fq/k194NMjqR9eignPRxJfr8Y5
z8b3rYwJz/+nfGpfEeN8m/aDYfKdAp7/D354fpzzbqzvBeC5HbxqinH+TfVR
U01ceG6nfm+m3+7geePBc4fizbgAPHcoH+VXwc8d1Kdnxjkvp/raeTH9ulHk
Z3M/6fyc8MJzdkJ4Xvy9OdZ5OuqjsQnh+WjNt/FznPN1fP+imPB8tPDIfUqc
83bKV8aCmPD8NNY3GeX8HfXcCXHh+Wn6foeJXzqPp/kzfkgIz08n390W5Xwe
eGDylwKen6794z48xnk9xYM7C56fAb4Eo5zfU3x6vgXPz9B6e46Mc55P7+M8
AX5+puLXOzfG+T72pz8mPD9T8ZzfHOW8n/afbVBMeD5G8WVEwPMx1COHgudj
6L9kwfOx1A/D0RfHCl8cn8c4H6h84BgUF56P5X6tcc4LKh/lh4LnZ1HPXhfl
/KD2v+29qPD8LNb7kOJ5QvB9ekx4fjbf741xvhD+tQm9cpzi3351jPOGwp+m
D+Hn48iH14Ln48BTc38X8Pwc+HttlPOI4IUPPD+HfkkJeH6O8KezN/3R8fz9
ZPB8vP6+c2JUeD5e+81ZC56Ph+92iwnPz6VftCf8/Fzi7ZK48Pxc8K9b8Xwj
ePViVHheDZ7vgX+hGjxdGRWeV5NPL0JfqaY+eRE8r4Ef7YhzHhI8+5d+bI3q
U8PMPzofyXyshJ+fR/1s1qc6L0m/4W/w/DzFS+lfnLc4T+9X+VtCeH6+vtfa
AZ6fr/zQfnpceH6+8lHDMvj5+cpHtT+C5xdov9t/AM8v0Hz5v4OfX6D4azm1
eP5S8d7xVUJ4fqHqnfqtEc5jan4Di8HzC/W+7YtjnM/Ufm0YDj+/iPo6m+C8
pt7fn48Kzy9SPDRUgecTlO+qEgnh+QTtr8ahnP+YoHzpPzImPJ+g+HEnIpzv
VLw1toLnF2t/e46Ict6za38U8Jyx81Pw/BLNn/2LmPD8kq56SudBmb9N4Pkl
2n91H4HnE/X3zfVx4flE+NjHMc6Lsv/ejwvPJ4JnA2OcH4UvXhcXnl8K//0k
ynlSvvfjqPD80q56VOdLlW+rpoDnlyk+Ssx8ovOm8JO18PPLqAffjHH+tIuP
FfD8csVfSWmM86j0K15KCM8v1/xVrYtxPlX7wb5fTHg+qQsPdV5V+djXMyo8
53rjWcXzq+SrC+HnVwgf/K9HOM+qeKl7DH5+hfJh6bngea3woeN88Ly2q17U
eVfNv/u5mPDcST69KMr5V+FhvYnXBTx3Kn84PTHOw2r/Bx6Cn0/W751mPtH5
WM1nYwP99smK59ILopyXVTy7k+jvVxIv1VHOz2r9Wo6Gn19J/XAceh2/t58W
E55PUXzZHwbPp1C/L4kJz6doPtufiXDeVvnAmowLz6/S/DR/H+X8Lf29B2PC
86tU37UvjHEeV/mrZgj8fKr+vt0e5Xyu8NfjjwvPp+p+1ffGOK+rePdeDz+/
mvU/LM75XeFfaTn99qvFV9vL6LdfrfkMrKfffo3Gvnfh59doP5b0SwjPr9H+
6bwjxnlfvU/DDXHh+TStR2ljhPO/2k/uKfDzaeghA8DzaV18p4Dn05Xf6l6l
3z6d/DM4Jjyfrnxh/yDGeWHxI+uGuPD8Wl2v3E6//Vrl15q1ceH5tV39LZ0n
Jt/+Tr/9OvabmR90vlh40746Ljy/TvjSODvKeWP6+93jwvMZ8KMPopw/Fv/s
WBUXns8gP4+k3z5T+bf6tZjwfKbmp+PzCOeTtT9870aF5zP1/Jpv4eez0CMG
RIXns+AbPWKcX0ZP+TcmPJ/F9z8d5zyz4rGuT1R4Xqf1st0U4Xyz4tP3Qkx4
Xqf9UPMD/fZ6+h8nJ4Tn9Xr/wJnw83qtp/cC8LyeevMr+Pn1um61xITn1yu+
jPExzkfr+1tc8PPrdf8aK/z8BsVPu1n/Fj73Bn1P7Y4o56c139YHwfPi701+
pvPUmo/2fpzPmK14r+wHP5+teChZAD+fTf/lVvD8RsVb+6qo8PxGvV/+zyjn
r7X/qjZEhOc3kt8egZ/fpP1iGU6//Sb4fi38/CbqJ5PPF/D8Zq1/yyzw/Gb1
e1qOgp/frHitfiXC+W3dr+4V8PwWrV9gU5zz3NRfF3I+5BbVL/UfxznfzftN
Bc9vVT7yfxvlvLfyf+PSqPD8Vv19wMwHOv9N/XhsTHg+B/1pO/x8juaj8SXO
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
/7nyhc2sD+Q/1/73nRbGf17xH7+T/1zv75gKPx+k9bR1wM8Haf/5e4Lng7R+
jp/g51w3QvTbB5P/J4Twnwv/Ovah3z5Yf5+vAM8Hs57mWP5z1utk8PwQ7S9P
Zwj/eYXq5W7g+SHCo/o+Ifzn2r+uD8DzQ8HDxeD5oZoPSyf6+aHaH+294OdD
lE+dJh7Lf85+vA9+PkTzW5MM4z/XfmraCD8fWiH9850I/nPly5ZfQ/jPNa65
hn77UMW3Y34E/znrs28I/7nex3daCP+5fp/fFzw/TPGbb4efD1N9Yl0Xwn+u
eKobCp4P0/tVOsDzYVr/xr3g54drfhyDo/jPhd+Ve4Twn+v7mzYF8Z8rf3ea
+1v+c61fw0Pw8yOEr40nh/Cf6351lhD+c+rFj8P4z7V+nfkI/nPiuTOI/1z7
u25HGP+5rjv/DeI/J16G028/Svs3cCDn24/S/SvTIfznis9AAjw/WvvRfgD8
/GjlW8PM//Kfaz5db4DnlcpXTU767ZXa3x2Pc769UvFa2wM8rxTeNA0N4T8n
nw4Cz6uUf+xW8LxK8eW7EX5epXhwVITwnxMv29HPj+H9qsDzY8h3x8PPj9H3
eY8Dz4dr//juBs+Hs94vBfGf63rjbxH858p/loXg+bFaj4bzwPNjtd6l74Xw
n2s9GsbSbz9W71N5Jvr5cYoXz4/o58eBN4Potx+n+PJOCeM/V3x33hnCf658
a5wNPz9e6+tZC54fr3qm0xrFf673te8Nnp+g/V95cwT/uda7c0wI/7nmu2ZS
GP+59o/3Zc7Dnah83HAHeH6i8LihZwj/ub6vvR48H6F48I8Az0dovhuy4PkI
8PgS+u0jVP82joKfn6Tn1/0Txn+u/Wu5AH5+kr7Xcz54fpLmv2RP8Pxkzaff
xEf5zxV/ln7o5yfr/rVPwM9P1vdV9gnjP2e9l6Kfn6J4M8x4l/9c9Z7zefD8
FMV7zeuchztV190mXsl/Dr9bAj8/VfzD2xjBf675d1fAz0dqPhyvgucjqees
8PORih/ndvj5SPHPwIIg/nP41btB/OfKn4394Of/U/y2+EP4z/X3tnuC+M/5
+7fAc7vWs64DPLezn7PguUP7JbABfu4QXjZsDuE/V33pP55+u0P7v3Ii/HwU
+3M4+vko1QNV08DzUdr/jlfA81Hw8XlB/OeKj6oQeD5a+cp9YwT/uX7fMhv9
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
8Pxv5sfMz/Kfs1/+DeA/x7+6tBX/Ofg2CX6+nf3T1or/nPMSt/vxn5NfreD5
P8TPnQH85/DZ+QH858T7JeD5Dvpjo4P4z6nXBoPnO4hfO/z8X/LHLD/+c+qT
18Dzf1mPB+Dn/5JfHkA/38l83RLAf069uRt4vhN8M+sl+c+pr66g397J+nzY
iv+c9RsXwH+OXnQ2/XbLIM3npX7854PUr5rIeThzXKiXv4SfM3aOgZ/vNkjx
94sf/7mu29r9+M8Hab895cd/Pkj66W5+/Of6vSMLPy+Ou4Hnu+v9rLuD57vr
efmhQfzn+n3erAflPx+k/TUbPN9Dv3f82Yr/XM+3P9+K/1y/99dxHq6bnldS
Bz/nuhH34z/X/JSG4ed78v0z0M/NcWH/mvlY/nOe930r/vNB/+Vz+c953/Gt
+M+Z3/3Qz/fS82qG029n3PEreL437/c/8JyxZzP99r31PcYz8PO9ma/JQfzn
+n31UeA5Y88c8JxxXS/4eXfdz9ULPN9H9ystBc/30e9LbgrgP2d8Lvx8H72/
cz/4+b4at4wDz/dVvORvb8V/zvM+acV/rudVDUI/Z9zyMHjeg/ttDOA/Z732
pN++n97H+pwf/7nWz7k+gP9cY8tp8PP99PeBUeD5/hrnx9Fv31/v5x3Yiv9c
f+8eD54z9k0Bz3tqXL+dfntP3c+xxI//fJD+v/IDW/GfK558p/nxn+u656VW
/OfE0+Wt+M/53knw8/83lv+ceLsEPC/V/LmfbcV/rvcLuAL4z3Xdcid43ot4
vwM870V8u/z4z9k/PeDnvfi+Za34z/W+xmOt+M/JN0+B5weQj/YM4D9nPx3i
x3+u59WOasV/zvf8/gX+c/195Vfw8wP1/o1D4ee9ySfvBPCf63taHqXf3pv4
r4Ofcz0wDH5+kOa/cwx4fpB+33kY/Pwg/b7pTPD8YOJ/N/rtB+t7608Hzw8m
Xx5Cv/1g1nc/8LwP129qxX+u+bAd3or/nHw6tBX/Ofkx9QX+c+Z/G3jel+9f
7sd/zvoPbsV/rut1f4Dn/chHJt+R/5z9ONaP/5z9XOTnjC2TwPP+5NeD4eeM
az+j396f9z24Ff+5ntfxHPx8gO5nq23Ffz7oPz1A/nPdr2EeeM7YOBZ+PlD3
a/rUj/+c+Ho/gP+c9f4IPGfc+c4X+M+1HvblrfjP9T5N3cHzMvb7HpyH47rv
BvTzcv29saQV/zn3fwQ8Z+z95wv858p/tmv9+M/JH2Hw3Er+qQDPGZcOhp/b
9DzX3a34z/X3VTHOw9n4/T/guY3vP9CP/5z5HYV+XqH5q5kawH+u+LOUgOdc
9+0Png8ifm9pxX/O9z3hx39O/nAG8J+z/ivh54OVHzyvt+I/J54+pd8+mPmo
AM+5XnNpAP8587/Ij/+cfPFKK/5z8o8dPD+E7/0APD8U/HG24j+nHvn8C/zn
vN8V4PmhxP/n4PmQQZzHod8+BDw6Cjwfovu7f27Ffw7+HAmeD2U+2+i3DyVf
nAueD9X92w8Dz7lecxj8/DDdr7EOPD+MeD0UPD+MfLIBfn4Y+30n/fZh7Pdx
rfjPud9r4DljxyDwfBj4tw1+frjG9lf8+M/5PpMvyX/OfrgfPD9C1zsG/h/R
dh5v1bz/cTxjctFBFKJo4ooyliFlKjKcDFcRyr2GjGWsTGWq8LvKnLFDKEQZ
C52z99nzmXMNZSxzhhShjP0Wn2fOn9/H2nut7/oOn/fn/fmuFz3fNcan4scG
/HnMX+rUJvy59XNGA/5cPHtSvV17XD09705P8434c/no1Y34c/P5SAP+XP/H
q7fvRl+S+Bv8ufd9lJ7v7v7zG/Hn4n8Ff7579H/c1Ab8uf10JX/eQ3zrQs97
iCdj1dt7xP2H/daIP7f/DmnCn9tfiR8M/lx+05Ge97Sef2zEn0f/1zzTiD+3
/6fS8z12cr7YiD/3+3voufbif6q372l+n6Dne4o/afX2pP1XfaqiEX/u9/Pp
+V7G9yF6vlfcf1iRnu/lfS/lz/eK/89pQc/3jnaLXfnzvelZf3q+t3ykPz3f
O+ZjTXkj/tzzDqXn+9Cnng34c+vp8gb8ufl9Sr19X/G0Lz13ffyyJvy5/TVc
vb2X9fVCA/482rPbOj/vJd+ro+e9xJck3gZ/HuPZ4swG/Ln13KsRfy6ebq7e
rt1xc3q+n/W4AX++n/zg0Qb8ufnZjJ7vF88bf1kj/lz8+qQBf65//Zrw5973
Ff58//h/+oMG/Ln5uUu9/QD7/egG/Ln3ubYJf25/J34++HPrcyw9P9D8daHn
B4pXiV8O/lz+2nkB/jzmt+/sBfhz73dwA/6c3zmHnvexfz5qxJ+bvxPo+UH8
z8H0/CD3W8Wfa/fbvwF/bj3/oN7eV/9nNeHPxeunm/Dn4s0y/ryf9bd+I/7c
+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
Pv+tx5/Lr0r1+HPxeD5//n/08lr+/P+cf+zShD+3n57hz/8rXmfq8efi0Q31
+HPnD7/W48+N5+ON+PO436BJdfhz+j6LP7/NeMytx5+rT2Tq8Of09iH19sn2
V5sm/Dn9StZf8OfRTrem51PEwwXOz6fY3z/U4c/577b0fIrznEHq7berB55b
jz93fnArPdfucHQj/tx57+v8+R3qD4k/Cf485qtHK/78DvWKB+rx59bLwY34
c+NxSwP+3PXN6Pmd5m8Nf36n/PiPBvw5fW2g53fxB3X1+HPxf62e32V+b6Pn
d/N7e9Fz7bIf1Nvv5jcn1uPP9ef3evy5/Pdfdfhz+dxG9fhz9/uyAX8u//ih
Hn8e7z9oJT2/Vz1rBn9+r/c91/n5VPvhHPX2qfbz8/R8qve/sQ5/7vuDD+j5
fea3Vz3+vDl+BH8e66fsVv5cO71HPf5cfC5rxJ8bvxn0/H562p6e32+8P6zH
n8vf2tLzB/RvWj3+XH5Z04A/l+98XYc/l99eWoc/p5dn1OPPre916fmD8bwp
b9Pzh8Tfp+vw5/KRnerx5+qrlzXiz8XzXurtD/PXp9Dzh62/xXX4c+M5og5/
7vuMJxrx587Xvqfn08THsQ34c+/7CH9eYf9+WYs/V98eVoc/j/cbNbwOfy7/
+IOePyKeHk3PH3F+sFS9/RH9O7Iefy7eJXob/Ll84BTn54+q14+vx5+rDy5p
wJ/H+C2YTM+nyydr6fl0+cB7Dfhz9ad3G/Dn9seWvod7zPw92IA/j/+Peps/
fyz+37NNHf7cefRpDfjzmO+OE+vw5+LRUfTc9bLr+fPH1V/vbsCfe94vdfhz
+lhZhz+3vv9Rhz/Xn6Za/Pnaenkd/lx+vn4d/tx515n1+PN43vC19faZnleo
xZ+rnz9bhz+np3/U4s/Fi1F1+HP7sZ4/1x45lp4/6fmravHn9seJ9fhz/uD/
6vHn4sej9Fx7cuJHgj93nt6Lnj9tf4/iz5+2PgfS86eN9yp6Psv/3+DPtVP3
1eHP1X+/qsWfOz9ZWos/9z531+HPjV/SDv7c+t+hDn8uv/ykFn8u/vSpx5/L
p/rz58/Kt+9xfv5sjHffxM8Ef24/bM2fzzbfFbX4c/NxFD2fLV4k7eDPm+Nl
8Ofu9yF/Poff3boBfy5f2K0ef85PnkXPn+NXltfhz+2vfnX48xifnq/S8+fF
lySeBn8e67HncP78efWNzvT8+Xj/yaPr8Of0sVSLP1ePSvx98Of0K1+LP1fv
vbkWfx7vs+AEev6ifGpmHf7cec6FdfjzZn8Y/LnvL8+vw5+rvyfxLPhz+eOR
9PxlenQEPX/Zet+ZnrveYlN6/rL6YJLPBX9u/3Wtw5+LJ90a8Oeedxo9nyu/
ea4Wf65e0YmezxMvN6Tn88T/5+rx597noHr8ufk9pQ5/zs8cyJ+/Ev2pqOXP
XZ/2WS3+XP+S9R/8OT+/bQP+3PnMk7X4c/W9E+rw59Z3uzr8OT/xcx3+3H7b
qg5/3rz+gz/nH8c34M+tl+v58/n8wZv1+HPnLQ/V4s/VtzduwJ/H+045nD+v
bM6/gj+3nq/gz6v4vbV6XiXe78SfV7n/bHpeJR9M4nfw5+LBRfQ85Txhvzr8
uf14XD3+3Hh9WIc/pw8/1ePPxcsL6Lnra85swJ9b32eqt1fLv15Rb3e9okcd
/pz/qKrFn8tnHq7Dn+vvPertmRi/BRNq8ee+B6msxZ9rv0HPs8brKv5cu2xl
Lf7c/n61Fn8ufnxXiz/3+yR/Cf7cet/B+Xku+jP821r8ufOka2rx5+ZjiXp7
Xv9b8Oeu92hLzwvi3ZW1+HP5UaIfwZ/bD+/X48/lM3vX48+9z+W1+HP6ty09
L8o/Nm3An9vfh9DzknrH/+rx5/br6/X4c/lVL3ru+uzr6HmN/OzbOvy5fGY/
el4jX7qdP3c9dUED/lx860DPa62HHrX4c/nvb/S8Tn57Vi3+3Pv9zJ9rj+zZ
gD9vri8Gfy5eblOPPzc/x9bjz6M9pys9r3decSc9b+CPj+LPG3x/+TJ/3uC8
qIw/b7CeTm7An9PHR/jzRut1s3r8uXr6Vfx5o/kYQ8+b+Lnd6XmT8V9Fz7Ur
BjXgz8XPf9LzBeZ/fXq+wHx9X4s/j/dv0a4Wf07vV9Tiz63HNrX4c+cDL9fi
z8W7Aj1/3XjtWIc/p7eJ3gR/Ll9p2YA/V884rg5/Lr+cVYs/934j+fM31Evq
6LnrLbqot7/BnyXxPfhz8eLlOvy5/GZH/vxN53H/4s/9vu8O/Plbnn8oPX/L
+kvy7eDPPX+tP3/b876n52+LJx/Tc+2+S+rw5/q7YR3+nN8Z4vx8ofrXS/z5
Qn4/WW/Bn/NzO9PzReZjrzr8uevtGvDnxvcyer7IedeG9Pwd3y90qMWf+z7r
33X4c371uFr8eTxvxfn8+bvN8TX4c/s3aQd/Hr8f9FY9/tx58+30/D357kb8
+Xue9xs9f8/+6kzP3zOfSXwO/rw5Hw3+3PNerMWf83uT6vDncT1dRs8/sP8O
rcWfm+9v6fkH6vED6/Dn9K9vLf7c/mxViz8Xv1/gzz9Ub7qGnn8Yz68YpN6+
WH030fvgz62nds7PF1uvX9HzJfRzI3q+JK6nP+DPl8gPHqjFn+vfpvz5R+JD
P/78I/74vDr8ufk8l55/ZD6K9PxjfqVLLf48nt/vQv78Y/2/tw5/zj8l+hj8
Ob1ZQ88/kR89SM8/aV6PwZ+LnzvQ80/lI7k6/Ll4vi5/7nrFK7X4c3qdxKfg
z+3fl+n5Z56XrJfgz83ff+m5dkW6Hn9uP27Dn38ez+94JT3/nB+/jj/X7rio
Bn9Oj7fkz7+gn8/S8y/46fdq8efy0c/r8efqr1fT86XOd/rT86Xe/3D1du2y
i+n5l76fqq/Bn0f/yy6vx5/Tu3703O8Xb8Sff2X+fq3Bn1tf/6bnrrfesw5/
Ln9K4knw5/bTqbX4c/77lhr8OT3/qRZ/Tn9W1ODP5e/Vtfhz8WY35+ff0MPu
9fhz81PNny8TL5bX4s/l96fQ82XN+hL8uffrQM+/bV4/wZ/bP0fV4s+dJz5b
gz/nT4+sxZ/zI1fS8+Xq+c/W4s/l60fS8xW+r/yoFn9uPK5Wb19BrwfU4c/j
fUc9Sc+/i3bP2fz5d9b32Hr8eXP+Efy5eHxxLf6cf7+wBn9u/79Vgz8XXx+p
wZ/7vrIPf76Sv9jY+bl2343pufa4N/jzldbD6/z5D8Z73Vr8uXrOBvT8B+s/
iXfBnztf6E3PfxQvHqTn2h33qsWfq9/sRc9/0r+edfjzGL8WPevx5+LjbvTc
9RV38uerxOtdavHnzi/SNfhz+fytdfhz8enbGvy5eLusBn8uP/2mFn9Ov2+o
xZ+b/2Nr8efOT17gz38W3z6rwZ831wOCP1+7Puvw565/XIM/t79m1eHPxfst
6vDn8rMPavHnzsMP5s9/5Scfr8Wfm79Rtfhz+fxb9Pw38/VmDf6cXq6r3q69
4Nxa/Ln1tad6++/0cKp6++/W7+/0/Hf7dZ8a/Hnc7896XfDn+ncPPf9DPtaz
Fn/e/H1I8Oe+B1hdiz93PjisFn+unpHiz9dYfynn5y06xfusVG9P2n/VF9O1
+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
CX8e9x90Zi3+nH79VsKf8y9JfA7+nF48W4M/tz9b0vOBcT09rYQ/50eGqbcP
VP84jJ4f1env+nrw594n8afBn8vXhtDzo2I8+35Pz4/mJx/jz4+mR0n+Fvx5
3H/Ob/T8aPneEfz5MeLhAHp+jHrJNyX8uf7cUcKfW88z6Pmx4lkS34I/l398
UMSfW5/7lPDn9P/zEv5cfnFPDf7c/PWn5+Vr+0PPy2N99N2vBn8ev++Y5IPB
n8vvD3Z+Psh+7l7Cn/v9riX8ufm5oYQ/b67HBX9u/yf5afDn/MTOJfx5PG/2
/s7Pj7eeb1ZvP14+uJieH08P3irhz/mlTvz5CfzWPvTc9Yr3avDn/r9jCX/O
vyXt4M+b/X7w5/SgGz3X7pjkU8Gfx/uNyxXx5/Z3kv8Ffy5ev07PT6IPO9Pz
k/y/Qw3+3H47p4g/j/GZtlkRfx7PH5Uv4c/VFyuL+HPxdIsS/pw/eKWIP7df
zijiz+U7c4v4c/l5yyL+3HxerN5+st934M9PpqevlvDnft+Knp8sn7hEvf0U
4zmqDn8uH0jidfDn6rEXqLefEvdb04qeD1UfOqGIP6fPQ+j5UPN7fBF/zr+c
yp+fan+c5fv2U413K/78VPHhP87PT6WvJ5Tw5/zZRurtp/GzL/Dnp8k/nqTn
p8X7dVxfvf30uH/rY0r483j+kvsK+HPj9S/n565P+Y2eDxMv+xTw5/pbrt4+
LJ7X4psi/lz7W3o+3Ph/WcSfe9536u3DxYvb6fkZ1s99dfhzfuxg5+dniA/7
FPHn/POX6u3/lt/tWcSf68+EAv6cv9/f+fm/1RNuKuLP6cHCAv6cf7q+iD+3
f2/iz/8T92vxLj0/U3y6yfdwZ4qnOxfx5/G85Uk8Cv6cv/tfCX8u/o/zfftZ
6nmv03PtFlert5+lHnNFAX8uv7y8iD9Xvxjt+/az5ZPbF/Hn6s8Xl/Dn4vsl
zs/PMX5JvAn+nL5fRM/PEb+yBfw5/38hPR8hf0jTc9c7nEfPR5i/Nvz5udbr
ls7Pz437LzhLvf1c+Vhr/vxc8fGsEv5cPr8ZPT9PvW5eEX8uXr9SwJ/H+/Z7
iZ6fL1/4TwF/rn7zjyL+XH3mpQL+3PM3LuLP+Zd11dsvEI9PL+DPrYeTfA93
ofztlCL+XLwe5Pv2C8WTdei56+nH6flF/PRTRfy5/Psx9faL+NUT6Lnrf36/
Hvy59T7Q+flI7/tkAX/O3/1Az/2+bIB6+yh6O4Cea09L/FDw5+7/UwF/br5/
LODP9efuGvy5+NqHP79YPLqHnl9Mv+6m55c4f/ohjz83von/CP7c/rm/gD93
/jKZnl9qvA4t4M/d75AC/tz4f1rEn9PHpQX8ufx5X3p+mfrbx0X8uXz98wL+
3H7YjT+/XL76aQF/bv9+XMCf279JvAv+3HpaXMCfq+csKuLP7Z8PC/jzGL/x
l/Dno+XL7xXw584TupXw5+LnWHo+mn6PLuHP1VcSPxf8OT24kp6PifUyKMkX
gj+n1/VF/Ln90rYGfy6fGEnPx1oPVxXw5/zFc75vvzJ+v6aMP7+Sno4t4M+t
97Yl/Dk9edr5+VXN9ZLgzz1vXfX2q9RvE/0P/tx6SvKd4M+Nzyz19qut5xf5
86vth1wBf26//qbefo3/r6fefo168kUF/Lnfn1XEn/PLQ0v4c+dPy/jza5vz
+eDP1eOOrcGf239L6fk4z9uKno9zHrNCvX2c/PbsAv5cvE/8R/Dn8uezCvhz
6znxW8Gf878H1uLPPf+MAv7ceG9WwJ/H+I5bUcKfq18ML+DPra87avDn8ptP
nJ9frz64hD+/3vwn+Xvw58639q/BnztvfrqAP+e3Dynhz/nLT0r4c+sz0fvg
z/m1FgX8ufn/P3p+I33u5Pv2m+Snt5Tw5+LLeyX8uf24r3r7TeLnSOfnE5wH
HV3An/P3tTX4c3r+TQF/zq/9j55PlF+PK+HP6Usb/nwif3VPAX+uXvFOEX9u
fD8r4M+Nx50F/Ln8fHkefy6ffqOIP5cvfZPHn6svtaLnrq95kp7fzC9m6fkt
/HQ1Pb+Fvl5Dz29RT/xnEX8u/iXxJvhz6/WePP5c/2rpuXaLsUX8ufOBWfz5
/6mXfZLHnxvvrUv4c/nE5Dz+nF+6LY8/N74di/hz+cujNfhz893C+flt8otd
C/hz6/XKAv5cvnmg8/Pb7KcZ/Plk9YWti/hz/vftPP5cvtOfnk82vy8W8efi
6XT19inG8/U8/ly9sKd6+xT5wPAi/ly+3oee326/XFjAn9PLr+j57fbDqwX8
ufGbV8Cfyy+fKOLP+ZfDSvhz54sX+779TutrehF/7nnfFfHn9K46jz+P8Sl7
uIg/F59vped3qUeOzOPP6ftZzs/vEj/uK+LP+aUJJfy59+/En99NTy7mz++x
ng4v4s/l31X8+T2+B9pEvf0efvKCGvw5vTqBnmvPWV7An9t/7dTb75UvvOj8
fKp66jEF/Lnzl0Qfgz+3vgYW8Ofq3xn19vvE41/y+HP11hQ9v8/8HeF7uPuM
/1POz+/3/cTdBfw5ffopjz/Xv55F/Lnfz8jjz+Wrg/P4c/qe7P/gz533blPC
n2vX0PMHxcdH8vhzepb43eDPxbfj8vjz5npk8Ofy74fy+HP+YVYJf259dKLn
D9HHNwv4c99/jSziz63vISX8OX1uKuDP1acm1+DP6ece9HyafGlEEX/u9+s5
P69wHtO2iD/n13al5xXy7/fz+HPz2aaIP1cv/K2IP7f+9vA93CP0YVv19kfE
04V5/Ln3u7iAP+evNyniz73vyUX8uf24Kz2fLr4MKeLP6fXj/Pl0+edJRfy5
esNGRfy5eJDEh+DP1U9a8uePyT8OpOePqRc8UsSf0/Nvivhz9ZlBRfy59dGb
nj9Or7avwZ9Hfxfsrd7+hPz69wL+3PgO5M+f4JfXOD+fIb7NKuDP7ZfVBfw5
P9+dP59h/A6j5zPVW2fS85n2e5Y/n8kvXErPXR/0RAF/Tg++L+DPjV/iP4I/
p1crCvhz8efbAv5c/Gjp/Pwp/vcE38M9xe9P8z3c0+LvQ76He9r8vkzPn1Yf
H5HHn6t/v5jHnzf7j+DP1cNfoOez+JE9i/hzfm9tvf0Z8bgnf/5M9GfNRwX8
ufid5EPBnzsfal3Cn4snK52fP+t7vlV5/Dn9PJk/f9b8/reAPxf/Fhbw5/bL
E/R8tnjyShF/Lv50pOdzfG93LD2fY/22KOHP7e8m/nyOfL2RP3/Ofmgo4M+t
lyUl/Ln4M4CeP0eP78/jz5vPT4I/N5735fHn9GF3/vx5+pT4p+DPzX+id8Gf
q8dOp+farXcu4M/tx0Pz+HP13vkF/Dn9WETPXxR/h6m3v2g9nVfAn/Mf96q3
v0R/n6Dnro/blJ6/LP/fjj9/WX75dQ5/Tg82qsGf83erCvhz+fCeefw5/3Wr
evtc/uwYej5X/jhJvX2e75la0/N5/PI5zs/nOU+80/dwrndI9mfw5/r3T3r+
inh+m+/htNd0y+PP5Yt7F/Hn1uN7Ofy57zNG0fNXxd/jCvhz+++7Ev68+Tw0
+HPxK8lPgj+n92/n8OfW40kl/Dn9T9rBn/P/lxXx5+LZGzn8ufz99gL+3Hr8
1Pl5pf9/Qs8r1bM/LuHP5YML6XmV37fN48+N59Z5/Ln3uZmeV3lebQ5/Lh9/
nZ6n7M9O/HmKv1ut3p7mB7ah52n7tSyPP7cey+i59qDtfQ9XbT62c35eHfuz
48wi/ly9aQv19mr1qIfpeUZ82ziPP/f+J+Tx5+Lxlvx5xnrbVL09K95Oo+fa
6e78ufb49fP4c/vpX+rtOfs77fw85/0+yOPPxfs1Ofy5+e9SwJ+bj99z+HP6
k/i34M+tj19y+HP9Tfxx8OfG/zf+vMDfPU/PC+ZvxxL+nL9ZWMSfm/+38vhz
3xM8R8/XtpP9H/y5fOJ/efy5+NBXvb0kvv7An5ecl/yg3l4S775Xb6+J69P2
L+LPxd/vcvhz39s/UcKf62+vPP5c/5YV8Ofyn2U5/Ln7l6m318mnNivhz+2n
ns7P65xn9uTP68SPsfS8Xv21ZQl/Ll7sTs9dX355Hn8uvh5bwJ/7Puv9Ev6c
Pz6anjdYv/fk8Ofqs+8V8OfO3w+n543N+Ujw5+LPIfS8kd87P48/t54PoedN
6h0d6HmTfHwbeq6dGk7PF/Ars/L4c/vxtCL+XH37Gufnrpdf7fz8deNxHT1/
Xb0xTc9d79GQw5+r/yf7NfhzenOqevv/6Pt838P9T/7waRF/Tr9PLOLPfQ9y
Qw5/rt70MT1/g75MVW9/Q/18fA5/zs+clMef+/1D9Nz1ihPz+HPnaa/S87ec
9x1Jz99y/pj4u+DPzcdb6u1v0/srcvhz/vGXAv5cfem9PP7c/tyJni8UX7Zy
fr5Qvj5dvX2h9T8gjz/X/wPo+SL7O4lPwZ9bX2/k8ef6v6/z80Xm5xr19nfk
2xfk8OfW0+MF/Ll8dWv19neM92Lfw71r/p6n5+/q72nq7e+qd2xFz9+1fsYU
8efW69IC/lx9q08efy7eXur8/D3rd3wef66+XeDP3+cXkvgT/Ln8+X719vfF
o2vz+HPnqy8U8efiy3NF/Ln53iuPPxcPWtLzD523j6HnH9KXZ4v4c+c1j+bw
5+pZj9LzxWvP04r4c/O5Jo8/pw9X8udLfA+d5F/Bn5vfl+i5duuR9HyJ/vRw
fv6ReP8of/6R9/s5jz/3/h/m8Ofy9QeL+HPxZBU9/5hfPcD5uXbHnfL4c/nP
M3n8ufm6M4c/tz7uyOHP6cE1Bfy5eHR7Dn/On9zJn3+qXnQHf/4p3uT2Iv7c
+x7Jn3+mXvMmf/4Z/zOdnn8mXkznzz/Tn1ecn3+u3tadnn8ufm+Rx5+bv345
/HlzPTn4c/vrxhz+XD225Pz8C/lxnxz+XD3/Ov58KT99Ln++VL5wbRF/3lz/
Dv7ceLSk51/aP/vS8y/Vn/ej59or9iniz+3XM/nzr6zHxB8Ff65+c0cefy6e
PUHPv/Y9w/AC/lw99Yoi/ry5Xhv8OX/ymPPzb8zvlwX8uXz+9yL+3PyNzeHP
7Y8xOfy5eNJfvX2Z+slW9HyZfPZ65+fLmvPB4M/lI415/Ll67R85/Ln9d24R
f2497JbDn8sHRuXw5/zQJs7Pl8sf7irgz2O+W/cs4c/p8+78+QrrpTt/rp1+
gz/3++VJfhb8ufVQlcef+77zAnr+Hb+YxK/gz43nR/T8e/v9NXr+vXygJ3/+
vfV0Aj13fXhf/nwlPuR0er5SPrSQnq90/n5qDn/uftv4Hu4HerONevsP6lOz
6fkP1mdXev6D++1Lz38Un9ah5z+KZzvR8x+t/9EF/Ln6SlkJfy4/OK6EP+dn
dqDnP8l/L6bnq9TrvuDPV/mefpV6u3b6SOfnq8xvRR5/7rxwMj1fbX5Ppuer
rY8R6u2rzeeAHP7c/Mws4M/Vh76m5z97v8Ny+HPxOtH74M/XxkP19l/oxyb8
+S++X9yWnv+innisevuv8q9fs/hz77tCvf1X8fujAv5cPrMnf/6b/HdZEX8u
n1pAz3+TT66v3u73LXZTb/+dv+qdw5/bn5s5P9ce95l6++/ibZJPB38uny3Q
8z/Mx8n0XHvxpfT8D/frUMKf04tkvwd/br8eXsCfq5f0zuPPO8f/V+bw553D
byf5WPDnnf8a/znn5fDnnWO9n5vDn3eO8Uj8RfDnfn8Ef560/9Kfj7L4884R
37/J4c/j/1P6+x5u3fj9nBf583XjeX170HPXx0/kz9eL//d8IY8/179K/lx7
XMcc/rxzxKecevv6cb38Onq+fvRv/DP8+frxvPTPBfx5vF96WA5/Hvdb/Ah/
vkH8flRFDn8ev+/Ygp5vEOM97TX+fMPOEW8uoucbxvN77l3En3cOfbvA+fmG
8bxhg3P487hf+bfq7S3j+uyu/HnLeL9pj+Tx5zG/6a99D7eR8ZuWx59He8XQ
PP7c++5CzzeK/09J8qXgz+N5HbZ2ft4q3mdN+wL+3Hy2yePP4/+j3uHPN452
xUJ6vrH5fcz5+cbmo3Uef+5+W9Pzf8T1Flv5Hk77z3pN8Odx/yUL6fkm0b/W
Q9XbNzH/Dfz5JvH+/aaqt29ifjdwfr5ptFvX0vNNY376HUXPN/W8m/L4c887
NI8/j/tX/JzFn0d7+Ca+b98s/t9vfg5/Hu0WY+l565iP4Tfy563j/svn5fDn
0Z+O++Tw5/H7fnvn8Of636+AP4/nt1idw59Hu+y5LP68c+SbV+bx59ZPvog/
j/EelMSj4M9jPQ5L9l/w5zG+wy7J4c/j9+nErwV/HvPZc78C/jz6n07y++DP
xZMq/nzLuN/kV3wPt2X0Z84Pefy59+3Nn28Z7zvyfP68jXh1qXp7m7jedwU9
bxPj2SGJb8Gfx/3Gf0fPt4rndZyVx5+LDzNy+HP7M2kHfx7jMXuO8/Ot4/1H
jcjjz+P65At937513G/Fk/S8rf4/XcSfR3/+zG+DP4/xGJnoZ/Dn8X5z3s/i
z83HJ+rt7eJ+4+7P4s/jeUu2z+PPxa+h9Hyb+P3k7dTbtxGvH8jjz+P+Hd5V
b1/bHkrPt/U+yX4L/lx8ejuHPzd+99LzbY3XCTn8ufdL2sGfR7t1G/58u/j9
yLv58+3Eh9f58/Yx3h0X8OftxZty5+ftY74X12fx59G/Hq2L+HPjeQx/vn08
b/GtOfy5/TmQP9/e+pmUx5/H9fHFAv7c/itk8efi7frq7X6/JFvAn/t/lp53
iPebcojz8w7iz7o5/Hm0V4wr4M9jvJrG0/OO0b9pSX4c/Ln+pOj5juLdb/R8
x3je8Kv58x2jvx1/KeDPtcf6Hm6naC952fn5TvRuLj3fKe5X9hM938nzXsrh
z+P/C17kzzvRgxf5c+0Fe6i3+32/RD9jOcf7L0nyheDPradn6Xnn2D8tknbw
5+b/gjz+XHy9iJ530f+uzs+7mJ+RWfx59H/aVzn8OT2dmcefW3+fqrd3pTdf
8edd4/nDnqLn3cTHs9Xb17Z3pOfd4v6DnuDPXV/SNYc/N75n0HPtfu3V27XT
j2fx5/RiofPzXeL9Vrzl/HyX+H2L9nn8eYxP2Qc5/Hn0Z1SSDwV/Ts+OK+LP
Y/zWnFDAn9t/J9HzXeP9x52Sw5+H3sw+PYs/j/6NOjmHP7c/k3bw5/bfe1n8
edyvx5s5/Ln5vS+LP6dHDfR8N3p2Yg5/7n6H+h5ut+b9GPx5s/4Gfx79W3C4
7+F2F08L6u27Wz9/FPDnMV9zjlRv7yEf2jiPP4/xG9+anveI5w26lZ77/YoS
Pe/Z+W9eIPhzzzsuiz93/3wOfx7jO2xder6H/Li3evsecX1cizz+3Hi9wp/v
4X0HZvHn8tVlvofbU754bQ5/Lt/+jp7vqb99cvhzfuNzeq694Anft2v3HOV7
uL3ieWWHZPHnxiPJp4I/t19ey+LPze8+9Hxv8eq5HP7c/eZl8efyqY/5833i
fafsnMef07OVWfy58Z7l/HxffiXZ38Gfi0/d8vhz+Uuy34M/pxffZfHn9sMH
6u1r29sU8Ofi1/A8/jzma+Qceu76lI9z+PPmfD74c3r2qHq79pIzc/hz7Quz
+PO4X8Vdefw5f1Xgz/fnT/Lq7fvH+HRM4kHw5+L1Inp+gHzqON/DHRD9X35W
Fn8e62VNtyz+XL52SAF/HtdTH2Tx5+Jba/78wOjfmpOcnx9ofSbt4M9jvpbP
LeDPPX9CHn9u/Bpz+PN4v4oX1dsPMn+/8ecHNceX4M/pcS96fpB8aWgWf97c
Dv58rT7x533tl3uy+HP5Xmv+vB+9vEq9vZ/4fBE97xfPH5Tk68GfWz8Lsvhz
47ub79tdX7NfHn9ufNtm8efRLv9WvX1t+1H19kP4wQ1z+HPrq0sBfy4evkLP
tYevS88Pjec3zaTnh4qv66i3H0YPJmTx59b/4/T8sM5/f48Q/Lnx+D2LP6c/
y+j54fzkSQX8Of+Soud+P+129fb+4s9k/rw/fTtDvV274gt63t/62zCLP7d+
Svz5APP7eQ5/3hzPgj+P911Txp8fIT94k54fQe8TfxH8OX/WuoA/N36b0fMj
5ceP5/Dn8oMl6u1H2h+N/PmR4lcDfz5QPN0/iz+P66lpzs8HWm9Xq7cfJd68
zJ8fJf/pksOfR3963OJ7uKOi/02n0/Ojrb/VGfy5+tTeWfy5+d+bnh8d41P+
eRZ/bn9clMWfx/17PJnFn/Nvaf78mLjfqFn0/Fjr5Tz+/Fj51nx6fqz12MCf
H8vf386fl8f4DjqPPy+P+/e8yvl5ufz2zCz+3H46u4A/N97/zuLPzfeD9HwQ
PXqQPx8U/Zl2tHr7cfKfCTn8ufx+mO/btdeMoufHmc/V/Pnx9uvJ9Px4+ded
Wfy55yX7Ofhz+eR2Wfw5fazL4s/5+aQd/Dm/fZvv4U6QD7zEn5+o/31z+PN4
/4qDcvhz8eMgen6i/OgFev4v87OIP/8Xv5bP4s/F9zVZ/Ln62R/0/CTrd1Pn
5yfJNzfFq53U+W9eI/hzfv9u9fbB1ktrej5YPDkiiz+nF+3V24dYL1Po+RD1
uvH0fIjnl/jzIfF+qd3485Pp8638+cni6dVZ/Hncb3E5f36yeJmj56cY7z/y
+HP7a5J6+ynxvMkP0vNT5Kdv0fOh+nM/fz7Ueh3Anw+VD35Jz4eqRzybxZ+r
B/em56fyIzvm8OdxfcrV6u2n2j8d6Plp5m/fLP6cnm9Az09zv1p6fprx6MOf
nx7j0ZTEm+DP+edtcvhz/ubyPP5cfeN8ej4sxm9yT3o+LP4//McM/tz991Vv
Hy5f3cf5+XDr4Rj+XLtHkg8Ff2589qDnZ7h/ZQ5/Tm8eyOLP1Wt60PMzxJ9l
Gfw5vUvyleDPrddhWfy5/fV6Fn/ufVvx5/8R7+/O4s/5i2cy+HP+5uQs/jzu
V/F6Hn8uP/wsgz+3/j/J4M+b67HBn9ODWertZ1lvg/P4c/W+Gufn2lOy9Pws
9cWts/hz/nUb/lx70J45/Dn9qMriz8X3c/nzc9TzJ/Dn59Dr67P482i3voGe
nyM/Pcr3cCPUWxP9DP487rdg0yz+PMa79QDft48wv/dl8Of0+X56fq786zD+
/Fz1r2/pud93aEXPz5OPPK/efh5/+6Xzc9fnXMGfn88Pd+TPz5evDKHn59PP
dej5+fzVfln8ufpV4qeCP+cvRqq3X6DeeLzzc9fn/Or8/EL75UJ6fqF61nt5
/Lnx+CWDP6cvq5yfX2Q+Rjg/v8h87E7PL4r3Hd8jiz+3fl6l5yP17+Es/lz+
vtafj5Qv/C+PP7cel/Pno5xHvJzDnzfrXfDn8pvOefw5P9eKnl+snrQRPb9Y
PXSpevva9gsZ/Ll4UfB9+yXeL9Hv4M/t9/bOzy8Rv9ah55fIn/fjzy+N6yPb
5vHn8X5Lkv0b/Ln6fLL/gz9XL5jg+/bL6PHj9Pyy5v0f/Dk9vYCea5fvTc8v
Vy96OoM/lw9/nMGfe59qen6F/T0zgz+XjyT+Ifhz/b8piz+X/x5Gz0d7n+fo
+Wh+dyA9Hy2f6Mufj1aPPYiejxEv5mbx58azNT13PXUAPV97vZ6ejxVfTuXP
x+r/VfR8rPzkZOfnY+lZ4h+CP1dfn+x7uCvt739n8OfRHjQ7iz+nN0n+HPy5
eLsggz+nN1fw5673HZ7Bn1sf56i3Xy2e7a7efrV8fxU9vzrWQ3lDBn8e499v
Ij2/hl+dSc+vEa+S/CD4c36nRRZ/Lp6uyeDP6du8HP7cfN6WwZ/za3tl8efe
dzPfw42z3xbS83H6n6Hn48xHjp6Pj+ctSOJH8OfN/i74c/lhK+fn4/mvm+n5
ddZreQZ/Lp5NpefXqY99n8Gf04N6/vx68ejDHP6889/f+wR/3ry/gz/3fl2y
+HPxZ1/+XHt2MYs/N16t+fMb1p4n8+c3iv95/vxGevtrFn/u/OqqDP6c3xmj
3n6T+sPu/PlN8b5lq7P4c+N1Ij33+x4n0PMJ6iMb0vMJ8pUmej5B/vhP/nyC
/GhWBn/u+d9n8efWXzk91+5Rp94+Uf3gNPX2SeJRov/Bn9PHDzP4c/57oHr7
JPPVyfn5zeZ/Mj2/mT/ryJ/frN7UUb39ZvutfxZ/rn57Pz2/xX64lT+/RXxa
lMGf099/5vHn9P5Z9XbXO+5Cz28Vrysy+HP7cWd6/n+d//4eP/hz43EjPf8/
/uGcDP5c/va/DP5cvbcTPXe96Sx6/l/vm8SD4M+dj/+Xnt+mPtiUwZ/zPzvk
8efi683q7ZPj+r31Gfy5/PPuDP5cvnSoervr6bez+PN4Xu/z+PMp0Z+d78jg
z+nZVvTc74dcSs9vFz87Z/Dn8qMkPgV/Huth5u5Z/Hk8v3Q4Pb8jfn9EIz2/
I8ar27rq7a73OyOLP4//T0r8SPDn4vPl9PxO8ew7en6n9bEdPb+Tn5uQwZ8b
r0EZ/Ln53mAtfx7rY9HkLP5cfvQfen63/dCbP787+jOv3vn53fbjWj2/x/i8
TM/vifmZu7fz83v8/kR6fo96xc45/Hn0f1JlFn/O3yb5UvDn6iNDc/hz7S0y
+HP9y/oebmpc/+KwDP6cPh6awZ9Hf+eNyeDPo726Az2/Tz3sZvX2++y3JRn8
edyv1DeDP4/xGj2Bnt9vPW3r/Nz1Xpdk8OfR7pa0gz9Xv+y4lj+P/k8clcGf
y0cO4c8fkE8OzOHP4/oX7dfy5/H/hU9l8ef235POzx+M56/qT88fivcdsm4G
fx73H92Hnrs+9eEM/lz8PpeePyx+7Z/Fn5v/p/jzh9WXLvM93MPm6+wM/lz+
s0cGf268knwi+HP13LfU2yvshzfpeQX/s5l6e4X3P3gtf26893d+/oj64tp6
+yMxfnO7Z/Dn6m2Nvod7RH1nD3r+qPysJ3/+qPi/Nz1/NH4/9xx67vcVtfR8
elwv1vDn062vM+i5dou7+PPp0b+F1Rn8ebR7/ULPH+OHb+XPH+PPk/0d/Hmz
Xwv+nB79Qs8fl8/+l54/HvcvnpjBnzuPHEzPn4j2wu+y+HPfK8zL4M/1J8mX
gj+nP+X0fEaMR7sd6PkMfmibDP48+lsaxJ/PMD/tMvjzWE+TtqPnM+336/nz
mfE+vRN9C/5cfeXjavx5vP85STv4c/Wjbem59pD2/PmT/MI2zs+finbLgert
T6mffJLFn8f7LT2cnj8d77f0E/786Ri/iYsz+HP7e/Ms/px+tabns/jRy9Xb
Z1lf71Tjz+N601P0fJbvbw5Wb38mfr9qE+fnz8R4TH0ihz+P/pYuxqs9E89f
dCA9f1Y8ejuHP4/+3/smPX/Wed1+Gfy5+H4hfz6bvvSi57Pj/4v35c9nx/M3
WqDePjv61249/nwOvW3kz+fId+/jz+fE/xcl8SP4c/XcGnr+nPzwHnr+XPRv
57vp+XPWW4Geu76gWI0/j/lrN4yeP8+vZOn58/Ll2zP4c/EyV40/j/vPXFWN
P7d+f1RvfyHWz9KVWfx5zF+vlc7PX5R/7UzPtSd1UW9/0fnu0Az+XPwaksWf
q6escH7+kuvfV+PPfU/YJYM/j98vqqrGn6uX3JzBn8d4ztjB+bnfVwyi53PV
R7Z3fj7X+fJO9Hwuf7RjBn8ufryQw5/H9eLXGfw5/5/sz+DPnX9c4/x8Hv34
LIs/j/eZdDU9fyXu120b/vwV3/d9Rs9faf6+J/hz59+HreXP1euu4c9fNX5b
8ufao5/iz1+zn973fftr0Z8xW9Pz12J8zjmUnr/mfKC1evv8+H27J9Tb58f8
tkvyleDPxfMr+PP5vp94NIs/j9/Pe9D37ZXm86lq/Ll8fzN67voR++Tw5/zV
BfS8SvypoedV0d9J5/HnVeL3uertKet/UTX+XL5/Rg5/Hs/rfTY9T1vf99Lz
dNx/aTV/no7nF/+j3p6O9985iSfBn8f+6/UHf16t/rCKP3e9b46eaxfXUW/P
yC+68OcZ6+PMDP7cfptIzzPOK/5Jz7PG54wM/jza997o/Dwr/h7n+/ZsvN+I
ZVn8eVwfnFFvz6lnTKbnOfHgO/48t7Ze6fw87/va47P483j/VdfT87z+vcCf
5+N5LW+vxp/Lb1ZW48/j/qsP5c8LMT5HbM6fa4+6VL29GP+/96UM/py+fsCf
F51HPU3Pi+oPyf4I/tx6eT6DP1efGc+fl9Qznsvgz+UrX9PzGvvx2gz+XH6a
7Nfgz6Pddm41/jzWY9vp/Hmt/m9Gz2tj/EbfWI0/V4/cmp7XOU8YncGfx/Uj
NubP68SzhRn8ufj6BD2vj/kaU+97uPoYj5ktnZ/Xqy+dTs/rrY9L+PMGfmof
9fYGenJVNf5cPX2vLP483n/AYPX2RvlCYwZ/HuO/6A963hj92eh79fZG9cyW
Gfx5/L9lb3repD6S5I/Bn/OfQ+l5k3x7GX++IK6PWJXBn/PDNzs/X2D+XnF+
vkC+clIWfx7v12EPev56vH/PFvTc9YU30vPX1eemZPDn4suKDP5c/eK8avw5
P72FervfpzdXb39DvSvR2+DPxcNj6Ln2Rpvh1d7gD4bw5296/t3V+PO43nYb
38O96fu+CfTc71vcVY0/l19nq/Hn9vs5/Ln2F9fT87fFk+/o+du+ZzuOnr8t
ngzK4M/jeaVvq/Hn9P3ZDP481sPSh9XbF8b9Vu3On7s+Ynd6vsh6OG0tf26/
v1KNP4/nDZlXjT/nH5N28Ofx+3mtsvjz5vOr4M/VS7+oxp+vrQfx5++KN4ne
BH8uH0n2d/Dn4t10/vxd8Ws9ev4e/bydnr8X41tMq7e/xw8cV40/l6/2y+DP
1XuX0/P3Yz4Wzq7Gn8fzVv1Oz9/nZx/K4M/Fr1nV+HP5yFX0/AP6emU1/jz+
P7PEn38ovzzH+fmH8vEN1ds/jPef+XY1/tz5+ln8+WLx7wp6vphfWcKfL/b9
zmXV+HP5WAd6vsR5U6IHwZ9He3BVBn+u/r7Wn38U9+v1Ln/+kfj5NX/+kfyx
u3r7R+b7t2r8ufxpIX/+see3dX6u3eNN5+cfqz+v6/z8E+v/Uf5ce0rPtfy5
fODeavy5fPFE/vzTeJ8Bnen5p/RgCT3/NMZ3o1/580+j//POp+efqT89k8Gf
68/TGfy5eHhbNf483mfG1/T887jfkB1z+HPvP5o//1y97Qr+/HN6dnM1/lx9
4zF6/oX4NJ0//8J5zH/p+RfO59fw50vpy0nV+HPxr63v4Zaaz5vV2/2+ZZnz
8y+dF07M4s/V++ZU48/Fr/H0/Ev140HV+HP9K6/Gn8fv+26cwZ87f9uhGn9u
Pr+n51+rf37Hn38tfpxJz7VLG9Dzb+hryxz+XP6c5IPBn8uvhmfw5/RlejX+
3Pngl+rty+hXW9/DLYv/d3tFvX1ZPH/1tGr8uXhziO/hvuX3PqPn2ite4s+/
5Vceqsaf87M/V+PPnTetrsafq193zeDP+Y8D6fmK5np58OfO//ej5yv4xSw9
XxHvP+Jsev4dPjDxo8Gf05t9q/Hn/GB1Nf7cft2enn8f11umq/Hn0b+p39Dz
79UD11Fv/97+eUy9faV68Gv8+cq4PubLavx53H/AXP5c+4tEb4I/975DfN/+
g+/Th1bjz53P3KTe7vqM7vT8R/NX6/z8R/n69b6H+zHuf+8F9Pwnev2+7+G0
K86n5z/Rm+PU239yXrWEnq9y3j+Vnmsvf64af85fr07jz633D6rx5zFevY9x
fr5aPjDD+fnqeF7bzvTc7+cMouc/89vLMvhz9fdrqvHn0Z8BLflzvx99Bj3/
xfdYHarx5+LtVfT8F9/XHsaf/yI/frMaf+57kVucn/+q/v5YNf7ceG9Lz38V
n5L9Gvw53umjDP6cXzlAvd31mTn19t/443/R89+jPyOWpvHnztvS6u2/G+8a
eq699NM0/lx98cdq/Ln9eH41/py+t6bnro86sBp/rr53i/Nz7VGn0fO11zP0
vEWXOO/7XwZ/3iXqw8n+Cf68y1/v17s7f560//JTR/Dn63SJ789+58/Xif+n
TuLPXV9yOD1P2n+tp67q7et2CX0ZT8+1hxzCn68bv99oWDX+vEvE6z2q8efR
rjiWnq8X/WvqqN6+Xvy/xeYZ/HmXyP/60PP143rvo9Tb14/3LWtNz9eP/i+4
mz9fP/7fbSA93yCeP2VCNf487rfkTnqetP/Sj7R6u/bEJP8K/jzuv+Jw9fYN
436jfkvjz2N+7p1MzzeM8TliI/X2lvG+w5bS85bRv8GJfgZ/Hs8b93kGf97c
Dv487j8tiQfBn3v/46vx513+Ws9ln/Hnrs95mz9vFf8ffZV6e6u4PuJF/tz1
iYnfCf48nj/tCXq+cfR/3Fh6vnH8v+Mb/PnGMR4rbuTP/xG/b31mFn9uPj6g
59oLZ9Pzf8Tzz0nyx+DP4/rEy6vx5/F+c06g55vE/Tt0peebxHruNo2ebxrj
PzyVxp9Hf6f+yJ9vGv9veTJ/vmn0f+lF9HyzeN6YldX48xiP1vdX489j/Yy6
sBp/Hvdf8Xkafx73G3I+PW8dz1t1Hj1vHe87uIGet4737bC8Gn8ez+ubxJvg
z+2vRH+DP4/3m/dJGn9uvSb+NPjzeH6Ldvy59p/15ODPrb+i7+E2j/5PuZCe
b2H/b6/evkWMx+ojfN++RbzP6M+r8edx/3SGnm8Z89F3I3q+Zdx//IHOz7eM
/w8oc37u923bqre3ifH5oid/3ibed8U/fA/XRvzYmD/XLt9CvX2ruN8X+9Dz
rcSjk9XbtZfOTOPP4/6TuvPnW8f9erWk59pfJPl08Of2wy70vG3Ehyk7V+PP
xd8Fafx5vM/c9dTbXV/+nPPzdjE+/ZrS+PPoT0V35+ft7K9dnZ+3sz/2VG/f
JuZrQaL3wZ/H/bvtwZ9vE/M3qC6NP4/1MnhaGn8ezx+U+Jvgz71vN/X2bWM8
p13Ln7s+YDo93y7ef86Dafy59TOQnrs+qpPv4bRHHEnP28f4TN6JnreP581d
kcaf049LqvHnMT79fqjGn8f7fHG583Pt4k8Z/Hm0O9Spt29Pb6rp+Q7xvAEd
1dt3iN+fs5ye7xDPH/RVGn8ev19Ymcafx3gMvt/5eYe4f7tkvwZ/Hv8/Ygt6
3tF++Jaed4z3H5fEj+DP6fNnafy5/XdANf7c/JZV48+jv6mt6PmO8fulH6fx
59GfEZ/x5zt5n4/S+POYj/G3pPHn8fuem/Pnfj9mOD3vFO2NblNv72S+9qPn
neJ+M2/hzzvF+7WclMafx/2H7FWNP4/53Gjt+Xln4zUnjT+P9tQNqvHn1uP6
9LyL8V+vGn9OH2+i535/79Np/Ll4PUu9vWv0Z8W/qvHn9OMket41nl/WHa/W
zXo+kZ53s16Oo+fd4v8du9Fz1wdfRc93jvvNeVy9fefYzzMeo+c7x/3n/UzP
d47+rd6Jnu8S/5/UoN6+SzwvXcGf7xL3K788jT+P8Sn+kMaf048jM/jzuH9p
ZRp/Hv1d3j6LP4/rwy/mz3c1vyvo+a7x+8VJvh78eYzvpBw97x7/7zeSnne3
XrPOz12feWg1/py+tFVv3838Hsyf7xb9L12Yxp+LD4n/DP5cPtsmgz+P/TDk
TvX23eN5g77gz3enx7fz57vTo7voeY8Yz6Yp6u09xJ8v0/jzeP7wZH8Hfx7P
O+KTDP482u3O5M97xv/LDqDnPeN5i192ft4znrc42f/Bn8d4zZ2Sxp/LPz+i
53vE76f14s9dHzOJnu8Z/++1CX++Z/y++HIafx796fmO83Ptds85P98r5nPJ
burte0V/16xLz/eK8e73TDX+nL7+pt6+Nz17mp7vHb9vMTuNP6dv61Tjz+Uz
C9P483jeqtfV2/eJ/g8Y6/v2feJ+RzxNz/eVj9T5Hm5fevZ7Gn8e811+tHr7
vnG/lmPpea943yEr+PNe0f+lA5yf97L/kvww+HP+qD097x3/L2Wcn2v37qDe
3pt/eoA/761/Wf58v2iPTPQ5+PNoT078QPDn0d9en/Pn+9Hbr6rx53H/qVPo
uXaLPvR8/1iPU5ZW48/Fpyp6fkA8b8Yyen5A/H7JS87PD+CfbufP/X50H3p+
YMxXjy2r8efy2Xvo+YHx/50nqrcfKN4uoed9Yj7Td/LnfeL3885N48/j/fve
yp/3ifGdmehT8Of2/3Xq7QeJb5Po+UEx/wMGZ/Dn4vs/+PO+4vuZafy5fP+f
vm93fcgz9LxfPP+IJL8M/lw861GNP4/37/ECPe8X/Z88LI0/F3868+cHx3hO
eyeNP4/n7Xw5f36w+L2j8/NDoj3iJnp+CP/1eDX+PP4/6Er+3O/nnJzGn7t/
kk8Ff+7+Y6rx5/Lb69L487g+5g16fpj9MTiNP5cPJu3gz83nYHru9x270PPD
Y7wqkuvBn0d70dH0/PCYn47j0vhz8e0y9fb+Mf6LBtJz7Xm78uf9rYdvqvHn
9PqnNP48+rNo+2r8eYzfOVPp+QD++kx6PkC+fHg1/pxfvpWeHyEen+H8/Ij4
/ZhE34I/N9/fpfHn8T6rP+XPj5SPnEvPXS8r0PMjxeej6PnAeN7Ijen5QP7o
FPX2gfKnjmn8uf3bkp4fFePTbgg9124xnj8/yniPU28/mr9afy1/Th+S/R38
efRv/Bdp/Ll414s/P8Z6S9rBn/Pv62Tw53F90c7q7cfEeC2/I40/j/GeXU7P
jxVf9+LPj6XvQ/nzY/nhG9Tby2M+x3em5+X836/8eXncb/Uv9Lw8+lc+hD8f
RC+24s8HRX9L4+j5IM87kD/3+zUv0vPj4n6zu6u3Hxfv01RPz48Tz+vo+XFx
/7L29Pz4+P2wXej58fo3kZ4fr95zMD33+3Hd6PkJcb+Nkt8Hf06v29LzE+j7
w/T8BOs5iS/Bn8sX3krjz8XTWfT8RPlLEh+CP+evtszgz/n1/6Xx59Gf4T+n
8efR3/KO1fhz8zuAPz8p+ttuFT0/KX4/sjGNP7dfPqPng6O/q+/kzwfH/Rbs
yp8P5g/XU28fHP2ffWUafx7v1y3Jt4I/j/eZ0Y6ea6dKafx53G/htb5vPzmu
N23Nn58sflyRxp/H9Q4vOD8/Wbz6OYU/Fy/fUW8/JfrTNvGjwZ8361/w57F+
0l193z407rd6KT3XbjebPx8qHrxNz4eqr6XT+HN+4N40/px/Wqvnp/IfQ/lz
vy//NI0/j/22aE/n56fF88a/Rs9PUy/ZmJ6fJn94lT8/Xb7cqN5+evy+7Y/0
/HT1tpbq7afzI4c4Px8W7TUnOj/X7nDwWv5c+yp6PrzZTwZ/7vpZ/PnwWB9t
E78X/Hm8X/o/9PwM/vVh/vwM8WZRCn/e7G+DP4/2zN5r+XP7I2kHf96l36o/
19cbKfw5Pb+Pnv9bPWKfDP7c+t6Jnv8nrk9M9mPw5/o/ij/3+yP2Um8/03nD
fP78TPnaUHp+pvx3sHq7dr/z6flZ9OcHen5W3K/YM40/j+evetn5+Vn8fD96
frb4dHUafy6fGOT8/Gx+a7c0/tx66+P8/Jx4ft9H0vhz8bqYxp/r77+r8efx
/5ad+fMR6sXDnZ+PiPnrmey34M/Vv2bR8xExPpO60vNz5aer6fm56jEz6bnr
E9urt2uX76nefl60e+yp3n6eetJI/vw8+nQRPT+fnjyRwp9He3myv4I/j/cd
cQ1/fr787Wr+/AL7cWt6rj3pfHp+gfc9gT+/gF4vo+cXxv2WbKfenrQ3+nN8
v0rhz93/Cv78QvX/s+n5RfxFku8Gf+685pMU/jzuP/P5NP7ceK3hz0d6/4vV
20fG+LS4mJ6PdP4yip5rz55Pz0epJ9xdjT+P64sTfQz+PNo93qTno6zXN+j5
xfrTn55rd1idxp/bj3Pp+cXiwVzft1/SnB8Gf67efVMKf26/36befgn/tnca
f67dkMKfO6+qS+PP1VsPoueX0o9r6Pll5vdN/lx72C/Ozy+jH7vR88vk61s4
P79cO5XCn/MPN6i3X+78ZFf+/IoYn7mt6fkV4nuyP4I/j/FYugs9d33FOHo+
Wr75eRp/Lv8d4vx8tPU+mD8frf5Qcn4+JuZv8FHq7WPkqyfSc+2Zd9PzMfzx
WP58rPxiDD3XXrQZf67d+wp6PjaeN/IB/vxKfibZX8Gf22/HOj+/UvyZnMaf
W09r/flVMX8L29Pzq+zHZD8Ef67emuzH4M/VS+7iz68WTy/kz6+O57U7k55f
Ld+4g55fLf8+jD+/pku/n//cP3en8OfOQ1bT82uc9yXt4M+db7zIn1/bpd+G
f85n/xT+XL6zHT2/Vn7/HD2/Ntb31L78+Tj+7Hr+fBz97aPePo7/S/zVX3o+
Pn6/8Ax6rl0+iz8fbz5P5s/Hq/+0UW+/Lsa39VP0/Dr1xk348+vUN/9Bz6/j
X2aot18f7zPja/78en6zlXr79eotp9Dz6+nr4+rtN8T7DT8hjT9XD57On2sv
uYae32C9defPb4z3GfUNPb/R+yf5TvDnzkvW589vlD/2oOc3qYdOU2/X7rUR
f36T8+Sj+fOb6OWD9HxCrIfWx/HnE+J6x4/48wnWczl/PsH5Qgv+fKL1vwt/
PjH+P/Miej4xxnPKvfR8ovHYKY0/j/62XIeeJ+1Wf87XrBT+PNbzyK1T+HPn
50+m8OfyodNT+HPnkwvT+HP/X5HCn9O7w+n5Lfxb4peCP4/32/l55+e3xP0W
L03hz533HpTGn6uv3FKNP2/Ol4I/d57zYxp/HtdHJ34t+HPx8tgU/lw+/z1/
/n+xH+csTuHP7fcPUvjzaLc+kp7/V77fhp7/V75yewp/Hv1Zcqrz89tifDos
pOe3qf9vzp/fxh8MoeeT+c0k/wv+PJ6/6iT19sni7SP03PWRTSn8edy/7Sb8
+RT10mn8+RTnK0l+Hvy589Mezs9vt143Vm+/XX48hj+/3fcm+6Tw5+q1id8J
/jzWV9k1Kfy588nuvoe7g1+7jJ7foT6yIX9+p3rypc7P74z/jz6Gnt9p/i+m
53ea31H0/C7xbxR/nrR/+mv/pPDnMd4t7qTn2kM60/O7fd8xQL39bv60Pz2/
W/92pOf3xPj3Opee32N85tDze9Q/znZ+fo/1cRY9v5fetOfP73V+dDB/fq/z
8mf483ujP8O2SuHPve8E/nxqjNe926bx5/H/uQeot0+N+Z6yaQp/rh53Oj2/
L/qzoI3v4e6L+1ec7vz8PvXsU+n5/c6vr6fn9zefBwV/rp67jJ7fr17zWBp/
zk8X6fkD4sG19PwB/nhP/vyBmK/e1/DnD8of9qDnD9qPeXqetFv+GY8T/xn8
Ob2v4M8fUt99i54/FP0bt7vv2x+yP/5Fz10ffDk9f5ifS/Qv+HPn2bvS84fp
4UfOzx8WL29I4c/Vr9fnz6d5/lH0XLtDN/68gj5dksaf+//F/HmF9XM0Pa+Q
Dx3Nnz8S4zmxPz3XHn0RPX+E31qXnj+inndhGn/Ob76Swp/zBwertyftjf/8
/W8p/Dn/2ZeeT1ffPYeeT5cv9aHn0/n9s1P4c/WBWfT8Md+zTFJvf6z5vCL4
8y79fvkzf/p3Cn8uP9uKnj8e66ffBP788Yj/Hb9N4c+9/0H0/HH1qpPp+RPy
kZNT+HPfD1xHz7U7nkTPn5BP7cGfz/A9zJb8+QzzuyU9nxHrY9iHKfy5/bA5
PZ+pPrQxPZ/JT3Z3fj5TvaGcP5+pXjiYP38y3rdiID1/0vnl5VX4c/q2h3r7
k7F/FiT5avDn8f4jTqDnT/leaCA9f0o8250/f1p+MoieP+28vzt//nSsp273
pPHn8qs19HyW76kOc36uvarDWv5cPLqInrtenuQnwZ/H+y6poufPxO9X3eb8
/BnxpHMafx7jX96dnj8rPxzBnz8b63P5J1X4c99bvM6fa48amcKf82Mr6fls
8ea+Kvw5f7gqhT9Xv+9Ez+cYn3358znqk8dW4c/j/co6pPDn4vt2/Plzocdz
jqrCn6tX7EHPn7M/tqHn2mu+pOfP+16wB3/+vPP3Nvz589b7KSn8ufHtvpY/
F4/7VuHPY3z7tk7hzyNerLgvhT8PvV5TqMKfO8/7Rwp/Ti/W489fpD+ZKvw5
/9SFnr/ET3Sm5y/xBx+qt7/Ev6+bwp+b3yuq8Ofi52Xq7S+rj/eswp+rrx6W
wp/7vmVSCn/u/LQDfz7X/vulCn8uv/y5Cn8e9x+2kD+f57xyZ3o+L8Zr/PgU
/jzGf+qqNP7c+njT+fkr8T7jRlThz+N5qVlV+POoV00Zq97+qv27n3q79qj5
Kfy585E26u2vigc70fPXnM8cRs9fc759Nj1/zffCy/lz13v+ksKfm+8J6u3z
ra9uKfw5vzojjT+P8ZhzXgp/HvF/8Up6XkkfD+LPK9XbEv8T/Ll8qmMKf+48
6AB6XqWemuhJ8OfOyz6j51Wxv9JTqvDnvhfaeS1/Huu158Np/Hms/3GvV+HP
4/rwB+l5Wn8eoOdp9Zgx9DxND6am8OfyqxNS+HP1rz/oeXXcb3J5Cn8e8z28
TxX+3Pc8B1Thz/V3inp7hh69Qc/9fk51Ff7c93JXV+HPm/Pr4M+jf6mxVfhz
52Mj6XlO/zei5znf5/5Ez3OhP2WXVeHPY77L+qbw5/G+FW3487zvpW9Vb8/T
mxH0XLtDf9/DFdRjxtLzQsznimeq8Of8wLfq7QXnXU/y58X4fcXlKfy5/dkz
hT+P/ix4rxJ/Lt/4dxX+3Pjd4Pv2UuzX1u2r8OfidSt6XlLvvYA/r2n+fjL4
c/vzmRT+3H77lJ7X8OMb8ue1cX3YBurttc6TrlFv115yCj2vc563tt5ep17c
i57X8T9fpPDn4tH2Kfx5jM+gd6rw57G+Uouq8Odd+q3+s/1ZCn8u/uxDzxti
/Za9XYU/j/Gb8wc9b4j9Xz40hT+P61O3UG9vpEdvVuHPxb+N6Xljcz0g+PMY
nx6tqvDn/Po79LzJ90uX8udN8seX0/hz5y090vhz9bDd+fMFxudQer4gxqfi
GHq+wPe6v1fiz8XTN/jz130/luRzwZ973zlp/Dk/8T09/5/4+XMl/jzGu289
Pf9fzN+YRG+CP4/1nz5Cvf0NfncD5+dvxP6cM7oKf26/vlKFP6fHfVL48xi/
SWfx52/K116owp97368r8ef06BDfw70V9+/4mnr7W/T2ihT+PMYvnezf4M/F
myT+B38uP25Pz9+O+R71Ywp/7nvHJZX4c/nBP+n5QuN5NX++0PpM9Cn4c/rT
mT9fZD0/XIU/tx6GVuHPxZcx6u2LYv9Pe4w/f8f3LifR83fEp2Ep/Hncf1ob
ev6O/GJqFf48fr/ktkr8+drvd6vw5/F+HY/nz991HnQnPX+v2V8Gf+78YlN6
/p7+npjCn8d+qjiOnr9v/mbT8/fNX6YSf269nk/P31f/ylfhz+ldHT3/wPdj
G9LzD5xPP8Wff+B+k5yffygfv6ISfx7jPy9Zf8GfO9/ZiZ5/aL5eo+eLY/xG
Jes7+HP1vH2q8Ocx3yOvoOdL5C8H0/Ml4vX3lfhz52Vn0PMl8bzFz1biz+2H
X+j5R/Z7km8Gfy6/H8eff+R7lz78+cfWy7Xq7R/Ln05Tb/9YfvttFf48nt/h
y0r8Ob+7P3/+CT5sPj3/JH7fYwQ9/4RfebQSf+58YCo9/9R62Yeef+o8YSl/
/ike4OFK/LnvBffmzz+L8R//H/78M+eJn6Tw58637q3En/ueaEgV/pxeDeLP
XR/9HD3XHlBOz7/wven/KvHn6v/H8Odf+L7imTT+nJ5cwJ8vVf8fVIU/Vz9q
oudL1cdeV29f+/tz+fMvY//0rKvCn8d+WXIrPf/SeeFhlfjzmP/ZG1Thz/m3
m/jzr8z/TfT8K/N1Jj3/ml9blz//Wj3mP/T864inw9dU4s/50XX4829i/beu
rMSfqwf/Rs+/cR7/axX+XL16f/X2ZbGeRvbiz5c5z5qr3r4sxmPQC5X4c+fb
yX4K/lz++B09/1b9e2waf87vDOHPXU8t58+Xx/Pmjabny2N/jHy6En8ezx/1
VBX+nD62oecr4v07fFGFP4/fpx+rxJ/HeJd1qsSfx/wv2Imef+f8ooyef+c8
dqTzc+0Fp/Hn3/G/26Xw5xGPegyl5987Tz/a93Df2z9JvhX8ufP0hVX4c/71
LufnK+XvW9PzleLfcfz5ylgPHbesxJ/T9w3p+Q/OK8/yPZzr4w5Tb//B/m2V
wp/Lp2sr8efN+Vbw585vz1Bv/8n+HU/PtWdfn8Kfq2dswJ+7fm8SD4M/Fx/G
V+HP43lrqqrw5+pZp67lz+n9tZX4c/Wyn1L4c+uvTyX+XL1/rZ6vll/uTc9/
jvU1eUwl/tz3EJfx59pT5qTw587jvuXPf/E98Yoq/Hmsv3Fz6Lnrg5L9Efw5
vXyuEn/On29Jz381vz0r8efy312r8Ofi3e6V+HO8ZBk9/019rLV6+2/8QEf1
9t+ct5/Gn/8e9Z1hX8zHn8fzhifrOfhz62NxJf481vfi+6vw5/zsXc7P/4jx
LL+DP/8j4sm4dyvx5+qZU9Tb18T7Dr+Lnq9RP9uuEn/u+9//pvDnXf+avyVJ
Ph78edfQ+8H0PGn/+f9+W1Thz7uGn7uZP1+n69/nh8Gfd4399Xol/rzrX/E9
3Z8/T9p/+b+35uPPu0a94Ab19qT95/4bVV+JP+8a+cJ6/HnS/qsekeXP14v/
z26Rwp/H79fsT8+T9l96fmQl/rzr3/E3+PP4fdsh9Dxp/6XXvel50v5r/63D
n68f79PiCv58g67xPdi+Kfx53G/Ycnq+QdxvyW+V+HP/378Kf+795lfiz41/
Zj7+PN6vR/cU/jzma9CoKvx5XB82sgp/Hs9b0KMKfx7jXb57Ff68a3yfsmo+
/tz8fErPN4r3WfzyfPx59K/1OVX48/j/vCPoeatYD2Vd6Hmr6E/q3Er8edfI
X/5Jz1vF/Ja1VW/fuGv46UPp+cbul8Tv4M+jfz0TPxz8ecz/8C6V+POYn+WJ
/gR/HvO74j16/o94n2Gb8eebdP3bHwR/HuO9eDI93yTGa83i+fjzuN+g6+j5
prGehj08H38e679voQp/HvPTsS093zSeP7mPevtmcb/xU+fjz+N501L8+WYx
3nO3puebRX+nXErPW8f/+yXxMvjzuF7RNB9/Hveb/I9K/Hncr8PGlfjzrn/X
L4I/t74Po+dlMb5LzuPPy2J8ysfR883dP/FvwZ/H9TX5+fjzGJ9pk+bjz+P5
0zblz7eI503+wPn5FjFeCx7iz7eI96v4rhJ/HtfTv8/Hn3eNesJv8/HnEZ/S
yyrx58brbP58y3j+4g/V29t0/Tu+Bn8e/V2ztBJ/bj7nzsefx/umtqbnW8V6
Hp/sj+DPYz1XdKLnW1m/yfXgz2M852yZwp/Hel5xKz3fWnx6i55vbXyvmI8/
j/cbv3w+/jx+3zqfwp/bX1n+vG30f80R/Hm7+P3kf1fiz6N/U7bmz9tFf/od
qt7u98vfrsSfx/pNvUXPt4n5G7mSP98m4sH4HH+etP/Uv9mb8ufbxnyVPzIf
fx7tkZept28rfh9ahT+P/sx5YD7+PN6/45Mp/Hk8f/EFKfy59bQOPd/O/B5F
z9vr32b0vH2M15/14ODPY/7G71eFP4/3LV8wH38e6yl9XSX+POJr2ZdV+POY
r8Wr6Ln25GHq7TvEfKROp+c7WG818/HnMR9LZlThz2P8etxDzzvE8+ccWIk/
j/FocfR8/Hncf/Ej/HlH8euy/+fqzMOyqt4uTGVppYGaSYNBaoI5gFpCWkGa
QqVBVkJmgZphmYJWQk5YqVBp4AimBY6YWrzzjOCQUKZQmmBakiOWA5mKjXzn
57qJ6/r+3Nd5zzn77Gnt9Tz7hhL4c31v2uM++HO1v/+n6Dm/N6oLf854nVIC
f673xT/F+fZ7ND9rL/vgz1lvg4m3d9bzK+8m3t4Z/euFnndm/bsRPe+s9s/1
lMKfq75lN6DnXfT9c1yl8OfM93HoeRe9r/QtH/w5671RFn+u8RD14Vb4c70v
/hr8eVe9L779VvhzxvtpH/y51reC7K3w53pe8ffoOdcbDf0Xf671KvlP/Hk3
xmdaKfy5rs95dyv8ud6XurQE/lzjoepO/HmIxsuRXj74c/WP33ry5/z+f/kJ
8ed6fnSvUvhz5mNFCfy55lvqOfQ8VO3hd9AHf67xVLCK/Hl3/T6nHXreHb19
Ej3vrvllMvRM/Dn9F1MCf673pyaWwp/TP4YeiT/X85IWEW/vofqbLqLnPdT/
yRfQc8q1I9Dznlov0nqg5z31Pckfch6uJ/vLT/HnPfW+sHboeS/07nvi7b1U
/9zPS+DP1R5B326FP9f9mZvw571ZL46XwJ/T/pNL4M/ZD8wi3t5b/WXqUwJ/
rvkRPcQHf672Kr0RPQ9jPSzHn4epPkkDyJ+Haz4l78SfU64dh56Hs78IxZ+H
a7wGhaLnfTS+gpry5310/fxA9JxymAk978P+Oxx/3pf5WIU/78v8abUV/hy9
ugF/3hf9KULP+6m9A6zkz/vxPc+h5/00v3Mue+HPWY934c/vp/8O++DPGd8v
cB7uft0floKe39/tv3y++HPdn5tIvP0B9oPjfPDn7N/alsCfs38vIn/en/4b
64M/Z36P8cGfN+uH+HP07FIJ/LmuB3RAzyNYP8aTP4/Q85PnoeeRzLeTXvhz
jZec79HzSPbrd/vgz7v9l28Qf672Tn6sFP6c8Tsaf/6gxlecoR/izzXeKx8s
gT9HP57Hnw9gfz61BP5c9583/Jr4c/anH22FP9fv5yzcCn+u7/U7gj8fqPGa
GUG8faDeFzXXB3/O+DbWV/Hn6u8jrX3w53p+1WX0/CH8hjEfxJ/rewqGboU/
1/f755fAn7NeVKLnD6v+0S188Of4gS988Of63pyu+PNHGN+PoOeU01oQb4/S
eIt/GH8exf6sE/48ivU/CH8ezX59F3oezXofsRX+XPUPur0U/lzjJa3fVvhz
5le4D/6c/elrxNsf1fP9LpfAn6NXhh8Vf0779ELPB+n5wT23wp9r/B0ZUgJ/
rv5qXOGDP9d4N+WTPx+s9gu/sQT+XN9f2hI9H4wedN4Kf676108rgT/X/PRv
UQp/zn7cWK/Fn7P+5/rgz9GLYyXw58zXTj74c/2+apcP/pz2aPTBnzOfN+LP
Kafdj54PVftUZqHnQzV+Ktei5zHM7ywf/LnqnxRWAn+OH6gmfx7D+Pbhz2MZ
b6u98Oea/7mZxNtj2Q/7++DP9bzk7iXw56yHB7zw52qvYCvn4R5X+8ed88Gf
832PoedP8LybfPDn6ImhT+LP0bvr8OdP4o8rvfDn6HO6D/6c+M8NPvhztV+j
MZ7Fn2t8Rkeg58N0f3x//Pkw4hOb8efD9P1R1/jgz9VeaWn48+Hsbyfgz4er
v4M3+ODP9fuq133w5/r9+ZtL4c/x26/64M/ZvzpL4M9ZX2ej53GMf2O9FX+u
cvFNxNvj2N9cw3m4OOJdxfjzeNarvT74c43X+L/In8fr/blT0fN49W9jGnr+
NPvxYi/8OfU75YU/1/gpW4ieP836/rkX/hy//Rp6PkLtHeZEz0ewvk7xwp9r
fNdbiLc/o/Gd86MX/lx6lDoGPaec8xb+/Bm+L9MHf851f/T8WeJXteTPKQct
Jn/+LH79Fx/8Of5uEP78OX1P7pcl8Odqn+B+5M9HEh9ZjZ6P5H3bSuDPGV9l
JfDnWs/CV22FP8d/+dDzBPWH/7U++HP0z88Hf677cxO98OdaPwteJH+eSHzu
HPH2RNXX1Bc9T5R+FM5Ez59XfYtvxp8/r/F25G70/Hn1f1kn/Pnz7Eemoeej
iN/O98KfM34veOHP1Z+ly33w53xfC+LtL+h54bUl8Oesv4974c/1PWlOL/w5
8eZ1+PPRrB/lPvhz5vv95M+5Xmisj+LP9f0Bt5A/f5H9Rwr+/EXG63j0/EXW
c2N8iz/Hj/QsgT/HTx31wp+rvYI/88Kfq/61533w5xpffhu88OfM73L8eZLa
J+gHL/w5/n2iF/4cv7kDPU/GX4eh51wPvqsE/pz95lj0fAzxy2+98Odabyun
+uDPGT8D8Odj1H71h4m3j1V/h50pgT/H749EzymXjSR/Ppbx9Bj583Gar7md
0PNxjL8RW+HP0et48ufj8N83kT9/mf3PUfT8ZeLdH/vgz4nf30a8/WW1T9VG
8ufjdX/0GPz5ePypMX7Fn/N9Rln8ufq7cgl6/grx/+Fe+HP0rA3n4V7R8+f8
44M/1/f63eqFP2d/nIOep6i943fiz1N0f/0CH/y5xmNx7xL4c/aTMej5BF3P
3Is/n8D++Dr8edP1yVvhz9EjP+Ltr/J7Y/yKP2e+D0PPuV5mrH/iz9W+5//A
n7+m8RFgR89fIx48Dj2fyP1tffDn6MlM9Hwi8cLf8ecTGS/FPvhz/H4c+fPX
GV/9vPDn7DfOlsCfs3/6zgt/zvr9Bno+Sf2V+jj+nOtzmvR8EvOztxf+XNfD
T+LPJ6t+mZPR88mq3/k26Plk5lcb9DxV/Rs9DT1PJR61xAt/rvGV9IIX/pz9
bZgP/pz4zsES+HP2az198Oesp3k++HPi2wfQ8ynoQyf0fArxGR96PoX+M9Y/
8edaf6PDS+DP8QdxXvhzPT8pEj2fqvFQ+g56PpV4i1EWf048b2kJ/LnaN/yi
D/6c9jbWP/HnxD/beeHPVX//mV74c/T1hBf+XOOnOAE9f5N8wy1e+PNu8Lhe
+HP2z7/gz9+i/4z1Wvy51ouAKC/8OfvJG73w5yoXnkPPpxFfS/PCn7M/HY6e
pxOffRQ9T2c/s8YLf67+SL2T8+0Z7Df98OeUC1Z54c+bx5v4c/RiM3r+NvOn
/Vb4c+b7nx74c/Qjzwt/rvbxM/YX4s/pzwYP/DnxgWXo+XTm80r0fDr7L2M8
iz+nf1qg5zNY7/9Gz2foeVF/oecz8Bd+6PlM/OYOL/w5+YguXvhz8h0r0HOu
p571wJ8TPwwlfz4L/Tb2I+LPVf/CLPSc61V1Hvhz4kV3oeezmQ8jibfPRt9z
yZ/PVnuF/YqeZ7LeGn5N/DnrUyL+PJN41sUS+HPyJ1Yv/Dn+rdYDf672K7vd
B3/O84cTb39H7dn4BXr+Dnp9Cj1/B7/7sxf+nPWpyAN/rvUkLt0Lf45/HuqD
P9f4qD+JP39X62/wW174c/ylMV/En6t95sTgz99jfKz3wp9T37Ve+HPyDVOJ
t8/FfxxEz+eyP37QC39Ofnwd/nwefqu/F/6c+bLHA3/O969Czymfb/TAnxPP
7Yuezyce+Y0X/pz+aPTCnxPvvgZ/nkU+arEH/px8Xh56nkX8IAw9z2K/1cML
f068bqkP/pz9wl/kz7Ppj8te+HPaq8wLf856mYA/p5xp7B/En5M/GkW8/X3y
Wb954c/VH3H1Xvhz5o/bA3+u/g435ov4c/Y/v3rgz1kfDH0Rf44/dXjhz9Vf
lYYeiD/X+C0w/KT4c8afvQT+nPV1GP58Ae0Vi54vRC8N/yL+XL9PjkHPF5Jv
2YKeLyTevQk9/0jrTUEA+fOPmuO/4s9pzyIv/Dl61qTnOXp+cWvi7TkaL7Xr
0PMc/H2aD/6c8fO9B/6cfHIh/pxy6j4P/DnxtUke+HPW20/Q80Xqv4CJ6Pki
jbeySvR8Ef56Av58EfF6P/R8MePTDz1fTLyljw/+nPjvOB/8OedBvkLPl+j3
qWH48yXE+xaj50vIx//hgT/v9t/5avHn5BPvQ8+X4m8XeeDPiXde8sKfq78z
Q9HzZcTrFqDny8inPu+FPyf/2YX8+XL2Fx4f/Dl+s8QDf0782OeBP1f7BdvJ
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
D/y56hvQygl/rvY7v94Jf677nRed8Ocq5xll8efqr0gv5+GGqz0b1jrhz5v3
O+LPNX/ro9Hz4bo/Yzd6/hR+3EH+/Cn0Js4Jf87+61rOwz2l+pRfQ7w9Ts+v
CHHDn+NXB7jgz6n/cPw5v89f6YQ/V3ufqnPCn+t7Qlbgz+P1vDl/OuDP8XN/
OODPdT23AT1/WuMl8rgT/lzzy/mZA/5c3x96I/58hMZT3u/E20fgx1/Dn4/Q
fG7pdMOfqz/jB+HPn9H7M3q54M/VvxXG+ij+XP0Rs9YBf673JRxywp+rfi2N
9VP8OfPpSfT8WdV34xPo+bN6vl++B/5czyv+k/z5c5pPzl8d8Odq/8rvnfDn
+Ln9TvhzfZ/TWH/Fn2s+BKS64M81/wM/dsCfa7y0fM8Jf47/rULPE9R+GWuI
tyewvo0g3p6o9yffi54n4keuw59TLpzphD8nXjXeBX+u9qhrdMGfh/x3Xk/8
Of7kbfT8eY2vuFPo+Sj9vrgSXm2U2rsoA39OuXKaE/5c/dd4O/H2F+iv3R74
c8ZTgAv+XO0X/6YT/lzvT+3mhD/X+Im+7II/V39eKULPR2v8R0zBn4/W+4qj
0fMXVf9SQw/EnxMvmIyev6j3u9a64M/x+8Z18efstyIc8Oeaj5EHiLe/pPW3
vsoBf078cb4b/pz1e4IT/lzjL/MaF/y53l9n7G+u6nmynhdvccKfa3zknyDe
nkw8abYb/pz92L+chxvD+vwFej6G7x9L/nyM+itmugP+HD3p5YY/V32d7fDn
Y9UeiVvw52PVfzXp5M/HEm82/Ij4c43X0FD0fBzxtd/R83Hqn9JHXPDn+JkE
/PnLKjca+iD+XO3V0uuGP2c/8Czx9pfxX9+64M9VP1cVek55wt0O+HN9X84K
/DnXK4z1Vfy5nt8xn/Ptr2g9OGWsr+LP0TOTG/4cf7gEPU9hvRgCr5bCfjsX
PU9R+4fV4s9T8BNfOODP2f8WEW+fQLzxLeLtE9jPb3PBn2s8pv1G/vxV+qPe
DX+u78veip6/qvlVPtoBf677w58jf/4a+Y4XHPDnWq/yLjjgz4k3/eaAP0cP
DX8v/lzre+F+9Hwi7Z3ggD/X+8rWOODPNb7KJrjgz3V/8jHOw1GuN9Zn8eeM
z2X480nM/3+It09SfdJNLvhzvS/5T/R8kvonvJ8T/pz5vRU9n0x+6wc3/Ln6
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
hz/X9825jJ4fIj/aww5/znnJWeTPDzHeQ+3w5/gNswP+XPXJNtY78eecp7Y5
4c85zxGOPz8MT3Qaf/4j7Wcmf/4j69UF/Dnl1J9t8OcaXwkTiLf/xPmvc+j5
T+Qvj6HnP8HndCHe/hP5qlU2+HPWt/Xo+RH4lJ/R8yN6fsEJ/Hmtvq/okA3+
nPjMJ3b4c86v/2CDP2d/vc4Jf85+v5sL/pz17x78+c/k845zHu5nznuPwp8f
Vf1TuqDnR1nPfkDPj3Ke+Tb0/Kj6r9Twt+LP2f/WoOfHdP38bcTbj8FfGP5J
/LnmV8KtDvhz1b/iIxv8ud5XVY0/P676x+y1wZ/TH0+h5yfwc63t8OfkM7+2
wZ+z32/HebgTnF+oIt5+kvHfhnj7SfS43AZ/zvmBJ9Hzk+z/v7TBn7N/ybLD
n7NfvwE9P0X8ZKcN/lzzvbEF/ryO88lGWfw5fM11+PM68kHziLfXqT6mHej5
6eb4tfhz1SdphxP+XPM3/z3Ow51W/4Q12uDPGV+D0PNf2N89ynm4X1g/G+HV
fmV/+48T/lz94fLa4c/p/+n4818Zfw+i52c4326UxZ8z3l02+HPidy70nOum
dOLtZ1lfppE/P0v8046enyW+YUPPz+K33sCfnyMeMhV/fo72u2CDPydebqyX
4s8Zb33w5+dV/6JUB/y5+rO6N+fbz3Oe/3X8OdeDJpI/ryc/f9YGf0788Ywd
/pzzhD3R83rytafx57+xH7wPPf8NPfnMDn+u9TZiPXr+G/mIk+j5Bfz4K/jz
C/ABnYm3X9D70k/Y4c/h48bb4c9V36SfOd/+O7zGGjv8Of5+tBP+nPOYhfjz
i+wfbuc8HOXQYDv8Of4+ET2/yP4lj/z5Jer/PefbL6l+GT/a4M/Jf1UTb7+s
8RL1sR3+nHxDO/z5ZT0vfbET/hyeYbQN/px4dTvOwzXQHy/Y4M/VHjEJ+PMG
xlsc/vwKPEwVen4FvdzrgD9nPx5HvP0K8/d9J/y5vm9jNufb/+A8disn/Dn7
+4X48z/gW25ywJ9rvcu4Hj3/k/xXG/T8T85/DyLe/qe+d+MTdvhz9oM3o+d/
qT6mWOLtf9HfX6LnXM//Fz3/G738h/Ptf5OPHYCec33ONvz53xoPfpec8Oes
PxfR83+I71xnhz9Hf3ei5/+ovukWzsP9y3mh+9HzfzmfmU68/V/iL4Nt8Ofq
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
zM8p+PNBzeuL+PNmvyz+XNfjjxNvH6z65Rfhzwdrfof8iz9/TL+v60e8/bFm
vRd/rv6as8EBf67vCVyPng/R92S/ip4P0f2x4fjzIWq/0LlW+HPW8yfJnw9l
v9LWDn+u+Vn9LvnzoXpfrQd/PrR5Pyn+XO2Xegt/Hy5G9clow3m4GPaHszkP
F4Of+Q49j0XP8vHnsfp9dR7x9ljG+xny57G6P/dFG/y5ft9yL/78cc2f0hds
8Od6fqhRFn+u+kbsdsCfM78Xwas9oeedOmGHP9d4ivnCCn+u8V59wgp/ruvl
aej5k/iJSPT8Sb2v8ln0fBjPKyLePkzjI/wnO/y56nvlT/R8mPrjVF/i7cPZ
X22zwZ+zn5pkhT/X7xvD0fPh6q/yH63w5+xP2hJvf4r1fzh6/pTqd2o8ev4U
8ZLZDvhz9kurrfDnqk92jRX+XNdDAmzw51oPTNPx5/Hqv/pozrfH633VrfHn
8eq/lsvR83jpUccbmvhz1veVVvhzrS9VWxzw54znQTb4c70/3NgfiD9n/i3C
n49Q//uZ8OcjVP+CHPz5CPbHe6zw58zvb6zw56xPHxJvf4b14Fr8+TOsr2vg
1Z4N/e+8gvhzPd/ZxwF/rvYMnII/f1b1qWxEz5/DH+ZY4c81nws/ssKf631l
C63w5/p95lr0fKTeV9QOfz6S/slDz0fq/sCkJv5c7RudyXm4BPxamRX+nHjP
AfQ8Qf2X/r0N/lz61DgYf07ZacGfJzKfB6HniRpv0d/hz59nP+u1wp+r/nGn
yJ8/z/5iIXpOuSgPPR+FHmxBz0eF/nceR/w58a6X0PNRzeuL+HPN52xj/yL+
XO0dbuyvxJ/reuxQK/y52jN2OHo+mv3Hk8TbR6v+xf/izykfaYeejyb+MNIG
f675G2eywp9r/5L7KvH2F1X/yCgr/LnaL/G4Ff5czyts3cSfM17ft8GfU79S
4u2UUy7jz5P0vcnjON+ehJ+swp8naf3YeJsN/lz9W7yZeHuynleehD9PVv+k
DiTenozfa48/H6P5U/Aiej6G+v1ghT9X/QsP4s/H6HlOG/58rH5f+g/n28cS
rw5Gz8cSz+3H+Xaumxai5+NYb6aj5+MYD69Y4c/1/uyb0PNxqn9xug3+XP0V
dAI9f1njoeZjK/w58foSzsPx+5yfibePVznE2B+JP1d/T/Diz8erPxL3oufj
2S8a+1nx5+zP30XPX1F7nj+Hnr9C/NPwJ+LP9T0TFuHPU8hXjLbCnxO/M/YH
4s+JV1RY4c/VPuHBTfw5+8dyK/y5nhe1ywp/Tnk6ej5B788vQM9f1f0mYz0T
f67fZ+20wp/r9+GPwqu9ynoebIU/VzlzC/H214hXfst5OK7nPWyHP2f/MYy/
JzOR/c9dVvhz9UelsT8Rf068JdsKf676nX/aCn+u63Xt8Odc7zi7iT9Xf8bH
OODPVc439mfizzV+Q2YQb5+k5wW8Z4U/Z/03/JD4c+KDf+PPJ6t/U27iPNxk
tVe84d/En+v5Yd8Rb0/VfI1aiT9PVfvHXrHBnxM/DkLPuZ42E3+epvYLHmKF
P1d5TjZ6nsZ6UWyFP9f9V77Gn09ROdpHvH0K+YAXyZ9Pwa9VEG+fov5J2mKF
P2e/a+xfxJ+z/zLWQ/HnxOcS0fOpql/9w+j5G6H/nRcQf068eVwTf67xU9cO
PX9D/RnyLP78TT2/2GyDP9f1oFQr/Dnr13T0/E3V1+9pO/y5nu/3GPH2tzS/
MuPs8OfsH47Z4M/1fZFdibdP0/g84kTPp6n9/KJt8Odq39qR6Hk6+ZAO6Hm6
1oeYfeh5OutlLPnzdPKlReh5hr633Nh/iT9Xf5SGW+HPib8ORc+5HvanBf4c
/3EH5+HeJh4wBD1/W+M3qrcV/lztUW3sD8Sfq5zU0QF/rvaNGmOFP1d7pU1E
z6fre4J3W+HPVc44Qv58BvvF9vjzGap/QHf0fAb5uBet8OfM30VW+HPW43D0
fCZ+L4x4O+Ur+ej5LNU/bBR6Pqs5fiv+nPj8N/jzWez/C/Dns9X+KWct8Ofs
9z8h3j5b46HxVwv8ebN/EH+u94ekoOeZzeuH+HPdn7kIPZ+DX7obfz5H/VP9
hw3+HL9grJfiz4kv9Gziz1m/3Vb4c4231BMW+HPp4xUnev6O+vP8i/jzd4mH
voieU84z1hfx53qeM9MKf47/fB49f0/tWx9rhT9nvMbZ4M/Jv560wp+zH59h
hT9H/94n3j5X7wsJwZ/PZX0OJN7O9ZgszsPNY/5k4s/nqX2jLPjzeZrPtTPJ
n8/Dzwwlfz5f7eMaQrx9frN/F3+u38cHoOfz0atDVvhz/PFj5M+zyA8+jp5n
kW+7FX+epfpmm+zw5+wfjtnhz1lPj5I/zyZf8gbx9mzVL/QQev5+czxO/Lnq
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
/DnxiR7o+WXOAy1Hzy/r+3PmEm9vUHuaQq3w53pfhrH/F3+u9qhejJ436PmZ
h6zw5+j9OPT8Cv37FXrO9YT70fMrar8rNVb482beT/w5elGNnv/BfvEe4u1/
4KefssKfE3/Nx5//STz3e/LnlDteQM//ZD/6sxn+nPMPRln8ufozuRP+/C89
PzzFAn/O/nIaev63rre6E3/+N+uZyQx/Dk/7Jv78b42P+GIz/Dn8byH583/w
w7+g5/8Qb8yxwJ+zH//BDH+O/30aPacc0wF//i/zqy96/i/ztxo9b4TfmGSF
P1f9woPR80b1Z7QTPffrrvj52+i5Ub7KkzyJnhvlq/27Hz03ylfnfyf8+TXd
xf/0Qs+N8v+eWtMGPTfKV7u/pwX+vLvyZVYL/Hl3nRcy/Jb4cz3/1FTi7deq
fsFTm/jz7sqX/IKeX9ddfrbSDH+uct5zFvjz7sqP/YCeU47w4M9bqD4FB9Hz
FqpvaRJ63oLv222GP++u8wdOK/y56rexiwX+XL8Pn9DEn+t9/ivN8OfdNX9b
N/Hnen9IOXpulK/yqsPQc6N8NX70MnpOOXAY/rxld+Vfbmziz1U+YuyXxJ/r
e6K6cx6upeqfuhY9b6Xf501Dz1vp+TV3oedG+erfV7gLPef3ld3w5zdqvBwZ
Qbz9RvV/1R/48xt1f3I1+XOjfPX/DW7Cn9+k9qk09gfiz7uLR/kUPed641Oc
b79Z9Q8pIn9+s8ZLxCIz/LnGa/BpM/y56huyDn/eWvWpeBY9b633XXmGvyfT
Wu2f8rgV/lzllm/hz9voef73cr6dsjPAAn+u+mQ6zfDn/N4fPb+lu85TOczw
5zz/V/Sc8vlFxNtvUXvOGYQ/91f9N14gf+6v36evwJ/7a36EHjHDn6s+LS1m
+HO1X9ad6HmArlffj54HaPwGbMOfcz21JXreVv0dYqx34s/1fY2/kD9vq/kQ
f9AMf67+cNWY4c91f+UpK/x59//2G+LPNV7DRuHP22k+h1xrgT/X+Kloiz9v
r/dFX4Oet9f8Cp5rgT9nPu8zw5+rvknGeiD+XOPd718z/LnaLzEbPb9V4yM0
FD3voPdV9UbPO6g/gmfjzzuofXNach7uNj0/cTV6fpvqd8VYL8Sf63kuoyz+
XO+bY6w34s/1/UXr8ecdNX5yr23iz/V9WSFW+HN9X2k39DxQ88dpzEfx53pe
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
GP58A/GNIPz5BtU3/E/8+Qa+bzz+fEPzeRXx56pv5ngL/Dl6Nx49LyLelm2C
PydfeQf+fCPnIS6h5xu1XiXNN8Gfs578jj/fyPrc0QR/znmOgZxv/4z95W/4
c67HdMCfU67+Gn++Cf/7tQn+XPUvNPyo+HPVx/8c/nyzvjeuP/58M+c9+qPn
m9HnM5yH24yfykTPt7DfMPbT4s/RU/8m/lzjM+MBE/y5+jP/S/z55/jpfuj5
55yfMOa7+HPiJ88Sb/+c82ufoudf6Pexhv8Vf8772pjgz4lntjbBn6OXx4i3
F+P/W3K+vZj43Fb0vJj1qYTzcMXomY/8uYl8QRzxdpO+Z4IXPTfhN65Dz7le
cz3xdjPPv5Z4u5nzJG+Y4M/Jd4VyHs7M/ioVPbeQH12CP7fo9xlO/LlF/Vtp
6KP4c87DxeDPreRn7MTbrZrvkWnouVX1afU3em5tjneIP9f7TH+i5zb04G78
uY3zHH+g5zbWn/3ouV3jJSMIf27X9TJj/RB/Tv7tC/y5Q+0ZZeyfxZ+rv3K+
N8Gfc55yP3re9HtjvRF/znm2wSb4c/xykAn+nP33Kyb4c/b7e9BzF+1n6LH4
c83frCL03KX5Uv8ueu5iP/c1eu7W/Cl9h3i7m/zwIyb4c9qzA3ru1nhJ3oM/
9xCfM/bj4s9VjrqliT/X84Lao+cezsO2Q8+9xNdeMsGf6/nRheTPvZzv2IGe
ezXeO65Hz32sBwnouY/+Home+9TeCbeg5z76u2UTf8761R49L9H7K4z5K/4c
fT2FPy9B/xNN8OfM53wz/DnfZ/hn8ecaT37T0fOttE9f4u2l6r84P/S8VN9T
25l4e6n6s2Mp8fYy1c80jPx5Gf64Nf68jPNLi4m3lzXrpfhztfepRZyH26b6
+9eY4c/VHv43meDPGZ8W9Hw7+c8f8efbOW+wHz3frvqWv0q8fTvxvTua+HP2
d5eJt+8gv/+DCf6c8ybfEm/foflT9Dd6vlPPD3mF83A7iV9Uo+c7NV5qrkXP
dxLvtZrgz4mfZOHPKVeNJX/+JfmH8+g51+NjTPDnxBeGmuDPOd97Fj3fxXny
79DzXbwvifNw5eQ3L+LPy5vzU+LPOW+wFn9erv7IGoQ/r9DzEjeb4M/1+9os
9LyC+Ggh/rxC4zH/pBn+nPOxnUzw5/jRcej5V1oPIubhz78iP/oI/vxr8o8B
Zvhz9iNj0POv9b6Krej57ub5Lf6c+PU09Hy3+icyHD3fTf+tQc+/0fvjPGb4
c/S30AR/ru/JmoWef0M+0IWe7/l/+fM9mm+pM9DzPeTb0vDne8ifHTPBnxPP
fBs930u+bit6vhd/E4I/pxzqT7y9kvX8I/x5JfcvRM8pF3VFzyvhLbwm+HP2
wx4T/Dl68jt6XqXvK6sqhj/nfOi/+PNvyYftxZ9/q+cnDsafG+X6/63/e4rh
z/W+VnvQ8++a/aH482Y9Fn/OemA3wZ+jl9X4833q78YDJvhz9n/vkT/fR7zk
DvR8H+f3Gkzw55xHfgc9348fC8Sf72c+GX5Z/Dn5VWO+ij/vHt326g3F8OfE
kwvx59/zfd5i+HPdH/UBen6A/i8j3n6AeMffxfDnGk9BjmL4c/iIUvx5NfHq
BPLn1eyvzqHn1cSrjf24+HP2c+n48xriS8b8FH9OfvIZ9LyG/XYb9PwgfiAM
PT/I+bjl+POD5BdOm+DPOT/tMMOfq/0DpuDPfyAfv4R4+w/Es1PR8x80XxqG
oeeHOP/1Anp+CL8fip4fws+b0PNDnE/oj54fJj/6swn+XOMj+m3i7Yd1f1kl
en6Y53+AP/+R/bIPPf9R60vas+i5Ub70v/G0vBj+HH/oQc9/4rzWePT8J/Q+
mPNwPxEf+wc9/4nvXVwMf855iYMm+HP8Zm/8+RHiv3+h57Ws10/hz2vJn1aj
57Vqj6gD+PNa1o/JJvhz1af8RfT8Z84r5OLPfya+mYOe/6z5U28ywZ/reQWR
5M8pJ0w0wZ+Tb/8df35U9atZgD8/pvelLMCfH2P//yp6fox4Qlf8+THyFfXo
+XGtD2Ej0XPKxUPQ8+PEt4ag50Y54H/js6QY/lzPr9iNPz/BeUI3em6UL/6v
fT3F8Oecf52Pnp/U/Kv6Cj2nnP0o8faTGp+uDej5Sc5b2Ivhz4kPXimGP0ff
ehbDn3ePvvC/8dSjGP6c/NcizsPV6fkbJ+PP64gX7UTP6zjf2a0Y/lzfu/8G
9Pw0+rcdPT+t9h12O3pOuet29Py03jd3Af78F+KV44vhz/X+LmXo+S96/zOl
xNt/1XhLqiuGP+d8a3Ix/Lnma2tjvyv+nPjQT+j5Gc6DjMSfn1H7NIz6P6LO
PT7r8Y3jQ2x02JA2VJtKWztoFFtFG8kWaUtpQ9oibXTYKDbCRtgoNooNsWnP
+TiK5tSG2AitxIbYUmx02Dr8bJ3s922f91P/db+e5/l+78N1X5/7uq77vbzw
53r+8tvR873cr/61Gv5c65P6SDX8+ajEAyfHn+aFP+e+6tPo+T7N9+GniM/3
y35HPEW+fb/8X2Iser5fz6sf4IU/l79Mv4T4vEPj2V2BnnfIX1SkcB+ug/t5
r5Bv79B8NI4jPu+kXvYyet6p/sw02uLPNT8zf6B+zvd3RaLnB2R/NQPR8wN8
/jp6fkDrUdZYDX8+KrH/SXs+0wt/zv0KN/n2g7LfqEeIzw/KPwY/54U/Z38F
cR/ukMa7PAk9P6T16HYQnx/i/qbRFn+u8azfi54fZj/toX5+WPO/PgY9P6z3
FU8jPj+s/Zo0Dz3/n/Ro3mXk2/+n9Vld4uPPtf/uDSPf/i/5pXvQc9ozAtDz
f6mv/kV8/q+ev/pP4vMuzc/m3cTnXdwfvB89p934Dnrepf5WjCQ+7+Z+yOXo
eTf53jnoeTfnvUur4c81/mZj/4k/1/f9R6DnR8jXXUx8fkTjmXAj8fkR2cO6
EOLzo8T7+7zw5/Bqb1bDn3O/xOaFP9f79hh6LP4cf3cCPT9G/qfNC3/OfJdT
P+fz3LHo+XHq2WPQ8+PaXyWXeuHPuT9xsRf+XO9vWVINf671jQ5Cz09ovgb/
i56f0O/TthOfn5D/mnCNjz+XvTfNQs//I54oJT7/j/NiDnr+n8a742Effw7v
MJP6eY/sdccM6udG+8KTevSyF/48svf7axai50a79+8TudFzo93LQ45Cz412
732xW7zw55G99rPHSb79DP2+50sP/Hmk/v7wOei50T453jHJ6PmZ+nxeDnpu
tE/ax/Dn0XOj3VsPnuyFP49MDDypr8964c/1vAufQ8/P0u+LnvLCn0cm7j3p
70944M/VvyYTet4nsne+N19Pvr2PxhtxPXreR+PdG4qeG+2BJ8ff7YE/1/dT
E9Bzo93LG31Gvv1s9c9rnA/Fn0f22sfYSeTbz1F/x9zr488je/1Z1lVe+PNI
xYM96LnR7jhpPw+i5/6av2fWEJ8b7V6+IRc9N9oXnJy/A+i50d5nfB6+xwN/
rve1ub3w5xqv398e+PNIxQcPoOcBkaf2j/hz9a/a2I/izyN798+1zej5uZrf
ex9Bz8/V8wd2E5+fp/cX/eGBP9fnIa+i5+dpfhPTiM/7an4vXE983lfz1/ci
H3+utn+rF/48Un+fZsy78Od63uyD6Hk/9S8jhfjcaJ/0ZzMb0XOjfXI6arag
5/31vHX90PP++rxuP/F5f81XlbF/xJ+rvz0ric8HyP42T/Px5+pP5wPo+QDt
R79t6PkAzUdnFHoeqP4FTOF+e6DeP9gfPQ/E3qzoeaDWx+Xv48+1PoV90PMg
jefNs9BzPq/8wgN/rvUuWI6eny97azX0TPx5ZO95NbTOA38emdjvpH950gN/
rvGkXubjzyN7/d/mAvT8As1/x0ce+PPIU/ls8efavznjvPDnGk/Ah174c81f
9An0/EI9f8MGL/x5ZK+efXIpej5Q7dIJ6PlAzVfaYQ/8ueY7fjzx+UA9L3w8
+faL1A78ED2/SONLD0HPL5J/St9PfD5I67N3FnputE/63+qFXvhzvW/lj+j5
INlP01j0PFjrE7UUPQ/Wery5jnx7MPbzCnoerPF17vbAn+t5bdPJt9P234qe
h6h/pXO98Oeyz6SdHvhz2cNCX3x+sT63tnjhz+Wf6xYTn1+s9XNdgZ5fovfV
vki+3Wif1NPgu7zw5/JP7eno+SVa3xF90fNL8b+R6Pml0pu2r6mfG+2T+aCk
QV74c+23Q6PQ88Fan+YfvPDnel5mMfH5YPW32Mp9OL6fm4SeD4lMHHDyPPmd
F/5c439zMno+ROtx1zPo+RDZ06Rh6PlQfb7uDPR8qOZr9nD0fKj2j/d5D/y5
+tNdR749VPPRWkl8Hqr5vKuH+DxU+7HPZcTnYep/mKG/4s/1eeJG9Nxon8wv
VdZ54c+lJ/496Pllsp/ZO9Dzy2TPqX5e+HP1z6/HA38eeSpeFX8ufdv+M/l2
o33yPJ//mBf+XOMPqkHPh2l+bR964M/1uasMPR8u+2xOIz4frvFVPkJ8PlzP
z1zvgT+XPZQs9cCfa/52X4Se8/noTg/8ucbTsB89vzyyN15PX+CFP9f+SzDi
YfHn2m/zHkTPL5e9Bd7vhT/X+geXEp+P1Hzu9hCfj5T9jk5Fz0dqvIVWD/y5
5jNtlAf+XO9PM/az+HONxzSA+nm45vvaGPLtEdpfZWvQ8wiN73gb8XmE5jPz
Z/Q8Qs/bdDbx+ajT+1HXY9X/6u1e+HP801nUz0fJvuLf8MCfRyb2PWm/W4nP
I7Xf+tyEnkdqvM3bPfDn+v2I5eh5lMbfNdMDf67fBxlt8efqf+xw4vNo2cPK
CvTcaB/qOfn3HTzw51qPrq+88Oc6H9ybiJ7HyP5Lkrzw53re2AT0PEbr7QpF
z2M0v/7LvfDn6Esz+fYrpGfWJvT8CvU3pIn6+RWyv4zJHvhzjc/1I3o+Gn15
ygN/rnbGeC/8ufZj0Jke+HP821L0PFb9DVmKnseqP/77ybfHan7DPV74c63/
4IHo+ZU6jzVd4YU/V/8bryQ+v5Lzv9EWf67n58Wi57SDd3nhz9W+1Em+/Sr1
99p28u1jNJ7mFvTcaJ/Mr7RVeOHP5W/9jf0h/lx65OqHno+VvRYa+0X8ueyr
8w0v/Ln6WzPSA38ue6gv88Kfa38tfwY9v1r2cWwy9fOriTdC0PNrtN62G9Hz
a+TfvXd74M9lz9G16Pk1mt/op9DzOM6nr3vgz9WfjE/R8zjt19Zh6DmfTzqL
fHu8/E3bLA/8ufZjxSoP/Lnmd3YY8Xm87Cf0Q+LzcepfebIX/lzr0/MY8fk4
vS/pMfR8nPxVhWHv4s/1vAJ/4vPxel7uBOLz8VqvBfnV8Ofq36716PkE4plG
N/x5JH/f2gN/rvWt+Rc9n6D9bP3eDX+u+dkbQnx+LettnD/Fn2u92g8Qn1+r
/dC90QN/rv3bctQDf679GH7EA3+u+ChuH/n26zTeMW7y7RPVLrmK++0T9f2W
HC/8ucZbf6UX/hz79fPAn3OeuwA9T9D4s973wJ9Lf4pjiM8Ttf+OX0F8Tjv/
Dy/8ucafPJX4PFH7N22fB/5c47c95IE/13hz5qHn1+s8EDHSC39OPHfYDX8u
e/B/Fj2/Qf49/mf0/AbZW+Ja8u03yL9ssaDnkzS+nA43/LnsNy0APZ+k9wcN
8cKfa/6iConPb5T9TfqE+PxG4iGXG/4cvR+Bnhvt/Sft9Tby7ZM1/msTic8n
K37PvxA9n6zxrl+Gnk+WfSUa+1P8udYv4QUv/Ll+H3GnB/6ceGmwB/5cv0+9
lvvtSXr/t3cQnydpPsuMtvhz2WP4cuLzJP1+9mr0PFm/T/8UPU/W+8o/8cKf
a35autBzPs+NIz6fov0ZdIEH/lzt9quJz6dovjIOeuHPtZ7xDxKf36z1jshD
z29W/4umeODPtR+W55Bvv0XrGx5Pvv0WjSfdS779Fu2X4G/d8Ocaf0KBB/5c
8+09Hz2fKv8edjZ6PlX+M2Uq8flUxYfWgx74c/brLcTnt6o/G6LR81vlH8KM
86L4c/nvlCnE59O0/xL/c8Ofy76yKr3w5+pfxn3o+TTOP/+g5ylaj4QIH3/O
elb4+HP9fsU9xOcpGk/PXOrnqdo/G2I98Oc63zYecsOf630hQ9DzVD0vbhV6
Pl320pznhj/X/GWOIj6nnR1M/ZzvJ1a74c/lb7f87IE/1+c1d1I/v03rn/Cm
B/5c/qwlxw1/rv2b9Aj59hmajyK7G/5c8+9Xhp7P0Py3xaPnM7Hf1ej5TH2e
lE58PlPP+3gm8flM9a90Enp+u/qzbAZ6frvOE0XXe+HPOc/Mc8Ofo7+D0PNZ
6M0K9HyWxnNsEXo+S/3ZcCV6nqb+2orQ87RI/r9DL/y57HNDnBf+XP6j+0Ev
/LnOEw1XEJ+ny14LriA+5/O9Meh5un6fudsLfy7/n3+uB/5c9hD+nRv+XPth
2Xz0/A7Nf2sVen6nxlMbjZ7fKftIN/RI/LnsMcVoiz9X/iLiLA/8ufxD2Cgv
/LmeH++Hnt9FvD3Sx59rv+fFe+DP9f5jGej5bI0n3p/4fDbr/Tjx+Wz568rX
vPDnen7DFuLzuxVPJj/lhj9XfwuN/ST+XOvld7sX/lz7KzbbA3/O+s33wJ9r
fHWRxOdzZB9tKdTPM8gfpKHnGepf9jji8wz517xj6Hmm1mfLUS/8udbHOscD
f67xp1+MnmfKfje8hp7PlX14r/bx5/IfZcHUz+fq937GfhR/jn0HEJ/fI3u2
pnngz/GnVjf8OfHUQvT8Hq1X09fo+b3y3xUveeDPtf+qZ3jgz+U/Y+93w5+z
/oOIz+dpvN773PDnOh+U/Iyez9P8tAWSb5+n+Uw9Snx+H/uz2wN/zv7rT779
PvJdo9Dz+/Q+Z1/q5/N1PuqJRs9p+9/phj8nv/ABej6f/N888u1Zsq/Ke6if
ZxHfXY6eZ5HfmOiBP9d+bX/dC3+ueLNtBHpOu2Qrep4t/9XW5oE/13jLwrzw
5/p8dIob/lz+JWko8Tlt69Ue+HPtn+Az0fMHZA8rJnC//QH1v2G5G/5c5zG/
BcTnC8hvfomeL9B+zTDOh+LPI0/VA8WfS5/qKtDzhcoHJ97qhT8nvr+F+vlC
8hO+++0LZS+l96Dni2RPEUZb/Dn6+qMH/lz2m2XE7+LP5S+XjkHPF8seei4i
Pl/M+fMAer5Y82Gdhp4vlr2Vd3jhz7V+yYYeiT/nPDTODX/OefFbD/y57KPT
4YY/l32HXuOGP9d8t7q98Ocab/pK8u252u9dDvT8Qa1H9/Me+HPtj9HF6PmD
sp/aqeTbH0Q/jP0h/pz6TQTx+UNan+z7ic8f0vw2ZFE/f0j2vu5c4vMlGt/q
y9Fz2s8E+PhzrUfg6274c9mDbY4b/lzzmfg+er5U+lK3Dz1fKvtu2UN8vlT5
rMxG9Pxh2XtPqBv+XPbT8y16/rDOZwV3EJ8/ovkN+ssDf67xZcaj54/o+8Ez
uQ/3COfDFdyHy9N8Ny9Ez/M4Dxe54c8j+ftJHvhzPa/2fvLt+bLHCuM8Lv5c
/rLeON+LPycfbpznxJ9rPiKC0PNHNf9NN7nhz3nfTeTbH5W/CzDiKfHnmq/q
rS74c/mz2hvQ88c4761zw5/L3vLfc8Ofaz/7n098vkz20f2KB/5c6x3yMPXz
ZbLv2FAP/LmeV+z0wp+rv6WGPog/l71O6u/jz6WHcSc88OfqX7wZPX8C/T9C
fP6Evu9vQs+f0PtLfyE+5/v5lej5k/jfLhf8ufyB3zzi8yflH8Ob3PDnen6B
cR4Uf059y7A/8edaz4JJxOcF1Edv8MCfy97S3yXfXqjn105EzwupD4eSby/k
vDyLfPtTmv/Rr7jhz8l3n0n9/CmNJ3cl8flTOq9k34aeP8355SU3/Ln8TXgx
8fnTGk/scTf8ufTcO90Nf67+VQYTny9nPxj2Lv6cfG0W9fPl6p9fshf+XOtb
8qsL/hx9ft8Lf67xlUxxw59zPnkdPX9W65O5wQ1/Tv4nwwN/jr7sd8Ofy1+X
3E18/pz2t62fG/5c4y9yUT9/TuuVbdin+HOdB/2GkW8vkv/siEfPi7A3G/Xz
Iq1/y2su+HP1L/F7F/y5xh+41A1/Tv3a6YY/J14+0w1/znnpYg/8Oc/PRc+f
135oiHPDn8t/lH3lgj+X/6s44YI/l7/KH+uGP1f/Mo3zuPhzzkNHXfDn8heN
Gej5CvnvlCMu+HN9Xh5Ivn2F9K/B8LfizzV/6bPR85Va79q33PDn1Ju2u+HP
pWcVn7jgzzXfReei5y/inxrd8OfyH9lu4vMX5Q/LOlzw5xpPnNMDf675rtvp
gT/X+sfNdsOfc/5oJT4vUXySP80Lf675i//YC3+u/RG4CD0v0e+za7zw5+RP
3yE+L9X305o98Od6fvFP6Hmp+p832gN/rvlKmU58/rLmJ/xiN/y5/EOZsf/E
n2t/xP6P+PwV7DvBC3+u9/dYXPDn6PtiF/y57Dmtk/h8lewtz06+fZXmu3o/
8fkq8pdB6Dntjndc8Of47+Ho+Wr273/o+WrZX93fbvhzzW/mcQ/8ueazsZL7
7a/K38T95YY/P61n4s913mre5YY/1/5J9nfDn8s/JKZ64M9lzxnG/hN/rveX
lnvhz9mv0zzw5xrPBiP+EX9OfXu1C/6cepPFDX/O+W81el4uf9+0CD0v5/z6
sgv+XOuzZRj59tc1nynrPfDn+NsH0PPXiS+PoedvaL3qX3TBn+t5SdXE52+o
P4UrXfDnWo/ibhf8Of7ZaIs/l7+sNNriz8mX/+uCP1d/alPQ8zXy3z33uOHP
Za9pG13w55q/hEg3/Dn51W/d8Ofa334HXPDnso90Qx/En8uf5C8kPqcdW++G
P9f70270wp+zXmlu+HPZe/o6F/y51j9rPvn2Cn1e6ELPK2RfpTPd8OcaT9MN
Lvhz/OnZxOeV5AvyXPDn5Kufc8Ofo5+bic/f0fkke6cL/hx7/9ANf67+FF9E
fP4O5+9C8u1r1f/aAvR8LedH4zwk/pz1eA89X0t9tA09ryKf8yd6XiV/23OI
+LxK6x3yKXpepf6lHiQ+N8n+Qld54c/1ebkRv4s/V3/9niLfbpK9pZ7thj9H
73ag52b1P6nMBX+ueCBzMXpu1nxVD6F+biGeWoueW7ivNx09t+j9QanouYX8
+HEX/Ln6a7vSDX+u/dFpp35u1XpGpKPnVuKXc7gPZ5P9tZ5PfG7T84pfcMGf
63wdvpj4nHbLWvTcjj33oOd2PT8t1QV/Tr3lfuJzu/ZH7q3ouYN4fTh67pB/
DvqC+Nyh/d/xJHruJH/zjwv+nHpqFPVzp/ZLmx/34Zzyl6mvEp+7dH4MMc5b
4s+lV/XT0XOX5qv5Txf8OfcR6onP3dQfDPsWf67nJS5Hz91a3+LrXfDn2PNe
N/w567XUBX9OPc3fBX+u8aUZbfHnrEeSG/6c3493wZ8THz5L/dwrfxS02w1/
Ln9e3Z/4vFrz1ZlHfF6t8RQscMGfy1+EXYSeV2t/Ff2Nnr+r9d8wxgV/Tvx9
wgl/jn9/l/j8Xc7rhr6JP9d8hk9ww58z3snch3tP9tTQxw1/rv41xaPn66i3
l7vgz/X84r4e+HPyBxdyH26dxtt92Al/jr5kueHPNf9p56DntDeMdMGfy16r
v3fDn1MvMPy3+HN9XnqGB/5c/anJJN/+gfZr6zbi8w9kn95V6Dmflxrxivhz
vn+fB/5c/jNshgv+XPaZX+SCP2c/3+aCP9f+L05Fz2u0f0Z/6II/l302z6F+
XqP5CN/rgj/X80INvRB/Tv7gU+Jz2jmb0PMPGU+LE/6c+3kveuDPOY9ciJ5/
JPtKvYT4/CP5z6wQ4vOPOB/NIN/+sfxtdjv184/1/YJnybd/rPFWG/5f/Dnx
4G8u+HPyW+ej559w37uQ+vkn3Kcw/iX+XOeV0de64M+lNwE56Pmn3H8yzpvi
z2Vf5We54M/Z74OIzzfKv9t+ccOfq7+ZreTbNxL/mIjPN2o/Z73lgj/X+iQY
/lz8ufZ/t5X4vFbrmW8lPq8jf2PEU+LPyU/+THxeJ3+X5e+BP9d+DjzDDX+u
9zV96YQ/lz+pPOKEP+e+WBZ6/hn3Ec7ywJ9rviq/Q88/136oHk2+/XPyWxEu
+HPur8eg519wHyQTPf9C9t74qRP+nPz8a+j5F9qP4THo+Sb8QRrx+SbqOR85
4c81f/EZ6DntzL1O+HPu/xv7Tfy57C/+kBv+XOtb8JIH/lznjdDPiM+/4j5B
EXr+lcabV0S+/SvNf4+hf+LPed5lxOf13N/e5YQ/xx+864I/V38rq9Hzeq1H
7gb0vEHr0X2TC/5c9pZ8K/fbG/AXjxOf+z7f4YQ/1/7oepf6+dea34rdHvhz
7tdMdsOfkx/vj55/I73ptLrgz9WOX+KCP9fzy/q54c81vvYA9Hyz7Ld8Ivn2
zTqvliUQn2/WfPmf44I/l73ZjPhI/Dn3Saqon38re8k4m/j8W+3fjHfQ8+/I
f77pgj+XPZZkueDP1b/4NW74c81HxlXE599rvVJ60PPv8Y/HnfDnWq+wb4nP
v6ceUIaeb1E81WbEG+LP5U+zGsi3b0GfotHzLdrvjaNc8Of4ty+JzxsZz2dO
+HPNR3aJG/6c+yIR6PlWzXfrSOLzraftXfw5+WQjnhF/rvcVP098vo37PMb+
En9OPXYG8fk2+euU24jPt2n+k4ai5z9oPjuM+Fn8ufQ/MYX4nHbDehf8OfFX
G/n27ez394jPt7O/DT0Rf44eP0F8vl32WDwFPf9R40m+iHz7j8QXjxGf/6j3
dTzqhD+Xf4r/nfj8J/Kzk8i3/yT98P7mhD+XfyhbSnzexP2FAeh5k+yl52f0
vIn8Yz/0vAl97IueN2v/bqlywp/L/joWueDP8d8V6Hkz58Ns7rf/rPUtb3TB
n/P8t53w57KH5Ktd8Ofqb84ZxOe/cN9nDHr+iz4P3uyCP5ce5mZSP/9F9uv9
yg1/Tr5tnhP+nPyXYd/iz+WPWjOJz3+V/YXFoOc79PvOleTbd1D/3kR8voP6
4N3o+Q7ZQ+4mJ/y51j8i3Q1/Tr2zxAl/zv2ykej5b+yfYcTnv8teC54n3/47
9bgh6PnvxDf7iM9/j+T/r0DPW/R57PNO+HM9v8bYP+LPtT75N6PnrZq/tqno
eas+b70IPW/lfkkSet6q+aspcMGfa79VXEJ8vpP78m3o+U49P/Bh7rfv1HwF
THHBn8t+U+zo+R/aH8n9ic//oH7jdcKf099lTvhz9S/WaIs/p17wiwv+XP2p
6Uv9fJfWtznHDX/O+fh+7rfv1n6uHE/9fDe8nD/59t3aT/5W9PxP8i9LnPDn
nB+3Ep//Gcnfg3LCn6u/mblO+PNI/r8t9Pwv/OM2J/y5Ps+JpH7+FzzcK274
c9ZnDXpOuzLKDX+u/RlstMWf6zwWOsoNfw6/Nt8Jf679nnXMCX9OvXiOC/5c
ehxn+Gfx59of5XUu+HOd5wqHk2//W3qRuJF8+9/cpzfO2+LPtb5bniY+/wd+
4yUn/Dnn3QL0fA/5euN8L/5c/SucTr59D/dtQ7gPt4f6cLET/px6xyD0fC/1
t2ku+HPZh1+RE/5c6xHwnBP+HHu8jnz7PtmLrZn4nHbj0074c/zRU074c/n7
wB+5D7cfPsaIn8Wf6/fpk4nP98v/1d/ogj+nvtjqhD+Xv6w04iPx5/p+qLEf
xJ9rvwY9QHzeqf2R9i3xeaf2W+Ov6Hkn54dKF/w5+QcjXhF/znmxyQl/zv38
L9HzA7LPojfR8wOyt6S56PlBjb/lc+Lzg6znD074c+KX4dyHO6jfV5S54M/J
P25Ezw/p+5VbnPDn2o+x/6Lnh6SXCf7E54fJH5S64M/hN2rQcz7334CeH9bz
sztd8Ofaj3FGW/y59putwwV/Tr0qknz7v1qvsq+c8Ofklwai5//S/3vQ83/R
uwuIz7u4H+Nxw59jbyPQ8y7Nf1cbet6FHjnd8OfcHxpGfN6t94Xc7YQ/1/nE
Lww97+a+wZ1O+HPin0+c8Ofo0STuwx1B755Ez49QD78UPT+q/V4/ywl/zv2c
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
Rc+v1X5r34WeX6vxbIhBz6/DP3/mgD9Xf7PmO+DPtf45jej5ddrfAc8Qn0/U
eSbLiBfEn7P+Dznhz7W+nXMd8Of4l0HoeYLWo2cg+fYE2XdQhgP+XPutcRj3
4RJl7yk/oeeJspf6MPQ8Ufst6zEX/Ln8Yftd6Pn1en+o0RZ/rv0S9AX59uvx
r+sc8Ofo/efo+Q3ENyfs8Oec/793wZ+rHW7om/hzzVfnp+j5JO3vhkHo+STN
T/PX6Pkk2VPiXCf8ufrbNt0Bf67n5RrxhPhz9ofTAX8u+ws7ywl/rvmyGvGR
+HN9Hj8bPZ+s+W4/ZIc/13xF3El8Pln2UDaf+PwmzVd1Xxf8uebbOs8Ffy49
aj2X+vlNen7hfjv8uew39B0H/Ln0MdgfPU+Sf8j8kPp5EudNQ1/En8te425E
z5Nln1kp5NuT5d8L1hOfJ+t9JYeJz6eQf7gDPZ+i8YTdgp5P0fmlw9Ab8ef6
PHkKen6znj/6GPH5zdKPiKPk22/W85sr0PNb0Jfp1M9v0fym7nHAn2u+uv9H
fH5LFH9fknz7VM1PeDt6PlXj9x4kPp+q807xiw74c/1+yxTi81vlX5p2o+e3
ar2Kkqif3yp7bF9Fvv1W6UXrjcTn0/T8ZMN/iz/XeqbHoefTNF8l2+zw55qf
nl/R8xT5u8wXyben6PcNY8i3p2h+Cq9Dz1Pkv1uuJD5PlT8JbnbAn2v/tX1r
hz8nfzbCAX8ue7Aa8Y74c/IfpcTn04kXjfOw+HP9Pv4HB/y5nu8di57fxvnm
aernt+l5G16gfn4bemLojfhz+YumJ9HzGfJf8UvR8xmyR+sSB/w5+cTtxOcz
tD5dX6PnMzW/bYY/F38uf+5Xa4c/l31YG9HzmepvRD16fjvnyaFO+HP5g7xP
7PDnen/qUvR8lvxJ7Md2+HPNp/cS9HyW7KXwQfR8lvpbko+ep2n92kKpn6dp
fitD0fM02X/2UPQ8Tfod8il6nq71DhyInqcr/ihfQHyeLn9Q/gB6nq759j/L
Dn8uf5XyGXp+h/xnTxbx+R3anxHTbfDnsr9Mrx3+XPNdtgk9v1P9KUixwZ/r
86SPnfDnxEdmG/y5xt81ww5/rvkON9riz7UfWi/iPhzfD7yIfPtszXfJWhv8
uda71YhfxJ+rv+X3oueztb9zum3w55qf+HVO+HPWq4b4/G7G50++/W75k7J7
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
+lJ4tXatT2KEjz8nHz/Sx59zf8NMfE47ex56/rf8ccgI9Pxv7lt50PO/uW8U
Yoc/575mPyv8OfcDQ4nP/yH/3tcKf67xlf1jhT/n/uE2B/y5/GfhAfR8D/v5
NuLzPVrP7It9/Dn5rOXch9tLvTrVCn8OzzfIx59rfQO+ID7fp/OEbZcV/pzz
7UD0fJ/WJ7gBPd+n+Sx5m/h8v+bH2oqe7yf+G4We83nLFPR8v+ypZL0F/lzr
mfGKFf5c+pU6zQ5/zvjP8/Hnmr8SX3zeyX3Xl9DzTs1fUAR63kk9YQr59k7i
LY8F/pz7ayuIzw/Ap9U44M+137p+pn5+gPvJC9Hzg/JngQupnx/kvl+yjz/X
eiUftsCf098bqJ8fOl2fFn/O+hy0wJ+fzu+LP2d9J9rhz2W/NYds8OeavzBD
X8SfUw+PQ88Pkx89zH24/+n3mQVW+HPqh3ss8Ofyj62Gfog/J5419EL8ufzb
hgbq5/9S3xmAnv+r8TX9bYM/1/5pWEZ83kU+6U0L/LnsI64f9XO+nxqDnner
HTTTAX+u5yfVoefd8DTR6Hk3/nUpen4EfzjKCn8Or3oren5E81MdQf38iOYj
Lpd8+1Gtt3+4Hf4cPc6xw59Lj5suR8+Pyr6TXrHAn0uP6hda4c/JF5Xa4M+5
330CPT+GPV5mhz8n374OPT+u/ndn2+HPtf6VWeTbj2s/Bs4nPj9Bvq2LfPsJ
7h+67fDnWr/U+6zw58RrIej5f9xf/94Bfw5v9r0N/pzzn+HPxZ+TvzPa4s81
3vQLud/eo/VqiEPPezTfoWby7X7R+nuw8eTbjfbJ/qRd7YA/j1Z8O4D6udHu
zZfUE5+fEd1rTylXcb/daPf6gy/Qc6Pd+//DfI6eG+3e///lM+7DnRmtfNnj
xOdGu/f/F1qGnhvt3r/vVG+BP4/Wefdh6udn6fnxn9vgz/V5/iwr/Hm0/n7A
X8TnRvukfXSlcB+uT3Tv/quJIT6n3e5HfN5H/Qn+lPiczyN+5z7c2ep/zQ70
3Gj33mcejp7zue0Y+faz1d/CXOLzczTf3mY7/Hm08v2vEp+fo/c1Gucd8efR
veeR7Mnk2/2je/dDyi1W+HOtZ8Qq9Nxf61dyrwP+XM9L/sUKf67P8xzcbzfa
vf9fZKkV/lzrWbCF+Nxo997v/x49P1fr3zHZCn+u94cZbfHnmu+2e8m3G+3e
eozTBn8e3WufiROIz432Sf+/4Qb0/DzNX8P9FvjzaJ0njLb482jxrgO4395X
z0tPRM+Ndi+P+yX59n58f6wd/jxa5+Fv0XM+9x9ogz+XPWUb+iL+XPPT/A16
brR7/VMt9+H6a75Kgmzw57If/6es8OfqT0ohej5A89lh+FPx53q+7Un0fIDs
I2EK99sDo+WfI4nPA/X7rr0W+HPZT+Lr1M8Dtb4J29HzIM1vx10W+HP1v3A9
9+GC1N+SEeh5kOyr5wj59vOj9fcdfrXBn2u8ab/Y4M81/51LrfDnjD/NAn+u
/VFaSr79AvU/52l4NaPdm29v4H77Bfq9N558+4XaPyH3EJ8b7d56zyV2+HP1
t2mRFf5c76vLQM8HRqseZ8T34s+je893cb9b4M9lz3GPkm8fqPFWb/Tx59Hi
bZ4lPr9I6xE7FT2/iP3pQc8HaT9kv8399kGyp9K30HOj3fv/5cyzwp9H6/8/
7k/9PFiflz/Jfbhg2UP468TnwdGn4nXx53p/hBU9D5G/TXsXPQ/R/NS+YIE/
13y03GCBP9d8NhjnZ/HnWg/rfOrnF2t+wmPR84u1n0Pu8/Hn0eLTv7XAn2u+
egz/K/5c/enZbIE/l/3k+HEfjs9r3yY+v1T+I+khG/y5nt/6lhX+XOuTPscB
fx6t/P0o6ueDZV/1/dHzwdrvo2dwH26w5jPpiA3+XOOrfxY9HxIt/qWL+HyI
1rvza/R8SPQpHk78ufxVoeG/xZ/r84irLfDnen/JauLzoRpvcCHx+VDpXf10
8u2hsv/wZuLzUO3f+j5W+HM9L+5z9DxM/e26FD0Pk73FG+c38efyn60vEp+H
af29H1ngz9HPPDv8ud5XtMQCf679ZPub+vll0tfyRiv8uewn5Arq58O0X23f
W+HPtR4VOej5MM1nxB3E58PlHzuM+EX8ufQqMZL7cMPln+N2EZ8P1/oVrCE+
H6H9E/eeBf5c/q+s1QZ/rvVtqSY+H6H5insAPb9c7XAven657L+oL/fhLpe9
5b5mgz/XfCanoucjtd6VccTnIzV/tfMt8Ofqf8rnVvhzzV+zDT0P1/zm7iPf
Hi77T7uZfHs49ryHfHu41q/oH+7DRWg/dcyhfh6h/kX8YIM/136te4T4PEL+
JdmIR8Sfs57v2OHP9Xlqow3+XO9PiSLfPgq9uoL4PFL233wHeh4p/xQaYoE/
l//JakPPo2TfFSOJz6NkP2HHrPDnGn9WAvfbo/S8siNW+HP8RYMN/pz1KKN+
Hi3/UzCf+nm0xpN/n48/V3+Cz7fAn8teig5TP4/R79ueQM9j0M+D6PkV6m/A
49TPr5D/aei0wp9rfB0bbfDnsj/rL8Tno2UPtast8Oey/4KbiM9Hyx7zVlng
z7XeoR/b4M813vYL4NViNb7EJgv8ufxD/SVW+HOtX9sxG/y55jf4bAv8ufS7
sYH6+ZWyf/8pFvhz9b9kK3p+lfxx/goL/Dnnk13k269C/w1/Lv5c+7NigQ3+
XP3P3WmFP9d8ZxUTn4/R+rTUch9uDOeVx9DzsfJXAVnE52O1P8N+Iz4fy3nL
YYM/l78oe8YCf6731e5Fz6+WfXUNscGfy3/lp6Dn17DfYtDza/T+5PfR82s0
nqA24vNrpP/5JVb4c9lr6DlW+PPoU/cPxJ9r/yYcMsOfa/6Sllngz7VeCQu4
Dxev57evsMKf63PvTdxvj5f/9DsTPR+ndvMb1M/HaX17bkfPx8kes24n3z5O
8+nXYYY/xx8FUT8fr/UIC+R++3iNJ3aADf5czwv9hfr5BLULzNTPJ2h96puI
zyfIniJW2eDP0du/iM+v1fvKz4VXu1brtaWS+PxanX8aStDza/n9Nni167S/
rZEW+HO9L+wO9Pw62UPTMuLz6/T8phe43z5R9hu+ywx/zn7/FD2fKP/XecAC
fy77qOm0wJ+r3fgN9+EStN/aW8zw51qP0c9SP09Uf7p+ssOfS19qvqJ+zue1
51I/T5S/SCkl33699k9CIfn264n/XrLDn8t+mtdZ4c/lH3r62OHPNT+Vgy3w
54wvnvj8htP+Svy5+lN/yAp/rvkriaB+Pon8gRGviT/XftiwywJ/ru8nua3w
5+pvQCf59hulX437rfDn8sdd863w5/LHzcPIt0+W/ys6yn24yZq/aiMeEX+u
91nnkW+frN/HP4ie36TzWEou99tph/+Knt+k+fAzoec36X21gRb4c32e/aoF
/lyfW8PR8yT505z+Fvhz+afgSuLzZK1HeIUV/lzzW7aT+DxZ9rxhOLxasvxP
5zDuw03RfuncZoE/135oziXfPkXnjeyXLPDn6k+Chfj8Zu33vEYL/LnsvdRk
gz/XfitNRs9vkb/M9tjhz2WPGUa8If5c653jy7ffIv8W6iQ+n6r+V/5khT8/
fX4Xf46eGecl8eeaj4xp1M9v1Xy0/G6DP5d9N25Dz2/V/uv8ygJ/rs+7G9Hz
aRpf2Akz/LnsL3WTBf5c+7/+bOLzadofAZ+j5yn6fqvh/8Sf6/nlP1E/T9H7
y4+Y4c9lfwlvUT9PJf/2BPF5qt5XMI37cLTzJqHnqepvyDjy7dP1/MrH0PPp
8rdJ11M/n67nl1yDnk9X//xWcr/9NtlD81NW+HPiH8P/iT/XeNPPpn5+m/Zj
d4EV/lz9azpqgT8nn/Ay8fkM8kkbLPDnsi//vuj5TL0v6Vn0fKb8Y+F64vOZ
0qPKL9Hzmei5wwx/rv1W/jH59tv1/to9Zvhz4rN89HyWxtv+jY8/l78sK0LP
Z2l+4/82w5/L3+WcQXyepv3l9zjxOe3Gh7gPl6b+Nj/Ifbg0/b4iGz1P13ib
sizw58Qz75jhz9GHavQ8Xf0tPoie36HxhMynfn4H+ZOl6Pkd2s+jh1vgz7EX
C/H5ncQ3+4nP75Q/zVjn489lH9UfEp/fyfgescOfa34TfjPDn8s/FtiIz+9i
PHMs8Ofyr+nzqJ/P1vPaR9vhz3W+6rjEAn+OP3ai53y/ZqSPP1f/O/4hPr9b
9h/UZIY/l79rvA9ejXb8TuLzOezPi4jP59C/t9HzObLv5mb0fI7205YsO/y5
3l8y38efa/xdFh9/rvVLtvj4c/mv4J0+/lz7paec+nmm9LH6ezP8udavbaAV
/lzz0zaU+Hyu+lezwwZ/rvm2vkF8Plf+My+d+vk9ig9a+6Ln9+h5ZdOJz+/R
+S31e+Lze7QfQi8kPr9X9pEUbIc/5zyYRnx+r+y59hkz/LnmO9Foiz/XfCd/
h57P0/xE9LHAn8ufJ7xEvn2expf8rAX+XPaW852PP9f7Svpzv/0+zX/JFxb4
c+KvG6mfz9f+S7uR+3DzNR+Fn6Hn88kf3WSDP5ceFdeh51mcN7+ifp6l73ef
6ePP1d/0z6zw5xpfdR/i82zOv9fb4M81f2XXoefZel5sjRn+nPzHtVb4c9ln
pR/x+f2yv4rx5Nvv13qlFVI/v1/2k/c4ev6A+ldu+D/x5zoPhdWQb39A7y9f
j54vULv4Ayv8ufrb1A2vtoB8eI4Z/lz21LOE+Hwh+cvD6PlCvT82z8efaz43
jLbAnzPe0eTbF7H+S9DzRdhbLnq+SPObvcTHn2v8Se9yH24x+dRO4vPF9NdN
fL6Y50ej54vJv+3jPlyO+ldgJz7P0f6M+McKf6731RvnW/Hnssfgv63w59QH
rOh5rvqbmY2e58p/p7eh57nEF9nk2x9kfH+i5w8qP5O92wJ/Hn2KBxB/Lr1J
vJf4/CH85TDi84fUf9sw7rc/JD0prDTDn+NPM4nPl8g+CkOJz5fofNc6FD1f
Qnw+BD1fovUfPQQ9X6r1D5qNni/VebH9TTP8OfUJoy3+XOfDrF/Q84fx5+XE
5w9rfDVNVvhz6hFNFvhz4qcyC/y5/E/7LDP8udY3bxZ6/ojmJ/EH6ud56P8P
xOd5Wv/gmdTP8zhfnW+DP0cvX0HP8/W+ulfM8Oc6LxU3km/PJ/8f6OPPtR7l
KRb4c61n+3fo+aP4+/PQ80fVv46p6Pmjms9yfx9/Lv+WcKsZ/lz2FfYN+fbH
sJ+zffy57HWDP/n2Zezfc6ifL9P7RhdZ4M+pvz2Hni/Tfqo8xwJ/jn89g/j8
cfLLG23w55wvJ6Lnj1Mv+c8Kf67P809Y4c+1vt0TrfDn2HehBf48+tTfoxF/
rvWM9UPPn5S/rSg0w59rf2WMp37O5/VPmuHP9fvWpcTnBRpP1jp4tQLyC+9b
4c+1frnvc7+9UPMb9qgF/lz2H/+vBf5c/Q0ei54/pflv2evjz+X/uv81w59T
z12Enj+l/gXkm+HPNf8heWb4c9lP6gPE509rvAmLrPDnWj/bOjP8udrpC4jP
l8t+a941w5/r8+Yq8u3L1Z/OMOrnz2h+Ro9Cz5/hfBWDnj+j837TPjP8OXow
1wZ/rvkIvc8Kf0497X7i82e1X9taic+f1fgrfyE+f07nKa/JAn9OfrSZ+3DP
afzBO4jPn5P9dN7NfbgivT9uKPXzIubjVR9/LvvwVhCfF2k8teFm+HPNf/Kd
xOfF8l/eO9DzYuLfkeh5sfxB91oz/Dn18xFm+HP1v6CEfPvzel7S+T7+XP44
exD59hfwv5lm+HPZZ5DRFn8ue4odyH24FXp/eTr18xWy39jtxOcr0P+XiM9X
UP/+kvvtK+VfU4aY4c+1PkWG/xN/jj+/ifr5Sq1nrr+PPye/+ZMZ/lztsv9s
8Ocaf8Z04vMX1f+QvsTnL2l/5Rv+Uvw55+2tZvhzfT/Tj3z7SzovZDSa4c9l
fzX90fMS9v+jPv5cz0v6nvi8BP/ZBz0v5fwwBT0vpZ54lhX+HH9/FD0vlV62
P0y+/WXZY+0z6PnLOs/l+6PnL1M//Zf6+cuyz7Qb0fNXOF80mOHP1d+0583w
57zvGPfhXtF8BH1qgT/X/PrHo+erok/dXxN/TrzcjZ6v0vtTPrLAn+s8EmBD
z1cr3kipJt++WvYUv8wCfy57aJqMnr+q91W7ic9fjT7Ff4o/l323HkLPX1P8
UvA39+FeU3/aPkXPX9P+qS1Az18jfnrYAn+u/VA4gvi8TPs//i/i8zI9Py2R
fHuZ1idwP3peLnvrfpP77eWan54a4vNyja/nLh9/rvnNM84r4s/JJ4VzH+51
+c+67ej56+pf/vtm+HPpX/xB8u1vaH9XPIKev0G+It4Mf8552WiLP9f4InZz
H+7N6FN8ifhzzXfeQPLtb2p/p19Ivp12aoqPP6f+N5j6+Rrt/w0voOdr9P3u
rdxvXyM9KGszw59rPjf8ZYY/J3/5Mnr+ltY7eRD59rc0HwFJ6Pnb8sfdf5Bv
f5v6khk9f1v7oW2Sjz/X+1rO5n57BfWIOy3w59wXO9vHn2t/x0aY4c/R++fR
80rqG4+Tb69Uf1I3UT+vpP/3mOHPtb6Jt1vgz+Uftsykfv4O8a3hn8Wfk699
mvr5Wo3fNp34fK3sL/Mo8TmfJ05Cz9fKfjc0WODPqUc2UD+vUv+Lgyzw55q/
wgTuw1Vp/AE15NtN6GkR9XOT1rf6A/LtJvXH7xD5dpPsqy2ffLuZ/b7FDH/O
/YZn0XMz+dsTxOdm1u+4Bf5c9hW+HD23kF/cbIY/13izlqDnltP+Tfy5ntfx
tRn+HH243Mefy3/4u4jPrfL/GSN8/Dn3F9rQcxv7zY6e26gn2Xz8ud4XOJH6
uZ3z2Bnk2+3aj6UW4nM+zx7q48/1/NStJvhz7Xfve+TbHbLnsjTy7Q7p2ZYl
xOdO2Y/fdyb4c87PR8zw5/p+0Y3E507t5wDjPCz+XO06pwX+XPFO/RNm+HPi
v/+Z4c+1PrVnmeHPqa9vQM/d3K98zAx/Tn3bOF+JP9f6Bd+Jnnv0vIz+Pv5c
7a516LmH+4BrLfDnsueI99Bzr/abzThfij+XfSUY51fx59Q7ZxCfe2W/QZvR
82ruD/xjhj/XfmjdaII/577H5Rb4c9brQTP8ucaT8SZ6/q7Wr6TLBH9OfmYT
ev6ufp9ZZIU/13yl2NDz98ivx5Nvf0/vT72C+Pw92WfiTjP8OfdL3zfBn8s+
uz9Bz9dJnzOyzPDn3Ke8GD1fr+c37DfBn0u/wjeTb18vf9n5OPfb12u+C7+m
fv6+xlO90gJ/rvNcz1zy7e9r/sOazfDn5BfPQM8/OJ2fFX9OPWc/9+E+4Hz0
hhn+XPYUvJf4fAP5uz0+/pz8l9fHn2s+4z3ch6uRfmc8Q769Ruvn3WWCP5e9
BeYSn9dID0LHkm//kHqYAz3/kPjhPAv8ucaXfpUV/lznpbr/kW//SP2pvgQ9
/0j2UXY7ev4R92fMVvhz7cfAB4jPP9b7OxIt8OfaD3WGvxN/Tj45ivvtH2v9
i341wZ/z/l/R80/0vsz95Ns/kb/MyLPAn3O+TUHPP5UeZL5FfP6p3h+/iXw7
7bpM9PxT+W/bVDP8uewjJZ74fKP2Y/J28u0byde8boI/1/wFHSM+r9V5KrfW
DH+u+S/pT/289rS/6dXzOq239SoL/LnWp7GvGf6ceLov+fY67ktORs8/Y74v
scKfcx+7xAp/TnwYgJ5/pv5lZ1vgz3nfWvT8c51Pi4PR88+5/7jMDH/OeB4j
Pv9C9rdhvRn+nPt3+4nPv1D/05upn/N56Xvk2zdhD4Y/FH8ue6idYIY/V38S
V5jgz8lHzCHf/iX3i+PR8y/lHwLbzfDn6m9enBn+nHzzXej5V3p+0DVm+HP2
nwM9/0rznWA3w5/jb19Bz+vV/46r0PN67NFoiz9Xf0cb/lb8uey3rJX4vOH0
eVH8OfcDz0TPG07fTxN/rv60xBCff631z3nSBH9OvWWDCf5c+lsYZYY/13gL
fzbDn2u/RFyInn/D/FxNvv0b7cfYOvR8s74fez7x+Wb5v9gx3IfbzP1nw3+J
P+d+0QAL/LnsLfET9Pxb6Xf3/dTPv6U+8YgJ/vx0/Cz+XOMt+JX77d+d9m/i
z2X/tgPE599pfzY3o+ffE5+P8vHnmo+wNeTbvyfetJvgz1m/idTPt1A/v474
fIv2U8C73G/fovkKKiE+36L5b7CY4M/JL44nPm/k/vZtZvhz2U9Wjxn+XP2v
3ISeb5X+dDjQ863cLzPia/Hn7K8c6udbydfYiM+3qf91P5vgz7GHF338ufx9
QrMJ/lzzldtkgj/n/vwm4vMf9Py0YPT8B81f6Qnut//AeciIn8SfE08b5zXx
52r7HyM+3859hQHk27fL3jMq0fMfyedVoOc/ct+g3AR/znnBOK+KP+e+iNEW
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
bM3vty8Qn8/WflmaTv18tvx9hNEWfy7937KO+vnd6u8tT/n4c83f8iTi87vV
39J3ic/nkM9+qQr+XPPTr5r77XOk/zOmkm+fI3+z5Anuw2VovXbfgJ5naH/c
dSd6nsF5cArxeabON6ZQ4vNMfX/VAPQ8U+9b5/Dx55qfvbvIt8/VePL6kW+f
K/sr+Qc9nyt/WTO8Cv5c9rhjWBX8udan3y3o+T3qv+uyKvhzzUffZ6rgzxVf
/xrH/fZ7pX9Nyej5vbK/NcZ5Tfy51rszn/icdsRZFvhz+YN44/wn/lyfh71b
BX+u+W3aWQV/rvUqtpBvv0/2//F/6Pl98l99fkLP75P/CriFfPt9+r3fZvR8
PvnWRPR8vuYvfC318/l6f8ZjVfDnsj8/ZxX8uey/1Vc/z5I910UQn2dRn1hN
fJ6l+QtcZII/V3/izyM+zybfd5j4PFv6UrqG+Dyb8/sD5Nvvl31/HEO+/X7F
W9Zj3Ie7X+sTfDfx+f3ytxd+jZ4/oP2Tn4ieP0B+ZBT59gdkn89MRM8XyH4e
f5V8+wLZ48LB8GoLZD81//j4c/X3mXvQ84Xaz7Nr4NUWarxNn1M/5/Og0ej5
Qvmf2hnk2xepP6nH0fNFWu/0WuLzRdoPe6LIty/S/PfchZ4vln9YcRfx+WKt
15p95NsX4++mkW9frPnLMOI/8ec6H+yZip7nqP/1/6DnOVrPx43zkvhz7fee
HWb4c+nV3seon+fKfgIeI9+eK/9c8DnxOZ/XPYOePyj7mWFDzx/kfF1aBX8u
/3HMYoY/13zuPr4W/lz2Gx1GfP6Q+h/VUQV/rv6tXOLjz2X/LQXo+RK141qp
ny9RPBp4dC38uewx8B3uty/Reu3IId++VPt9hHF+FH8u+46Y6OPP5W+Pv+Xj
z2U/8f+uhT9X/03noecPU69LRs8flr9M+KAK/lzPCxhHfP6I7GX11z7+XPa7
o8HHn2t9Sx5Gz/NkT+sOrIU/R59fIz7Pk72PvY98e57el/8Uep4v+/l4LXqe
T33veurn+dpv61Kq4M/lrwvPoH7+qNYz46AZ/hz//Dt6/qjm+8IhVfDnet6M
0ej5Y3rf1Ouon9OOMM5r4s/1vMf3oeePyb5KNhOfL5O/WLaC+vky/b4zGT1f
pt8nnkt8vkz29skdZvhzzZ/3/0SdeUBUVRvGcSkwNSgXKBdQUUiNwaXEpcTE
IDXBJaVcoFygXKA00bQkNbG0sDRZZp/RoNKktKC0oDS11MC0MDXhSwtKS0tL
SpPvzjy/yT+Pc7n3LO95f+d9z3mOdS705xqfFVlu9Oeaj/b73ejP2a+dBc+f
1fvi7iI+f1bz+eJKeP6snm9oxnm4Z9X/q/sRnz/Hfut49GrPEd909enPNX8W
ON3oz4mfDX8o/bnio7PLON++jHyEHZ4vk7+Y/xw8z5a9TvkNnmfjH+7chP6c
9eD3LvTnmj/bLW705+T/exGfPy9/0tASnj+v+bP2Q+Lz59lPvQmeL1f9Yop8
+nONX68GeL6cfFIePF8u+5k/wqc/J19T7UJ/Lntc2tanP1f9M8/A8xXyB/tO
k29fKX+19j7i85Uav953wfOV6q/Ei/B8JfHLbjf6c7U/JQievyD/Od7wh9Kf
yz+u/xSev6DvbTkIz1fJn296Dp6v0nwe0MSN/pz922fJt6/SfDl9gnx7jvqj
7m14nqP+WxHlRn8ufzF6FPF5jtZPZf+60J+rf/J9+fbVev5S0Sb05+T7DX8s
/bns48Run/5c8yWxv09/rvXJ2jvc6M9lvwl/u9Cf8/4+nG9/Sf6pg3sT+nON
5+D/9Ofqv1ET4fka2fv8HcTnazT/BzdyHm6Nvtcwnvh8jfpzcG/y7WvhT60b
/bnmy6Sx5NvXajyPLHOjP9f4HPPtn7+s9celwZvQn7NeHONGfy7/ebmzG/25
3nd+IDx/Rd+bfdyN/lzv698Cnr+i9q65xPn2V1TfM2N9+nPN15DF5NtzOe/R
hXx7rv4+7zN4nqv+apYIz9epf/c9xv75Os2/q5vd6M/VX23i4Tllj95C+nP2
I6M3oT+XfbZtQnz+quzB5DsP96r4nLCT+Pw12U+ww43+XLzokAnPX1N9snuR
b39N82VXT3i+XvW58o8b/bnsv3GuG/05+xM5xOfr9b79mfB8g/ztyYnE5xvk
X6oeIt/O71OGwvMNtP8vN/pz+Y+6kk3oz2Vv2a3ZP38d/m+E5xvlD/u3cKM/
Z//nDzf6c/gcwP75Rq0vmn/nQn+u/sv+3Y3+XOUwI/6U/lzjPftG8u155Efv
5nx7vvojxJ98e77sc3e5G/05+1ufwPN81dfyGDwvUHv7fUu+vYD8+e2chyvQ
/BtuxDfSn2t8x0e70Z/L36Qb/kz6c87HTPPpzzX++/x8+nN4OpX43Kz5UfUS
8bmZ81LXXOjPNX6O4fDczHmbR4jPLZofV434QvpzlQ9ecaE/Z/xOw3OL7Kml
UZb+nPj4XnhuVXs7NJBvt6o/yxtc6M8139bvh+c2fW//n+yf2+QfJxj+Sfpz
8TD0cc632zResftc6M/1vUnvuNGfa/5OT9uE/lzvGzLGpz+XPcS3gOcO2dvp
MDf6c43n9t3w3KHvX3mV+Nyp+vZ+y43+XO2fYcQb0p/rfbmPwnOn/EHmbeTb
Xap/UjPic5f83eBF8JzfVzbdhP5c/nOKj+du8a1Ze/bP3exPDYfnbvE982k3
+nP1f5uf4Pkm4gGXG/25/OeEYHi+6Tr/pT+Xf1l0FZ5vlj2Er+I83Gb57/Ev
EJ9vlr3a32P/fLPe33wIPH+D8znD3OjPZb8nlxOfv4H9bYPnb2g8J39BfF6k
95WdhOdF+t7pAnhepPpvS4LnRfJP3d6D58Wqf1IXeF7Mecgx8LxY8zF5I+fh
itV/86uJz9/k/Ewo++dv6vvmzsTnbxLvnITnb2q+Fb/h059r/mQMID5/S/Nz
ThN4/paeD58Bz9/W+4ced6E/V31KDX8k/bn6I+gRn/5c68mEs27055zPvBGe
b5F9JTuJz7fo+U1PEZ9v0fc7vulCf675OnyiT3+u3+P6wPOtqn/9AeLzrfJf
jjVu9Ofqr6E/wfN3NP+CDX8l/bn6q+xWeP6O3nepm09/rvhg+9cu9Oeqf3Gj
C/257O+K24X+XPadapSlP2c+DYHnJdhnKPF5icb/RDr59hLZY3Y68fm78i+N
G+D5u6rfjo6ch3tX82N1B+Lzd/X3qRPc6M9p7wzi8/fk/wd/Qr79Pdavv8Dz
9+QP/Le40Z9rPtTf4NOfc572LXi+Xc/ntvPpz4mnP+J8+w7xM2OtT38u+ztb
7EZ/LvtoMJFv36H2JJvIt7/P+aONLvTnsr8Ohn+U/pzzvK+70J/LXkY9AM8/
kP9rm8z++QfqjwOnyLd/IHtausCN/pzzQJGchyslv3E/PC9l/3Ib+fZStS9i
wib05+xH5rrQn6u/r9xIvr2M849j2T8vU/uTum1Cfy7/FGwm3/6h+uPcrcTn
H8pezj4Dzz+UfayJIj7/SOO//wjx+Ufq7315xOcfcf5qFOfhPpJ/W/+DC/05
8eHr8Hyn+mv3w/B8J/mBQW705xqf+FbwfJfsPX2mG/25+ivpKfLtuzh/ZcSr
0p+TH+/u058rninKhOcfYx8WeP6x+iPmHXj+sdZjFcPg+Sf6vfdH5Ns/UX/m
rYXnn8jfrC4jPv9E45PSh/i8XP67255N6M/VP1kX4Hm5+qe2qRv9ufx7RKIL
/bneXzvGhf6c85s5bvTnqo8ph/j8U/mD3QOJzz/V90OPuNCfa3yXGf5H+nP6
sxfx+WeKD0O+d6M/13iUboPnn6l/Utv69Od6X+lPnIfbLXs3ryXfTnnfGfLt
uzWeMaXE57u1fs2bCs/3cD7/LXi+B/t7E57v4fzUUuJzfj+znXz75xrvFftd
6M/V/t2NxOefq769bvLpzzmvscmN/pz5OAqe79X4H11IfL5X83HTBHi+9/r6
SvpztS9hCzzfp+9d/MyF/lz2lz3Opz/X76OqybfvZz/9LXi+//r8lv5c/VU3
Ap7vl72vN+IV6c/19+WzXOjPZR9txvj05xrP09c43/6F6psZBs+/VPsu7YXn
X+rvA7PYP/9S9nXkq03oz7U+u3CB+PyA/OnsjsTnBzifuJv4/IDWK21fdqE/
1/Prb2f//KDGt+Q2eH5Q68/dFcTnlCO+4DzcIdUvq5x8+yHxJHk4+XZ+X3IR
nh9S/Yv2Ep9/JR4HtyPf/pX8Uc46eP4V+b/pbvTn4sOxW8m3V+r3vI2cb6/U
eqv5E+TbK2X/9mR4Xin/NzyA/fMq1e/iNhf6c/mzg6eJz6vY3+vlQn/Oefub
4flh1qOG/5L+XPYS/SL59sMan7Wr2T8/rPX11enE51/LXsa39OnP1f7cU8Tn
X6u/Epuyf/617M/dBJ4fwV+uJD4/Iv+Uuob98yOy7yzDv0h/rvk56kZ4flTf
L62F55QbmxOfH5V9DP7Xhf5c/in5QfLt33AeowqefyP7Sq2E59+o/3Yk+/Tn
xJcLXejPNX+bPUt8/q3q93YS8fm3so/SreTbqzmvcwc8r1b7d03gfHs1+ocH
ic+r1d/5V8i3H9N4V75Jvv2Y/n6L4a+kP+e8TjE8P8b5ikwX+nPx48DT8Pw7
tafEAc+/U3/YN8Pz78gXzCc+Py77PPMU8flx1eeKFZ4fJz/6pBv9uezp3D43
+nOVW812oT9X/5nbwPMTsp9Jn7rQn6v+G+51oT/X+GZ1JD4/qfna9nPy7Sc5
v7gBnp/Uent4e+Lz7zWfzqa50J/L/+37zI3+XPbud5tPf67xnPypG/25+iv9
Pp/+XL+fXg/PT7H/kQbPTxHvD+U8XI2er9lFfF5DPn0Q+fYavb9sBjyvlf3N
+AGe1+p929LIt1NOi4HnlBsDXOjPOb8aCM//p98nDSI+/5/Gc7/vPNz/NN8S
S+H5D7KHbVNc6M/Ft5gPOQ/3g/4++n3y7T/IXnf1daM/l/0Emsi3nyben+JG
fy77WTMNnp/WeDRb5UZ/Lt4de4/98zOaP1eqXejP0TfcCc/PaP5WfOtCf67+
3HAHPP9R7TvSlPj8R/YrxrvQn+vvV2bD85/kvy5OgOc/Xc83Sn/O+aFI9s9/
Un02JcHzOtU3d5wb/Tnnf7vD8zrxqNlhF/pztb/XWDf6c+JFYz0n/bne1ybc
hf6c88Pd4Xm95pP7Kxf6c41/8IPw/Gf1f9lX5Nt/VjzVNov4/GfZ/5mu8PwX
8nN/udCfs7/cBZ7/wnjbic/Pqn9aPc3++VnxZX8n4nPKFRYX+nP9ff9O7J+f
k78cYHahP9d8Sh1Bvv2c5v+K21zoz+X/QjLg+a/yB7vmutCf6/klxvpJ+nPO
l82F57+q/annXOjP1X8thxGf/yZ76RfrQn9OPn8DPP+N/f1PXOjPmQ+fEJ+f
1/il3APPz7M+GuJGf875ljon+nP1T9IseH5B9rXjIxf6c/X/xVx4fkF/nzYd
nv8u/77sNDz/nfMoP8Dz3zW+rVrD89/Zv2zN/vkf7L8bZenP9fvsl4jP/5D/
dtwFz/8gH/a+C/05etH+8Pwi8+974vOL6p+Em1zoz+Wvh9Q40Z9rvNf5s39+
Se8LXEV8fkn9uSzajf6cfPMN5Nv/5HzsO27053r/meVu9OdqX8tsn/4c3jSH
539xXmIiPP9Lf98wyYX+XPNv8rPw/LLet+Rt9s8vs34ZC88vq7/nXHOhP5e/
aTUOnjfIfh3hPv251temO+B5A/FipAv9uZ6fYMx36c+v62ukP+c86hh4/jfx
QTf2z/8mPzif8+3/qD9XHHKhP2c9Z/gX6c/Vv+O/gOf/MB+6EZ9fUX0PdOB8
+xXZx8qn2D+/ov7N6gLPr3Ae3A7Pr8p+DtrYP7/KftD98Pyqxv9IB/LtV8Wv
vGHsn//L+aa98Pxf1d/9hRP9OefL5rjRn2s8e+9xoT9HD9kGnl+T/eyKc6E/
V3t3fwzPr2m+Z9xGvr1R47toOvF5I3q+3U705/K3J+td6M+j9P+l3OJGfx6l
8xhl5NuNsoc/vX8i3045pi08bxLlrW+znS705yqfXcP+uVH21D+/NefhjLJn
fNb08enPo7x8ufKxE/15lM5PPALPKa8rdaE/1/tGm4jPm0Up3l4Lz42y9zxC
C3hulL354mY+/XmU7ud71IX+PMrrv97uQ3xulD32uKQJ59uNsqd/D2yF5831
92F3w/Mb9P261fD8BtU31ShLf672rciB50bZ68+mutCfR+l+pBYu9OfU3/A/
0p+rPjnHXOjPo/7Tq0t/rvbF/gPP/TU+qX+TbzfK3v0EY35Lf67nY5aTbw9Q
+9NGEp8HaHyC34LnAWqf/0T2zwP095vGEJ+3UH2LO5Fvb6HvrW7iQn+u8dpV
7UR/rvasMNb70p9Hee11wWZ4bpS95/eN+Fv68yjdH2j4A+nPo7z+6twwn/5c
7U0y1jfSn0d5/eXJN53oz6N0Pi2L+LyV7N3/ayf6c/3eaMRP0p/r+7VxxOdG
2Tvfb4XnrVV/9yh4bpS991d+Qr69tfqvTR375601/jufIN9+s/rD8ZsL/bn6
c90u4vObNf86/AjPjbJnvVrdGZ4HRnnn8/p27J8Hqj2Bxvpe+nP9/fkRxOdG
2Xt+KY98e5DaU1PL+Xaj7F2f9UWvFqT2nB0Oz4M0ngfXutGfR/2XT5b+XL/v
2gHPjbKHN/sD4blR9u7fnneiP1f7Uwewf07ZcsaF/jxK51Nfc6E/V/0u5hCf
t4ny+s9+0+B5G82n+FXwvI2eHzoLnrdR/1zeyvn2turPtG/heVvZV+oMF/rz
KG98UX0UnrfV/B9+C/F5O72vcQfxeTvNnyWPEZ+3kz29HQ7P20d5+XDxMPn2
9uqPKYfheXvN5129ffpzjU/EQ+Tbg+Ufzn3F/rlR9t5f/50L/bm+F9qE+DxY
8yHdD56HaL4cPeBGfy77jO8Lz0PUn/Er4HmI/Fvzf4nPb1N/rTniQn+u9qy4
4kJ/rvanfO1Cfy77WGSsT6Q/1/O9ouD57bKvfied6M81X890gee3y54i9xCf
dxBPQtv59Of6fchueN5B7b3wGfl2ylPedaI/j9J9RfHk2zuq/Vk5TvTnen/8
QeJzo+w9v3A/8Xknfa/3JXjeSfbV5oAL/bnmV/84eN5J7Z00nPi8s+br24b/
kf5c3++2H5531nhOeg2ed1b/JC53oj/XfKhqT3weqvm1J9enP1f/Dz7sRH+O
//nbif48SvcDtIHnYXp/Vhg8D5P/qf0UnnfR78M/hedd5L/imxOfUz6RR769
i8bPEUR83lX1ObIEnneVP51T50J/rv5b3xGe83y3FOLzbuqP8tbcJ9NN/nab
sX6S/lzPXzHWO9Kfa3yzvyE+D9d4jnrchf4c/7uO+Dxc7TvSB56H63u5vznR
n+t9jnvheXf191J/8u3dZR8lM+F5d9Vnflt43kP2V/UQ8XkPzefTh8i399D7
ax+D5z3kT3JvIT6PkL0lVDjRn6s9OV/C8wg9f2KjE/25fr/YCM8j5Q/aONzo
z2V/ia3heaTsKXUrPI/UfK3dQnx+h/zfqM/Rq90he+p32on+XO29vBu92h0a
/wvGekL6c/nT0V/D857yn6cfgOc9o/7Th0l/rvbEZ7N/TnlAAvF5L31/+jLi
815qz4mJ8Ly3+qv/KXjeW+0L+gqe99Z4xfxJfN5b9vT2QfbP75T/izD8keRg
mr95253ozzVeyR/B8zvVnpwP4XmUymtqic+jNN7dyuB5lNrT8oIL/bn6z5SG
Xs2k/uufRXxukj+5+q0T/bnsN8UoS38OT9qSb4/W98pfcKI/V33D9xCfR8u+
B5yF59Fq/5rv4Hkfrb/S33WjP9f4NK6G533Ejz2GP5L+XOWTCcTnfdWeoQnE
5321/tgXD8/7aj60+gme99X4HPuY+Lwf/nmuC/256jf5Lyf6c9Wn/JAT/bn8
x7bNxOf9ZR/LfnChP9f346uIz/urP+NeI9/eX+NhX+pEf67nJwUQn98le6gZ
70R/rvHN8uc83N2aLzuecaI/198XXXCiPxevO6YRn9+t8T3ngucDxNfYl4nP
B6g/myc50Z+r/cFric8HsF5cBM9jxONmTeB5jPozJJHzcDGy9wCLE/251hcT
quH5QOKR+U705/r7/jHwfKDqVx8Iz3m+aBo8H6Tn4wz/JP25fj9yhPh8kPzR
/JUu9Ocqm78mPh+s9w/JcKI/1/xdt5x8+2CN18Hnic8Hy35iWxKfD1H7rhYR
nw8R32I+Ij4fov5cO5z4fIj8fWWtE/25vt/bmJ/Sn8tfxawj336P+rt2mBP9
ueyl3yvw/F7Z3+XvnejPNX/WpjnRn6v+l9bC83vxd+OIz4eKhzMMfyP9ueob
ts+F/lzfW/ES+fZY/d4xiXx7rOxrZSL757Gy/7yz8DxW9totAp4PEw/G/wLP
h7FeG+xEf67nO7zoRH8e5c2nN//Zhf5c/XMsnHz7fRqvoHB4fp/GP/gu8u08
H/CkC/255kvbn4jPh+v7OY8Qnw+XPTdmcx5uOPmGjcTncapfv13wPE7jNyEU
nsdpvhSZ4Hmc/F2//xGfj+B7hj+R/pz2vEp8PkL9NyDbif5c8z+0N/n2+7Ve
D/ue+Px+8XH3Ky7053rfholO9Ofw42V4Hh/13/6w9Ocav6suJ/pz+u9e8u3x
ak+vNfA8AX4dI9+eIH8SOQSeJ2g+LhrnRH9+PT8j/XnUf/k26c/1fEIO8fkD
qk/sFfLtD8heQ1Pg+Uj1Z4fXffpzjceAufB8pOy51c9O9OfMN8O/SH+u9k03
ytKfqz31xfB8lPxnSkfOw43WfGr7PPn20bLH1FbwfLTsZWdLeD6a9VKmE/25
/I19lk9/rvambyLf/qDGJ2eeE/255uu5/znRn+v7mVHE52M039e0g+djZA/n
xsPzMfr+hTY+/bn8x57P4Xmi+uPA4/A8Uf1xeSX59kT9/dKpPv25xiPuBDxP
0vwPmsL+eZL6f/0sJ/pz1Wfp8/B8rN6XWkF8Plb12dIKno9Ve4LvhedjNd7B
o+D5OPmf4E/g+Titty5fdaI/V3vGPwDPx2k+rn0dno/X+J4Z5ER/fp3v0p/L
HvcNhOfjNR5DV8HzCfLnvWvg+QSN9/k44vMJqk+HV+H5BPXPguHE5w/JHjc0
hecPaX5XvkJ8/pDmq+WSE/0568VL8Hwi9rbdhf5c/VE3ivh8otZbl0M43z4J
f/mHE/257Gn/PcTnk9T+yE1O9OfyLx26+vTnav/ZufA8We3tZ6xPpD+XPSxq
S3yerP4ujnKiP9ffB47w6c/Vv+sPw/OHZR/7Df8g/bnaG9vbif5c/qJhCvH5
I/p+fC/i80fk79w9nejP5U9PN3OiP5d/X2mG55P1vbh7ffpz2cvQ3+H5ZH0/
/wI8n4L9ToLnU/S+DY/C8ylqT+5NxOc839blQn+u/m7V3Yn+XOP9dib59qny
B4NHwvOp5Icc5NunyZ62/Q+eT9N8iR3A/vk0xcf1Br+lP1d/VXQlPk9RfWZM
Jj5P0fhE94LnKXr/2VPE56mqb8Uc4vNUtXfG0/A8Ve9L78v+eaq+lzDCif5c
49EY50R/rvHPeB+eP6r6zvAjPn9U9rO2oxP9Oeuba8Tnj6m/Jhtl6c/ln0L/
dKA/1/pxTi08ny7/GF3tRH9O/v4l4vPpmr9tDX8h/bnKe+4gPp+h+bl6uhP9
uep35kGf/lztPdPeif5c9jP4CPH5zOv5LenPFZ/XHnaiP9d8HT8Ins9k/W/E
R9Kfa/5VTnOiP1d/TfiTfPssvS/9EjyfpfYd+Aaep6m/c5cTn6eJX4FhxOdp
4rf9HXieJv/kdw88T9f7cg840Z9rPEqWOdGf6/vhl4nP0+Xva5Kd6M/1/n5G
WfpztTeiL/H547K36lvh+ePq/xDDn0h/Du9DfPpzleuDXOjPNb/L3yDfPlv2
UX0X8fls/b59M/n22bLH0zby7bPlD08OgudzxJedu4nP52j+nTX8kfTnqm/j
s/B8jsb78qfwfK78dfr/HOjPxbeKWgf6c33Prxc8nyv7KHuI/fN56t/VdxGf
z5P9jt7D/vk8+ecFPp7PU31yWsPzDPmrhj7k2zPU32d7cb6d3yv8iM8pl7zO
/nmm2m9udKA/l/2v2+BEf67fT3SD55nyH2eecqE/V30y5jrRn8se2hjrYenP
Vb4yG54/yXqs1qc/F49XhznRn2s+73mA+Pwp+fuh/zjQn6t84pgT/bnen1dK
fD6f+sT79Odaj9afIN8+X/W/sM6F/lzzLe04PF8gfmYY/kj6c9nX+mvwfIHq
tyCW+PxpzYfidPLtT7MefxmeP816qQGeL5T9tLmP/fOF8v/b18DzhbK/4f8Q
ny9U/QYY/kP6c9ZnVfA8C/5UEZ9naT6tHAzPs9Rf47e60J/Ln69NcaI/l73U
rIDni/T9JVXwfJH66+rv8Hyx7De7knz7Ytl3rOFvpD/XfJufQny+mPz4AHj+
jJ7fsJn4/Bn5ny1fwPNntJ7fftaB/lz+pKY/PF8if5iazXm4JbLPA2ed6M/V
HtMj8HyJ+mv2c/B8qfzj+n4+/bnm19Fo8u1LNf7NnnGiP1f9kncTnz+r/jlR
B8+fxb+0JN/+LPmY8fD8WY3HEKMs/bl+3/0jPH9O7790hvj8OdlXw9NO9Oey
r9H+8HyZ5k/mWBf6c/2eeiP758vkT6bscqA/l/3v6Ul8nq36+n8Mzym7m/v0
5/JfYTXw/Hn1z6UI4vPnZb+5zXz6c9nDyQzi8+fV/6N6wPPlmt9JI+H5ctUn
vDs8X67v15wg375c/X8iwYn+XGXzq/B8hd6f0w2er1D/hl8j375C9W04Rny+
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
b/+ZfGAq+XaeP3/Wjv6c886d4fkvam9se3j+C/tj2fD8rN7X8irx+VnNv47L
OA93Vv27xQ7Pz2o+OL6D5+fUnvhyeH6O/f/B5NvPqb9KT8Hzc+zfLoDnv2r8
d4WQb/9V9p//DOfbf1V7OjwDz3/VeO1aTL79N/V/TBA8/03+/PQV4vPf4MdR
eP6b1gvhd8Pz87KvVvnE5+fVnrrjdvTn6r+KY+yfn5e/2pdBfH6B/d/D8PyC
/POC1+G5Ua7z+K9v7ejPOQ/Z0oH+HP3penj+O/sL6+H575zXiobnv6u+zV92
oD8Xr3qPgud/6PeYJOLzPzTep38lPv9D87cqCp5f1O+lRjwj/Tnrn3mcb7+o
8dl/yI7+XP5j/ys+/bl4sO88PL+k37f0It9+Sf7jdE94fknzv80NxOd/qr8y
18DzPzX/zjQjPv+T9d3j7J//xXmBt4jP/2L8/Tnf/pfGL9jgq/Tn6r8zPci3
X9b65IAvPr+s8Q1b4UB/Tnw7i3z7Zc3f4GHE5w1a31VuhucNil/tTeF5A+e7
u8LzBvS0K+D53+S/asm3/63xjvcjPv9b9blw2Y7+XPW9fA2e/8P5xKXw/B/G
b7ID/bneF3jJjv6c9z0Lz69oPs5/Fp5fUftMhQ705+QzztvRn8ve63w8vyp/
MCHfgf5cz+9sgOdX5e9DfDy/yn7UInj+r+qX95AD/Tl60GM+/Tn7GXV29Oec
Z90Iz6/Jv+9+CJ5fk71mfgvPr2k++K2H59c4H7kDnjeqfvufdKA/Z3/wVp/+
XO1bfZj9cz9TbLBnvp6yoz83ee13TSI8N8re+P9VJ/pzk9c+s8/D8yYmb3ta
lcBzo+yx7/AM4nOj7OXVIQf6c5PuN5/H/nlTk/RdW+C5UfbMx5C57J83VX3s
39jRn5uUf1xDvr2ZSfdlf0m+3Sh7//+OX+C5UfaeH3kRnhtl7/g8Tnze3OSd
X2UJnIczyh77bZtAfN5c7c1MIz5vrvqW7YXnN5i8/Tt/Fjy/Qe/P2sz++Q2m
/84PSn9u8tpbdXN4fqPq6+gGz42yZ35tcPv05+r/ivvgOb/3/wye+6s+W5rA
c6Ps4d3pWnhulD3+YYKDfLtRDvWMX6Md/bnq0yYUnhvl45758pwd/bnJ6/+G
fmxHf67xOz2VfHsLtd/cCZ4bZe/+5xTic6PsPS+0i/i8heyh0ZjP0p+bvP68
6h8H+nP1X+lt5NtvUnuD3rejP9d4pC+G50bZ488OlhGft1R/pA/w6c9ljzMW
km9vZdL9dXf79OcmL28TPiA+N8re++/bk29vpfoGvw/PW+v7JRs4D9da7w8a
D89b630dDf5Lf67vDW3rQH+uvz/Yh/1zo+w9b7UOnt+s/rIEkW83yt09/u2M
Hf25/n5DHwf6c9nvjED2z/m9OJr43Ch7/EdqEDwPMsV29Nib047+XPNjcGt4
HqT3hRwi3x4kewodRXx+i8nrb94eCc9v0ffOGPNN+nOTzi9+Z0d/rvFd+zM8
v1XzOfhneG6UPf5zyUgH+nN9b1JPeH6r7HdInQP9uSn2mGf+HLGjP1d947rD
8zbqz2MR5NuNsjcffoZ8e1uT8pc9HOjPTbGRnngg147+XO0p6+5Afy5/ENKU
+Lyd2l+0gnx7O80H0wp43k7+qOY5eN5e87e4lvi8vex7ciP59vbyD+GPEp+3
l3/rdw88DzZJj/aCHf25xuv0VXgeLPvfP434PFj22qGA+DxE76+6Zkd/rvrE
niDfHiL7Tb1qR3+u+Z92xY7+3OTlRdJkeH6bxqNsiR39uSn2B+P5xAZ4bpRr
jfKyxXb057I/ywTy7ber/839ffpzk/6/gG/Jt98ufzTgoh39ub6X8D759g6a
30G/29Gfy77WXYDnHdT/Bx6C5x1lH46v4XlH8Sr2LnjeUf0XfRieU57zLvvn
ndTf5lfheSe9f30l8Xkn+Udza/LtnWQPg8eSb++s5+OL7OjP5R/2GPNT+nPZ
W9VZeN5Z33cY81X6c7V/wVx4Hqr+XPol8Xmo3hcW4NOfazzX+vv057Ind294
bpQ969dFo4jPwzQfVyznPFwX2feox8m3d1F7tt8Hz7vIH+dX29Gf6/2jsuF5
V43f+lXwvKt+PxBPfN5V89s0i3x7V9lrfBPi826qT6k/PO+m8Qvzh+fd9P5m
U8m3d2M9spz4PFz9k36N+Dxc/mj+cOLzcLXHv5z4PFz+JO1BO/pz9femZeyf
d9f4t7wCz7urfrMNnkl/Lv+y+7gD/bm+v2Ai59t7aP7uayA+7yF7SXyIfHsP
1T92hB39uforsL1Pf676X54MzyNYL4336c9lz35lxOeR8lcJze3oz+HTYuLz
SH2/WRvi80j5h8yL8PwO+vNDO/pz1Se0zI7+XP0/Owae36H5vHMDPO8p+6k8
DM97an6mLiA+76n1QuV89s97mbzxUZWxHpf+XPZhr4TnvfT9ZU850J9r/HKf
tKM/N8X+7OnPd+zoz02xP3r8x1Y7+nPNj7hceN5b43M0nvPtd+Lf/7ChP9d4
RrTw6c/Vv5lRdvTnrEdHEJ9HiV+9RsDzKD1fZiLfHqX10Og1xOdR+n7xDcTn
JtnbsZl29Ofqr/wZxOcm8SJiLzw3qT/OdiHfHi37TAmH59H63ZzOebho2Xde
CvF5tPqj1g+e99F45N0Dz/vIHk5GwvM+Wp8OGeLTn6u+6TPheV+1Z9cMeN5X
7V80Ap73VX+Z4+B5X/ElI8SO/twUe8Jj36/C837yL7U28u395A93dYPn/bSe
GrULnveXffc/Ds/7y36WfWNDf26Kvc3DhzF29Oey/7MfEp/fpfHbHgbP79L3
Vrf16c81f7eHkm+/W7yq7OPTn4unHZ+B53drPA5chOd3K74qibejPzfF1nj8
TQU8N8oRxu+RBn+lPzfFfudZXxj8lf5c9m3yt6M/1/yMCyQ+j9H3Jm2H5zHq
nyu9ffpztXd+b+LzgWqv/wZ4TjnwafLtA2X/vSayfz5Q/ZnRk/Ptg2SP60OI
zwep/VUTiM8HyZ5KbyLfPkj8y7uf+Hyw/r56oR39uXhUf8WG/lz2n9mD/fPB
Ws/V321Hf67xDjhnR3+u9uXMg+dG+SePPW2xoz83/Zc/l/6c+OuSDf251tv9
x8Dze/T+CS+Rb79H9dtvzH/pz1Wfg6c5D3ev7H1tE5/+XPZ+ujc8v1f1C30c
ng/V/Iwf4tOfazwntIbnQ2X/2RF29Ofqvw4vkG+P1XwecMKO/lz+8MApeB6r
/s9KtaM/V3sy37KhP9fzve4n3z5M8yNoKjwfpvpd+Zt8+33yp5Py7OjPFT+s
22hHf67x3PY68fl94lXGjcTnw+X/8lPh+XCtJ7Nvt6M/lz/p2I34fDjxehvi
87jrvJL+XON5pAs8j9P6YEoXeB6n+qy5hfNwI9T+sj/g+QjN5/JCG/pz+beA
b23oz6+vB6Q/13xNDLKjP5e/q9oOz+/X+/wfJj6/X/27oiPxeby+37YnPI9X
+zLu8OnPxZ9ig//Sn8s/r15nQ3+u+bWpBfF5guwj/BA8N8onPf3/LPF5gtYH
FZfs6M9NsSGe9cBaG/pz2af/k+TbH1D9Qz+woz/X+O28gf3zkbK/wRnwfKT8
RdFaeD6SfMk8eD5K4506l/jcKJ81nj+/wob+XO2rOA3PR6n+l+vh+Wji687E
56P1vQ5+5Nsp5/S1oz+X/Vz9jPj8QfnnbteIzx/UfOgQyHm4B+XPAgOJzx8k
fnvCjv5c45udRr59jOZ7ei94Pkb2UlUOz8eof0b15DxcIvmFVsTnifKnA36z
oT/X8/4LbejPZQ+NRrws/bn6K+esDf25KbaT53vzbejPVb8gG/E5z5/vZkd/
rvbMN+JJ6c+1vl7zJzzn9yJjPkp/rvxCvTGfpT+XvW4YBs/Haf6N/waej1N/
9y+A5+PkHy1Dic/Hs755n3z7ePXf6q/h+XjlV2qCybeP13pgmcOG/lz+x38R
PJ9AvjCL/fMJ4mF1G3g+QevPjBft6M81X8IM3kt/zvsa7ejP9b3AW+zoz02x
3YznG0ba0Z8Tn2+D5xO1Hsh/wI7+XPae3RqeTyJ/dKNPfy6erG6A55PUH5m5
xOeT9L7mueTbk02xnT32/hHxebKe3zIOnhvlcM/3/InPk2U/GQds6M/V/wG5
NvTnsr/ha+D5w4rHE1+2oT8nX1dEvv0RPZ/SB54/InstGmRHfy5/k/yiDf25
/EPlgzb05xof+2ji88mavxdGkW+frO/H3018Pln9E/mPDf25xquhnPh8CuuV
cng+ReOXdzPx+RTFFzW1dvTnmu/u5cTnU8X3bsfhuVG+3RNP30m+farqO/07
4vNpWm9cjYTn0/R7ucOO/lz1LzXmp/TntPdDeJ5iiu3isY/3bOjP1b5iY/5K
f678UvbTNvTn6t8VBfA8VfZQv4T4PFX+ueUweJ4q/1AZS779Ua0Xg56C54+K
f+lD4fmjGs/Qw+TbH1X/DO1sR38u+8rvBM8fE/+j59rQn5u8+3lZHeD5Y3r/
noXwfLritezxdvTn6r/eg4nPp6v/h3eC59O1Pto1kPh8hvxLw247+nON7+z5
8NwotzN+jzHmt/Tnsofz/xCfz9T8PPA2PJ+p75Wb4flM8i2ZxOcz1R+D3yI+
n2WKPePhzU54Pkv2kfmnHf25+n/6WHg+S/7GvtGG/lz8KP3Djv5c43n5ReLz
NPVPbF/y7TxfvZn4PF3rqepXbejPFW853iPfni5+J21yoD/X+3aNJj5/XPPR
cTs8N8qnPOslY35Lfy5/FPsC8fnj+vsLjTb058rXZQ20oz/X+0KM9bL056pf
6ADy7bM133Yuh+ezNR4ZCcTns7UezO5vR39uiq339P9oG/pz/V7cYEN/rvk0
6RMb+nO9f/a3xOeUc/6yoT/XeA8d4dOfy35X77ShP9d67bKD+Hzu9fWm9Ofi
Q9pzNvTnWj/s/hqez5M/My+B5/Pkj6PP29Cfy76PToXnGerfTds5D5eh8Ut/
D55nwP8p5Nszxd9tG4nPM2XfDZPt6M81P/eth+dGOcwz/ltt6M9Vv34L4fmT
8t8ZxvyX/twU28PjD2Js6M/lT+u/JD5/St+L/sGG/lztnzQfnj8lPnec6NOf
q73p44jP57N+6ADP51+fT9Kfa3zs44nP58t/lK+yoz9X+8xr4PkCjdey3sTn
C7T+PDGXfPsCrQ+CZ9jQn+t7s18kPn9a9hH4Ivn2p7UeW7Ca+Hyh6mvfRL59
ofxnVqkd/bnm87bz8Hyh5mf5aM7DZcmf5KQ70J+rPf6TbejPZf+mRcTnWZqv
o0fC80XyZ9sm2dCfaz7UNbGjPyefb6zfpD/XfCyaAM8Xa76mZxOfLxbfK/61
oT83/Xd+R/pzzafKU1b051pPhybZ0J+rP7dthudG+XvP9/uxf/6M7KO4HJ4v
0e/VxvyU/lzzLawHPF8if37MAc+NclcPz1fA86X6fX84PF8q+8h43ob+XL/P
WAzPl8reol8nPn9W3wtoTXz+rOz55A3wnN/TjfW09Oea36G/2tCfa/5faAbP
nxNfU4eQb6e8IJn4/DmNh2kBPF9GPLjejv5c9ubfmfh8Gevv5vA8W+udgFD2
z7PFk5Jc4vNszdeaJjb05+LF/Anw/HlTbHtP/Z6E589rfe0ohufPa71Rczc8
f17+PuKaFf05+ewX4fly8imn4PlytS+lPTxfrvb1ngvPV8iekr63oT9XPu68
24b+nP3bOfB8heZTYiI8Xyl/VXLZiv7cFNvBYx9/WdGfazzq/7SiP8efB8Lz
F7QfHWO1oT+XPQYZ81P6c42vKR2ev6D+SjB4L/253lc0kv3zVZpP8TfB81Xy
jyVVNvTn5J9KyLfnyH93tLJ/nkM+PgGe54gHCWet6M/lL4MmE5+v1njaT5Nv
Xy17afkY8flq9f+SAni+Wv2fFOfTn8u+Ly1h//xFjWfdHnj+IvsjN8HzF9Wf
i1qQb39J/nX2YuJzo/w/j383eCv9uXhuMua39Oeqb66NfPsaPT9gph39ueZz
rduK/lz+sa4n8fla+ZfcD+H5WsVPyces6M+1Hi5bZkN/Lvvwq7aiP9d8v/As
+faXxaMBE336c/nbtPXw/GXin19s6M+1/k34wo7+XO2/3AGe83tQvhX9ueZL
0U/wPFffT8izoj/XfE3oRL49l/xGRzv6c82P9PHE5+v0vbQfiM/Xqf3pg4jP
14kPpV9Y0Z+LX+uf4Dzcq/p+277w/FW1d9loO/pzrbejHyc+f1X1L//civ5c
7ysaTXz+muZPhcuG/lzr220X7OjPlb+a5LShP9f4Z4yE5+u1nrHMhOfrlW+o
iLKhPxcPymcSn29gv/wTK/pz2Xfgx1b052r/inh4vkH57G07rejP5X+rKm3o
z2UvSRes6M81HxbFwfONrJ9S4PlG9keHE59vlD+qec2G/lzvqzfW19Kfq/2X
jfWv9Ocav0lT2T/PU7xgD7OhP5f/repPvj1f83FAnRX9udpfZfBa+nPlM2c8
As/zlR+osLF/XsD5i8vE5wWy54pP4HmB/HX2dPbPC5Svc9TA80KNd4TBd+nP
yY/9bkN/jn9rQ3xeqL9f9Dw8N6s+mTHE52aNb+1r7J+bVZ/kczb051r/1C2F
5xb5B3+7Ff25vnfsXXhuUX847rOhPzfFnvbww2JFfy77aj6b+Nyq/o15yY7+
XOuTiNPw3Krvp9wDz20a/7pd7J/b1L51xnyT/lzvWz2a+Nym8Q/50or+XPaX
d5L43K72RvoRn9vlT/2yybc7ZE/7vrOhPxcPl+2A5/wefNWK/lz2Hx/k05+z
/5UOz43yLx5e1tvRn2v969+KfLtT670pI3z6c/nrFIOn0p9rPgea4blL7U06
Dc9d1+eT9OfyHwlDiM/dmk+r74DnbuW/Lg+yoz9X/SqNeFD6c30vZaoN/bnG
c9kmO/pz2Z/DTXy+SX9/uZsN/bn4u2wdPN8sf1pZDc83X9/vkf5cPFk2CZ6/
oXi0ZAg8f0P8qAi1oT9Xe8rirOjPsYfhVvTnan/MYeLzIs2/kEVW9Ofir99j
5NuLZF9vxxCfF4sfDQfhebH2k1LG2NCfs386lXx7sd4f3cGnP1c+JWYy++dv
ar3i9ys8f1P2k5ZLvv1N2UNdF863v6X1yMoQeP6W+BLzN/H5W+QXOxOfvy1/
m/ISPH9bPChxWNGfk3/aZkN/rvbV58DzLZrPkUet6M/Vnw1fw/MtWv+se5B8
+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
FbE/0uM6b7w8j5D9hPazcB9QtPc8gKkJ55cj4NlReE45OcssnkewXjlCfM7v
DiO+8/I8QuMT+rWZ+4P0e+adFvE8UvZYNYz4PJL1hJXzz5Fq32UjntP9Qvq9
2gzPI9WfQWbi80i1Z2gbeB5JvmAI8TnvG7qC+PwO+usWM/cR6e+LusNzfq+d
Dc/vwJ4Mnnh5fofaN2mZhfuKxJui8+zf3sF67HEz9xdpPdR4zCKe99T7knYT
nxtlz358cD943lP12TfTzP1G8tf7v2G/t6feX1xh5r4j2m+UvTzvqXhzmYn9
oV7yP9teIj7vRT7ha+LzXszvR83ieS+9b9suM/cjqf9Mzc3iOc83PEV83kv1
iX0Knvci/zbNzP1J0d796+gaeN5b70+cbOY+Jc2H4HnE573Fs5ju8Ly3/HNq
ODzvrfdfSDZz35LaE9wVnvdW/eoN3ur+JdWv6l2zeH6nfi/eTXx+p9Z/dYvh
Ob9XfUp8fifz+VN4fqe+lzcOnt+p9dSFhZxH4/dcIx7U/U2yj8oq9rOjyEe8
beY+J/x5KjyPIj9k8FH3O+n3ZQ+axfMozZ8LB+B5FPYwlfg8SutXxzzicxPr
Lz94biIf2QjPTaxXfi0UzykHXzNzP1S0dz94/+NW8dzEfHkPnvO+1HfhebTG
p3a4mfujmP9G2ctzo+w7r6H7pPS+8z8ViufRyhdW+7P/Fq3xiDTD82i1N7PQ
zH1T0f/tD3t53gcevUl83kfjW9nMKp73Uf60rIzzN33g60azeN6H+HqQmfup
ZH9+fvCc55M2WbivSv1blADP+5K/HmDm/irWm+/C8770zzp43lfx1bFtxOd9
sd/vCrnfivltlL08p5zyspn7rjQ+qZct4nk/rWcv/EW+vR/rt2Hk2/spHsj9
E573ux5PeXneTzxbPYb9w35a3yRchOf91P+L8i3cl6Xxj82D5/3V/4kGf3V/
Fv7hdeLz/uTTesJznt+3Ep7z+77X4Hl/re/T7yff3l/xSMoI9iP7018HC8Xz
u+ivHmbu31L96r8zi+d3EU99Wch9XBrfkp8s4vldan9ALDzneUdX4vO71L8V
Z4jP75a9BHQxi+d3az2b/IOF+7v0++rFZvH8brXP/wg8v1vxXOZ64vO79b2K
zwq53wt/18Esnt9NfmyBmfu+8M8n4PkA5ttx9kcH8PcGr7w8H6D+yA6G5wM0
fxL7EJ/7nu8KzwfwvS4W8Zy/j1wCz2P0/GqDv16ex6g+kxYTn8fo+YpF8Jzf
TZ0t3Cem8a9eaBHPY9T+hI4W7hejf58mPufva9LM3DfGfLid+Hwg+eaD8Hwg
fAsh3z4Qf/ilhfvIxMfgblbxfCDxyRJ4PpD12i54PlDx4Oow8u2DWE+8Uyie
D2J9OMfC/WWK73I6EZ8P0vsqOxKfDyJfF8T5jkHK7w7oQHw+SPlU0+3wfDDx
ZGsL950Rv82C54PVH6V+8Hyw6pPsB88Hqz9D3ijkPjTlHxrncj5kMP61Lfl2
vpfzb6F4PkTxSlgbeD6E5434z8vzIfi/MnjO7w1GfOnlOeWSfwq5T03PJ74N
z4do/V3fGp4PYf8vCZ7fo3zAhRmcF79H7VvnB88przb4pvvXyB8Z/PTy/B71
V8xoM/exMb//KBTPKR/LL+R+NtlDqsssnt+r+taNIz6/l/7eWCie36v1XlFT
9rfvZb/SbhbP+b3Sj/j8Xurzl1k8v1ffT/3TzP1u5JOGE58PJR9wycx9b/iT
i/B8qOyrZqSF+9/0/cTf4TnPL7tg5j441u/nzeL5UPZT4uF5rN4Xcb9FPI/F
/qzE57HEs3HE57GsVwx+6v444pn72D/necfP8Nz3vliLeB6r+G9fAjwfpr93
nCoUz4dpvVX8G/n2YYp3qkbA82Gsr08Wcv+cng+Ks4rnw9j/6WvmPjrilR/M
4jnfq4om336f2m+Khuf3sb9RR779PuKlV8i334e93mnm/jrliwacId9+H/tD
vczcZ4e/fonzPXxvXx94Ppz23GEWz4drf7f+FfLtw8XznNfZPx+u72dEwfPh
7A/sKxDPh6t96d3N3Ien98eGk28fTv55QSH346k+OXMKxPM48a32FPF5nJ6/
8GSheB6HPe0v5P482cOkHvA8TvUPOQHP+fuGg2bxPA7/OQ+ej1D8k3wH+t4R
ys/FVnO+cATrhbbwfIT+PvVJ4vMRqs/+QxbxfITak5IBz0fAj07w/H72a8oL
uZ8P//5JoXh+v9ZbCYus3NdHPG7wx8tzng+5jf3z+9W+yGkF4jm/r06H5/cT
T99QIJ7HE19MLuB+P75/s1k8j9f3g0Ks3Pen/kjqSL49Xu0L3FbA/X/k098p
EM/5/fwueB7P/lAw++cJ6o+IGeTbE5SvDSgnPk9QfdftIN+egL+5CZ7z96Wl
8DxB308eVyCeJ6h9gRMLuU+Q9jaF5w/ofXlT4PkDxGtjCsTzB/T9zHfh+QP6
+yJ3gXj+gL7XMIF8O7+n/V0gnj8gvpQ0J9/O90LHFIrnI/FXD5FvH0l9HygQ
z0cSb02C5yMVr4RuhecjOS/kLOT+Quzvr0LxnL9f/UcB9xnqexVxBeL5KPyJ
tZD7DfV77PAC8Zzf0+3wfBT58GEF4vko1dc+kviccvX9ZvGcvw+5n/h8tP4+
9L5C8Xw0+c844vPR5KMvkG8frf1b+yXi89Hki4cUiOej6c+zhdyfqL+vv6dQ
PB/NeA6F5w/q+Yxh5NsfJP9zj5n7FfX+C4MKxfMH8Q9Dic95Pn4D8fmD+Jv1
Fu5fxP6HcB7tQezl5ULuY6R/1sHzMapv8ivE52NYn95VKJ6PYT36fT73NWq/
4nwMPB8jvvufIT43yp7ze/4/EJ+P0fgnnSzgPkd4/n2heJ7I+t/gl+53xD99
bxbPKfubCrjvEV7lkG9P1H5E4GrOuyZynsYEz5M0foknyLcn6fuN2QXieRL5
/G8LuB+S/bVlxOeUV2fD8yTxoPgbzsPze0BEAfdHkp9dWiiej6U/exCfj2U/
vXuheD6W+PAZ8u2UT4Szfz5W62/HYng+lvzOoQLxnOfbLCI+H6vxKO1iE8/H
6Xsnn4bn4zTeVV8Qn/N7becC7qeU/WyYD8/HqT2j9xOfj4O3+4jPx2l8Lu4t
4P5KtXdUJvvn4/X72YxC7rPU/t2KufB8PP5yLvE5z5cHs38+nnhmLjwfr/bm
zi4Uz8czXyoKuP9Sz7dKJz6foPoOnkW+fYL2i+YEwfMJ2k9ZfzPngSeo/ks+
ZP98AvnyMnjO75M/gOf83ryUfDvf2/dRgXj+kMZrR1AB92nq+aU7yLc/pPo3
L4XnD2l8WpUViOc8X/JYAfdt6vsdpsHzh9Tete8XcP+m/n7HZOLzieqvlBvJ
t0/U81e3kG/n9wNN4flEzmMWE59PxP8a8Yzu69TfzzF47eU5v2+4EZ5PUrwy
YzP755PUH3Ul+dznSX/9S76d3yf/beF+T5VrjPjLy/NJsofgROLzSerPBWPg
Oc/3Kyrk/k/VP/BPeJ7M+ctLxOfJ+n5bO/F5MrxrzOd+UM23oyPIt/P3qy3E
58n6/lqDr16e8/emq/ncH6r3XzL47OX5w/r9wD/53CfK+dcN6B8fVv8tKGT/
nHJxQ754/rDig9x69s8fVn9MzyM+f5h47T72zx8h//AjPH9E74urN3Mfqexn
e65FPKc8Pq+Q+0m13h9+t1U8f0TfOzCQ83CPEP+cMYvnk9U/cRfyub9U9Sk+
ny+eT2Z9tRGeT9bfbzhTKJ5Plv31W0O+neeP5OeL55OVL9rTm/ic9y+9C55P
Yf15bwH3n+rvx5uIz6eo/93H4fkU7f+sOWoRz/n7pBfM3I8KD/sQn09R+8Lu
hudTyPdVw/OpzJ/l5Nunqr/PHS8Uz6fq/RdWwfOpOq9wsgv75zy/9HQ+96uq
HNkdnk9l/3B1Afet0t7l8Hya9vfKPyPfPo149gjx+TT1x/yv4fk0tSe6V6F4
Pk3xyZlgeD5N7TPvtojn/H3iZ/B8GvmOeehLUzTfw33n1VM0vieNeMA7HCnK
Z8bOZP88RftZ2TPQq6To/ZM/hucpam9YzwLxPIX91Xlm7nvV9+d/VSCeU67e
W8j9r+TvesDzVPn71VPRp6dy3teI37w8T2X9HWjhflj9fvBR4vNUxn9hAffF
yp6uVBCfU864HZ4/qvXBkDeJzx/l7w0+6j5Z1XdwSKF4/qjGa2VwIffLkj8x
eOzlOX+/aWch982qfzYkc76d8slWZu6fJV55l3z7Y4onN40h387v4WXw/DHO
az3I+fbH4EU5PH9M/bFpPPH5dNU37AN4Pl3vaz6OfPt0+atuf8Hz6ewvpBZy
ny3rjfcKxXPKzVvD8+nsF10hPp+u8ZldQnw+Q/2R9Df59hnqr51TCrn/VvuL
F3/jfPsM+ucv8u0z8HePFIrnM9i/NPip+3HJhz1aIJ7z/qLt8Hymvr/AQb59
pp5vPqmQ+3Npz+9m8ZxyuI34fCb70U0LxfOZ2q9PNvy17tclP/KrWTyfxf5T
AjyfpfMdV1ZxHm4WPL9WwP27Gp8zQ+A5f9/t/Xzu49Xv4Y/li+ezdH6j1sT+
+SztP5dGcR4ujfX2APLtlNu+C8/T8BdD4Xka64+p+eI55QmF8DxN+ZuIZzgP
l8Z+2i+F3O+r961fTr49Xf0bvhyep8PTuELxPF391fbtfO7/hedX4Xn69f0p
3QdMfHqe+Dyd+Tcxn/uBWZ/0ZP/8cZX9hhZyXzD55wnw/HG9L6gv++ePY799
4Pnjas+JP+H546ynBxeK55SL91q4X1j1Xb8Mnj+h9pw9Qb79Cc4n/ER8/gT5
/17snz9BvHXILJ4/cZ0/uo8YHj/D/vkT+t6RH4jPZ+vvR4+C57NVv/5fmLmv
WOUZ+8m3z1b9Wj7B+fbZet/wGuJz3tfwIfE5z9cNKhDPZ+Pv23G+fU609/6D
0mTy7XPIX4YSn8/hvPGLBeL5HPJfPQu5/xj/PBee8/dLUi3ch6z2X4mA55R3
x+ZzP7L2m1c2Ep/PVf1G9y3gvmTO/z8Nz+fq/dNr8rk/mfX6LPLtc1W/cCPe
1H3K5LeMeNrL87nkq8Pg+Tzi+8xC8Xye9rdL/uI83Dz2H5cWiOfzlB+zXGL/
fJ7yM+Y4eD4P/7u4gPuY9b3hDng+j3hrDDzPUHuzQ4jPM/S9o4+Qb8/Q348P
Zv88Q/s9y85xHi5D7R0yEp5nkC9tW8h9zszv6HzxPJP1Xh759kw936oL8Tnl
lY8Vct+z+qdZVL54nqn31Y01c/+zygeMeNHL80y1vyKR/XP+/sRW4vMn2c82
/LPuh0a/9Rvn4Z5Ue2d/kc990ZwnGEJ8/iTx3Vn2z/n77W/Cc97fspB8O7+H
PkC+/SnWYwPh+VOMb/d88fwp7Hcm8flT2O/8fPGcv0/40cz90+wPv1cgnvO+
BeMKuY9a9d11S4F4Pl/9NXgsPJ/PfsZheD5f8zE3DL3tfPK5y8i3z9d6NiSU
/fP5nF84Rb6d95tehufz2T/dUiCeL8Ded+Vzv7XqFzcKnlPuf5z98wXaD78Y
wn24/H7u8Xzuv9b7shIKxXN+v3AZni+QPVx62iKeP632nn4Bnj+NvsmIZ708
f1p/v+ehAu7L1t+vO10onvP38w3/r/uz1b4FzQrE86dlP2+3yec+bfJ/8zgP
t1DPNzyaz/3a+t4ZOzxfiD9NLOC+bfLNT5BvX0g8fg2eL1T9hgTmi+e+95Vy
Hi6L/ZGt+eJ5FvtTs9g/z9L7jlYXiudZ2F8P9s8p1+zhPFyW6rM+gXw77wu/
lfg8S+1vvL+A+7xZz/QvFM8XsZ4vyud+b9ozCZ4v0vtm+MNzymV9CsVzypGt
iM95f3w0+fZF+DtTIfeB6/eMKHi+mPWCC54vxt7G5Yvni/EPm9k/X8x64zby
7bxvTYiZ+8P1+673ic8pB60p4D5x8r0Gv7w8f0bf6302n/vF2W9NJD5/Rv1h
GcN5uGeIZ1cViOf8ferIfO4f1/MB7xCf/5+ruw+3qXq/x19RFEVRFEVRhPJY
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
7er7/1TA/0T+zTX09hdivvPbiJ8rd6maH3j+onjOkfj5i9bDo+XDqV9bFJ6/
SM89IB9O+3vPLuSf4vdYJ7/9Rfx/ZiE/FfrJVfLbx4rv9sznrwJ/p+YHnqvP
35PPb8V+dDc8137TGYX8V/DXYZnA87HwfWohPxbn05+G5+OcbxyBn4+DH1/i
5+Oc7xsGz8dZ35vA83H46pMZ/i3Wu8/lw407rPeEn4t8l+34+Uv2t6/k83cR
z7yF3v4S/DgJP39J/trCTOD5of4vw3P1uzrkB56/5P3P8pnwg3Fef5F8uJfl
c2yht78c15tUDz9/2Xr+Ir1dfeu6+LnxVr0gH+5lekG7/MDzl+0XzpcPN97/
f24m8Hx81B+RLYe/jPhfMfx8vHy2mvLhtJ91LX4+Hv+/Fj9XXvu+fLjx4uMP
ZPjR2F+cI34+gX55JDxXHtsbP1c+cEQ+vxr5ElXx8wn2Z9/l86+xXx5VGHiu
/5KW+Pkr/r9v4+evyEdaCc/V9+shfv7K4XyW8Luhv5wuH+4V56cm4+evyEdc
Xhh4/mrcb8UzMvxwvJ/l8PNX4f8/Gf449ILs/vkgnus//M0Mv5xo3628/Hbt
i94qv/3VeN4VXnFebaJ8jAmj+ekcjqcdxPOJMV7Nxvn8dbxvrxQEnk90XnQc
PJ8Yz7dzB3iu/8qJGf479lcT4flrnmdJeP6a/OUtBYHnrzmf2Q4/V97RoSDw
/DV8sFD8XPmeTeLnxuucxb/w77Efzpff/jr9aT48f13+ys2ZwPPX5X9txM9f
p0fWxM/1H9ea3v66/LYHxM/1n/lihv8Pffb8/MDzN8TDc5w/fyN+nxWj5MO9
Yf+9EZ6/Ec+zfwo/177CBniuvkt2v34Qz9+I688vyPAPsn84C55Pgk975Ler
H7oKnk+SL3sAP59kf3aG82qT3N87+Pkk/PnoTOC5cuMW9PbJ8Xwm76O3T3Ze
YVo+PyLnQ8/Ez5W7r87wJ5Kv0VD8XP2YSvj5ZPm4PfIDzyfbT3eG5296v7/J
BJ4rj/kVnr8pH6JCfuD5mzH/mjfj59ovHVsYeP5m3P+kRfD8TfzqZ/z8TXxm
Ib39LfHpjfj5W3G9+ssy/JDw5VPyA8/fivudM7CAP1KM16gAnhtvU5l8fkn0
5SX4ufr68/DzKfKFbobnU6L9rGvkt0+hH12cCTyf4nteL8Jz5ZpF4Pmh+hPy
+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
MvwknceaXBB4rr5EHjz/Gh5WlQ/3NT1leJrfpHjLeeLnyut709u/pudeK37+
Dbw+RfxcefId8Pwb+W6F8Fx9ajx+rr708xl+lfL378LPv4HXZ8Pzbz3/0/Dz
b8Xvs3gXfpb45gvw/Nt4/mvGyG//1vVvhufKFa8TP1euc634+bfyEb6C5yv9
n7P7x4N4rlw/I36+kh7XDj9feTjfI/wx6Xul4PlKeD0YP19Jb/paPtxK8e/r
5Levcj5iHjxfhf9fQ29fJf5VNx14rn3XY+ntq/CnhfBcucQBeK59/pPy4Yw3
vE+a/yb9KIs3B/F8te8ZDaC3r/a+PUNvV+4/HJ6vPnx+4SCerxbvfkj8XLnc
Hnr7avpfPfHz7+grA+XDfRftywyB59/FfFo+WRB4rn3mAfz8O/O5FJ6rX/E4
vV05uU/8fI180q1p/p/x+834U/x8jfyuX+G5+kFT4Ln+ve+E5+pH1qW3r/H8
N6f5hcrX2ATP19Lb78bP18rn7IOfr7UffJverr5DtnwQz9f6fsh5+Lny4A3p
wHP9u72U5jca11s8Lh14/j083kxv/z5+//Kb4fn33pdXxM+/j/vbsU1++/fy
+Tqn+ZP6/9WX3/69/IQs3oRfqXjfr+LnP8CXlzP8S+lTVeXD/SAfa22an6nz
BlXEz3+I36fVjxn+pva3b8iHUy5ZrYDfqeutg+frYrxqGXi+zvneGvT2dfKT
ytPb1+GP2fJBPNe+0rdp/qj0yxvSgefady/Az9fDzxfw8/XO+66G5+vth7rA
8/UxvyIrM/xU7adexM/1n7Acnq/3ft6QCTxX3/U0evuP+Olz6cDzH8UnCgv4
r+Lb5fDzH2M+266lt6sfdbz4ufp+J8Jz9f2fTQeeu964a+S3/yS/J01v/0m+
UHn57erntoTnP8X4bbP8IfxcxVNPxM/Vd10Bz3+yX/1C/Fx91VYZfq/OkxyF
n2/A50bk83+N+r5X4ucb5JcdmeYHK1/is/zA8w0x/2pX4Ocb/J6f09s30D+f
SPOLld9T3PfhNtr/PYmfb6RHtqS3b8RXi+DnG+ULfUxv32g/ucj5c+NPvlw+
nPEaFvN9uJ/lA/2XDjz/2fvaVPz85xi/zZx04Ln2rQbn86ON+iZP4uf6T56L
n6tv+28m8PwX789s/PwX69d/zqv9Es/zuovo7b84T5PlPwfx/Bd8uTE8V596
KB14rr7DXnj+i/OLs+D5JvH89+jtm/DHRvBceWiWr4X/Lb5xITxX3+RCeK7c
/m38fJP8pn7w3PVmTqO3b7b/7Cu/Xbl3Hfx8s/F+h+eb5Yv9Ac83u7970/x0
+e9NSgeeG29Ithz+uvK/3sTPt9CvXofnW2K8SjWcV9siv6oGPN+CL1fPBJ5v
sd5ly+HHK7+8JzzfYn8zMZ8/b9Qvmui82q9RHv8LPP8Vvk9IB56rn15Vfvuv
9ttV0oHn6ltXgee/xv00+gk//xV//hGeb8WH1jt/vtX+sBJ+vtX+qws83+o8
2xnwXH3ObfB86+H9ZfgB2x+MyQ883+r37wzPt8nn7wTPt8V4Uyuk+QVbr1bD
c/W1TsPPt9k/doTn2+hd2fUy/ITj9530LX7ueuPKZfgLx3wfz9DbfxO/ODmf
33C035+gt/9mfnlp/sP0/hvh+W/0whPxc/XJ6+ntv9m/lk3zJ476ISfB89/x
uzJpfsXyN06C57/b34zAz/XfWjodeP57jN8qu/6Hn3HMd/Hz6cBz/RsfD8+3
+57RceLn262XX+TxO47x534Kz7e7v2H09u3e32Mzgefb6QnD8XPl+s2dV9sh
3+2qNH/k6N/wCXq7codP8/glW28+pLfvcF75yjT/ZPmGj9PblTdcls9PGZ/M
8qGDeP6H/dgc+XB/WF/3yYf7w/nWpvi5+nJHwHP1qx7J579sve/vvJry8Ivx
8z/i/jdcRG//0/o1UH678oRH8HPlsvPy+DXH7zHjIflwf/pe2SX4ufr2M+nt
f8LXgWl+zvS2Bvj5Tnrj/c6r7aQX7JQPt1O843f5cDvtx//Ez9XXrwPPjbe5
dn7gufFey/Kh8IOWX/peXuD5Lnrh7/j5Lnrmr+Lnu8S7/s7jFy2e2jcdeL4r
rjfmTXiu//776O274nn/0wueK5falRd4/pd40gPw/C/x9h7w/C/5Im+In2tf
4iz8XLnIBOfVtJ96fzrwXLlflh+FH3Xcz7Y78gPP/6aHbMHP//Z7/OC82t/2
g2+k+VXTi++UD/e3fIxa8PzvuN7Sm30fTnncXWl+1vJPaqQDz/+J+Y8e7Xsy
6nel8PN/5GfcTm//h56yMj/w/B/5lz/Bc+NNH58OPNd+3anwfLf18Wzx893w
oWqaP7Z45Yn0dvVDVomf7z7MBw7iufb9v4fnu52PKYuf67/peHi+R/yxCzzf
Ix/9GefV9nj/2zp/voeevlR++x56Syv8XH391Wn+2/JBroXnyv8k8PO9ntcQ
58/30n/z4fle38stIx9u7+F4Svh1R/tRReH5XvkTp6b5dx/OJzqI5/usT6Xp
7fvkf17pvNo+682l8uH20ePapwPP9/meRBv57fvgRbt04Ln++3Pwc9frUxae
7/f+75cPt1/+cBH8fL94WQn57fs976Pw8/3yhebA8/3yqa7Dz/fH/TQ9ET9X
nvBVXuD5v/Z3B/Dzf+P6G7/MCzz/1/7rGPz8X+c1F8Nz/Usthuf/xv3MGSx+
rtxiWR7/cfmWczKB5//F/b32kPj5f/jDbHr7f37vY+H5fzHe8iV5gef/yaf/
Gz//z/7oI3q7+oY18HPj73pS/PyAfIsW+PkB+//F8PyA/Mqd8PyAfPF96cBz
/Zd8gJ9r32E6PFee/Rq9/Yi68f32fvR25UV35fM/r3tw/Pwjxc+z5YPn43rR
29Xv+InertzkJ3iu/c6Zaf7ndWP/3QSeHxntS59Ob8+WDz7Pd9L8z+vG86kN
z4+M8TKb4Hm2fPD/9T96u/Ea3Y6fHxnX2zcNP9d+0nfw/KgYb9hqevtRcb2u
s/P4n0f/dVPwc+1nnwHPj4rrrT/deTXlBvXT/M/rhr/u1/j5UXF/VXun+Z/H
eMlx8uGKxPxaZvlN+J9HuebZ+HmR+H3aneq8mvrer4ufF4n5d5yRx/+8buTX
lKO3F4nrz/qc3l407m/lKN+TKRrtq07L438e7XutpLcXjett+DbD/1z7z3xP
RjnVHD/Xf1yPNP/z6L/uzjT/85hvnWa+93p0tB9ZLc3/PMabcw5+fnTMd9HV
+Llyuavhuf4Dsut3+J9H/wX35fE/j+ut/yWP/3m0L3kcfn5M/F79joXnyiNv
g+f697s7j/95/H4N99Lbj4nrtXo1j/953O+in/L4n8f11jdz/rxY1G+9Rj5c
sfh9+y7M8D+P67WqmOZ/HuM3OMH5c+Whx9PbjV/5YflwxWJ+0/+A58Vj/Hta
0duLx/vauYTzasWj/+b2+HnxmF+5IfC8eDyPMe3w8+Lx/HcugefaTzwZPzd+
nS55/M+jf50LxM+Pjfl1K8zjfx7jlciu3+F/HvdXZ1Ga/3mUu74hH+7YuJ/R
M/HzY+N6RTN5/M9j/MsugefHxf11n4ifHxfjzZuR4X8e/Ze/gp8rt9kBz/XP
fyrN/zzmO/AjeG68XTXgeQnrWZaPhf95lCs2oreXiPGHfp/P/zzup8M4+e3q
l67J538e4y/dDc9LxPvR64Y8/udRbjIbnpeM/q9l+Vj4n0f95tHwvGTMf0rT
NP/zGH/xojz+5973bDn8z6M8tLL89pLWh4kZ/ucx3vxX8fPjo77PV86fK4+c
keZ/Hu2HVBQ/P9799szwP4/fb8gy8XP9x52Wz/88nlfLHzL8z2N+r+XS20+I
+1nbHp6fEONXzPKz8D+P93H/ixn+59G/7Hfy4U6I+Y14Lp//eYyX80Qe//N4
37tUld9u/O678/ifR3nB43n8z73Pn8iHU35tuPNqpeJ+59aF56XgwQHxc+V1
zfL4n0f7IpXp7aXj+eRk+VL4n0f7voPy+J/H/ZS6Kp//edRXuTvN/zzuf0bH
DP9z+NUSnpeO+9mVoLdrv/9z+XAnxnxKZfEn/M9j/Nn98/ifx/wWL4HnJ8Z8
qv2ex/88+s9shp+fGM+nX/U0//MYb2d2fx3+51FufFEe//OYX68i8Pwk+5mH
nVc7yfs5Bp6fFNdbN1r8/KS436r94bn2yUJ4rtwzu78O//O4n6kf09vLRHnt
Cnp7Gb/nCfh5mXhe+Vvw8zJxvZKV6e1lzL8SPFcet4febvzX6uTxP4/nM2MZ
vb1szG9YfXheNtq3Sqb5n0f7pvfl8z+HV3fl8T+P59nwJvHzsjHfFu/h52Vj
PrvX4+far/gePz85rtcgWw7/8xi/1w/4ufqhPcXPT4753rNDPtzJcb2m28XP
1dc8GT8/OZ7nqOvw81Pi+vW74eenxO/dpQx+fkpcf8xKeH5KzD/VNY//edQX
7ep7r+qHbpEPd0r8Pm0K4fkpMZ81kzP8zz2P/Dz+5zG/ll/h5+XsX4bQ27Wv
2AA/V99rIzwvF8+n0TLfkzFeleV5/M/j/mrWdV6tfIw3+Iw8/ufx/Mq/j5+X
j+cz+vQ8/ufW0xvlw+m/9FF4Xj6uX/xyeF4+7rfSTHiu/Y6a8ttPjeu1/yyP
/zl8aw/PT43r9bwUnp8a81+3it6ufmz/NP/z6F/9Gvntp8bzL389PD817mdK
V3h+WrQve0Sa/3nMZ3FVeK48pgA/1374/Dz+5/Dtmjz+53G/c6/0fTjtW12Y
5n9uv3ELfl7B83oqj/95zPeI5vC8Qow/KEFvrxDzn94MnleI37/NRHheAV7M
gefqG9SF5xXj+tfdk+Z/HvUTBufxP4fPV+TxP4/5bbuB3l4xnvfoI/HzinG/
fY/N438e9c3Pw8/131UcPz/d+9s8j/+5/8N14uenx/Wr94Xnp8f8pmbxKvzP
Y/71s+XwPzff7Xn8z2P84qvEz0+P+axpjZ+fEe1nXZrH/zzGr14aP1c/phQ8
P8Pzrit+rv3XdeC5+lF3y28/I36/pV/R25XH3YqfV4r5b3gLniuX+lI+XCW/
Rwv8vFLMf0Mtensl/K8HPK8U91v2Ufy8En68A55XjvGbf05vrxz9Z3RM8z+P
+Vdo6nsyyi2XwPPK+Ng5+Ln65pc6f14Zn74EnlfGZ+vl8T+P8hGniZ+fGc9j
41n0dvVzyqf5n8f85vTFz8+M6w0ZgZ+fGdfblMTP9W90KH5+Zsy3SS94fhb+
/3Ga/3mMd93+NP/zKNfuneF/bj+yOo//eYx/79g8/uf4XrY+/M/t5++F52f5
v9XI439uvR0Kz6vg0+fm8T+P32viHXn8z+P+Fv2e4n8e5X3V8vifx3j/vATP
jbf2HHhehX5wnvPnVe03atHbq8bzb3ASvb1q3H+JVfh51ejfdqj4ufol78Lz
qubzDTxXP6S6/Paq8TwmfC0f7uwYr2kzevvZ9kNN8fOz434mTcPPz8Znj8PP
z47xNmbX9/A/j/oiv8Jz488o7nuv58T4078QPz/HfnQzPFffOCV+fk48jz6N
8fNz4v5GVMDP1ef8mOJ/Hv2XtYPn2s9vIn5eLeY39gF6e7W4/hHZcvifx/0U
HYWfV4vfr9aRvg+n/YByefzP4Xm2HP7nUV5wCjx3vcx98turx/wO3Etvr45P
tsXPldvMg+fVrYdZvhH+59H/n5Pp7dXj93m8Djyvbv3ZI79d/ya74fm5/o9D
4Pm50X7Mk/D8XPd7HjzXvumL+Ln6Pi3z+J97H9/Hz8+N6xX9OsX/HJ5l99/h
fx71C2b6nkwN+/EV9PYa9I7b8XPlI74SP68R1xs0A54r77gNP9d+8dn4eU37
8eLwvGbUb/sixf/cfrOz+Lnyuk709prxfO49Jo//OfzqBM/Vb1tCb68Z99N2
CTyvFfVHFMXPa3nfcsXPlZv0g+e14n0ZMSrN/zx+7/6np/mfR/2mhfR24y/4
ET+v5f/RGz8/L9r/8yM8Py/Gu6y8+Pl50b/rq/T282I+q06RD3de3M+u/Sn+
5zH+xOFp/ufxPEaeAs+Nt/87eH6+9/8l8fPz4eHT4ufnx/j5f9Pb1Q84Hz9X
7rU7xf88xmtdCp7rX3xuiv85fvOC+Hlt+8H36e214/5XjM7wP4/x2/fI43+O
r5wrH6629XNXiv+59+Ub/Fz/9X+m+J/Tw86ht9exPzxbPlwd/Kg5vb1OjN9h
Ojyv4/2cJn5eJ+ZTrBM8V19ye4r/efy/DhyVz/88rl/5zAz/8yjPyvL98D+P
/ru3pfifw7tsOfzPrUdL8/ifR/9t/fDzuvC5Ux7/c/h7FjyvF+XJW1L8z+N5
DbyZ3l4v7qf+Rfh5vbr/F/8I//MYv1Mf8fN68bzaL4Lnxu9zUx7/8+g/+EJ6
e/14Hyo/TW+vb7/0FH5eP57X7HbwvH6MP288fl6fHjhEfnt9+73v0vzP8b9n
4bnrdXwPnjeI681cn+J/HuPXqYOfqx91nfh5A+vT+eLn6pOPip83iPFXVfU9
GeNV3gbPG4gvzMHPL7Ae1YTnF/j/Zdf78D+P+5t3rPi5+mrZ/W34n7veJvxc
/fTVKf7nMX7nWfT2C2P+c1al+J9bv7Ll8D+nD2XxIvzP4/lv3SAf7kLPc5L4
+YXWoxfh+YUxn22vO69mvEnr8fOG8Ok159Uaxnj3rKO3N4zfr8UR8LxhzLfi
I3n8z+N6bSqn+Z/TO4+F5w0P6yXhfx7j1z4DnjeK8Zf/jJ83ivsr9r88/uf2
Q3vp7Y3ifualU/zP4UEveN5IvGo3PFe/+8E8/ufRf3N5+e0X4cvZ/WT4n+Nj
fzmvdpH9/wfwXPvGH8Dzi2K+vZ/Cz9Uv2Sl+rn7+7DT/c/v33BT/85jPnAvz
+J97/otS/M/j/z5qR5r/OX5Zjd5+cYyfPMf3ZPSvUAQ/vzjuf8dLefzPY7yx
78hvb0wP3QvPG9ufLM7wP4cfg+C5/v9f/DX8z8UzFmb4n8P/T5xX07/6/gz/
82g/90b5cE3i+k1H+j5ck+hfbgq9vYnf9y14rv/OYvC8ieexEZ43ifk1nJPi
fy4+eDt+fgl+MEk+3CX06KPp7ZfQJ9en+Z+LL+2kt19CP1wnfq7/gFvxc/XL
ytLb1e9P5PE/j/rWnfDzS/HBd1L8z/3ffsPPL7WeniV+rr5BA/lwl8bv338/
vd14M/bl8T+nP+6lt18W/Wc1z/A/9/8cKX6uvv2mFP9zeksPevtl+PzpefzP
4/kUv1N+u3Ktn+F5U/Hu7vh5U+vZmyn+5/bjH8qHa2q/MTnF/1y8Mh+eN6Uf
NYHnxts3O4//uf1FF/HzZvAviyfhf27/9D08b2a/8AM8137HLHp7M/+XJ+B5
M3phVXiufvR/+Lnykhzfk7mcPn0Wfn65+b8Dz5XLtpQPd7l4UF357ZfjO5Xg
+eXiqVfAc+2LngDPL/d7T8XPm1uPz4PnzeN+BxTA8+bRfnwF59WUV+yC59rP
24CfN6cfXCZ+rr7J0gz/c/G8S+XDtRC/vA0/byEeWpjifx71XdbD8xb0qSfh
ufKuxnn8z6P9ilvwc/Uzsvwg/M+jvuZEeH6F3/MdeK68OLu/C//zKA8+Ko//
uft9FJ5fEfMtcxM8vwLfaJjH/zzqixyKn18Z401+O83/3PveAj9Xbj0XP1cu
tzjF/1w8Pbv+h/+536O/fDjjd9+Q5n9O3/ha/Lyl/cnzKf7n9tND4Llyozfo
7S3hW1/x85b2y8+l+J/H/U4uK36ufcN3fR/OeA0K8vifR/8uRfFz5dm3w/NW
0X7zd/C8Vcz/8Rr4ufrSw1P8z+klF8LzVvhhCp4bv+Vt4udXWZ9ekg93FX12
LDy/yv6lmfPnV4nv1IfnysWbym+/yv57YR7/c3rqCnh+FTwpTm+/2v0+iJ9f
7f/RhN5+tfhKd3h+dfSfujXF/zyuV6kPPFcedZH8duN3mOD8eevov7i9+Hnr
GL9fQ/Hz1vhrdj0P//O4/7U35PE/F3+5Wz6c/m2vSPE/P5xvEP7nMZ9JT+Xx
P4/x+vSE523g/Rh43oaeOCDF/9x6da34uXLZIeLnytX3wPM2nkebPP7nUe7d
Gp5fE+0H1ZIPd438i3Up/uf0vBl5/M/xi74p/udR324uPFd/YDM8V95+On5+
DX47DZ5fG/XDToTn10Z97Tn4+bXwLLseh/+59f20NP9zetN2eH6t/foAeH6t
/etP8Fz564Yp/ucx/w6T6e3Xyee5MMX/PMrrm+Ln19FDrobn18lfKysf7jr6
foMU//MoF21Hb29LL9kEz5WXvgDP29o/VqC3H2p/mvNqbeN6Jb9M8T8XD3kl
j/95/H873Ymft/X8C1L8z8Xbjqe3Xx/3X+0+8XP1S5rS25WXjYPn14tvXADP
lRvcncf/XP5CA/z8eutVffz8hphv9155/M/p29n1O/zP4VkLevsN8Odo8fMb
8I1Eiv85PL1I/Fz7zpfT240/vZn4eTv5iPfR29vBx/Pp7e2s793w83b0yWPl
t6vvOD/F/5ye8xk8bxf33/Yz/Lxd/P5f98HP29MD/svjf344vhP+5/bfZ6X4
n1tv56X4n9vf7ofn7eXf3Jjif+793Jnify5+2z7F/5xe8WeK/7nnuQc/vxEe
XICfa3/vLXn8z+mbveC58ryu9PYbxd9qip/fFPPf1kE+3E32N0Px85vi+by2
Cz9X//W18Fz/QZ+k+Z/H+AOfxM9vivel/znw/KaY//iz5bd3kF9whvh5B/kp
H9PbO9BzauDn2u8+C553wEenwXPtW82V367+n07wvIP/w2nwvGPMd+41+HnH
mO/KYeLnHeP+Z22ht3ekJ5SD5x0P6/nhfy6e1CLF/zzup1sF8XPX21AWnt8c
91O6Mn6u3L0Vvf1m8Y7s+hr+5/SowfBcfYfB+Ln+u19L8T+P+ylzovi59o8/
Rm+/JZ7PskfFz5WnN8/jfx79l6zL438e5foniJ9rv/0R+XDKwyak+J8rXyF+
3gnfOJne3gl/LJXmf+7+S9HbO8HvV+F5p/g9Gr2U4n8uXtoInmu/LYsf4X9u
fWoMzzvLPyyS4n8Oj3uLnytXLoGfd6aX3w/PO4s33g/PtR9ztPi58Ru8BM+1
n7k8xf9c/G8lfn4rfO6Nn98q/nYhPL9Vvtc38ttvlc9cl95+6+H4RfifW6/z
U/zPzece59Vui/FTmRT/c7/3C/D8Nny1F71d++Lnp/ify688xM9vk4+YSvE/
j/ubeIF8OOX5dcXPu8T9Pr4wxf/c88iIn3exX8qWw/886pfUzON/Tt9L4Odd
4Hlt8XPjj701j/85Ped8entXesBC8fOu8D2X3t417mdQR/y8K72mKjzXvvvf
zp8rz5mLnyuvnwPPb5dfMQc/vz1+r0bPwvPb5cdUhee3e59uhOfqZz+d4n8e
91srWw7/c/mic/Bz7TNPw/M7onzdUHr7HfD4afHzO8THhuLn2pebRW+/Q37g
u/D8jphfk1nw/A54tQU/13/u4BT/c/pBdr0N//OY/4Rr4Hk3+Y9P4Ofd4n4q
lRc/7ya/4VT5cNoX/4Xe3k1+yNvOq7neqCkp/ufy/U6G593t76fA8+4xfs+B
af7n9P/18uG6x/XGrRc/7269mgTP9Z/4AzzXvl9/eH4nfe4NeH6n/KFSKf7n
9reX4+d3wpc1+Lny1O/y+J9Hufzx8tvvjOtVLun8eQ960aXwvId805X4ufLS
41L8z2O8rsfB8x4xvzXH4uc94Edj/Fz9lPtT/M+tt8VS/M/t774SP+/p938R
nvc03j34eU/65kUp/ufi2UfJh+sZ45dvSG833rCj6O3q19+V4n8u3t4AP+/l
fENP/LyX9TQfP1fu1AOeK3fpLh+uF35QL4//ufjlgST/c/x5L739Lnprdn0O
/3P7xa74+V30ujop/uf+f3tT/M/9X2vC87usjwvhufZN/oHnyv12wfO7o3/j
T1L8z6O8dRQ8v9v5h87wXLnjLniuXOtmeK7cuQY8vzuex4Kq8Pwe+fU34+f3
wJfh8PyemN/aXUn+5/DqjxT/c/GA2eLn94h3ng3P73Eeoyo8Vz93s/j5vX6v
yuLn98b4y4fC83vF1z9I8j+P92XH1hT/c+vpnCT/c/jZBj/Xf21FeK6+W2vf
k7kvrl9pS4r/edzvhEHw/D75pZtT/M/FhwbC8/ucf3kSnt8n3nRdiv+58y5T
nFdzvenfw/P7xZey+6vwP6cHtZLffj998hH8XPvXfknyP/d/uhye6z/uVefV
7o/nU/Et8XPjjW9Bb++N7z4oft7b+zGR3t4bf1mNn/eO/sUeTvE/j/bDX8LP
e9NP1yf5n1uv19Db+4g3X4yfKzdal+R/Ln56ETzvI59xcpL/edx//hh6u/op
d8Fz5b5fwfM+8ftU7UVvf8B+d7n89gfgw0Xw/IG4n87L8vif03N7i58rNz9C
PtwD9gd34ecPyCdpkuJ/7v8+LsX/PK43/Fh4/qB43yfw/MFoP+biFP9z5++y
62v4n8f8B14Ez423uDu9/cG43423On/+oPhEQ3jeV77a0hT/c/Hj55xXU9/g
3xT/c/Ha7H4t/M9jvqV74Od9Y76Lz4Hnfek/3VP8z8Ujd9Lb+9Fr58HzfvIR
/3BerZ/93egk/3PrxT/4eT/7k1vwc+VqSXjeT77vkiT/c+/vofj5Q/hqLjx/
CB96Uj7cQ/TsWin+57F+jxqOn+tfdZp8uIfEY/8QP1ffdip+/j98ZSY8/598
zHPx8/+J1/yd5H/ueTwLz/+H31yFn/8vxh/5DH6u/6Rp8uG0b7Qzyf/c//ta
/Ly/+MOvKf7nMf/JM1P8z2O8UjPhufYT35IP1z+uv/RNeK48vC887y/eMDLJ
/9z68yA8HxD1kx6G5wPwsZfh+QDr1zTx8wH0rUvgufoBb+PnA+gn78Fz7Y/I
lsP/PK7Xe1aS/zl8uweeP+z6xcXPH3Z+7N0k//O4v8HfyIfTfmVD8XPjlxko
H+5h8fZy4uePWG/fgOePxHhtesiHewQfm57kfy7e/R29/ZEYb9lrKf7n9INu
8uGMX+o48fOB9IMfk/zP6cu3w/OBMf8NxfP4n8O34vj5QPHuE/Fz5VqXw3Pj
FblLfrv6oQ+m+J97n3rC80HyIy6E54Oc95oMzwfF86vQAz8fJN96N36uvvad
+LnyhjVJ/uf4xFH09kfjfWtyPzx/lL6TdP5cefcBeP6o/0f/JP9z69kYeG68
ihOT/M/l71ShtyuPv43e/ph4QiP8/DH5jJ+Jnz+G3z4Hzx/zf7kQP3/M/rmo
fLjH7B/T+LnxJxeB58a7p0+S/7nzvHn4+ePWh0/o7Y/Lhz8Hnj8Of8cm+Z97
n4bh5487n3uq+PnjMZ/xm/DzweKTD8PzwfIR/oPnyn3aiZ8PpifMyON/Tm/N
rvfhfw5/NtLbB3t/9if5n9Mzpslvf8L6WZDkfy4f7kd4/kS0L90ryf/cecVr
8fMnYn6Vb8HP9R+3KMn/XLyvFH7+hPM+z8DzJ+2XTqO3Pxn3NyS7nof/efTf
+FeS/zm9sCS9/Ul6cAnxc/WDsvvl8D+Hn4kk/3P7xyvFz4dYPybi50PEB8ri
50PEd0Yl+Z/Dvyfwc/13FMXPh7ifBvBcfWo9PB+Cj/2W5H9On/0Sng+N8Use
hZ8PtT/vI36uvtZl+PlQ+vktSf7n3r834bn+cybj58qL/4PnT+H/54ufPyVf
bgy9/Snv363y25/yf+6Q5H/ufdiHn2vftBO93fhrJqb4n9NPJsqHe5q+fDI8
fzqef8Xqaf7n4sHtkvzP8ekNSf7n9Jq8PP7n4l0peO56u96G58Pkb9aD58ol
s/ur8D/Hn5rC82FxvZnj4Pkw58fPlA+nvD27Hob/OfzNlsP/HJ+aS28f7vfd
Tm8fjr9n1/PwP4/xuq1N8j/3/y0Jz4fLb9lGbx8uH6iC+Ln2Q+5O8T+337gK
nj8jXrBFfvsz+Ne59PZnxFs70tufifltzK5X4X8untcyyf+cPp/Gz59xfvAd
/PwZ/PihJP/zuL+dZejtz8b1XquCnz9Lz1oBz5+lF+6E5/qvqAfPn6UHf4Sf
a9/gwST/c/Gwwfj5CHr5Ib19hP/LEeLn6rdm1/PwP7e/+RCeG69Wdn0O/3P8
ZiR+rv+y7Hob/ufev0709pHRvsQj8HxkjD+/OL19JLyrgZ/rXzrLr8P/nD5S
mOR/Ln64B56PdL51OL39Ofl6w+D5c/LTvoHnz+HP2fU6/M/le/0Dz7Uf3zPJ
/zyef5Gn8PPn/H4b6O3PWf93Jfmfw7fa+Pnz1vMb4Ln64qkk//O4XvP5+Lny
mvvz+J/7P/wrfv6875VcKn7+fMyvTH14Psr+Zqn4+Sj5lLcn+Z9bzx+TDzfK
/u0eevuoWH9m/J7kf+58Q1f83Pi9uiT5nzvP3CbF/9z7dhs8V1+5dYr/efQv
PQc/177bafT2HOdpVqb4n4t3HYOf5+Dv5entuVE+UBQ/zz28nw//c/n4lejt
ueKVw5P8z/H5jkn+5/Sok+nt+ldvgZ+73tjm8Dwhn+epJP9z54/nyIdLxPw3
LcPPE84/9cHPlduOxc8TMb99n8PzhPjCZSn+565fTn57kp7wZJL/ufXs0hT/
c+/XXvw8SV+9BJ4n4cfx+Hky7qd/GXiuf5cZ4udJ50nPwc9T9OdHk/zP5Xv9
iJ+nrPdp8fMUvP0EP0/F9XctSPE/x5evz+N/7nzAKvzc9caX8D2ZPN+3OA6e
54n376C354nn5eLn2u8qTm/Pk+/VBp7rP2NCkv85/nIUPE87H/JVkv95/F4V
BuTxPxePOFX8XP2SV5w/T4v3jKC3p+N+eh9Fbz80/rIk/3PrdTn5cBn/937w
PCN+VRM/zziv1zvJ/zyuV/El+e3aVz0xyf+cPrs3yf8cvvVxXi0jn6E3PM/3
/ZHs/jv8z603P6X4n/v/fQrPtf/67iT/c+fr18uHy7e+Z9fj8D+X/38Xfp7v
eZaA5wVRv/0T/Fx50nFJ/ufifzuT/M/j/jf3wM8P1feA5wX4ep58OPUdPk7y
Pz+czx7+5zFev+7y2wvtr4+B54Xe/0dS/M/F0++gtxfSM39zXk37/G/gufE6
jYLno8WXtsLz0fT+o5w/Hy1/4zl6+2j5cEfC89Hi0UfQ20fbv94Kz5VbZsvh
f05fX46fj7Hf7ISfj6GPZNfH8D93fuxf+XBj6A2Xw/Mx8HUmvV37ge/C8zHy
BWvAc/27PoWfv0AfGOq82gvydYbC8xec3+8Az1+gp53j/PkL4tP/4OfqW50t
H079yibw3PWKnpDifx7z230Xfv4ivf8TeP6i+HV2vxb+54f3h+F/bn/aEz/X
vvsgeG78pQPhufabHoPnY+XXPQLPx4qnfQfPx8rfnYifj4UHr8LzsfDsKvx8
LL75OjwfS/9ohZ+PE08+1fdkxsGHrvLh1C+qC8/H2a9cDc/HHd4fhv+5/LQH
8fNxMd/UCvxcuXj/JP9z579Ow89fEu/qg5+/RI9/Rn77S/YPzfBz5fn/wXPj
NViOn79ED70Znqs/4kTx85fthy7Fz1+m594Dz18WL9iHn79sf/xAkv95PM+m
1eG5/petg+cvO0/5AzxXnpOHn4/H/3ri5+P9Hj3w8/HiT2vh+Xi/T0N6u/aj
EvLbx9uvXSgfTv+WufB8vHhZMXg+QTxlFH4+Qf5ffXg+Ie6n3PP4ufr+vZL8
z61PXejtE+xfHsbPJ1gv6shvnyBe+FGS/7n3YZbvybwi/pBI8j+HD+eJn78i
3+e/FP/zmH+3YfD8Fec9Xqa3a9+5Hzx/NZ53ryvx81fFb/fj58oVViX4n9M7
9tLbX/X9kS74+avy8Ucm+Z/LpxgJz1+VP11W/Hyi/cizSf7n1t/aSf7n4md/
4+cT7YfOT/I/F8/ZAM+N9/Ut8Fz/fXfj5+qrDoTnr8Gj7HoV/uf6n0FvV9+q
Bjx/Tf7Lx/i5+uIXw/PX7BdvgueviT/1wM+Nv/sh+XCv+3/+Jn7+uvWoPTx/
nV61J8H/3PfytoqfKy/5LMH/3HpxQ5L/OX34dnr76/IZn6e3vyF+0weev+H9
fAGev0EfLCt+/ob8rUUJ/uf455lJ/uf2S98k+Z/T476B55Psz7LrV/ifR/+y
bZL8zz2PFfB8kv34V/Bc//G94Pkk37OZTm9XblQRnk+yH1mOn0+O/u1aJfmf
y78sgZ9P9v85zvnzyfTp7HoX/uf2p8fS2yfHfPfvgefGm18Onhtv0otJ/ueH
9bnwP7effyHJ/9z/vyq9/c24Xucq8tvfjN97+v34+Zv0/k0J/ufOz5RJ8j8/
rPeH/7n8z4Ik/3P84Qjx87fkd7SB58rTb3Ze7a2Y7z2ZJP9z+kJNeK48ugM8
f0s86mN4PsX3DrLrZfifi4cso7crl3wZP9e+RU96u/K2cc6fT8EH5sHzKeL/
6xL8z6P9vdn1M/zP7Ud3w/Op4uMfJvmfW4+Pg+dT7V8+oLer71cFnqt//EJ4
rn7A2gT/c/mFZ+LnysPuT/E/tz9Zk+B/Lh93ofj52/aH3yX4nztP9WaC/7n4
xxny29+mv9+Dn0+TX3E0fj7N+far4Pk0+RYf4+fTYrx5vfDzafhpT3iu/aRO
Sf7n8mWOh+fGX3Wn+Pl0//d1+LlysXLwfLrvYbya4H+OD14Oz7Wfvxk/Vz9x
dor/eczv6/fp7cbrVgaez4j77zg+wf88xuu0LMH/XPzgTfHzGfbb7eD5DPGe
yfR27Rc/A8+NN/cN/HyGeOaP8uHe8X2Bi+C5cueq8Pyd+L03Zdfv8D+33z6L
3v4OPT67Xwv/c/vtbs6rKee8muR/7n6uwc/fjfryDyf5n8f9VK0hH+5d+dH/
0tvfpU+0hufv2m9+kuB/7nss2XL4nzt/uiDB/zzGq7YXns+Ub90Kns+Uz7A9
wf88+o98lN6u/4jfE/zPxS9fhOcz8cVsOfzP5Sc+IH4+y/+3Jr19Fv5WE57P
sv++JsX/3Hnka+C59pdtTfA/p9e1ET+f5ftUleD5LOcxs+tX+J9H/bAtCf7n
9ivZ9Sz8z72Pp8uHe895ijkJ/ufW36Up/ufiUy3p7dqvfxCeK+/4jd7+vvPF
f4mfvy9e2iTJ/xy/H5Hgfy4+9S48f99+9k96+/viv5/g5++L594Jz2fL73kn
wf/c+Pc6f66+2hx4Phs+z5cPN9v3AS6jt2tfZnqC/7n/yxXi58q7euHnc+jP
G+G58uZS+Pkc+Tcjxc/VD/0QP58T85n6Ln4+x3mxH+H5nJjfzHfguf6dc+jt
H7j/kvD8A3pSQ+fVPoj2Oevwc+0bFqW3fyD+MA2ef0A/mATPtR9xCzxX3/F7
evuH9Kji+PmHfu+bk/zP/R7fJPify7d9PcH/HN/sAM/Vb1ud5H9uPz9d/Fz7
phMT/M99T6CT+Plc/OFY+XBzxeNvhudzxd+qw/O53v9v6e3KdaY4rzY3fr8d
R+Pn8+L36fskvX0evXMFvV35iCfw83n+r1/B83nyb6+D5/Ocr3gkyf9c/sYr
8HzeYf4c/ufiY4/Kb/+I/v1igv95lK+7Hj//yP55IjzXv80e/Fx99ar09o+s
31/i58bb/jA8/xge9oPnH/v/fyZ+/rH8mb74+cf2K9n1OvzP7c8KEvzPxUd2
4+fat3oJnqtveFqS/7nz7kvkw82Xn9eX3j7feb+P4Pl8+ewP0tvnx3zb74Tn
+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
RSv83PgTXsHPf43xX8vuX8P/nN77V4L/uff5KHr7r/bnN9DblTt8KH7+q/1Q
Q/z8V/rAkgT/c3zzYfx8q/jXp/j5Vnplthz+5/j6bPFz/XPeT/I/l4/ZCZ7r
3/44/HwrfPoRP99mP3EKvX2b/fgp8Fx92VH09m3ev9/g+Tb3sy+X/7n8qefg
uXKxr3L5n9sfXZ3gf46PbU3wP8fvdufyP6cfP5Dgfy5fZkuC/7nvIZSG57/F
fFu8jZ//5nzqlQn+5/JHfoHnv9PjPoTnv8fz7H6A3v678d6S3/47fn0rfq58
79ny4Q6NNxueK6/5NJf/ufOtd9Hbt9tv7cjlf47vrofn6hvtSfI/p/91hOfK
TbL8O/zP7S8nip9vl096CX6+I8bbXxae75AfPwM/V9++lvj5DuvRmgT/c/G6
Jfi5+lEXJ/ify5/eksv/POY3+aNc/ufxPMq8JB/uD3i0OZf/OX04Ww7/86gf
txI//0P86j94/gc9/ml4rr5ktj78z+1v30zwPxd/WoCf/0m/mw/P//T9lq30
du2n1ofnf9p/FuLnf8oXyPL78D/3e13lvJryjkPnz3fGfIa9l8v/PMYfkMHP
d8b8Z52An6sv2hI/1z95ATxXn/MBvV3/Xlck+Z8b/3P8fJf9yAZ4vkv8ahc8
32W9aE5v32W/dDd+vkt+8ED8fJfrzcjlfy7e3wyeGy9VDJ7/JZ8lu96F/7n/
13e5/M/FAy+lt//l+kXx87/kH/6On6svvjDB/1w87EAu/3P7/+n4+d/OdzUW
P//beZ/V+Pnf4pXf5vI/P3zeJPzPrY/7c/mf0zen4OeuN2ZFLv9zeutZ+Pk/
9hvz8PN/8J1D/Pwffg9nJvifW8+H0tu135WG58brkN0/hv+5+No/ufzP6afZ
cvifO593JTxXrl4CP9/t93iC3r47xp+fFD/XvtYyervxJ/wIz3eLrxaH53ti
viU74Od76Luz6O175NOchp/vgS/jc/mfW7/ay2/Xf+hAeG78Qe3g+R7xw8vg
+V56WQ94vpd+UQM/34v/nQLP99Ifu8Pzvd6//vB8r/3LkfLh9K+9Gp7vO7yf
Cv9zfG5bLv9z+6Wp8Hyf9+FXeK7cbQq9XXlra/nt++L37Xpigv+570NUgef7
xS9OoLfvj/lV2UdvV152Jjzf7zx/Wj7c/hh/cmXx8/30kZbwfL/8/Pvwc+MN
ex2e/+t9zO5Pwv8cv31fPpzyZfXg+b/e7+Pguf615+TyP4cf6+D5vzG/VrNz
+Z/jB0vh+X/iYYf4+X/OS5wKz/+Dj0Xx8//sj7P72fA/Fy/7jN6uf6Ps/jX8
z6N+yg/w3PUGdKe3H6BP3UBvP0BfLALPD+Bn2XL4n9PjF9LbDxxeb8L/XD7i
SfD8gPPv18HzI+odHK9rV/lw2fJB/fMk/Fx9Thd4ni0fxN8T6e3Z8sH40wp4
rn+l0fA8Wz6olxzKh9O/eRv5cEfWi9+/gN5+ZLSfPVf8/MhoX+0X+XBHxvgt
s+tn+J9HufFf4uf6j9oIz9UPbAXP1Tfcm8v/PK4/cU8u//N6kR/+E739qLh+
tyvx82z5YHw0Cc+Vx2XXx/A/j/Z974HnR8Xz63U6fm78I/7O5X8e/dvcQG8v
EvW1xsJz5cHN8HPt+z2OnxeJ+e+sTm8vEtdfmV2vwv882g9fksv/PMqbV8Pz
otF/7DR6e9F4XuU+orcXjet3zu4vw/88yjOy/DP8z2O8Wv/B86LxPuy/I8H/
PJ53lZdy+Z97PxrT24+O9rP2wfOjY/5DyiT4n0d5+0n4+dEx34Yt8fOjY/zt
J8LzbPlgPvWvufzPY76DfoXnx0T9jDG5/M9jPvPvhufKKy6Q335M/H6pivLh
jvH7nJDgfx71QyfKhzsm5tNhDTw/Jp5P58H09mLRv99OeK7c9lTx82Ix3uI7
8fNiMd+yH+byP4/21Tfm8j+P8fM35PI/j/Zd07n8z6N9xZvo7cXj+bV8Wfy8
eNxvh2/Ez4v7PbP7o/A/j+dfvxh+rn7GMfC8eFyvarsE/3Pv21fOq6nPOZre
fmxcv+bR+Pmxnt+v8Fx9sdxc/ucx/8ovyIdTbnAhPFce/nGC/7nnmeXX4X8e
85+/CZ4fF+V2R8Lz4zzvV+C58rjpufzPY/5Lz4bn6peuyuV/rv9/ufzP43ku
ezuX/3nU7/83l/95PJ9Gx9LbS0T7y36C58ozz6K3a196Njw33o5j4Ln6PsNz
+Z/H/a2rTG8vGc9j8wv4ecn4v/V5AT8vGeN1rkRv177J07n8z+N9TrYQPy8Z
8xvxETwvGdcv/hE813/ebbn8z+P5tToSnh8f12/bF54fH/2XLsvlfx6/f+1z
xM+Pj+s3zq5/4X8e9etGyoczfipNbz8+7mdXFflwJ8T4A/6F5yfEeFuz+7Pw
P/f8/szlf269Ogs/Vz+nHDw/Ia43qBt+rrztSnr7CfCiMjwvFf0nXEFvLxXP
J//RXP7n/s8dcvmfx/zn3JTL/zzqh07Cz0t5HyvC81JxvZ3T6e2l4e10eF46
nlfvIfh56eg/YGwu//MoL74Mnuu/ohO9vXTMf1uWj4f/ufc1uz6G/7n1fIp8
uBNjPgfa5vI/h1c3w/MT43pzbqe3qz/iTXr7ifF+bP4ll/95jHfZ086rnRj3
M/Mpervx2r+Mn58Uz2/Cbfj5STF+q5fg+Ulxf93yc/mf1/u/eHL4n/v9P6G3
6/91dj0N//P4PTZugefqu18Nz8vA91vgeRn///dz+Z9bfz+G52Vi/ptL4udl
4vrXZfl9+J9H/bi6+Ln+Uwrp7WXi+dcvhOdl4/mtuhE/L+v+NuLnZWO8WjPh
eVn4WA2el7Ue5+TyP4/yaw/A87JxvzvugufqR2b5e/ifx3zWrM7lfx7X712T
3q5+SFv8/OQYr3pKPtzJMV7povLhTraen4WfG2/NNeLnp3geU+H5KTHeqmdz
+Z/bP1wBz0+J57vzUvxc+wHP5PI/h5fP4Of6Z7Lra/ifx/xKHuLn5WK81nfk
8j+3PlfEz8vF817fDD8vF+N3/xKeq5/TFZ6Xi+sNWw7PlTv9Bc/L+b2fhefl
Y7w6U+B5eevhM/h5+WjfbQ88Lx/zy2+On5eP9+W1J3P5n8f1Gn8Fz/X/52/8
vHzc74Gm+Pmp9oODc/mfR3n/ZfR25de6OK92qt//cfz8VHzgIvFz7bvfBs9P
jesVeyyX/3n8XpNPguenxfxH1svlfx71Jf+gt58W4/dcCM9Pi/dl7ie5/M+j
/rqy+Plp9f5Pfwz/83hekxfj5xXst+bD8wpRX7EzPK/g//YSPK8Q89v9CTzX
f3EpenuFuN9Zj8Fz9UNPED+vEPff82F4XtF8C3P5n0f7tf1y+Z/H/c0uDs8r
4kP96e3aV/8InqvvdH2C/3nMt011envFeJ+OeBCen17v//Jxw/882g8uDs9P
j/vZUUz8XPvrisFz9UN/wM9Pj/lU7J3L/9x6OAs/Pz3md08aPz8j6ktXg+dn
eB/Oxc/PiN+j0aF8OOXS9+HnZ8TzeXxNLv9z+7VZ8PyMeL6zs/wu/M/tx97J
5X8e/YtUxc8rRf341fC8kv3C3fC8Ulx/7b/wXDnn+Vz+59G/dnY9Df/zeD4L
DuXDVfb8p+XyP6/3f/Hi8D+P8j/7xc+VKz1Pb68c813yHDyvjF81x88rx/V3
Xg7P9W95J739THypIn5+pvX/dPFz5bKXw/Mz4cVb9PYz8elL4bn64afh52fG
/JoPx8/PjPep1iT8/CzryyXi52dF/1aXwPOz4n4qTMLP1Zfcmcv/vN7/5dOE
/3nUlx8Kz8+K+2vyOjw/K+6nySni51U8r4vo7VW872XheRXjZcvhfw4vLoLn
VewnnoDnVWI+rcvg58o9P8XPjd/mJHheNeZXObtehv951De9JZf/eTyf1M3w
XLn9zfC8alx/4kJ4XpUeUkr8vGo8/8a/wvOq8KeD8+dnx/MYvAA/Pzvq7zke
Pz875jehLn5+djyPotn9Zfifez8/zuV/bn85AJ4fGv8F/PycqC/SHp6fYz+V
5Zfhf06vyvL38D/HZ44VP1df8Xx4brwuxfFz7Ze2FT8/J57HgRri59X8vz7A
z6tF+8l94Xk1fDIDz6vhyz/C82qH9y/hfx7jb58Nz9XnHw3PlWeso7dXt///
Hp4rl8zuP8P/3Hq3Fp5Xt9/vjZ8rN7waP9d+6VHi59X9v7Lra/ifR7niffj5
ufE+jE/A83Ptp7LrZ/ifx3zafIefnxv9q+fC83PtV7P7x/A/tz5Mg+faDzqD
3n5uzLfU/lz+54f3K+F/HuVFPeG5cqXd9PYa8X6sv0w+XA3vU2X8vEbcT7ev
5MMdar8bP69pP74bnivPv5zeXtP7+lYu//P4/Ut0g+fqy+3J4X8e8+tyh/Nq
6rv9hZ8r7zyZ3l7L+/GafLha9kNN6O3KLXfA81r4xmn4ea34PYqXobfXiudb
+kl4rn+17P4q/M+jf+Xf6O3nHdanwv88fr/JS8TPzzOf7fi59rtuobefhw/e
Bs/P8z6/As+1r/obPFfu2DmX/zl82Z7D/zz699uay/88xi/xOH5+Pj75i3w4
5bUf4efn+71eorer390enp8fv3/xR+F5bfrqAvHz2nH9ef3p7bXpeZvgufqh
hfR25eHH4ee143mNrgfP1S+fA8/rxHy6vgDP60T7mm3heZ2YT9N5+HmdeB9X
/ADP6/h9HoTndeL5DPsenhtv/P/Ez5WT58PzulGudDQ8rxvvS5Nfcvif+/+c
J36uvk5veF6XXvqv+HndeD59r4bn6jdl+W74n1tvc/DzejH/4fvgufK8qvC8
Hr42Cz+vF+OPOF1+u/Lss/DzevZjM+G5+g7rc/ifx/XXT4Hn9eFnC/lw9e33
joLnyo1XwfP65reS3q5/510J/udx/eTeXP7n1t9y4ufGWzIJnjfAfyrS2xvA
y4r4eQP49zY8137s6/C8Qcyn6Q56e4OYT6/t+LnxJkxM8D+P33NjeXr7BfBj
Xw7/85j/snLw/ILoX/lTeH5BzGd0M3iuffNm8Fz7qSfD8wu8/9/k8D+P+S7o
JB/uQnynITxX3+Yx/PxC+kcZeH4hPW8+vV3/eb/j5xfG85lyIjxXP+g3/Lwh
ve5T/Lyh/eMj8LwhPpJdv8L/nF5zKzxXbjsBP28Yz/vr9uLnxh93vPi5+sVb
4Hkj638j8fNG8Xymb4bnjWL+k3bk8D/3vsyG543oNZvw80bx+009CZ43ivm1
GATPXW/udfD8omjfYCA8vyjaL9gIzy+K+S6vD88viuexbVsO/3Pr0Uz8/CJ8
4adc/udRbv4Tfq7cvy48v1g85gP8/GLxpRnw/OIYf3Jt/PxieHUVvf1ifPZ8
eK59rd3w3HgdjsTPG9uftYXnjeN+v75LPlxj+7sq+Ln22w/p7Y1jvkXfy+V/
Dl+vy+V/7v7+g+fKc5fj501i/DLL4XmT6D9oP37exP6/TS7/87h+hzPw8ybe
x/vlwzWJ32/M6fBc/3Xf4ueuV6Qafn6J/eq9ufzPxddul99+Sdzf0KHi55fY
r7TK5X9OH5mdw/88xh+SLYf/Ob5VFZ4bb04VeH6p/fnIXP7n3sez4Pml9Kxe
8Fz9qOX4+aXWl83w/FL7tUb4ufHHTBY/v9R6+Aw8vwz/LoufXxbj3XM5fn4Z
PWh1Dv/z6N+iDDy/zHrXEZ6rL/2R/Hbj1TwJnjelX2yQD9c02jeYkcP/PJ5v
tTvgedPoP/BDeK48LLtehv+5+FC2HP7ncf9r/8nhf24/vRWeN6PfPwTPm0V9
Tm16e7MYv2d5eN4sxmv0VQ7/c/pFX3jezP7hPHjeLJ7H4w/i58rJ5Tn8z+m7
D8Dzy+kP18Lzy2P82WPhufI/bejt2hf7I4f/Ob1lIDy/XHyvYy7/8/j9q2+g
tzeP+/tnGjxvjn+PSvA/j3KRUfT25ofXl/A/x2dK4+fN6bX94bn2LUvh581j
fqWy62P4n9MHqsDzFjHfXe/j5y3sP1vIb28hnvVrDv/zuH6Dfvi5cvH35MO1
gM/jc/ifw5NZ9PYr7Lcr4edXxPyWNIPnV9BTm8HzK8QzmtLblUeugudX2L+c
Ds+vgD978fMr6avX4OfKtWrQ26/0fD/O4X8e8y83Nof/uXhjF3iu/5x5OfzP
xQuz5fA/x/c+ET9vCb9vxc9bRvs+P+bwP4/rb8ju/8L/XL7IFHiufvtY+e0t
4/ksvxI/bxn3X+JkeN7S/J6F561ivIbPwvNWsb72K0Nvb2V9/EJ+u3KJAzn8
z8Vjb8LP1VcaDs/Vr/0dnreK+91WD55fFdff+l0O//Mob+gGz6+K9mWz9eF/
bn80ET+/Ku5vSQaeXxXXL5VdD8P/3H5xMTy/Kp7vmCHw/Gr7uZU5/M/lt8yE
51d7nyrA86vdXwV6+9XWhwnwXLnl7hz+5zHfdtNz+J+Ln9aU3946nve4r3P4
n0d5QA143jqut/WxXP7n8D5H/Fy59rn4eeu43vRdOfzPxSuy+7XwP4/6Yo3o
7W28nztz+J/TZ26G523wlSLwvE2MNyG7voX/eZTndMjlf278o/DzNvj55Bz+
5/IrquDn18T9tT4Cnl8T/Wv2gOfKK+7Ez/VfvhY/v4b+/z5+fo18hjXwXHlA
JXr7tfbj2/Dza62/aXh+rfyliTn8z61fteG58tTz6e3Xxnowqis8Vz/hPHiu
vm8Snl8X8y++JYf/ufan4efqG1yLn19nvbyG3q6+bWN4rryjDX5+nf3nyzn8
z423IIf/OX44Kpf/edTPejyH/3lcb+XzufzPY7ySL+LnbWO+s27Gz9vS66rj
59oXPQaeXx/tX96Qw/88rvf7w/D8evGlDvLhtP91hHy46/HTN+nt19PPd+Ty
P4/r3zc3h/95vC8fbKe33yCfrT08vyHqj/4wh/951J+xFJ7fEON9OYzefkNc
74cz5cPdEPMrzK5/4X/ufT2An+t/YG0O//O4v1Hnw/N28Xw/fRU/bxfX/30L
fq48pil+3i7uv3JTeG68k4+jt7eL60/Mrnfhfx7l44/Fz9vHfOZ3obe3lz+w
N4f/eZQfezeH/3mM3+xe/Lx9jPfQS/C8fcx/TWN43p7+lITn2nd6DJ7f6Plf
LH5+Y7T/uJP89hvjed5xUS7/c3jWCD+/Md6Xfo3g+Y3xPE64Ap7fGPd3yZG+
J3MTPMiuZ+F/HuPlPZ/D/1x+5Q/09pvE4w+In98E/yrDc/2vKYOfG//npvj5
Tfh0f/y8Q9zvi1n+G/7nUb48y0fD/1y+y0P4uXKfffC8Q1xvS138/FB9XXje
Ia7/7x56u/Hf7QvPO0b9spXwvCN+dz1+3jHGe7Yxvb1j3P+Dp+LnHeP6x54K
z7V/vrz4ece439PKi58rLy+Ry//cfuBm+XA309umwfObY77HbIHnN8d8nzhZ
Ppz+N7ySw/88+t8yFT9Xf9TCHP7nMb9vz4Xnt8R8rl6On98S9e/+D57fEvd3
9En0duWWI+H5LfTrjTn8z2O8Phvh+S0x3z2l8PNO8KUUPO8U/Su0pLd3ivku
rA3PO8X1fjweP+9En5xHb9f/mxdz+J/bv7yGn3eK5/H8p/C8s3jVCzn8z61f
99PbO8sH2QLPO8f4FxwHz/W/ehF+rn3VbvC8c8y/R2t4rn5tITy/Ne7/6ab4
+a3yLwbk8D+nb19Gb9f+kZfx81tjPXnzPfz81pj/m//Dz2+N+f72ETy/1f6j
fQ7/8xjvrcfw89usd53h+W1x/bOqiJ9r3+dIevttMd4jL8Bz9aelcvifx/zu
vD6H/zn8GAjPu0T/txLwvIt8y1Pw8y70qo7wXPv1A+B5l5hvuwvFz7vE+3F8
ATxXfiHLnw7iedd4vt330du7+r+thuddY34njoLnXfHfNjn8z6P+7cbwXLn5
Q/LhjPfuDvy8q/1tP3h+e9zf+9vhufL9b9Lbb4/xXvkbP789rn/z7/i59mvv
yuF/HuVbJuXwP8fPT8bP1Z+yC57fEeXnW+bwP8dfyuLn6r/6E57fYT/+JzzX
/sZf8fM74nn+ugWea//wieLnd8TzOO44/LxbjP9haXjeLdofWRc/7xb/p8fO
hefq11SH593ieqnf4Hk3+V935PA/j/EfuwOed4v5/nE7ft49xvu+Fn7ePeb3
Yk/8vHtc/7sN8Fz5/K74eXf6aA16u/4Dnobn3eN9nz4Onmv/7SU5/M/9X5rD
8zvlC3SH53fG/K46C57fGfNv9lgO//OoX7cuh/+5+FPnHP7n9qdXwvMecb1v
i9Lbe9hvb8DPe1ivz4DnyvMPfU9G/9vGiZ/rX+l0eN4jrn/GWfC8R8xvUkEO
//OYzzfr6O0943me1QSeq985Cz9Xf0R+Dv/zGG/fHHjeUzzuX3iu/YC18Lxn
rBfXzobnvf5/ensv/PjvHP7ncT9VyuHnveJ+26Tw817eh9Pgufrfb8LPe8X1
bjoZP3e92dn1LvzPY75fPICf3xX1zcvLb78rxru7kXy4u2K8K8vB87voSX+L
n98V8/n1L3h+l3jPX/j5XXE/JbL8MvzP8c/p8Fz5qUQu//MY/8YH8PO77Qey
6134n8f8d98Lz++O+f5Uj95+d8y3/Enw/J5o/+pvOfzP/x9R5x3f0/WHcTup
TWwxYwQhqQSxVxASo0bNoqVFUbMStaL47hEz1K4gaovZ2FJiz0qKEqRmNPYe
v1vPOz9/ntc599yz7n3O8/l8znnUPttG8Hwo41ktGv1z8DUv/Jz8O3mwt5Pu
8Bt4PpTzNLU4rzYU/0/VaPTPGa+74Pkw5ff6DHv7MM3/0dbR6J+r/r5t8Z8P
0/hMOAI/Jz/F2C9J/5z/qQf2durbVw3/+XCN/5474Plw/mdV8J8P13hsvw2e
k3+1Kvx8OHx6Ffx8uNrTbQV4Plz9yZ9pb+f5gIHY239Q+WdT4ec/EA80DTz/
QePdbBr29h80XhEHotE/x9+QFTz/4ZN/RPrnKt/vBvz8B/WnVNNo9M/xd30A
z0eo/K6m4PkI+P9e7O0jVP+QfuA55TeXBc9Jz24Cno9Q+22TwfORev5kY/B8
pObDqxH29pFqz5Z32NvJXzERfj5S7anYG3v7SNVvaoC9fSTr7SfwnOfX1I9G
/1zpkg2Ibx+Ff6kHeD6K7y04Gv1zlf/rJXg+SvOXVhw8Jz++O3jO8zEx8HPS
zSOwt49W+0rW47zaaOy542aif078Ud1o9M9VfkdR8Hw09q+54Plo7IlzsLfz
/Ogg7O2jNZ4Px8DPx6i+5eeJhxuj/Cbx0eifq/6l58BzyvucA88pH3UWPB9D
/P4X4PkY9eeXkdjbef5IAHg+Fnv3afj5WOK/CoDnY1V+owv/+VjOM/4wE/1z
rffJw+HnmemT0eifg//DwXOeH7IOPP+ReKGh4PmP2DdrgOc/qv2vjf2S9M/h
y2HgOfkNPuO8GvX1+w08/1H9e70G//k4/GVx2NvHgWfV4Ofj4FNJ2NvHqb6w
OOzt41gfVcDzccSXzgDPx2n8niYS3z6OeKbD4HnEp/Nl0j/n/xMCnkeo/I5E
8DyC/1UaeE756cb+Svrn6s+kiuA56TFfg+cR6s+drOB5JP4d438l/XPiNffB
z0lHTgHPI1Vf1uXgOfl1jf2g9M/BzwrR6J+rf2emRKN/rvLzFsHPx3Oerh94
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
5+R/UR57O+kuVeHnB/D3HQHPD6i/V13w84P8b27Azw9q/eTt7Ub/XPPp9ZML
/XP9Xw9tdqF/TrxzKnh+EPuP243+ufj7xsPg+UH2e+td6J9r/hr9AZ4fwl7R
1Y3+OferHwDPD2n9TiwNnvN8ymgX+ufExx0Az6mv3n7w/BD+oY7geaL+lz2K
w88TwfO6LvTP6c8M8DxR7eli7Bekf67xmbbChf459+tecqF/zvnWcPA8Ue+f
H+VG/1zj3agg/vM/2E8uAc//0Ph1X+pC/xz/xFTw/A/msxD8/A99L9EXXOif
E+9SEDw/zP1kC8Hzw5y3zA0/J12wuRv9c/hNG/D8MOvD+P9I/1z1B5wFz0mn
NHajf875l7HY249o/vfGg+dHiNe8Dj8/ouf79APPKZ/Wy4X+OXz0JPFwR9Se
+fXc6J9rfdpXws953jUHfp6k/s84Dj9P0viGDXWjf6508vfgeZK+x9s+8HPS
Zz3Ac9JfecDPk4inKO1C/5z7o/3B86OcZ/8Rezvp48b/RvrnKl/6uQv9c85X
9oCfH9X6XzbDhf65/h+la+A/P0q8zZfg+VG+79HY249xXnYNeH6M81JhLvTP
sR93A8+PaT1lmepC/1zr3aMK/PyYvp9Kx93on6v+RlNc6J+zXzf2O9I/13x1
LeBC/5z7dzqD58fVv8gK4Dnp0C0u9M/1/CLj/yP9c+K9S4Lnx7GXv3ajf47/
2ASen+D82h74+QnO13UAz0+o/rHjwPMTmo83Fvg55dtY8J+fwL5m7Fekf855
pkx+flLvG7jGhf656k+75kL/XP1LrQ+enySePdyN/rn6E1bEjf656ptVC35+
En9EFHjO81tD3eif014jLf1z+Pg2N/rnqs9vEnh+Cv5T24X+udq3yNj/SP+c
88bjsbfzfFQmPz+l8bJ/60L/XOnPt2BvP636BzeFn5+Gb/uC56fV/hubwPPT
8Lmq4Plp/kdVwfPTxDN8BZ6fIb44Dnv7Gc6v5Yafn1H/A/92o3+u92+s4kL/
XOXnjQPPz9C/uvDzM/oefD+40D/HH/4ePD+r9h8bCz8/i391Ofb2s6pvaw/4
+VnuSxiM//ys6hvRCDw/q/XiMPY/0j/HXvatG/1z+OIo8Pycnv/CAZ6f0/9s
TGf4+Tn1/90I+Pk5/Jnz4efntN6ST2JvP6f+7J4HnvP8tH7g+Tn8EVb4+XmV
9+4Lnp/n/NQuF/rn2A9Kgefn8Qea8Z+fV3vjDT4j/XP1t2W6C/1z1f9+Gfb2
85r/bJl4fgF/zBD4+QXVV8/hRv+cePbp4PkF/DG3Xeifazx3D4KfU37Qz/Bz
yg8w9h/SPyc+aQ94/qf6s6oI/PxP4ivaged/av3vbgKe/8l5Pi/wnHTxYvBz
6mtUGP/5n8Q/XHWhf671EZ7uRv9c4/VhK3h+Uf1vesKJ/jn+w+NO9M9VX73q
+M8v6n3pH5zon6v9OYy09M/Vft9/wPNk1T8gzY3++Se+JP1zjd/iSPCc9JjF
4Hmy6gv5kXi4ZL1vWAT8PFntiz8LP+d9LRvDz1M+2XOlf068eFP4eYrKP2kA
nqfof+Y5H36eovXpdIPnKRrP6cH4z1O4P+Y4eJ6CvagueP6Xyp9Jhp//xf+1
Dvz8L+JpLsLP/8K+8CV4/pfGe+IuJ/rn4Pdi8PwvrYfVbhf658RzlQXPL6l/
/gvxn18ifvQ09vZLGt+dB1zonysdVw48v6T2/VAPfn5J7ctbD35+SeNZ3ww/
v6z+DusHP7+s/6GfN3hOeuBuF/rnnK/sA55f1vuDH4LnlzUfu0uA55f1/2mY
4UL/XO0r8QY8v6L3x/3sQv9c9betDZ5f0fsrVSS+/Qrxj+HY269ofka0daF/
zn0vq53on2N/7gqe83xsIRf65+ivXHaif873MQV+/rfqc3sR3/635rPHZOzt
f6v+uTWxt/+t+as63Y3+ucbnys/g+d9an2v/dKJ/zvxOwN5+VfXlqwE/v6ry
u6pjb7+q9s3rR3w7zxecDD+n/Pnb4PlVtWfaZjf655qPhQXxn1/jvFUDF/rn
Gu/0HPDza8Trx7rQP9d4jcsLnl9jf7Xejf458X9VwPNrxGuPc6N/zv0UueHn
qepv6d/wn6cSL3TUif651suGJvDzVOxJi1zon3P/zXcu9M/1v7wZ60b/HP4/
EDy/zvc4wIX+ud7Xezh4fl3tP1kePL+u55MMfiT9c/ajWbC3X8feNwR+fl39
efHUif458UN9sbff0HxFDXKjf673H+mM//wG+PjYif65xsu824n+Ofcj/OFC
/xx7zRfY2yk/7ZUL/XPub/7Gjf651uNI4/8k/XPiGUthb79Jeyu40D/X+lm4
3Yn+ueovbqSlf673Ly2B/5znYweB5zfRXynjQv+c+EcjLf1zzWe4CX6epvL9
f3ehfw5+t8Penpbpf4Kfp/E9pcPP07CvVgDPKd9mgxP9c/w5tcDzf7h/MMqF
/jnncx7hPyf/n8Lg+T/q304/+Pk/fO+34ec8X9IPfn5L/U0tBZ7fUvv84pzo
n2s832yHn9/S80cKwM9vcf/9NuztlH+SH35O/UmT4efUH57iRP9c+beqws9J
R+YBz2+rP1ubutA/x34bB57fFj9smRnfflv9LT0efn5b4+nXEn5OfTn+cqF/
rucn5AXP76Bn1QM8J//IL070z9mfVoSf32G9rXajf45/fRR4fkf/n2Ursbff
IZ47xon+udK75znRP2e/lBM8v6vxzXEGfk7a950T/XP+30vxn9/F/1gWezvp
1DLw87san4Sz2NvvgdfG/0P658R7ZMPefk/Ph3eCn5OeVxp7+z3V5xMAP+f5
hlnA83vwz3mcV7vPfSoliYe7z/7oJXh+n/tEe4Hn91X/eeP/Iv1z7NFmJ/rn
4Iux/5f+OeuhsxP9c+5Lewmep2N/SnSjf875LX/wPJ347OfgeTr/3y7w83T9
/xqWBc/Jb3gXPOf5bjWxt6cTvz4NPH8A3y6Mvf2BxsevA/ycfEd7+Dn5PcrA
zx+ofxnp8PMHxPOUBs8f4E+f7EL/HPvYOvD8X/W3aRHs7f+q/d2vOdE/13p4
uQV+/q/ak7gefk766UTw/N9P9mnpn2s+cxj7G+mfq75Nv8HPM9T+a/nA8ww9
X34NeJ6h5zeNdKJ/znmUz8DzDOFbaeP/IP1z/LWrXOifo98z3In+ucZvp7E/
kP45940Nc6J/rv/74KXgOelN3zvRP9fzV8460T8n3r4c9vaHGs/THuA55bOc
B88fYV/NAT9/hH3B+J9I/5z7e4Nc6J8zntmxtz9S/XZv+PkjtT+LN+fPKe84
DT+n/jlfO9E/Z79bGzx/zHnME9jbH+MfOe5G/1zlLQPg54/1/Q19A54/1vhf
+xp+Tn3uPk70z/HfvAHPn+j5jGou9M/ZL7uc6J+rvtV9Oa/2BH5fGTx/Aj+q
BJ5T39De2NufaD2u2+NE/5zzc3vB86dqT8NH4PlT9dfrXyf65+w/KnJe7an6
P92KvZ10ajnw/Cn4UQ48f8r5rgfg+VP9H8aUhZ8/I37lrgv9c+wpd8Bz8qtO
hZ8/4zxiVfD8mdo/YbMT/XPOB5XEf/5M7bG0g58/V3tiQ53on6t/ETdd6J8T
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
R/9c85V/M3jeH/9+LfCc9tqMAs9pb8JIznvtr/lJaAs/H4D/IZbzZAYQTz1s
R/9c78uCL3b0z8lnO8r5cNyfvCJ4TjkmO/x8AP9na8FzT+4fCD/3JN5z0I7+
ueonN/BA+uey/891+Ns9Gd9N/O2efC8iwHNP/J8RnCfjyf/KLfLbB2r+JrfE
3z5Q9TuuJn4+EL60HzwfqPU32ihL//yfv0r657o/xUrwnPaf7wXPB8qehcLs
6J/rfu9JdvTPiYcug58Por9L4eeDZI9JjcmHG0S+4CL87YOIz8TDzwcRfyqO
v32Qvi894vG3DwYvU7H/fLD6V6cB/Hww/lMDT6V/rvbWP7Ojf46/fy78fLDm
r2Mh/O1cn18HPB+M/zsaf7sX34cC4LmXnrdvNvFzL/IPZsPPveD/I+3on2v9
JGwBz73In6tB/Jz74x/Bz4fo/ZkwgvNkhqi/2auTDzeE/8GHdvTPyXc7jr99
CO9jLvB8CPtz7uNvp36To+TDcd161B/9c+K5OTi/faje35aR4PlQ8tlywM+H
8n7ehp8PJb/jNvx8KPGoNpzfTns3W+NvHyp7JWkLPx+GPyiC+Pkwtdexgh39
c/zVif52rttM8PNhWp+pjf9/6Z/jv71G/JxyQj/y4YbxP2zwVemf429NT/x8
+D++I/1z8r/3+qN/rvdnUBPwnPtrTgLPh5Nv35T4+XD864vxtw/nf+Ui/HwE
+0Gu2NE/V/2GvQLQP2d/V1H4+Qjdf/Ml/HwEfOSSHf1z/r/rgucjNP6IMeC5
t+w3qAF47q3nPXTF3+6t9vs/Y7+aN/H/kfjbvYnPnIOfe8v+uWqy/5z7J9fA
3+4te242+I70z8kfHO2P/jl8ujb57SPJXxkGno8kPmbwTemfs78nL/Fz6rtO
g5+P1PgiA/G30/7F3OxXGwWfLGBH/1zze7GLHf1z8gkNfJT+OXhTgf3no8iP
aQ+ej8Kfshp+TrntUOLno2SPUGc7+ufs54sgv30074NxXfrn8M088PPR6p/H
AfLbR2t99exoR/+c/YCZ8bePJl9kNXg+Wu97vt7Ez8eof+kzET8fo/lxyUj8
fAz5Sa8D0D+XPYIMPJb+uebjx0f87bRXM5sd/XP8azH428fwvnwAz8cS33EE
z8fqeUXTkN8+Vv0NciC/fSzx/1L427n/+UXwnOu7PODnY4lHlQTPx8E3W9jR
P9f9uwuwX20c6/28P/rnxPd87eifq3+bFoDnlIs+Bs8pVznLfjXa3z7PH/1z
vl8jwfPxmr+bReDn47Wen020o3/O/OVkv9p42fOLA/728Xr/6gzH3871gQYe
Sv9c7/vPqvDzCbruUR88n6D5e1wPfj5B78MCL/j5BPWnRWXwPLGcDzyfAF8f
DZ7T3o1A+PkEjT+yE/vVJpJPOhA8n0g+tid4PlH2cGgGP58o+7d8CJ5P1HhH
XIWfc3/vFfDzieTDlAXPuV53E/zcB355hf1qPvDJvvBzH9mnQV/y4XyIXyyF
n/toPIOWgOc+fE8Nfir9c91f45cN/XO9D/09wPNJur9uK/ztk3R/RXfy4Sb9
i09L/xz/nMEXpH+OPzAcfk7ZNRl4zvPyr7Gjf87/cqg/+ufkL4SC55PJ/18F
P5+s++saeCX9c9UfGuKP/rn6b/LxR/+c/+Vy8PPJ8J2Z8HNf4tEz4ee+rPfK
xM992U9TAH+7L/sTKoHnvuDbDvi5r/p34iL+dupH97ajf6712W8b8fMp7F/y
sKN/Tj5MHfB8Cu9HbfB8CvG9XPjbp8h+JUfib5/Cep9vR/+cfMa24DnPG5Ed
PPcj/u2Ov92P+NJb8Nyv6v/Pk5T+Oflve+HnfvhDXcFzysn9yG/30/vQwfje
/8VzE9/zV/jbTZq/J5Xxt5vYP7UHfm7i/boBPzeRXzIJfk65ZWHwnPabXsPf
boKPVwDPzRpvrqPwc7PWS6jBD6V/zv6e8uTDmdkP3R9/u5n14Yy/3Sx7RJSF
n5u1XibF2tA/J74fC55b1F5uf/DcInsFPOI8GYvqvzP+x6V/rufNWAQ/t/zL
P5f+OfkID+DnFvJB3MFzi+y7oiT83Kr18e6eDf1z+Ndd4ueU796Bn1vVn6km
/O1W/FNz8bdbyV9dB55T3uYGnlvVv4Rm4LkNfJ2Nv92m/iV080f/XM9f/wN/
uw3/yWTw3AY/ywie2/7lx0n/XPVjPPG3017PtOTD2bWe1uy2o39OfkJj+Lld
8zHkC/FzO3yqEf52O/Hkz+C5HX/OJ/Cc9lKntaN/XvX/52NI/1z9fe5P/Nxf
/bWmIL/dX/bufZ74uT/xajt4Tns1ttnRP2e/6yUb+ud8D96D5wHsl5gPngew
3yUJ/DwAvm8hHy5A99+Ihp8HkH/fhv3nAeCLgVfSP9f9+VqzX432u0WB51OJ
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
ntPeknrwc+6PT8xvj2G/Qwni5zEaf+Ob8HPK5b+B5zGaj5kDyYeL0fyefoS/
PYb9qL5m9M9l/x8D4OfU37QSPL+KXsQeE/rn7Hf4bEL/XO3lr4m//SrnL8wx
oX+Ov8b4nkn/nPPH+sLPr5I/0Ah+fhV9hGXw82vonUwAz6/p/rwTwPNrxL8v
m9A/57zSWeD5NdkjVzbw/Brns2QFz2nv7nf4+XXiid/B8+uctzzWjP657HV8
Nfz8Ovk8meHnlH19iZ9fJx8kD3h+nfMYaoPntB/fHX/7DV0f2R08v6H+/9kD
nt/g/C034uc3NF+Z9oDnN2TP3nPB8xv4T8uB57TfarMJ/XN9n/qWBc9vqr0u
xvdX+ue6bskGnt/8F0+R/rnGW+GUCf1z3X/2GXh+U8+PKA0/vwneXwDPb8o+
5S+A57fYv2D8v0r/XPPV9Q38/Jbmq31J+Pkt+PM08PyW+tfU+L+V/rmeNyQQ
PKd+k7n422/Bt9LDz29r/vNNBc9va/1OSg4/v632k70Ez2+r/5dewM9v499u
C57f5ry/JuD5bfKvfU3on6u97Q9M6J/reg8beM71d6nh53c4T2o98XPKLlb4
+R3Z/1EiP78jvO1vIR/uDvH2J+D5Xb0vVdeB53dln6UD8bdT/nLAhP65+udR
Hzy/q+dn94Sf31V//X+Y0D8nnzE/+9Xuyj5Jje+n9M9Vv3Av+Pk99f+b8T2T
/rnWT8JYE/rnqv/zqwn9c/Ibwk3on3Pe4Ar4+T3+t7uD59Q/a/BR6Z/LHp+N
75n0zzX/LX7Bz++rv1088LdTzhFqQv9c9Yv8BM/vc55vfvar3ed/Zwp4fl/P
7xMDnj/gvMRb+NsfqP7GceD5A9m73Tfw/IHGs/aDCf1z1Z/8FX/7A/LHq8DP
H5BfHQ6eP2S/zgL4+UPdH3nRhP45/q934PlD9ntWwt/+kPOMcoDn1H8xEn5O
/ZUx7D9/iD9zOnj+iHjedhP655wHNQc8fyT79JoDP3+k8V7LCj9/BP5mhZ8/
Iv+1M3j+iPPe04PnXPeaBZ7H6nuy/aUJ/XPypzeD57Gyd7oy4Hks++06ws9j
1f6f5yb0z9Xextf422lvowN4zvViDvjbH6u9SWfxtz+W/a/Gw88fw/eGET9/
zP+azYT+OefnDwLPae9TSvD8MfHxtOD5Y/yvJ0zon5OP+gQ8f4L+lif8/Inq
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
jP65xn+yFnieWu01uEr8PLXGf/s7eJ5a9nfpBp6nVn8casLPad9jD3ieWs9v
tQI8d1C5R1L87Q6yd/4Q+LmD7LelPnjuoP74BhM/d6D/ScBz2suUEzzn+srO
+Nsd1F/XquB5GpUTnImfp5F9S1zA355G8zvsE/w8jd7Hxtfh52nUX4s3/Jyy
ax34Ofc/ywo/p/3aHcHztLoe9NUP/XO137Qi/JzyvnHwc+r3GAeeG+W/ejuZ
yYdLq/ZfvYOfp9X6d40Gz9NpPV3vAp6n0/gjA/G3p9P8HZsHnqfTfDtcgp+n
U3+GvyF+no7v524T+ucq5zqJvz0d/ZkDnqfX80PSgefp+X62BM/T6/4yA4mf
p9d8H403oX+u9+NMZfh5etljVxr4Oddd0uBvT6/1MOkseJ5B6zsuEn875WpW
9p9n0PydSE38PIPen3QW8DyD+vt8OnhulD//94DHfuifq78lD+Nvz6D152cC
zzPyPTPK0j9XeZ8feJ5R7b+MM6F/rvF8ngKeZ9R85VwJP6f+qDbEzzNqPdh9
yYfLqPmrehJ+nknju5kefp5J/S0eAJ5zfUIseJ6J7+NS8JzrTsfh55RXlQbP
M8meL4LA88y6fr8A/vbMfL8GwM8pL1gMP8+s/t9wg59nlv1aNAfPM6s/d43/
Xemfa33fPAKe017zfOS3Z9F6+tKN82Sy6P68xvda+ue633kB/DyL7Bl6FzzP
ovXzIhh+nli/Bvw8i+zb8Y4J/XO1n34eeJ5V/ak5GjzPquuOF8Bzru+cA55n
VXu1HeHnlKNywM+zqj8lZ4PnWWWfX8vg51ll7+Gz4OfZtL6u1AfPKbt/As+z
6fktk8LPs6l/S4bDz7Pp/TqYBH6eTf3ZNww8z6b5/jQdfp5N69UzGjzPLnsO
zUJ+e3a1V6gu/Jzy5RjwPLvmv9tm/O3ZNd42bvDz7Gp/shd4bpQz/vd/9N0P
/XON72ZZ+HkO1Z9QC36eQ+2tHGtC/xx71CR+nkPve6754HkOvR/pgk3on2s9
TW+Jvz2H7B+Q4If+ucbbszR4bpQzGeW2H/3QP5e9Wg0Az3Oq/SrG/6j0zzV/
2deC5znVn6DZ8POcGs+FEuB5TtlvtDP8PJfGk9sMnlN+mR1/ey71t1tx8Jzy
fD/87bk0vgEdTeifazzFTsPPae/ACvCc6+mzgee5tX7adwDPc2t9HVgOnudW
fUtF8JzyVHfwPLfaP1MEf3turbdFUSb0z2WvDFng54n1jf9F6Z/reQlJwfM8
1f/PN6V/LnudagOeU3/OYPA8j9oLzQg/p9x4A3jO/W6LwPM8Gu/k9Sb0z9W/
XG7Ez/NqPt89gJ/nVX/+1IKf51V7TX6B53k130d/ws/z6nu/viv8PK/m61tz
4uf5ZL9XFvA8n9a3W3/4eT76k8jP82GPQ+B5Pj1v+TU/9M91vaRRlv65+j+v
GnjO8/JWI36eX+txqsFfpX8ue9m8wfP8mr9xfvDz/OpfjS/gOfW3HgDP8+v7
emAGeM71iP3w8/waz8FK+NsL6P1KcsEP/XPNR+YO4HkBPS+4PXheQP2ZPA08
L6DvzaNN+NupX2sv/LyA5ufQVfg511slw99eUPOT1wd+XlDP3zzRhP653qe3
UX7on6u9a63Bc+oPXwQ/p/z9LXhO+6MGgucFNf+pW8HPC6n/G5zg55TXjgPP
C6n+fivx80Jq78BY4ueFZG+v+eB5If5f84HnhWTvIxfA88K6v/Ur+Hlh2aP0
PPC8sOarfxrwvLDGX28X/JzrM16C54W1frb6wc8La36GFyd+Xlj2yP4Cfl5E
/b00C35eRO3P9YCfF+F76kw+HNdPdQLPi/D/1RA8p72e0Sb0zzWevXHgeRH+
D5OD544af81TxM8d4feViJ87yn4hm/G3O6r9ytnAc0d9b0688EP/XPcXnACe
O2q8a2LBc0fZo8T/uDrrsCqX7+1bR7GO3XgMMFGxscVuUbETxRYVlcPuvVGx
u1GxsbGxW2wxwcTuOnYeOfo+fu+PP6/r/fO5nr3nmVmzZu6516yZ2wSee+j/
QT/Acw+Nx40rwXMP/b/USvDcQ+P7+kzwnP+nLg2ee8hf0mciv91D3zt6G37u
IfudX87+uafKu/oNfu6p9/2iXOify34FwsFzT7WvTF/4Oe/THwTPPWXP+8Hg
uafW04F9wHNPjRf/UfDzIrLvw9bw8yLq76uLXeif6/ez9oHnReRfB4qB50VU
33nXwfMi6p+X9eHnRdS+b1fA86Iq/1bPMPTP9f92bvBzng9eZf+8qPpj4FXw
vKjsPXw38faian+lAPC8KOsHRxj65/retB7geTHVb2YZ8LyY+vfhBRf653pu
70G8vZj679UO+Hkx+LsveF5M3/9aGzzn98kKs39eTP7eujZ4Xlz9l642eF5c
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
U+a/QcTbm8o/4hPB86bCj53LnOifq/3FBsLP+f3n3fDzpprfB2Vl/7yZ/L/3
VfC8mfyhe3bwvJn+X+QjeN5M7T32AX7O85PtxNv5f9vR7J83g9/1Bc+baXzc
3sP+eXPym97Bz5trfH3ow/nz5qrvhD7E25tr/rBvcaF/Ln862Bh+3pz9zQTw
nPLC5zrRPxe+BtdyoX+u5+KhxNtbqH7r0oPnLYhP7SAfrgXxlDNO9M/1fKMB
/LyF6rPNAT9vAX4a61Ppn8M/A8DzlpV93/x8X8WF/rn6e/JL+HlL8oNOONE/
l7+OG+JC/1z9XWgbeN5S83vZW/Bzfj/rpgv9c/3+Th32z/1kz2SxTvTP1Z8F
ioDnfqpvrBv83I/4wDXw3E/lpfWFn/P/9Wng5/y+vwk8b6VnTw/4eSv2IzqD
563U314Gv5b+ufz7zj4n+ufsByUnv72VxtOjZOB5K+JbyYi3t8JeIfDz1vCx
VOB5a9n3aHXwvLXG/7iU4Hlrle+TEjzn/9WPw89bE48w+Lv0z/X7xHbgOc/9
2oHnbfRcPT/x9jb6/vEq4HkbrV+nP3eify7/KuMOnrfR/JBYkHh7G62f7hQA
z3k/b5MT/XPZa/dK8uH81T8VDhNv99f4WFCJeLs/+2Ff4Of+sp8tCDz3V/u7
tQLP/VW/6Xnh5/7yX/cV4DnvI8a70D9X+Sdzu9A/F54FD4Sft1V9jgY70T+X
P8cY86H0zzUer5QDz9uqv3rsc6F/rucXe8Hztqp/k6vgeTt9/8MV+Hk78bU1
WYm3tyNemY14ezv1x5ow+Hk7+W9EX/C8ncbHlkXgeTvi14vg5+1VXqWR4Hl7
te9uGPH29vKfuMVO9M9V/ksX/Ly9/GWMC37eXt8zWV3on7O/4gWet1d7Zhvr
O+mfq/5PFzjRP9d4W1ISPDeeP//0z/lO9M9lr90lwPMOqs+7beB5B82Xux64
0D8nfn7Oif65/CPNPPC8o/p/zVzwvKPqFz7bif652vejKvy8o+zl0x1+zvOg
2y70z1VeK2N+k/65/KdXEfh5R9Xnmgk87wT+HAfPO6k90W7E2zupfMcp8LyT
ylsz0IX+ud4/qwWed1L/Zd8AnndS/RucBM8pP+/f8PPOij8ULwued9b72X2J
t3dW/71aB553VvlvjsHPO6v8LuOc6J/r/10DwfPOjNfq8PMu7K9OId7eRePh
42TwvIvK/5QCPO8if5pSFTzvov4/ewR+3kX+WbEteN5F9VldlHh7F433rFXA
865qT2V/8LwrfHSHE/1zjWe3xk70z9k/HQw/76r6h3x3oX9OfHoFeM7vk/IQ
b6f8JXng5920Xtt5FDzvJv9/WM+J/rn6132LE/1z1T93rAv9c82Xr1uC5900
Xv4ZAJ53k72yuYPnPM8PB8+7k4/ZGjzvLvwaMc6F/rnKW58Dft6dfOR+8PPu
xG+bgefd1d+Ri+Dn/P/MHSf65/Lv55HgeQ/FvxqvAc97KL7jl8OF/rnwovZq
J/rn+r65KXjeQ/PBOGO+k/65+ElUlBP9c7V3wHbwPED+NSkGfh4gf9/VkHh7
gPo7zA6eB8ifDmyDnwfIf1v1hJ8HwBcvO9E/1/uZW+HnAbLvq/rgec/f+QbS
Pyfe5O1E/1z1rWkFz3vKXt3rgec9Vf98F53on+v3qzfBz3uqPTFrXeify98+
ngLPe7FeXwM/7wV+bQDPe6m/aqd0oX8OH+8CnvdS/86Mhp/30nosIgo857nj
YPh5L/lT4nX4eaDKKxgEPw9Uf2bu4kT/XHzONRB+Hij/9l5KvD2QfP214Hmg
2jNiKvw8UPawFATPAzU/pFkEnvdW/aIugee9Wc+0A897k68wCX7eW/7Yr60T
/XPZp+Yq8Jzfe1SFn/dWfTfkB897qz7vPzjRP5e9k7WGn/dRedUnwM/76P8e
ycHzPvLHXWOc6J+TD9LSif65nocFged9ZJ+dJ+HnffU93yIu9M+JL/mB533l
ny+bgud9hZeRnVzon8M3jPlQ+ufyp7Xh8PO+Gm8fjPWd9M/1floWJ/rnKn9p
Afh5P813J7Y60T9n/3IR/Lwf+yXGfCf9c/1+9UEX+ud6P6cZ/Lwf6/O+8HPK
O78DPO8ve8TmId7en3iBL3jeX/+PeQOe95c/lCkDnvdX+x7WcqJ/Dn8bBZ73
1/ycqhb8vD/5ic2Itw8g/rEGPB8g+2RygOcD1B/jmxBv5/lCNSf652pv4lzw
fADzawB4PoD460on+ufq74o3nOif/84Plv65ysthhZ8PlP8s6w6e8/uWGcHz
gapP8BXwfCDr027E2wfq+/ZoF/rnWi+16g8/H6T6vJwBng/6nS8g/XP5R+EZ
4Dn/T9XXif455zk8wfNBmi8ih4Hng8g/X+VC/1z9c9gNPA9Sexf2As+DVP98
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
1I7+ufzlfF87+uea76Ld7OifM1/fAM8vqf5fZsPPL8l+vnbwPF7tCfyLeHu8
xu+kQ3b0z9kvmgmex2v8hKSyo3+u762/DJ7Hq7/NeR3on3PerQf8PF79mSYP
/DyB8yJ74ecJslfIHvA8QfNH+j3w8wT4VWny4RLQc5gInicQj/rPhv45839n
+HmC8KSHF/z8Mve7ngXPL2s+cs8Gnl8mf2ss8fbLrGfOgOeXiY8NBs8vy97m
0eA57xNHwc+v6H3uUfDzK5xHOQE/v6Lx8eO4A/1z4qHH4edXOG+dgXj7FfLj
NoLnlN/2gw39c/lL7Q3g+VXWG0cc6J+rPwsWIB/uquw7tCV4fvX3ekf657LX
+9TE26/Cl1OD51fJpzHDz6+qfmcOONA/lz2TVtvRP+d8aVPw/Br3ueWBn1/T
93P/Y0P/XPa809iO/jn3WeQiv/0a+JMMPOe9fTd4fl1412MX8fbrzO/fwfPr
5Cs1sKN/znnr/4i3Xyc/Iwv57dfZr/lGvP069a9rR/9c/hSziHj7DeKDX8Hz
G9z3PJB8uBsaD/1rw89v6PutNsPPeX6ZHn5+g/29ezb0z+VPQemc6J/jr63B
80TZ29wKfp7I/QPv7eifq/3T5oLn/D4uNfH2RNYnc+zon3M/yAHwPFH++605
/Pwm+6kB5LffVH+MXw2e39T3OlQGz29qvFZJQT4cv3+zm3j7TfK7ksPPb3I/
XTL2z2/KnuYK8PNbeu8+DTy/pfk6+1Tw/Bb7p52It99ivRHD/vkt9cfJDuS3
3xK+9Z5kR/+c8+NbibffYr+4Lnh++3f+sPTPuf8qknj7bfKR/MFznsPP29A/
p37nbOifq/yQmuD5bcZPuB39c9l79Xvi7Xe4P+OOHf1z4jMt4ed3NN7vvAXP
75APc9qG/rnm3zNFwPM75GN7ws/vyB71jef/4fldzT9JN8Dzu7LP0BM29M/1
+wxO+DnP15aTD3dX34t/Dp7flT3aGusf6Z9zH4MVfn6XfOMrdvTPNR4DJoPn
9+QP1yYRb7+n8V4svx39cz2b4u3on6NfYbKjf67+65HPjv652rfrAflw91Sf
6Rfs6J+zXx/C/vl9+OYI8Py+7Bt1Djy/z/7aPPg5v4++Az+/z33It8Hz+/Lf
kBzwc8oLr+JE/5z8g1029M+5L8lFPtwD9fdCD+Lt/P7MNPj5A/l/wHYb+ufq
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
8u8n9azon+v9Lh8b+ueqf7SXHf1zff9zSfLhKqv+R5tb0D/XeNwax/55ZeIN
kcTbK6u/S9wHz33Uv7H52D/30fwaeNmG/rnKm9jEgv653jsWWNA/V/k1GlvQ
P5c/jysLP/dRfac1sqB/rt93NNZz0j/X9zfMs6B/rvaHG8/SP9d8O68qeF5F
ePCsIPvnVeRfKWLJb68i/+gwwYr+ufxx4jsz+uca363Osn9eVfNfgI14e1Wf
/8t3lf65vtfoDHjO+/x1LOifyz9Dg4i3U15qXwv655p/dm0i3l71d/xa+uey
58Lc5MNVU/0+7QbPq7G/sZv89mry7wI52T+vJntG7mT/vBrzdUf4eTX589zz
8PPq6s9054m3V1f9+1a1oH8uPH9tJ95eXfZreQh+Xl3+Pm0I+XDVVf/3KciH
4zmjvwP9c+Lz+Wzon2s8hVSyoH+u+bTiPvLhasheBfPCz2tofDQZY0H/XOvL
DkXB8xrqD1coeF5D46FwAnheQ/5u84Sf19T8Uyjegv657Lm9L/H2msKfjGvJ
h6spf2y7g/3zmuqPZrFW9M/VXtd89s9579+YfLia+n63YfDzWurfpU74eS35
y7ko+Hkt5rsP4Hkt9e/L9+yf8/vFxvpF+uf6XvV38PNa7CeWJN7O74/ug5/X
ln0iBhFvr63vbd7L/jnv3fMSb6+t+etIHiv65xrfw+7Az2urfwZP5b7X2qpv
cCT57b7EB9bZ0D9Xfy07bkH/HP5cxIL+ufw3+XPOq/mqfkmfbeif63nrdvg5
//8SCz/3VX9t9oGf11F953y0oX8u/0mezYr+Of5amfPnddTehMPgeR35ry0F
++d1fse7pH8ue5UvYEH/XPXr3Qp+Xlfjxfse+e111b58vuTD1WX/ojvx9rqs
RzeC53Vlv7HnyW+vK39a7yS/va7quy+JeHtdfT9VPgv658KjqDj4eT21/3Ue
8Lye/D35OuLt9TQeXj8j3l5P9e90nf1znluPJ7+9nsZT7XngOeXPSc3+eX3Z
r1hD8Ly+3k/ZDj+vL3s0m8P+Oc9bjoLn9TU/PK1APlx99eeAevDz+rLfl3fw
c8o/sdWC/jnxuZHgeQONl8vBnFdroPkoNIz7ZBoQj3CRD9dA38uzGTxvoPJd
t+HnDdT/CRst6J/ruewU9s8byj6DD5jRP2e/xAaeN1T/fe9qQf9c81/wafh5
Q7Vv+ETi7bx/19SK/rn6Y1E/8uEayX59jPWb9M/VnrZ7zOifq7zKncDzRhqP
ta/Y0D/XfFElO/H2Rip/Rgf4eSPwsBf8vJHsMeEjeN5Y33sVQLy9scbX38Pg
543lj9feW9A/13w48QLn1Rqrf+6VJd7eWPbJeYB4e2O170UKC/rnsuejafDz
JuxvL7Wgf6729I+zoX+u32+7Rby9idYX16dY0T/X+vPQZjP65xofXWpa0T/X
+5g04DnPfftzXq2p7BswyYr+ueyR96QN/XPNl2OuW9E/1/g+eY14O+/fj7ei
f675YPYy8Lwp8dtvZvTPVb+1V8DzZuqvSSE29M81Py73JN7eTPar05Pzas30
vQZjrOifa7xtjbeif672VIyHnzfT/LC2EHjeXP1XN4l4e3P5U5FuxNuba/z1
KG9F/1z9EfzRjP65yru6jny45uqPMenJb2/Ofss98Lz5b34v/XO1J1tD8ttb
qD6346zon6u8Lnfg5y3kjy/yguct1D9j8xJvb6H2vztNvL2F7Nf8lgX9c7Vv
pRU8bwn+vIWft1R5l16Z0T8XXkxoA563VH/lj4Gf83zRBJ63lH1K5YCf8z5l
cvh5S/VXDz/y2/3Unp1XLeifa34o/Iuf+8leNZ6b0T8XnwjOwnk1P9n3xlgL
+uesDy/Dz/3gKxvIh2uFvz3hvFor2etxV/h5K7U3fbAV/XPNrznnmdE/1/d2
PSS/vZXmjwZzOK/WSvb7UB48b0U8vQHn1Vpr/H4rBz9vrf5IXpb989Ya/8Ed
yIdrrfmq9gzy23kf6STe3lr+4ZMPPG/NflJb+Hlr2evVTfLh2rD/7A8/b6P6
9EzF/nkb4sWTOa/WRvixoTX57fy+TnHwvI3mu2eL4eeU/zUEft5G9skTwvlz
f/1+/gjw3F/+17kX8XZ/9VdRg79K/1zr/6nF4Of+6t/xAVb0zzV/bTbWD9I/
V3nrKrF/7i9/6/cYft5W/e28Ykb/nHhcNyv65+rfxiPZP+f96GEW9M9lH6s7
+mqUV7gc98O11fdvO8mHa6v23PbmvFo7+Uf9oRb0z9W+xXfJb2+n/swzhHh7
O80HnW3geTu158VJ9s/babz0zUk+XDv5961B4Hl79X/hd/Dz9oz/XuS38/7d
cvbP26v9bu7geXv53+uaNvTPWc/3t6B/rvfxE4m38z5Ff/bPO+g53UTOq3Vg
v30E+e0dwLNq5Ld30PzRMgX75x3Uvq3jiLd3kL2TqsDPO8jer/aT395B9m7e
ifNqHWW/oGfkw3UUHnz4Dj/vqPVO8+bw847qH7fR4HlH4intyIfrqPFwuIIN
/XO1p39W8Lyj8GJJGPy8k/w16iz8vJP659svPO+k+ebJegv65xof/zUEzztp
PO3sCz/vpPanuweedxJ+vP1kQf9c65OZd4i3dxY+5ZgBnndWf2yta0X/nHyV
/Wb0z/V+X0ny4Xg//j3x9s6q76wSnFfrLHvt+pf7ZLqovyqG2tA/V/94NiIf
jvfhteDnXci3bGdB/5x8mT+5T6aLxnf5Iuyfd1H/pRvO/nkX9scycF6tq/qz
5QfwvKvs+X4o/Lyr+vPadjP653rfIC3x9q4aH4PdwPOu8u95acDzrrJH+9fc
J9NV81vgIPLbu8n+0b3N6J/rvdcf5Ld3I1/EnXy4burfZo+Jt3dTf95LQT5c
N31/dwzx9m6q/8ZyxNu7yR93bzSjf676v28BnvM8OAA8767xMKQi+e3dNd8M
bmRB/1z2PR5IvL276pc+EDzvLv/ukoP89u7ic1t62tA/V/0e3+f8eQ/ym+tZ
0D8HT4z1iPTP1d+zZ3FerYfqe+wL+XA9NJ63xlrRP1f99tUh3h6g56VT2T8P
UP+kLm5F/1z19S8GngeovZevs38eIHvbMsLPA9gPijKjf67x2my4Ff1z8j1X
2dA/V3+3qs3+eU+159oV4u09VZ/MxrP0zzVeXk4Az3uqfU3d4Oc91Z64seTD
9cRfU4PnPVX/ObuJt/fSeJ1dxYL+OfHcNuB5L9n7TCri7b1Un8o74ee91H/t
RlvQP2e/1w8870W+wnnOq/WCD1eCnweSX13Rjv656pPhCefVAjW+7uSBnwdq
/hryg/3zQNkzshz8PFDzaXgzM/rn+n/r/6zon8t+TQPh572Fz6+bgOe9Nf7v
3jejf67+2Gwj3t5b9Ss8x4z+ufp/mZV4e299/10D+Hlv9UdUD/h5b9Wn9hfy
4fpo/hnR3Yr+OfGyI+TD9dHvO5nA8z6yX/K6nD/vw3mBUPh5H+F7l+lm9M/V
H6eKg+d9yfe/Bj/vK/tv3c/+eV+Nn07vwPO+am+1qWb0zzUfjZ5iRv9c39sw
2Yz+ucqfmw5+3lf1X7SceHs/4fPDseB5P+JLbuyf91N9qw+Fn/eTPYqMgZ/3
k/+eXWJF/1zlL3S3o39O/tlzK/rn8o/O1c3on+v7pwsQb++v+fTjTvC8v+zh
+Z3z5/x+7hMr+ufy57lJxNv5/7DHxNv7k9+5iXw4ynvZHH4+QPPBHTt4PkDj
M28/C/rnmj/8o7lPZoD88VwZ9s8HEF+Yw/75APZnSpMPx/uta9k/53vJN1vQ
P5e/NqpgRv/8d76Y9M/VvqTOxNsHyn7pcrJ/zvPwBvDzgarvo+zsnw+UvTpG
geeD5P9lT5rRPycf4YQZ/XO1L6ko/HyQ/Pl7Wvj5IPX3i48W9M9lr+VtyW8f
pPatWGNB/1zvG6cBz4PIR19NvD1I4y39HvA8iHjYnxb0zzW/NT0CPw/S/BzZ
yYL+ueq7uAD5cEHq7xUZ4OdBqk/aKAv65/pejxbkww3+zWelf06+cTr4+WCV
H/ADfj5Y83GhueD5YPZ/jfWW9M/lf6PPgeeDVV+32ZxXG6L+uDLSiv657Pls
E+fVhuh7NWbCz4dofOcLhJ8P0fwYO92O/rnKf/iLnw9RfcpPg59TXobyxNuH
aj6olhJ+PlTlZfvE+fOhst8sG/H2X88Dzeifq3/SRsDPh2o+epzfjP45/O8+
eB6s/k49AX4eTD7sW/h5sOofbgLPg4n3m9g/D5Z9DvY1o3+u7wc2tqB/rvcj
O7B/Hix8rL0cPB+m9t16Sbx9mPrflduM/rm+V3AU++fDVJ8MbcmHGyb/bVOJ
/PZh5McXgZ8PY//5OvH2YZrvSn02o3+u8bh6iBX9c+I75Yi3D9f4SvULz4fL
nuUfwc+Haz7odZx8uOHsv30wo3+u9lsekA83nPVcLfB8hOpnvs99MiM03vMN
hJ+PUP/8e5d8uBGsN1ea0T+XPQObkA83QvU3b4WfU96DvuD5CNmnyBjy4ULk
74f6WNE/J17QATwPIT9hOvH2EM1nCcZ6QPrn+t6oG5xXC9H89ekL+e0h+p5p
pAX9c9Un5VIz+ufCry45wfO/yRfNYUX/nPx6fzP652r/vUHwc957PzWjfy5/
aDiQ/fO/td67P4DzaqHkG/7i56HE0/8g3h6q+jTLAp6Hqn/G9mP/PFT+2cQP
PA+V/bO8saJ/zv6ohf3zUNkjd17ukzFpfOXvTT6cSf59sjnxdpPafyAD59VM
8p+roeyfmzQfLkkPnpvkv8krw89N/x+em9S/eU+T326mfw6A52b59/3i4LlZ
9unn4Py5WfNF1v0W9M81383PAp6bNZ/F/MJzfn+zFefVzGrfS2N9Jf1z1beF
8Sz9c/2+YBHw3CJ/SbMCPLeoP0tOM6N/Lv8ZlhI8t8hffb6a0D9XfzesZ0b/
nHj53zb0z2Xfx1fAc6vq/7wE8XYr57smwc+tskeuTyb0z+ELrdk/5zndd/Dc
qvq4ZrJ/bpO9Vve3oH9OvuVN8uFs6t/8H0zon6t+k1uC5zb40Tgz+ufyr+P/
kg9nk70G1zCjfy57Lk0OntvVnnvnzeifq7+HNyXebtd4HrUBPLfr/++i2T+3
6/u1e4Hndvmv/zbw3M54G2VG/5z9nw/guUP26d4APHeo/yqstaB/rvFbKMyM
/vnv+Lr0z1X+uecm9M9Vn05O8JzyO0/ivleH7PnoBPzcqfrUieY+GZ4n5ALP
nRrvXztb0D+XPcIzw895TpETfu6Uf3n+Y0H/nHh9WTP65/KXKdWJt7s0Hh92
5T4Zl753uT383KXfpz9CvN2l7914Rbzdpfnuv1Az+ueaj4YfAs9dwk9TKTP6
57Ln3/7w8zCV9yaS/fMw9a8zFjwPU3+uKEm8PUzzS7n28PMwfX/0HRP65/Lf
0KfgeZj6c9J88uFGyt/b+RFvH8n5cX8b+uf6XpaW8PORqt++kpxXG6n6NS0D
no/Uei/tQxv65/KPBfPh5yM1v91MbkH/XOuD28XA81Hq78SS4DnPLYLM6J9z
fmIueD5K/Xn2uxn9c9k7ztOK/jn5cNM5fz5K9bEWRY9ltPqzwgAz+ueqj2eS
Gf1ztbftNzP657LPBQ/uex2t9V/O6eD5aLWvzDTy4UaTn+9uRv8cvlAXPA/X
/8duhJ+Hq/9m9QbPw/X9uE1W9M9V30r9Oa8Wrvkn6wT4ebjGX6loM/rn8o9c
H83on2t+OXGB/fMxeu4TDZ6P0Xg8sR48H6P55+EY+PkY9W+TnuTDjVF7m56D
n4+R/ZNycl5tjPwj5B35cGPlb5O6m9E/V/mrsoPnYzmvk5P987Hq74ar4Oc8
78nO/vlYtfff0+yfj1X93//Kb6f8HVHw83HMry/N6J9rfbDJaUH/nHzVzGb0
z+Vflx3wc/6/6Djx9nH4q53983Hyj9QVbOifs5/ewYr+ueaj70+Jt49nvV6O
+2TGyz4vyoLn4zU//FMWPB+v9t5eRH477+uYibePF353XUQ+3HiN/09lLOif
q/7d0oHnE/R+Y1oz+ud6znyQePsEtX+QF/x8AvGjEdwPN0H2fXrfjP656mPZ
y30yE2SfPvvg5xPl/wWHcV5tosrbept4+0T5y8ah5LdPlH1ikpEPN1H1G7jX
hP65xsfR5Fb0z+Xv54ta0D/XeKm9x4T++e/z0tI/V/93M9Yz0j/X/B82mHj7
JPL5B8PPJ3EfxFbi7fx/wlX2zyfJ/2tMtaJ/Ln++NBB+Plnz7/XLVvTP1f5k
04m3T1b9Hv4Lnk9W+X4FwfPJWq8scQfPJ8s+heOt6J+r/hO/gOdT5I/3L1rR
P1f/r55sRv9c4/lBAng+hfEyjvPn/L6Bsb6S/rn8edtY9s+nqL//6M3+Oe+/
5bWgf67xWLoK8fap6n/3CcTbp6q//s4Dnk/V+H5orJ+kf675Zd9bC/rnKn9n
RfLhpsreQ8aC51M1fg+Fwc+n6fv3zprRP+e8xirwfJrs9zQT98NNU38Fx8HP
p6m/Tj0h3k55Q72573WaxuvBduyfT9f4Tl0Gfj5d/rn4lBn9c42nLlXM6J/L
P09lJt7O/++egJ/z/qKZfLjpv9dT0j9Xfz8/Zkb/XN+7Ng9+PkP9H1oRfj5D
5X1rwf75DOH77hDwnPf/eYLnM9Q/PiPg5zOEN43bwM9nkH9zGH4+k/tYlprQ
P1f/JESQ3z5T/nuxMfx8psZT9+ng+Ux9b2UZ8Jzy3lwh3j6T+P1t8Hym6r9y
uxX9c/VPplvkt8+SvfqUAs9nyd8LNSe/fZb8sX8z9s/5f/K9ZvTP1b/jShJv
n6X+WVoIfj5L7W8+zIz+uezdcDP8fLbqn3U6+XCzZb+nteDns9mPnsr++WyV
n2KoGf1z9WfhmsTbZ2s+yr2BeDvvD/Um3j5H9n1grF+kf858X5/zanPgw0Hw
8zmq345BZvTP5U8zE03on+v/xwoTb5+j9WsH41n656xvLnBeba7sXWIAeD5X
4ymZL+fV5v7ej5T+ufxtbUX2z+fKXz6MYf98ruxz/Qh4Plfj+/EVE/rnKq9m
Wvj5PNU3Rzbi7fPw12fw83my1/0s7J/PY34MNKN/zv0nCSb0z8GLd2b0z+Uf
2f7gvFqE+n92Ks6rRWj+apXXjP65ypvuIh8uQvPP+HbE2yPUn0F7yIeLUP0a
JicfLkL2ODTehP655tuvbYi3zxd+TN5JvH2+yjO35rzafPXXo6Lkt89XfSuX
J799vua/qeUs6J8T/3sGns9X//xowfnz+cQ7PODnC+Rv7Wazf74AvuhtQf9c
9X/TjHy4BfKXTcb6Svrn8re2I8HzBeq/bWEm9M/Bx/bkwy1U+Vn+JN6+UOPz
Xlvi7QvlLz2nsn++UP5Y1Z389oVqX59g8Hyh+udVGzP657LvC7sJ/XPZ89ol
8DxS/heSDn4eKTyaf8SE/jnxqBj4eaTW81eDwPNI9Ueflzb0zzkP60t+e6Tq
N6sr98nwvbsHTeifk++QyP75Is1n037lwy1S+YmFiLcvUn/tyAo/X0T+3EcL
+uea/4rvN6F/Lvt9rk68nfeeKeHni+W/6/qQ375Y/p6U34L+uebjDlWt6J9r
fCXtNqF/rvaW+YXni+WPbf2Jty9Wf7j3Ir+d74X3tKB/TnwnHjxfov6PrW9G
/5zxsIr98yUqv/A/nD/n9/91J96+hPzfJBP657JX9gnw86XkvzYnv32p2nOg
LPvnSzU/BPuC5/x+/lj4+VLZ81gT+PlS+W+lOPbPebY1hp8vVf2zP4afL1N/
FmgEni+Tf5gaws+Xcd7nB/fJLJN/5G9AvH2Z+i+pHflwy9hPDQbPl6m9y3dw
nwy/j2wLP1+u+l9ewP75cuIZMdwPt1zzVeM64Ply+YNvUfbPl8u+CyPYP18u
++QwnqV/rvrHbyG/fTn5obeIt6/Q94Jem9A/5z4PP/LbV6i8oTWIt6/g/Gch
9s9XaPzfumFB/1zjJUsaC/rnstet65w/5/85+7J/HiV73ThGfnuU2hvcDDyP
Uv0/Pjehf673OVOB51FqT7fKxNt5P3eaBf1z+I+N82pR8q+/LsPPV5Jf8jd4
vlL1ydvFhP65vt/giQn9c9l/lZn985Xyz1E/iLevlP02XbSgf675KUcU/HyV
7DkslP3zVRqvxx+a0D/nPNIE8HyVvjd5kQn9c9n7WHsT+ucafwO/sX++Suu9
8uOIt1Pe3Hvg+Wp978Bi7odbrf53H0y8fbXqW/UM++er8a+h8PPVxF9qcV5t
NeNzCPH21fTvKc6rreb+pE/sn6/RfPvnXfj5Gu5fzGhF/1zt++oJP1+j/z/c
YEb/XP618Bb8fI36L9c84u1r2K/rCz/n93d84Odrybf2Ib99rfD181/w87Wy
d8Is8tvXyp+ezzChf675M6kieL5W7Wl5iPNqa2WfyQfJh1sr/L/RlHy4dZxn
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
+U3O+xYHz2/K3qu7g+c35f8xS8DzW8KPTOu4H+6Wfv8oH/z8FufpDTyU/jn3
Az8j3s7/lz0Az2+p/mNKkA93S/218wn8nP9vXkk+3G3uzzLWT9I/13Pp/OTD
3Zb/TXUHz29zn83lUPTP5X/Pu8LPb8u+L/ISb7/N/f/L4Oe31b45vcmHu0M+
1FLi7Xc0n+YuzP1wd8iPnQM/vyN7J0skH47fl+oJP78j/+t7G35+h/s2OsDP
76o+vW+B53flb59ag+d3VV7mecTb7+r/HWcSb78rfzh5LhT9c9nrcD7i7ZS3
zo94+13Nf8Nzsn9+T+Wfy0O8/Z7K87xAvJ3nVe3Ib7+n8ZE7O/H2e8LLsDns
n99D7+cy8fZ76p9KWeHn9zTfp/QjH+6+7L19Lnh+X/5atR14znNsE/j5fflT
hybE2++T75MGPOd96fScV7svf9s2JhT9c42XBtPYP3+g+nlkJB/uAXplacmH
e6D1qu84E/rnml/KNOG82gPuU2hJvP2B7Lt8PPH2B6pPo/om9M+5L/4M+e0P
2U9tAp4/lD/kPWpC/5z8zeNm9M/lrxnHs3/+UO1/fQI8f8h9EynIb3/Ieau6
5Lfz+57jyYd7xH3mLvj5I/l3tlHg+SP5U496xNsfqX5Px5DfzvsuscTbH6HP
UY/89keaH1PvDUX/XP7Sxhc8f6z+H1yTfLjH8rfM/4aif67nDNXYP38s/69l
57zaY/nbrH9N6J/LPpdrcf78MXobu9k/fyK8bfDVhP65+EGb6vDzJ6rvuRrk
wz3R96ZWgZ8/UX3z/D+izjquq+fp4vq1FVsBFVGxAwMMEAO7sLFbUbH9JNii
CCY2tqJid3d3YXc3iomKgfFcPW+e35/3dWt3dnbPPTOz9ySSP38J/90FnvO8
rkOJt7/UepXNm/r2WPj4N+LtsVofzDuIt3N+tfE9Iv1ztWfiZ/LnsfLnQeWC
0D+XPc8OsqN/jr7XBzv652p/tIl4+yu9b2iZIPTP0YsYDJ6/oj57C/z8Ffs7
39rRP9f7g8qC569k7wOlibdzPGWdHf1z/u/bPxj9c+In7sTbX8t//pQIQv9c
9k21Djx/TX6pL/z8tdofUIJ4O9cPKkn+/LXmZ0IgeB6n+zvE2tE/x3/6kj+P
0/XvAsHzOPRPYsHzOI1nVBHy53F8f72En8fJfk9fsP88Tutj+pXw8zdq76Po
IPTPyTcE2NE/p97jGfnzN3p/uR7w8zey945ldvTP4evGsfTP+V/YUvD8jcYv
cin17W/Vvrj88PO3wsfIKPLnb9lP8ZB4+1v1r3I+4u2cT/4QPH/L/hHje0b6
58TzOoHnb9W/mfeD0D/XeZ9F4DnHlxcQb3/H/6w7gOfv+J/rQvD8HfMrN3j+
jvqP9uD5O/Tx7gShf06+eb4d/XOt55nbUQ/3XtfXuAk/f6/1cEMk+fP3so//
LTv651pfqs+Gn7/X+3fPAs/f8z+pSDv659Qf5QxG/1zjs/oq8fYPer5Dazv6
52rfpunwc46drgahfy57bGhGvP0D/wO9DJ5/UH+7Tyfe/pH8W0bw/KPwqckF
+PlHrUcxGcHzj+z/zwiec/+kKfDzj/zvLQZ+/lHvrxwRhP653h+ajv/JxGu9
2jmBeHu85tfReuB5PHh/DjyP5//PBn5J/1z3P6pHPVw88a104Hm81pN1dcmf
x+v9XU+A55+Ip9QBzz+hz3icerhP1Hukor79k+ZTbEr4+Se1t9RY+Pkntad2
LerhOI6pSbz9k+Z3Ml/y5581/w4eZb/aZ9n3ykk7+ufyp+WpiLd/Vv8GVgfP
P2t+WWoQb+f+ikeD0D8XvpdL0mP5/L/4g/TPZZ8+oXb0zzVe1apQ3/4FPaA/
1MN9UXsej4Gff9H7fhwk3s79E3fDz7/wf88f1LcnyL+6DmO/WoL8q1nCEPTP
NR799wSjf672N65MvJ3jV8HgeYLm+6694HmC7LFkG/VwPC9/EPnzr/xP1g4/
/0q9ivG9IP1z3T9lO/nzr+wHSAhC/5z8wXc7+uca3+BN7Ff7yvf+Nzv65/LX
V2bi7d/0/RxRGX7+Tf590wM8/0a8YgP17d90f6cB8PNv8p/1/Yegf068czDx
9m+y/6xS/B/um8bvzxrq4b6z/3eHHf1z8ZHP68Hz73r/mAHw8++yl5OJ/Pl3
+X/94tTDfdf8yDyYePt32WfBRuLt39XeqKLsV/uh9fD1U/D8B3xiix39c43H
nwDq4X7o/hxP4Oc/0Ld6TT3cD9l/be9g9M/53l5JvD2RePYr+Hki60ks8fZE
/v/6lHh7ovxz9Rs7+uf8P6EEeJ6o9uceCD9PlL2DA+HnifLPiwvB85/yh0SD
L0n//H/5Rumfa/6/zguec/7ifPLnP2X/PLeJt3N8+Qn5859q7/yXdvTP5b8+
ecDzX/Lflbnh57/Qd1llR/9c7d1QiHj7Lz0/46Mg9M/V/7CC1MP9kj816A2e
/0KPywk8/6XxKOIGnv/W+jKiK3j+m3qknnb0z3V9lTzg+W/Zo1oR8Pw33/uZ
iLf/VntuZCd/zvWOxveN9M91fM+V/PkfzR/TUjv659SrTgXP/8jeS5yIt/8h
/pue/7f/0fxYNgU8/yO8a+pCffsf+X+/ruB5Mi/tp7lnR//c659/tDe+f6R/
7vXv+Z39+H+7cfz3rrMx1Lcbx3/9f1wu8Nw4/rd/tznxduP43/6LNuC5cfzX
nqeyEm9P7qX6gNZB6J/zvCnkz5OrffObkD9PrvvfZw5G/9zr33zwOQueJ9f7
F4bCz43jf+vXdPCc80dzUA/3n9c/fzBlDEb/3Ouf/481vgekfy57eOW2o3/u
JT0Ygx9L/9zrn32//ATPjeO//lygjR39cy/FO8PInxvHf/1xR5Yg9M+9/n0v
fk1LvN04/rv+R2Qm3p5C949xtKN/7vVvfA/6BaF/7vUPz/rvAc9TyJ6tGgWh
fy779I6xo3/u9W8+OQyBn6eUvas2J3+eUvbdkw08T6n2VTKOpX/u9f/8Xfrn
Xvo/5rEg9M/lH34j4OcpNX7nrcTbU8pelfaSP0/lpf30SfVwqWSfDlXh56n0
vM0Tibdz/O4L+fNUsveQEPDcOP67PnRqZEf/XOfv1iTentrrHx4MTUn+PLXs
N78ceJ5a9vPcAZ6nlv92Wk89XGr5Q//t4Hlq+dd4X/A8tfpT/z/i7anlX7NL
87/XNLKvZSt4nkbtia8GnqfR+FiTkT9PI38INb53pH8ue3qkBc95nm039XBp
ND5uxrH0zzV+TlWoh0sr+9hqg+dpNR/WB5M/T6v+b9oBPzeO/+JZbKId/XO9
f+464u1p5Y+5D8DP08pfd+6Hn6dV+wulIN6eDnv4guccf39PPVw6tedWX/A8
HetDdfh5OvU313Pq4dJpPDr3Yb9aOvl7XAL8PJ38++Yb4u3pvf59v83vTbw9
vezzaRd4nl7vG9KL/Hl69S+9B/w8vfxpU4ck/XO1P9H4PpH+ue4f1p795xmY
jy78T8Y4/vs98N1uR/9c9nXcbkf/3Ovf+lwg0Yb+ufz9Sj/wPIPWn4eVwPMM
at+t1vBznm96Tn27g843WUS83UH3m7oQb3eQ/y0uGYT+uey3PBB+7qD5ETsN
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
+OYW8fZlxIfqgufLhJ9774DnnB+czYr+OfEFB/j5ctn72mDi7cuF52Xs8PPl
/+Mf0j+XvdZUh58vZ//hHSv65+pPltTg+XKNR+4b1MNFy59GVCJ/Hq3+LFwG
nkdTj9KfeHu0+u/sa0X/XO1J8ALPo/X8ygaeSv9c/mX1oR4uWuPToRp4vkL3
d65sQ/9c7Xe9bkX/XP7awSNJ/1zj0TO9Ff1z2XfkIvB8hdaHEl7g+Qq9/8MV
K/rn6l+0J3i+0uv///8o/XONx580VvTPZZ/mgeD5So3HnvPE27l+wQ/4+Uqt
H/O9wPOV7Ec+B56v0nh1mAU/X6X+NT/LfrVVxMN+ws85XpBoQ/9ceLX5NPnz
VbLfpR/w81XUtx0j3s71H7rDz1erfVmKEm9fLXxON8uG/rmud5kKP1+t+dLp
E3i+WvbYcRg8X63599md/Wo8P+I4+XOeV8gDPF+j74W3B+Hna+RPrzuTP1/D
//iKgudr9HyX2eD5Go336f3E29eQ3/llQf9c69OzE1b0z+Vvv6ZQD7eW/WJd
reifsx50hZ+vFX5OjQPP12p9e9uOeri18u8n78Hztfr+TfbDgv65zhcrQD3c
OrUv1S74+TrhScI+8Hyd+ptzJ/F2zm98Sf58nfz3R3HwfJ36Z29G/nyd2v+q
Kflz7m/YlHj7erX/2FbwfL3s8XQX8fb11LcZx9I/J1+6i/r29Xp/VwNvpX8u
f39b2Ir+OfVX+Wzon2u9ffwCPN+g9SNgDPx8g8Y/Z7wF/XP566ym8PMNspel
FfF27nfJC55vUP/bDwXPN+h9FcKs6J/LPw7uAs838r+HHNS3b2R9ewI/3yj7
XA1i//lG2TM8P/nzjZqvtR7DzzfKHjOaW9E/13F0Q+rhNsp+C8bAzzdR31cT
fr5J4zPyAfx80//q/aV/jj/ltaJ/rvav8iXevkntCXltQf9c1683Ud++Wf57
+wn8fDN4swZ+vlntGeoHP9+s9aedwVelf675MTsb9e2bZZ/3w8FznndwCfVw
3O+TlXj7FvYrZgHPt8g/glZQD7dF9jkzFDzfovE03yDeznHdaPLnWzQebRYS
b+f4fU7wfAv5HONY+ufkp+tZ0T/X+hM1H36+VfZKnYp4+1at//uuUN++VevX
m4Hw8638n+wM9e1btR5vK0/+nPufXyLevo39Zz7w821qz/GL7FfbpvY/zgKe
b5M/hvaAn29Tf25EW9E/13gvPcH/ZLZp/R2SmXj7NvXvXmrwfLvGb855+Pl2
+VeTGdTDbdd83zUdPN8u/5pyFTzn/iADf6R/Tj56GvlznpfsE/lzzv/8Qf58
h/q7bCD8fIfm98ae8PMd1BctsaJ/Tv74Eni+Q/0NX2xF/5z9ZbPB8x3s50gH
nu+U/w36Sj3cTrXHcRJ4vlP3e3aHn+/k/7YGH5b+ufqbNakebqfw6L8v8POd
+h4b2Qc838n/GwoTb98lfzl/hHq4XXrfsXjwfJf6F90bfr5L9rt2GDzfpfFv
4U/+fBf5uTlW9M/lr2Edbeif8/+HF9TD7ZY9shv4Jv1zzdc9nlb0z3X92m9W
9M+pHxoDnu/WeJ32IN6+W+1Z/RY83632+PSAn++mfqk7eL5H42mdaUX/XO8b
/IV4+x7hxdI27Ffbw//NRpI/38P+hHDi7Xv0/mkbibfv0ft8DP4k/XM9b14Y
eL4XexYk3r5X8ydtrA39c/mfQ0PwfK/ef2go/HyvxtvxMPH2vdRLDyHevlf+
Urc+eL5P8+dCR/j5Po1/qbHg+T7w8bQF/XO179Fq8Hyf7DVxMni+T+vBqhD4
+T7Zo70dPN+n/uzcQj3cfrXHPzt4vl/3j3gDP99PvWk76uH287/TFfDz/dS/
n7Cgf67xuvMaPOf5A5cTb99P/KMI8fYDet+Zzxb0z+VPZRrBzw/oe/TDJwv6
55qP5kLg+QHZy9E4L/1z4ZXlJfH2A/K37/WJtx9g/X4Bnh+UPVI6wc8Pyv/b
BYPnB/W8Jbfh5wfJ9xYAzw+qfy0uwM8PgofvLeifqz/D+hJvP8j+vnzg+SGt
NxOykz8/JHsPawo/PwTfdIWfH1L/K1+Hnx/S98+JTfDzQ+pf103w80Ma/7TL
4eeHtd4MXEb+/LDG05QCfn5Y68PnRuD5Yb2v9B4L+ufq3/b1xNsPy16zh4Hn
hzU/9ueCnx/W+P2+CJ4f0XjcvWtF/1zzZ1A34u1H5O+PY6iHO6L1pPQf8PwI
9cCLwHOel+IO9XBHNJ6u6amH4/lTg8Dzo2qP3R1+flT9efLMgv653t+qFHh+
lPr8RPD8qMZrzQ/wnPMdAsmfH5U/X39iQf9c9kmxn3q4Y/wPqJYV/XPNh2oV
wfNjun7CKeLtx/i/5GML+uey71wzeH5M43slgXj7MficCTw/pvXvdw/w/Ljs
4/cfeH6c+vsHFvTP+b9TIfD8uOw9yZ94+3H1b1A38Pw49ezT4efHZZ9XH+Hn
x+W/FwuQPz9BPWpz9FhOyP7pF8HPT8jf+oZQ335C88dnIXh+QvPNLx/71bh/
cynwnOs9z4HnJ6m/TbSif675MuQs9XAn1T7vjeirneR/E5Pg5yfh83Hw85P8
v/c1eH5S671LI+rbT2r+NFxhQf+c/x2PB89PafyvnCTefkrPa9mA/WqnNP5r
llvQP9fx153w81PUD++En3N+nyP8/JTs2/WKBf1zHb/rTrz9NP9vOAaen9b9
ceXA89Nq77IoC/rn6s/R7PDz01rvr3cl3n5a/QktAD8/rfZ5Z6O+/Qz1TluI
t59hv/lU8PwM8c6p5M/PyF/H+4LnHJcYBZ5z/N8F+PkZ2W/OeQv651ovZuUF
z89qPkSPAM/Pkm9MtKB/ru+1dAYflf65jpOXJH/O8YZG8POz1EefhZ+fxR65
ibefo169OHh+Tv6RMNeC/rnaV3EP+fNzav+Z3cTbz1EP/dWC/rnm44miVvTP
+Z9vEPvVzmn9OXbSgv45+fa6/E/mvMb78xcL+ud8b40Dz89r/ajSivz5ebV3
+3HwnOfZrcTbz6t9uwy8lf65/KvUMQv653p+3FYr+ucar/1m8PwC8Z8nxNsv
8D+wrOTPL2h9rl0Dfn5B43d0M3h+Qf7kcgk853y2ZuB5DP+fe0j+PEbr3cRR
1LfHaL2oHwE/j/lffYH0z9W+wlPA8xj5a64LxNtj5D+LGhNvj5H/n3cg3n6R
+oVJ8POL/G9yAfz8IvulMrBf7aLsn36yBf1z/hcTZ0H/nP9hrwXPL7L/oA94
fon9ZOHE2y/pedZbVvTP+V+IM3h+SeOZfjX8/BL7tdLAzy9p/sffAM95frrd
FvTP+V9lBfD8strbtwL8/LLW/5AVVvTP2Y/XAzy/LHvusFrRP6de2o14+2W1
L6UVPL+s8bjZjHq4y7JHmSPsV7uC/kZ2+PkV6uXGgudX9Ly+2cifcxw1FTy/
Int+bUy8/YreN+AgeM7xzC3g+RX+f+BLvP2q2j+3Onh+VfbyWUz+/KrWi42l
wPOret7LDuxXu4r/nAfPr6p/VxcSb79K/q8+eixXtR5McKa+/Rr1u+3Ac47f
z7eif049uY8V/XP+//yS/WrX5P+BxcDza3pfVE74+TW1t4EVfn5N7X0RSLz9
uvwlrTf8/Lq+Vw4ngOfXZY8jJ+Hn1/W+uaYk/XOtD6d7wc85flHRiv458f2t
1Lff0Pp5cJUF/XONZ/7j4PkNtdenBfz8hsYnMhX8nOufjAbPb6i/x49a0T9X
e6d/hJ/f4P9eBn5K/1zPL5qRePtN4of34ec32d961YL+udq7MAP585vChz6H
yJ/flD1il1nQP6ceyWJB/1zzpYwf8fZb6k9NswX9c+FHtwPg+S35R4rb7Fe7
Rbw6Dfz8lp63a7UN/XPN1wvu4Pkt6vOCwfNb8qeQ+tTD3Za9gssTb7+t9mfr
AJ7f1vekxx7wnOuzDbSgf077J5A/v633H3Ekf35b32sdFoLnt2X/CS/In99R
++eEE2+/o/WllAV+fkf2C2sDnt8hv7OUePsd+efJeRb0z+W/1nHsV7uj99fb
Tj3cXeptn4Dnd/X8mMJW9M/1vGYJ8PO7Gu//jGPpn7MfZyz8/K7aM68leH5X
/lRgDPnzu4zXZvLn9/S+/iFW9M9lj/tu8PN7el6Xs8Tb77Gf3sBj6Z8znt+o
h7un/pz1Ac/vES90IN5+T+8f8JV4+33+l5ofPL/P/rkZxNvva/x3foCf39f4
TgsEz+9rPjx6Dz+/r/6EHragf67xzD6ceDvHJz6x//yB2lPVjXj7A63XS9aA
5w/0PdL0oAX9c/mrKX+S/rn8I0tq4u0P5G/7UoHnXF+9PPH2B7Lf0ung+UPw
ICX8/KHas9zAa+mfyz6f68HPH6r/Ta4Rb3+IP+4Fzx9q/NIZ+CP9c60f9aOt
6J/r/X0i4OeP1L40EcTbH2l+570Cnj9Sf7ZdBs8f6fkDLPDzR9Q77LKgf67x
jthLffsj+cOzWPD8scYzMgp+/ljv/xoDnj+WvTv9It7+WOtZmt3w88d6X9ra
4PljzY9nvuD5Y62vtw1+LP1zxjcr/PyJxn/RDurhnuj7tUooeP5E9h3+lPz5
E/SrBljRP5d9rvenvv2J+jftG/nzJ/zPNJMV/XPW8zEW9M81Xi36gedP2U/h
Dz9/Sr1HiAX9c73P8hA8f8r/bEdb0D9Hz+m+Bf1z/se+0YL+ucbDdQ71cM/U
P1cDX6V/ruc33gA/f6brF3vDz5+pfSfiibc/U/srx7Nf7Znsv/Uj9XDP4POV
wPNn/I8oLXj+XONfpSJ4/lzzbcoR8Pw5/0O4RT3ccz3vzFDq259rvTm32oL+
udozKxV4/lz9i7phQf9c4+d8g3j7C/nP+IPg+Qv2ezUAz1/w/93rFvTPxR+W
xBFvf6H1ds5+8JzrA5PDz1+Qn+kMnr+UfTrvs6J/Ln+osxw8f6nvpXd1yJ+/
5H9vk6zon8ufm9e1oH/O/x8vg+ec/x5FvP2l2rOxA/VwsXrfnxzE22P1fMcO
4Hms+MtaA++lf67+Lh1vRf9c8ydPIngeq+d3bweex8pf5hZL0j+XPb8l1be/
0vxy+w4/f/U//JT+ufz9UDHwnOs3PiZ//kr+dyAUPH9FvCABPH+l/mWsSrz9
lebjxAEW9M9lr6lz4eev5Q8v+oDnr+VP5Xyob3+t+80nwPPX6Hs5wM9f633d
IvmfzGvZZ8tG8DxO86mAwYelf079UF/4eZz8/+dI+Hmc7JnSBzyPkz8UWQ+e
x8n/98wg3h6n9pSNtKB/zvf/bPj5G10/76MF/XP1P98t8PwN+jgHwfM3mm9O
w+Dnb+S/K3rCz9+ovymS6tvfyF55e8LP32j8pleEn7+Vfx3cR/78Lf/ba2hF
/5z/CZUlf/6W+sZpFvTP4SO5reif63vALxp+/lbv32ADz9+i13bAgv657FG3
qwX9c/Jt7Ym3v9P312UDv6R/Dr/cZ0H/HD2e2lb0z4nPxZA/53kZf8LP36k/
e03E29+Tf6hFPdx79nN1BM/fk1+baEH/XOuD21bi7e/lT1db8X+49+rP+HPw
8/fY9wH8/AP6fwvJn3/QeNQZCD//oPaWzAaef2C8N1EP90HzKXCHBf1z4o0b
2X/+Qf0vl0C8nfOTwyzon8v+zzOD5x/ZzzMPPOf8iXEW9M/lj8/Xgecf5e99
i1vQP+f/R33B84/oD60l3v6R/cPD4efx7JeKhJ/H8/+2QOrh4onHPbCgf67n
X09BfXs88WIDP6V/Lvtkd4Wfx2t9c7kPP+f5NULA809af4OCyZ9/0vzsn5x6
uE/CiwOHyZ9/UvujGoDnnzRensmob/8kexUOgJ9/Iv87Cjz/RL3+QfD8M3pI
Nvj5Z/4PmVQPx/FDg59I/1z9WWmBn39WeyPrwM8/y17bXoHnn+U/7q+ob+d4
Vyx4/oX/nRl4LP1z6jtSgOdfiH/tgZ9/kb/OXgSef9F4HDpLPdwX2ePyRPD8
i9bTKcmJtydQb7gCfp4gex2rTn17AvoM88HzBPR2n8LPE2S/hu3Bc46b9SPe
zvWv+7JfLUHzb/El4u1f9f6yxrH0zzVfbZnA86/8f6Yu/Pyr/GPpT+LtXzX+
j4rDzznuW5z8+Vf0VbZQ3/6V+gQn4u3fqF+4T7z9G/P1hwX9c/lzwlv4+Tf+
v7yYePs3zbeTAeD5N81XnwDy59+0Pu4YTf78G/HFg+D5d61v70aRP/+u9e+n
wb+lf67x/HIbPP+u8Tg1Ejz/rudf9CTe/l32zu9LvP37/+Kt0j/n/7hJ9XA/
1J6Ca+HnP2Qf83Dq4X4QTzX4t/TP+V/TJPD8h9r7bij58x/oPXUCz3/o/bXz
geeJmn+nd/J/uEQ9b4wr/DxR/pG6D/w8Uf7+6An7zxOJf34g3p6o94+sbEH/
XOOf+zHx9kTN107byJ//1Hxs/g48/6n3lc8Dnv9ET+8i8faf1NtcBM8532QL
/Pzn/+qjpX/O93Yi/5P5qe+/nsXg57/QT24FnnO8uyjx9l+6P5cz8fZf8vdX
tcmf/9J62cEJPP+l57cazf9ef8ke1lcW9M/lPw0cibf/ln96Dybe/pvvl5Hg
+W+93705+fPf/D/NEzz/Lf+/72FB/1z+mGEt/Py33u+YyoL+uebvxJQW9M//
978a6Z9Tv9Cf/Pkf4o3XiLf/YX92P/j5H7WnwDP4+R+9L8sJ8PwPekcf4efJ
vKU3a+Cx9M+9/61Pbcdb0D/X8c9kFvTPvf/Nx81H4efcX+Uo/Nw4/vd/gWXg
uXH8d30pX4p4O/cv7MV+teTeige2taB/7q3/NVygHs44/js+ldqA58bxv/8J
jbWgf+6t/QkGfkn/3Fv/A3Kivp3jWa3g57yvuSN4/p+38jfdwfP/dH2LQfwf
jmMPf/DcOP7rb7YFxNv/k33uTYGfG8f/9CP3ws+N47/4E3QbPDeO/45Hi+zU
w6XQ9dVbWNA/9/63vu7cTbzdOP6nF9yPeHsK2cN7Ev+TSaH25O1HfXsKjYdz
SvCc64/cAM+N43//8zKOpX+u8ckWCZ4bx//2Z8wGz43jv/6yzwc8N47/zofB
PuC5cfzXv88VsKB/7v3PP8cbx9I/1/gkNragf67xr52RerhU3v/m25z84DnH
yx+C56l0/bMM8PNU6t/RAPDcOP7r79nzwc9Tyf+6hYLnqWS/Ypfh56ll7xFj
yZ+n1njcqwCep1Z/bjewoH+u8TtyFzznOMMHM/rnOr5+B36eWu3JkwY8Ty3/
6uFJfXsa+W+RPeTP08g++VKD52k0XltSwc/TqD+rWsDPjeO/61u9FuB5Gtmn
eyfy58bxv/o/M/F2zq/8Cp6nlb+8rU28Pa3aZ+pAfXta9ed7cvCc45DB4Hla
tc8pOXieVvOp8Gsz+ufqX9d2xNvTyr5jxoHn6dSe46cs6J97/389lPTP1Z6n
Bp+W/rn6s+kyeJ5O/psrhwX9c/nv1iAr+uey/81W8PN08tdHIeB5ej1/2EXw
PL38ye0ieJ5e/Z05Gn5uHP/9fvU/ZkH/XO23joKfp9f4lbESbzeO/+Jr7FMz
+udaPwKag+cZ1L7phaiHy6DnrZ4FnmfQ+E7/Sv48g9bDN6tt6J97//ueSfOV
eHsGrT9XEoi38/x1i4i3O8he+TKB5w5qz48C1Lc7qH9na4HnDrJ3eGPq2x20
HrV+ZEb/3PsfHo88RT0c10+KJt7uIP86dJJ6uIzy33qNwPOMGo+9U4m3Z5S/
TPQFzzOqfd+Og+cZ9b5L6Yi3Z5S9Z1Yg3p5R68Wh9/DzjOpPbD3i7Zk0n4Oe
w88zyR9vpbGgf67xHveMeHsm2T/DbvA8k57Xtwr8PJPGKyA19XCZ1L7dveHn
mTQepSeC55l1PL6TBf1z3X84I3ieWf0d2hF+nlnvL94TPM+s9SrdfPh5Ztmr
Sk7i7UnXz4OfZ1F/elSCn2eRvVu0B8+zyF4X5rBfLYvGr1V68DyL2tdrL3ie
RfNrdTry51lYvyKJt2dR/9uXgp9n1flS98DzrPJf/2fw86xqX6IP+fOs6t/N
1uB5Vtl78Ub4eVatD9cqg+dZ5c85M8HPeV/5DRb0z+WvVwy8lv65/GWQP/H2
bFq/ej8if87138oQb8+m9pzIQD1cNs23dgYflv651o/MKYi3c9wnPXieXcfP
u8HPs8vfdo6woH+u9tdZQ7w9u/xjZSh4zv1LhhNvz672HR8LnmfX+DwoCJ7z
/M6dqYfLofGITzCjf67n115JvD2H/OXpEAv653peqV8W9M/V33K3iLfnUHsO
+YHnOYSnTYLBc+P4L1/ZeNGC/rnWv9Sfzeifaz3wXAue59T3RWBy8Dyn/Cu6
FHieU/15ZgPPc8o/17WhHi4n868N+XNH+UfqZuC5o9abOSWS9M/1/VKuPnju
qPnW0MBv6Z/r+jxLLOifq32dEyzon+t6h7MW9M/VvmIFiLc7qT1rTfBzJ603
M1uA504aj8+D4edOwss5g+HnTmpfnhHUwznp/U9c4edOsl/vZsTbnfT+joXI
nztrfkc4gefOen8FJ/i5s9pXLIp6OGf19+YA8NxZ68GfnBb0z+mvcV7653pe
qzzwc2fNt4b9Leif6/zL0/DzXBqPnfvN6J/L33tEguecP73PjP65/HukM/H2
XBrvp7XAc57/uCr5c66/EUe8PTf4steM/rnuTxVHPVxurSef55I/zy37P+1P
PRzH5eqC57ll3/WZqYfLLftFH7Cgfy5/9+tH/jyP2tNxlxn9c7X31EvwPI/6
P+QNeJ5H86NjAPw8j9rn5wU/z6P52c8Rfp5HeD6kEvF2F7Vn8kHy5y46v8oX
PHfR+nq5F3juwnhvM6N/rvl8YDLxds57G8fSP9f3UEw28NxF7XvWhXh7Xr6f
ppI/z6v2HtoBnueV/6T3JH+eV+vPg2fgeV7N99MV4ed5tT6f6Ea8Pa/e77Ib
PM+r8clQjni7q+wdHA6eu2r+bLttRv9c63sbL/i5q9azy57Ut7uCFxPBc1fh
09k0xNtd1b8u4+Dnrhq/ptuJt+eT/wbeNKN/Ln9bvol4ez61b1lH8uf5NH/X
hYPn+TRfS98wo38u+17ZAj/n/PAy8PP8skfCHzP65+pfqpLgeX7Zu31q8Dw/
36M3qW/Pr/c/vEG8nfNP/cmf59d6vn4U/Dy/+vv2OnheQOc3byDeXkDz47WB
X9I/F152ak3+vICe/36FGf1zjXehouB5Aflb49UW9M/lP7P92a/G89qNIn/u
Jnt/bgaeu8m/060l3u6m/uX6BT93U/ufFgXP3eR/HX8Sb3eTvb8lguduGq8H
w8FzN62H7QoSby/I+jGM/HlBtf+cG3heUPap6AaeFwTfCoHnBTVeDS5RD1cQ
PnWB/HlBtXfXFzP651ofsjVL0j+Xf3oZ/E365/LPcoXg54XUnrz5wPNC8p8b
S8DzQpofjVzh54XU3if5iLcXUn+HNCTeXkjz5dUCM/rn8q/NS8ifF5a9Qwx+
Kf1zjXeuL8TbOf9woQX9c62Hk06B54Vljy55LOify/6XPsLPixBPmWdG/1zr
bd3cFvTPhafvcoHnHHucIH9eROvjfy7UwxXR/JzwAX5eROtJUNL/XouovROO
EW8vqvmWbI4Z/XON/9a3FvTP1f5RueDnRTWeE+bCz4uqPzOc4Oc8b+tR8Lyo
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
h+ur9eOMgU/SP9f6E1YGPO8re1efDp73pT5/Gvy8n/ztzy7wvJ/e18ideHs/
+X+8L/nzfvr+2nXfhP652rOkJfy8n8a7dCnq2/vJP08uBc953snT8PP+8qc6
TuB5f43X7bsm9M81npm2E2/vr/6u+w887y98DH1HfXt/rccNmoHn/dWfrMmT
9M/1Pvfk4PkAzY+FTcHzAbLHlCbE2wfI/+4fB88HsD+hG/nzAfI/D+O89M81
frE3Teifa/7EhoPnAzT+KW/Azwfq+QO8qIcbKPvNsBBvHyh83WDgofTPwddY
+PlAPT/1EfB8oOx3sSHx9oGyR+Z5ZvTP5R+uP+Dng/S8ty/A80Ear8qH4OeD
9L3zNh/1cIPkPwvyEW8fpOc//Qo/HyR/X/3dhP657ON3ADwfrPHKVAc8H6z5
8+Ip/Hyw/GPoU/B8MN/HK4m3D9Z4Tt0Hng/W/Cn0BDwfrPendAXPB6v94QZ+
Sv9c1x8dQbzdpPEK3QOem9SejQY/lP45/pMGPOe4wnTw3KT+p3toRv9c9k17
wYT+OfxnKPlzs44XfwLPzfBBR/DcLPx8lws8N6v/g6KIt5u1PiUGg+dm6oWc
4edm9p/0As8539bAM+mfa/xGvYGfW+Rf486Y0D/X+zYsoh7OIn/1z5akf67n
2xzh5xbxSe/T4DnPy1kVfm6Rf54sAp5bNd+s70zon2t8PK3wc6vsc2czeG6V
PYYbx9I/13r96DB4bpU/HR0PnvN8j0zUw3F/icrguU3zrdUh+LlN7+/XFX5u
03woHg6e29SeFs/Bc47XevB/OJvGL3cY8Xab7BOXHn5ul//XXE89nF3+kakz
/Nwue18PJd5u1/yfH0r+3C77N9kHntvlv4fHEm+3y//GzaS+3a7+vX9E/jxI
/nJiBvw8SPP7R0b4eZDs5TsGfh6k9t838Ev655qPE1cTbw9ivKaTPw/SeN+d
Bp4Hyd+cPcHzYJ1f2s6M/rnaPzcDeB6s8RwaCJ4Ha31duoP69mD2R+amvj2Y
/ZcrwPNg9bdBG/h5sPBogzP8fIjed6kn+fMh8hfX1uD5EI1nymRJ+udaD344
gudc73UGPB8i+/XaAp4PUfuzOFLfPkT9XbKZ/PlQ2bPTUPB8qOafp4GX0j9X
+9c8MKF/Lvy5sJF4O/dvCyfePlT9D0wEz4dSPxUGng9jP9AG8HyY2rc9Djwf
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
McVHiqfwnO+PeII+P6Z461Ii2f9c97s1BJ4f47zKan/8z9Vf5YrD8+MaH2cG
w/Pj7FcW43z7cY2XY8PR58dV/1ZGWf7nqk9oSvT5cf4vYhE853pVGqDP+X3c
QvLtJxQPqxaSbz+h+Cu1kPNwJ9iveADPT6j/1z2A5yfUPgUMfsn/XPNHQRs8
5/c5jvvjf672yrcMnp/kvEsC+vwk5zuH+ON/znnwo+jzk/xfncE3+Z9zvm4u
+pzvzzsCz0/q/qNboM/D1N4e0fA8TP0d7cJ5uDCtT5dFwfMwzS9NDL7J/1zx
d/g7+fYw1TfXIPR5mNYHVw/C8zC190J/eB6u5//4h/Nw4fwf6k14Hg4fbOTb
w3l/Mg/59nDNJ9sOsH/O515p4Hk4vO4Hz8M13ooafJH/Of9fWhyen9LzVr0G
z09pvnhdDJ6fUnu9+wTPTxGPP9Hnp9T/+T/B81P8H9lPeM79GnxEn59WfYbt
4TzcacWL+bY//udqz8Yu8Py02munwSf5n+t51xTxx//8v/9Xlv+5xtu/eeE5
1xuxGZ6fUf2L3CTffobz4OM5D3dG8ZMuDzw/o+uNHke+/Yz69+Ub8u1nVB8H
b/T5Gc13q2vD8wj1V6pp8DyC/Th78u0R/D/EdngeQb4iE/vnEfw/Zk7eV4tQ
/Ra4kW+PUHxP7YQ+j9D4XbaW8+1nNb72Xkafn+X/Jl+Sbz+r+lldOd9+VvFj
qcz++VnNz2d6wvOzipetE/3xP+f90e82/M/VHtNGsH9+TvFz1h19fk6fn7zg
j/+56nfxJPn2c5o/c1+A5+f0PNs3oc/P6f5VhsHzc+yXDeU83Dk9T1hueH5e
8TfIKMv/XO1bKzXvq51X/49fBs/Pq79nloPn5/V8GZPfVzuveK+1FJ6fV33+
LIHn5xVvR6LZP7+g+L3aEn1+Qf15ca0//ueK/z6n4fkF3t80+CT/c31+9iE8
v6D4St8CfX5B9bFLzrdfVHzdCofnF/n/pXD0+UX1R6Fw9PlFzT/3Sw3C/1zP
e/u9Df9zxVvWUvD8otqreTt//M/F27zD4fkl9dfXxvw/3CWNtx5t4fkl1d++
Ivvnl/j/9OT/e70Ej4+jzy+pvn+Xoc8vqX1XLiPffkn1r3cMnl9W/D4PIN9+
mfxQXvT5ZbXPKxd4flntPXwXPL+s+au/wR/5n6v9PDKxf35Z/bcxCp5f1vOO
XOyP//l/+1vyP+d9hM/o8ytqr2J10edXFL8t49HnV3T9Nn/Q51fEm2YGX+R/
znxVm/3zK4rXIffR51cVbytLo8+v6vc9p8Dzq6rfua3w/Kra81hNeH6V95Xj
2D+/qvG6aBI8v6rn/b6F/fNrPF82zsNd0/M5X4Tn13T9uL3w/Jrq5/cDnl9T
feb1QJ/z/fEGn+R/ru+P3QPPr2l8z8+LPr+u+0/cyP455fGz0OfX1V7ZHtvw
P1f75jiLPr+u+Ko4Fp5f13zReyA8v675YpwLPL+OX8tOeH5D7V8kJTy/wfne
6+Tbb2j8nukPz28w/jtxHu6G2tNlFPn2G6p/zFV4fkPjZ3RHeH5DvNg1FZ7f
VPss/gjPb/J/PFM5335T46H7FXh+k/O4leH5Td43dobnN3X/gh84335T8XC+
Hfl27hdaE31+S+PLVhOe39LzrZ0Ez2+pfVb+suF/rvr1uQjPbyn+9zvB81sa
n1sukG+/pfr8PQrP+f7Eo/D8tsrZjqLPbyve7VKSb7+t9j1+jv3z2/y/xmF4
flvtWcHgl/zPVb7UzR//c/wxXsPzO/D1D/n2O/o8Q0vOt9/R8zb9l/PtdzS/
RAwi335H65WWrvCcz2Pvoc/vqH2CXqLP7yh+juVCn9/lvMULeH5X7W+JhOd3
9fv16ci332W9dBee31X91lrJt9/V/H4jJzzn+gFzybff1XieVBKeR+r3oY3h
eaTiqUdj9Hmkrtf/GzyP1PN2m83+Ob8fspvzcJG6/jyDH/I/5/9Gd8HzSI3P
H6nIt99T/bKugOf3WA/tRJ/z+SeDX/I/V//ccYHn9xTPM5ehz+9pfgitB8/v
af65WgSe31M8NwyB5/c5zzINnt/X/dZsR5/f5/9KWsHz+/wf9V94fl/Pu6sQ
PL+v/l+zGH1+X/F5fbA//udqjxUP4PkD9e+/i+D5A10v/3v0+QPy+Vvg+QPV
52Qo5+EeKH5jfeD5A/LPPdHn/L7eAnj+UPfzPEC+/aH6r3gkPH+o+SM0Fn3+
UPUv0gx9/hC9eheeP+R99Hnw/CH64js8f/gfL+R/rs/jbsPzKD3PyCbsn0fp
+l8MPsj/XO2dvSs8j1J9fr1g/zwKfT0bnkepPjEmeB7F+5+z4Hm05t+rnujz
aPX/zc/sn0erPc44wvNoxWPAangerfpsuQ7Po8mHPbHhf672aziQfHu04uG+
wSv5n4tH/Uegzx9xHu6YDf9zPd+DFfD8Ef8nZfBI/udaHzbIAc/5/cup7J8/
Iv+QAn3+WM/XMNqG/7na63dFeP6Y/4cJJN/+WHr1xlLy7Xy/cBt4/ljx2/kI
+pzPjwawf/6Y96dqo8+faDwO+WPD/1z9kWkJ+vwJ74s+ZP/8idpv4Vv0+RPF
R/W35Nuf/Hd+R/7nuv9TH3j+RPNTTCjn4Z4Sz/ds+J9zPiYWnj9Ve64bD8/5
ftRPG/7nao+hkTb8zzmPaXwu/3P+Hy0DPH/K+1Eb4PkzxU/7fPD8GXozLzx/
xvp7Lu+f8/2I05yHeyZ+zkn+P5ln4kfcKXj+DH+bPOhzrpfrmw3/c7VPisbk
25/z/mk4PH+u+caU/L7ac/RaI/LtzxVP83fb8D/X8/l4wvPnas+rM+D5c9Vn
zGcb/ue6X8Fi8DyG87vT0ecxep7AVOjzGK0P3EZwvj2G/2s7zv55DP3RHp5z
/SzH4fkLtW/zfvD8Bf3Vjnz7C9U/dyX0+QvFc7m+8PyF2itiMjx/ofnybxt/
/M/VPl2PwPMXGq9dt6DPX2r+yN+bfPtL1edDQXj+Uvcrcx6ev9T8XDQr+faX
vE/3zob/ucb3t43k21/qeTsHo88ph5Yj3/5K9zt3wYb/ua7fODP6/JXG5/WW
nG9/9d/78/I/VzzM/ok+f8X/41dDn79Sf4WXJd/O79uWRZ+/1vcLjOF8+2uN
p9uvbfif835GHvQ5ny9dA89fazzOGsX++Wu1/1mrP/7nul8jL3j+WuO9lJV8
eyy8u0W+PZb3bXLB81g939Xd8DxW8R3pSL49Vu257IUN/3P1t7tRlv+56n9+
Fjx/o/bOvguev1F9QypzHu4N8117eP5G8ZWuBPn2N4rHf4+Sb3+j8V+gEjx/
o/t7f0Sfv1H8OLTl/fO3nJcPs+F/rvp3GADP3/J/ukXR52/1+5QnbfifKx4W
b4PnbxV/a1zg+VvFcyEXeP5W/ZPwDp6/03hMdwmeUw70Jd/+Tu1zoQ48f6fr
5SwHz9/x/4kH4Pk78crZ4KH8z1W2tWD//J3i694yG/7njN/z6PP3et5Lrujz
97p+t3nw/L3673QzeP5e9dkzl/fP32s8byqIPn+veFndE56/1/0Dm5Jvj1N/
1Z0Dz+P0/Hd/w/M43h+4b8P/nP/P7A7P4xQvXrvgeZzidWxJ9Hmcnm/OIhv+
54qnjevIt39Q/LYrAc8/6Pl25kOf8/nwfOjzD3rew2ng+Qf1Z3Be9PkH9Pl2
eP5B9Ztu6Cn5n+OfmId8+0fN9x+90Ocf+b+bIPLtH9Veof3Q5x/VXm/t0Od8
P1cn9PlHtdeGIpyH+yi+Jnyx4X+uz78/Qp9/En8OdYDnn3Q9r0fw/JPi5+ty
9s8/qX0rbkaff9LzjP+LPv+k/t4eb8P/XJ9XdOb983g9b81l8Dxe7VN6I/n2
eN0/4CH6PJ798E82/M85j+eOPo/X862rQb49XrzKOw59zucRV+H5Z/X/kerw
/LPWo1nHsn/+WfVLs5h8+2f8yfLDc74/phX6nOvVzcf++Wc9T83LNvzPVZ85
2+D5F86PrYbnX/Q8oXng+Rfy91tt+J8rfutlhudfNN8dagHPvygeery14X/O
/zk0h+dfNZ+1nke+/Sv+gs3h+Vd9/+ly9PlXza/bPOD5V7X/OCv75181HgbM
gedfNd/tMvgk/3PF64XZ6PNvao+XbeH5N42vmCXw/Jt4k6IJ++ff8HO4Bs+/
qX6TP5Jv/6b22bMDfc71l7dGn1MuMt6G/7m+X/8MPP+u+drB4JH8zzWevQaj
z7+rf+qftuF/zv/lNoDn/L7mWBv+5+JpwQbw/Lvi7Ycb+vyHnu/3RfT5j//+
b0r+56pvfkN/yP9c/Xu+OTz/wf8T2sPzH4rHn67o8x9qz0N9Od9O+WEsPP/J
+/5N0ec/1X/+dci3/9T4TJWR/3v9qfXJhcLo85/SW7dHwvOfuv+wiejzn+r/
5hPh+S/Fi6kU5+EoT+qFPv/F+V4/eP5L9//RE57/0vUyp4Pnv/CbPGrD/1zP
s206+vyX4qPYQHj+W+0duB59/lvt/agGPP/93/sM8j/XeJ+chnz7b42XSCd4
/lvxHGDwSP7nvA+31Ib/ufo7vis8T2C/w4X98wT1h18Y+jxB8+mXUfA8Qe2z
tQ48T1D9Sz8h356g+eZ+EPqczwesQp8naP5wy4s+/6N4PHfXhv+5nrdDJ/T5
H/YzesLzP2rP2dHsn/9R/7tGo8//qH9OHIXnfzgfNN+G/7nqf6I7PP+r6z9x
JN/+V/2ZMoHzcH91v0B/eP5X89vFmzb8z/HfPMT++V+157lK6PO/7LePIt+e
wivp93GL4blRThxPkw/yvppRTvx9jQB4zufVc8Bzo5zYvmeSz7cb5cT+9RwC
z7l+/ork241y4nxQ8wD6PKVXUvvnMKPPU+rz3R3Q50Y5sf8HzCTfnlL3b+GL
PjfKifNt1Awb/udeSe1fZD48T6n6D92LPjfKifHccB75djuvpP6wusFzo5y0
vnNg/9xOz5OwG54b5cT282oOz41y4ngsYM/+uVFOXF9VtMJzo5w4X6T+5I//
udf/zwfJ/9wrqb8zzYbnqfT9ERXguVFOjL8B5234n3slxUtEX3hulBPj69g5
G/7n+v22UujzVOqfNZNs+J/r96/PwvPUXknz5ajL5NuNcmL8u15Gn6fW9zOX
hOdGOXG8Li0Lz41yIh/GbkSfp1Z7OW5DnxvlxPidYszv8j/3Slqf5r3I+2pp
VJ6Qlv3zNKpPD4M/8j/X9YKKkW9Po/bPnpF8u1FOjOJZz8m3p9HzTz4Fz9Oo
fYsXhedpdT+XdTb8zxVfFhd4nlbXO1sHfZ5Wz1ujDufhjHIiXwN7w/O0er48
dvDcKCeOP3Nh9Dm/H50Snv+j+v/sYsP/XPFYMobzcEY5kZ8xj2z4n6s+QUZZ
/ucaT+9Xos/5vN1xG/7nul7aHpyH+0fxvbs7+jydft/U0BfyP1f7nI+C5+k0
HvuOQZ+n03hMWYP9c8obO9rwP1d79xxNvj2d4m1GV3ieTv15ehT6PL3aP89w
G/7nul/vFPA8vfo75Bf59vSqfxVneJ5e9Z1j6Bn5n6v9446hz9MrfnsfsuF/
rvh8G2jD/1zzRaW86PMMmi/mH4XnGTSeL7S14X+u/nv0G55n0PO5L4bnRjnJ
zzQAfZ5B43W7wQ/5n6u+K6vC84yM7yrwPKP6+6s3PM+o511wx4b/ueKp/U/y
7RnVfwP3w/OMmm8qGGX5n2t+2dARnmfS8x/3ZP88k+I3o6Fn5H+u/ugdgD7P
pN9P3os+z6T2qvwNnvP9s63R51xv4Ff0eSa1/5Db8Nxe46v5AvS5verTJSf6
3F7tOd8Xnttrvm7ty/l2e81v9+fBc3vNz2WzwXN7tVf98vDcXu1x3II+z6z6
bCiHPs+s73sYekb+56r/ouuch8v8Hw/kf654jA6x4X+u5xnbhHx7ZvXvZBM8
5/PdV9k/z6LnO+4Kz7Mo3lo1Rp9nEc/67OD98yxqn1Zm9HkWjbcGM+F5FrVP
TEZ4nkXtsSUj+fasGv8vXHlfLau+39DQQ/I/1/wTeAmeZ1U8HsxEvj2rxuOi
MvA8q+aX5o3geVaNt5b9bfif6/l+xMLzbKq/7wX0eTZdP2SyDf9zjZfm6dDn
2cSX4+nR59k0fvZsId+eTc+f7aUN/3PF4/506PNsas85fdDn2TV+O2yG59nV
fyP7os+zw6sYG/7nap9radk/z654qDmBfHt2tdcjF3ieXfEfPh59nl3Pf3oC
PM+h+roX5X21HLr+rV7k23NoPM8bjz7n8xQ94XkO5rtT6PMcGu93w2z4n6v+
Y5LfP8+h9mxhx3k4B80nLj42/M8V/1nX2PA/1/W2r4HnDmrPbDVs+J9rvJl9
ON/O9+9H2/A/V3xUewTPHfS8EavgeU5dz7k6PM+p/p+RAM9z6nqpV6LPc6q/
v1dFn+fU8zXtDM9zav41VSXfTvnEchv+54r3BiPguaP6f4k3++eOGo+/hsNz
R8Xbufvw3FH1CTwMzx31/B7L4Lmj4ivdfXjuqHhY5AnPc+l+zX6wf55L7f8j
Ep7n0vxwMDf6PJd+7x8Jz3PpfqUPwvNcqs+eUPQ51w/0gOe51F7e7dDnuVUO
u4M+z63xOuEAPM+teI7/As/5vkMA+jy37t+7Evqcz7svRJ9TfnPLhv+5nm/l
Phv+5+LF8fno8zxq7+LxvK+WR/Nx9Cf0eR71X9ge3lfLo/FU9RP753nUP8f2
2PA/V3tNvo4+5/Or5dHneTVern6A53lV3/A58Jxy02vk2/MqXq/EwfO8mj9n
7/TH/1zxt8YNfZ5X43X5FfR5PviffL6dctfZNvzP9fyz39vwP9f9h1+B5/nU
n+3M8Jzyp9Lk2/Mx376D5/n0vCGGPpL/ucbXvm3oc8p5zPA8v+aT4NLwPL/G
a+YMyf7nmi+KXoDn+dU/f/zQ5/nVHvOD4Xl+Pd+yAfDcSe33cgs8d1L7zE6P
PndSPFVMD8+d1B5tG8BzJ7XH44Y2/M81Pgb1g+dO6s8VxeG5k9aPt/qizwuI
Pw82o88LqH0KnUGfF1B7ju0Dzwvoee3SwvMCer4XMfC8gJ5/agw8L6D6pC4O
zwuoPb8XQp8X1HjqHQ7PC+p6WZ/D84LizZhU8Lygnnd0LXheUPPxL4Mf8j9X
ff+E2/A/V3s/qk2+3Vnfdwln/9xZ97vtjD53Vv9PMPgh/3P1z+lV6HNnzY8D
a3C+3Vnzy5CTNvzPNX7jH6LPnTU+F4wh315Iz5u+Jvq8kOr3YST59kLqr1Rd
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
r6Xx19Xgh/zPdb/PZdDntdX/m4ajz2urv/ctId9eW+3nW43z7ZSrRlvxP9d4
Xx1lxf9c9X8bDs9rqz1STmL/vI4+bzWU/fM6qs/iDujzOuy/37fif67+3v0I
fc7v96yD53U0nh73ged1NP4vtYPnddQ+Ncejz+uq/f62Jd9eV3z5Wxee11V9
rtYl315X8Xi7F/q8rtZbKW5b8T/XfN3zITyvq/vlfwjP6yl+BtaB5/Wob1F4
Xk/t/bc2PK+n+gXmQp/XU/vGjUaf19N8NvOaFf9zzefv7qHPud/vWfC8vsqV
feF5fd3PsTs8r6/5ODYIfV5f7TviKzyvr/v1TA3P68Ovu/C8vupX8aIV/3N9
nqYr+fYGiseH5634nyuep4xAnzdQ/e5PI9/eQPHaZRo8b6D6xB+A50Y5j1H+
HGHF/1zzbY7h8LyB6ls8JTxvqPZZuxh93tDr/+/7yP9c389zk/3zhuq/gAHw
vKHi79AH9Dm/LzrJiv+54ufbdfbPG6p/s3rD80Ya73b94Xkj/d7khT5vpOun
yg/PG6n9vg6B543UHi+uos8b6foB8+G5UX5hfN7nhxX/c/Fq+zx43pj87Tj0
eWPdb6MHPG+s9mvpQb69seJh5Bv0Od+/mBueG+U3Rjn0sxX/cz3/sjrwvInG
n0cs59ubaPxPyIU+b6L+H/UP+fYmqq/3a3jehHzSLBv+5//ld+R/rud39IXn
TTT/fluOPm+q/nu+x4r/uda7VSrC86Z63mdb0edNNb5Ht7Dhf672ToiB5031
/GFn4Tnfr38WnjdV/DifRZ83U/8ufm3F/1z1bWVCnzdDX2SH50Y5p1Gu/tKK
/7m+f6Uj5+G43p3k/fNm6u+GwVb8z9VfMafQ5801ngp2IN/eXPPZqCzwvLn6
Z+QfzsM1V/+0Cuc8XHPd/2g+9Hlz8fVQGDxvrv4JaYg+b0G+dTA8b6H+PHgS
nrdQ/1T6Dc9baDwsbgPPWyjea7ZBn7dQe1bORL69heKlSBT75y003955CM9b
6vupW7N/3lL9d2+VFf9z9V8Zf/LtLTW/LjfWz/I/1/VO9SLf3lLxsagu+ryl
5vs0vvC8pdZ728bAc1+VfyS/r+ar9kmxDJ77qn6nR6PPfcmvmtHnlAs5oM99
yQ9HwnNf1feWC/rcV/3TzIQ+b6Xfzw+C5630PGFF0OeU8/nB81aKDy83eE55
dxP0OeVKXdHnRrlg4nzd1or/ueLtdA143lrtm+8T+ry16pu+MTxvrfHrl4r3
z1urPn06w/PW5Cf6cb69teLD3Rmet1Z/1GwIz1srftN3gudtxJcmBdHnbXT/
reP5fzijnCNp/WXF/1zxEZoCnrdR/G/fgz5vo/XHlN7sn7dRfdPsgedtVZ9h
7eF5Wz3/pSHw3Cg7Jy5zw634n3v5vEzU3wlW/M+9fN4njs8wK/7nGj/b8qHP
22o81M4Hz9uqflur2PA/V31m5uU8XDu1b6wHPG+neO1SC33eTvNNcw943k7P
n94DnrfT/Tq2hud83ugV76u1E39TjkSft1f/p/VHn7dX/4WmRp+313jdUgOe
t9f1znWG5+01fy5Mxf55ez1PwnB43l56ZsF+K/7nXj7PjM+rfbDif671y9Bk
fd5B7XM/JTzvoPmmYkH0eQf9fltVK/7nqs/38vC8g+73NQCed1D8dzLK8j9X
fQ/kgOcdFR9DmpFv76j7dfZCn1O25mf/vCP5Hjd43lHje8JAeN5R65lSIVb8
z/X78VXYP++k53Otwv55J80n7gPQ550Uf89irPifKz43u8Jzvn/V0BfyP+d8
kCs876T2mN8Kfd5J8Rjx1Ir/OfmUtfC8s8aXywR43lnx5+ILzzur/Tr/gOed
Vb8Rjujzzpof9x6D5501f2bsA887q77D7tvwP1f+9OJY9HkX3T+Pmf1zo/z0
b6I/hhX/c/Fu+xF43kX1j+9txf9c9/9wGJ530fOfTc63d9F8cnYg+ryr+vtC
D/bPu6p9Dt+14n+ueL9RG5531XioNwp9zu/bLSff3lXz0U8XK/7nGq+bXdHn
XdUetmXwvJvGR4gL+ryb4vFUTXjeTb9v1sWK/7nq8y75fHs3jW+HtOjzbho/
6w39IP9z1beADzzvrvYdcIP98+7qj82Z2D/vrucpEgfPuzMeC9nwP1d/By1C
n/O5aS88Ty5fg+dGOVdie7ax4n+u+D1wFX3eQ/NPgdnwvIfiLSEAfd5D/Zdp
ATzvofq9TYc+76HxNnI+PO+h9rhbC573EE8WG3yQ/7mXT17j89xGWf7nWs9M
/wvPe6o/al+C5z31+y5z0ec99fwvXqHPe4rPUcn/D9dTzzc/Dfq8p8ZjQGF4
3kvfz9bEiv+51q/VX8LzXno+30LwvJfaJ2YW+fZems/uj0ef91J7TawMz3sp
fi8WZP+c+4VVgue9tb48Vc+K/7k+v52LfHtvxd/VCHjeW+1f0pt8e2/Vp2gE
+ry3xmPwKCv+5xpfY7awf95b81/VT1b8z/87Lyb/c9V33Wn0eR/1354/6HM+
32rwQv7nGg+nh6PP+6DXpqLP++h5VjaD533FswAP3lfrq/ayawbP++r5cmxE
n/dV/O6cTL69r+43JAx9TjlhPTzvy/mlWCv+55xHzQbP+3EetSw876fxf3gd
PO+n+0U5wvN+igebwQv5n6s/hlbkfTWj/CRxPTbIiv+54q3SWnjeT/df2hd9
3l/t59MQnvfX/FjjPvrcKMcZ3y/9zIr/Oed5MrN/3l/91Wk1+pzys+T31fpr
vOw9gj7vr/km9yZ4PkDt4+YGz41yPuPzyIFW/M81f7erhz4foPEZ+8WC/7ni
a5ibFf9zfZ5uPTwfoHisuQJ9PkB8isoAzwdqvmvrasX/nPVmFng+UOP/5y30
+UC1z/5l8Hyg4mN4bXhulJ0S2ycSng/kvN0B8u1+nJ9Phz73U//H3rHif67+
+7cEPPdTe48eAc/9FM++LuhzP7XvuX3w3E/jw3EZ+tyP9chSeG7S9S/fsOJ/
rvY/2xmem/Q8HRaRbzeRj03P/8mYxJdWb9HnJsVrt07wnO9vvALPTYq37Knh
uVnjy78jPDdr/gy5jD436/kOVUWf8/mp1/DcrPbLNheemxVP31LCc7PG86FX
8NzM+yuF4blFvz/ZDp4b5QLG5/taw3ML58WqsX9u0e/dQ+C5Re3b0hl9btH4
cc8Nzy1a761sw/65RXrgt6MV/3PFa8EYeG5V/2TNB8+tqt/6s+hzq+bLZynY
P7dqPdvlpxX/c32/9jP0uVXx3DIPPLepva9XQZ/b/ltfyv+c8zSV4LlN8bG0
oRX/c7XniwR4btN81G2cFf9zjdevn634n+v+EXmS/c95H2sTPPfX/VNX5Hy7
v+bj1XWt+J/r+8Mykm/3V/zfLo8+99d4dPSD5/5q//iT7J9z/ZoD0eeD9P0V
5dDngzQ/fWrCebhB+v17N3jO55450eeDFI95v8PzQYqPZsfR54P0vHa7rfif
e/m8Nr6//7UV/3PWi2vQ5/9qfsmcyor/uZdPjPH9tXZW/M9V3zTj4fm/0t+v
vOA5v7/eB57/q/YrN458+7+an0Z9hueD1b/d/1rwP1f/PYqH54O1vs62lXz7
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
xP75Rumjpcb6Xv7n2k+t/MeC/znnEwbB8016nlwVrfifS08emGPB/1z1qzMD
nm9SvL9rA883aT3a6Aw836T2ruWFPuf3f1LB802Kv2XtLPifq3+HWMm3b5be
m9LWgv+5+utHGPn2zap/sB3n4TaLJ42cOA+3WfWzq8J5uM2an95/seB/rudz
WWzF/1zzYTZf8u1biKdL8HyL8gn2Uyz4n2s8jM8Hz7dofh1XAp5v0f1+d+E8
3BY9v7MfPOd+aybC82DF17m58DxY8dF0LjwP1ni8O4B8e7DiIXIc+jxYfKtf
EZ4Haz1bODc8D9b6cLHBA/mfq75vx5Bv36p4jX1jwf9c5bLG5/I/l17stB+e
bxWvl0634n+u9jj72oL/udYTGx+a8T/n/cAV8Hyb+jt2Dzzfpv60tkKfb9P6
IS4enm9Tf+ysa8H/XPN1nywW/M8Vb2mXwfNtWr+tiTTjf877uQYv5H+u+fhL
LQv+55p/CveC59s5T9aT/fPtWn/XqGnB/1zxeCgD+nw77+v0gOfbNZ9GZkWf
b1d/BJaG5yFqv+sO6PMQff63FPo8ROuF8C3o8xC1z/Xh7J+HaD27tCo8D+H8
Rjd4HqL59vVI8u1cf84D8u07NF/s3mjB/1zPO7Q2PN+h+TlHV/LtO7R+b+QJ
z3coHureQ5/v0H5Xoefk23coHl6GcL59h9rrnaE/5H+u+m6piT7fqf547MP+
+U6Nt6sZyLfvVPt/+WPG/1zzabYa5Nt36vqP0nEebqfmjyoGj5J4vkvz84D0
8HyXnt9pkBX/c/4Pqwj757vo/z4W/M+1nl65DJ7v0v2qzyTfvkv1OXUPfU45
zw8z/uca/68jrfif/3e+Rf7nmr++3IXnu3m/1w59vpvzpsb6Wv7nau83a+D5
bo2H2wZP5H+u56nwxYz/uXh2PTX753u03vjUH55Ttq204n+u9UZeC/p8j9oj
6Do8p3zQiXz7HvH/Sjn2z/co/mNN6PO9isf5JvT5XtWvkgme83mK/PB8r9rj
tTH/yv9cz19vpgX/c8XL8Insn+/V+OtdCZ7v1Xzx5YAZ/3PFb/Xp7J/vE69G
ucPzfeJR5Dn0+T7NBwOboc/3ab17cB4836f52XMe5+H2sb55Zcb/XOOzoZMF
/3OVu82B5/tVn4M/4Pl+8vdx8Hy/4qebCzzfr/Xb6AnwfL/ap8dM9s/3qz/i
21nxP1f7Vt5pxv9c4yEyNzw/8N95Zvmfiz/Hm1jwP1d9Pj0x43+u553cGn1+
AH3cmvNwB9Qfexugz0M1vhsHwfNQ6ZWmTuTbQzl/9xKeh+r+B+LQ56F6ntL5
0OehGn9L85JvD1V8NcmGPg/l/cK65NsPKn6X1IXnB8nnZWX//KDul/8N+faD
Wi+kaWLF/1zjc8sT8u1c74DBE/mf6/kuZIbnB/V8be6a8T/XeAvKaMH/XPHV
5AU8PyR9sLo4PD8knlf4F54fUv+kuGXG/1ztmyadBf9zjfeU/vD8kNaLTzOj
zw8rv/AwkPNwhzW+Nz1Gnx/mvPF6eH6Y//fZCs8P875WRvLthxV/zYPJtx/m
/eD28PyI1s+V/7Xif67PX/ujz48ongrcsuB/rutv92f//Ija6507PD/CesjQ
A/I/V//s9mb//Ijm06le6POjao/Xxnwv/3P0t5n986PKNy24gz4/qt83TmXF
/1zroeoeVvzP1R7XC8Dzo+JRjZ9m/M81P/RcbMH/XM838rQZ/3M936i/FvzP
xYuHyfr8GOuja+Tbj2l9kvc8PD+m+a5afnh+TPEddQWeH9P423XSjP+5+qf+
L3h+XO35Ki88P877Be7w/Lj498OV/fPjul7H0/D8uNo/02z0+XGtH6cfNeN/
rniN/grPT6h/rC4W/M9Vn6tF0Ocn1B5fJ5rxP+d95C7oc36fcy48p/zAkXw7
5WeNOA93UvV9O8uK/7n629wbfX5S/evXCn1+Uuut+Pachzup/n5VhP3zk1qf
bneA5yc1fiq3tOB/rvWHX1vOt4dp/g05iD6nfMQZnodp/ZPHGZ6Hsb8/Dn0e
pv4NLwDPw7R+b3YEnvP5pmzk28M0/158ZcH/XPNhnCP59nB9/0hW9s/DNV/Z
Qsz4n0uPVG9uxf9c81u97Wb8z9UfG0aiz8Olj6bsh+fh6v+V0Wb8z/U88cFm
/M8VD7lzkW8/pf65Yg/PT+n5lryA56cUj8f+NeN/rnicvtmM/7nGyw0feM71
GwyC56fFB7ti6PPTWn88HWLB/1z9PbAG+vy02u/MYPbPT+s8VoDVjP+55td5
1dk/P634nZqF/fPT/B/kIHh+RuN/TTv2z88onqqkt+B/rusPCuY83Bnp63Hp
2D8/o/VduBWen1G8BG6G52f4f6VB8DxC/TPjPvo8Qtfb7c/+eYTa130j76tF
aH0zKC36PELz10cP9HkE57E80ecRiocbdhb8z7V+qO7F/vlZPf/51PD8rMZH
sQHo87O871iAfPtZ9c+Z1fD8rOKppwc8P8v7GYvN+J9zXsQu2f9c43ddZfLt
53Q/h5Tk28/xftgK9Pk5ra+K/Dbjf6751a0iPD+nfN/as2b8z6U/h/ZFn5/T
fJeuAvvn58TnZmU5D3de8RN0Hp6fV/4xoDc8P6/rvylDvv087xv/4X2187rf
69zo8/Pqr3nJ+vy85rd/u8Lz84qHlefg+QX116oy8PyC6nO3M/r8gtq70Bx4
fkH1O2nM3/I/5/8OHcm3X+B90BPo8wvi9445vH9+UfH5tq0Z/3PdL6YT+vyi
1jvLv6LPL2q8RE1Hn1/UeDa3g+cXxecRRa34n6v/57xHn19UfbLHw/NL4u+l
5PNwl7R+2toWnl9Se9U/Bs8vSR8Xf48+vyR9+u0Q+vyS+OBUF55fUvy0eku+
/ZLGW8sJ8Pyy+jN4LDy/rPrMa2rG/1zXv/safX5Z9Z+z14z/ucbnthdm/M/Z
79xjxv9cz2OKMeN/Ln6cCoLnVzSfBOzjPNwVXW+hPTy/ovo2tofnVxS/h0eY
8T9Xf08axf/JXFH9mo2E51eU3xnkYMH/XPE5KyP751c1X1wOgedX1b9pQuA5
n2fbBs+v8v9ORdg/v6r2qhxlxv9c8Z45K/n2q9JLIwIs+J9L7+Sqij6/pnjc
sMWC/7mu388bfX6N//veZMb/XPNdsULsn1/jvLYzPL+meF26EZ5fU37pSUZ4
fl3xnjst++fX+X/b6vD8uurrVTDZ/1z9990bnl/XfFPUYsb/XPfrYLHgf674
jPuHfPt1zYc3TOjzG/y/hRP6/IbmuxVp0ec3NB/8qkK+/YbuF7fKgv+5+jPA
A57fUPyUqML++Q3pg/upLPifK94yJufbbyp+xl2F5ze1fhiSEn1+U+uNnFfZ
P7+p+vQw1uvyP1f7d+6HPr+p6x/qy3m4m+Jzlb7sn99UPP36A89vaT6IKM/7
are0ft2cwP75Ldbnxvpe/uf8H18u9Pkt9WfN3/D8lur3oCz59luaL84uIN9+
S+uT3Gc5D3db67sfZdDnt1X/xt3N+J+rv2bNQ5/f1nx29jT6/LbyMeu7wvPb
it9ap8m33yaf8s2M/7nK88LhOeXendHnd8SzEbPN+J9Lv7t0Qp/f0fqmzyz0
+R31f4N4C/7nqk/8R/T5HdX/VVHy7XcVz72KmfE/1/rqYVEz/udqr4bH0Od3
xZMF7+H5XfTQe3h+V+15qS08v6v50zvOjP+5vj+zFfn2SM2fpZ3heaTGy7tC
ZvzPdb/hk+F5pMZ/5tZm/M+1HuqWmffVIvW8eQ7A80jN976v4Hmk9N+WCejz
e2pPx5fk2+/xfyVOZvzPtR7ZEWPF/xw998qM/7nitdYLC/7nWl9XHsX7ave0
fsiZkffV7mk/JqfBA/mfq/82O8Lz+7pfMYMP8j8Xz1M1MeN/rv4JbwjP7yve
j+0y43+u++fdYcH/XP2RqQHn2x9ovH10hOcPVP/tT8z4n/P/VTnQ5w80Huob
PJH/ua7X6R/Owz3g/56j0OcPNB8v2A7PH6h9K9yH5w/F2xMPyLc/1PN7ZuU8
3EPOCwWa8T/X+K9mlOV/rvoWe2jG/1z377bJgv+5+LLeiXz7Q+mVI+v4f7go
rV8+piffHqX4CVjL/nmU+LzS0CPyP9f91pjR51Ean6lvo8+j1P4bb1nwP9d8
PWUV+jxKz1P/DjyPVrz3WQnPozl/5cH7atFqn7qp2T+P5v3fVOjzaPGpZ394
Hs1502Xk26M139jSoc+jtV44s9qM/7nGe+PU8PyR+nd2Knj+SPN3CqMs/3Py
SefQ548UH7nc2T9/pPlv+RJ4zvXGLyff/ljrv8UVLPifK/5WLzPjf6742Fce
ff6Y+nxDnz9We+3vhj5/zP/xduN9tcf/vR8h/3N97lCRfPsTxUfKPmb8z5Vf
Od7bjP+55lfXMPT5E/Vnn15m/M/Vf1PLwfMnar9npeH5E61X/N3M+J8r/hyO
s3/+VM8z8xj750853zENnvN5m3bk258qPtvMZf/8qfhVqKMF/3ONv3Glzfif
83/upcz4nyvei4ahz59pPnw91YL/ufhb1Rl9/kzPO/adBf9z/b5xCTP+57r+
kBno82fib9fJ8PyZ5rMfL+D5M623srdm//y55qs1+eH5c60vZoWiz58rntpl
RJ8/V/y9zcv++XPFx5bxFvzPNT4fGTyQ/7niqVdj9Dn3e58bnseoPecavJD/
uda/b3ORb4/ReiywlRn/c8VPeFPOw8WovzLkg+cxql/a3fCc8p2h6PMX6q/g
ceTbX4gXrwyeyP9cz99xB+fbX3D+z9AL8j9XvL1Lw/n2F+q/2sPh+Qs9780o
9DnfT5WGfPtLzRfXhnIe7qWeZ9Eg8u0v1Z9/a3C+/aXWm6temPA/1/dn1eF8
+0v1Z/RmzsO91PzyOxqev+R8elby7a80X5QdbMH/XO27NAqev9J4a3yX/fNX
Wh/8OxSevxJ/o2+Tb3+l+oz0hOevNN4StpjxP1d+oMgK3j9/rfX4wc1m/M+1
3khZG56/5v88a5nxP+d8ey14/lrz1bdr8Pw1+3/J+fbXav9uPmb8zzVfD/Bj
/zyW9+/Wm/E/5/89FpJvj1V/lUyLPo9lf+E7+fZYtde/5ci3x2p8nFqDPo/V
+I34ij5/o/a5No98+xutV2+uhud83voL+vyN+rO7K/n2N5z38TLjf675aPk5
eP5GfAn2hOdvNH/GrjDjf67xH/WXfPtb5bu2GvO//M95P+SMBf9z/t8hjnz7
W/FyQmV4/lbjc0d3eM733xez4n+u9f7obujzd2o/uyXo83dq/xVT4Pk79e9c
F/5P5p3mr8EnOQ/3TuNlxSTOt79Tf59YgD5/p/77Mh99/k793ekY++fvFV/+
4+H5e8XXnvacb3+v9oxzNeN/rvWnw2f0OeVRTvD8vdr3aX54/p7/Ay4Nz99r
vXT7IzyP0/zTdRT753H/zb/yP9f8sbAVPI/T/PjV14L/ucbrrhLo8zj2D0aw
fx6n+Sx+Gjz/ID54DCff/kHxenEqPP+geAnNyfn2D6z3i6LPP2g939EBnn9Q
/1mM+Vz+55rv6yXvn39QPAfu5DzcR61nvjUm3/5R8Tv7FTz/qPnseyML/ueK
l1aN0OcfVd8Tg8i3f1T/9jtmwv9c4+t0A/bPP2r9njkzPP+k7/96bsb/XPHm
ZQ/PP6m/7J+Tb/+k9V31TOTbP0k/93FCn3/S/WY8heef1L/766DPPykeXZ/A
83jyt0Ho83je79jI+2rxGn+3BqLP4/W8X2qiz+PV/oMPmPA/1/hwS8t5uHj1
X3pjvS//c9U3vh/vq33W/Lpmnwn/c9V3t6En5H+u+BuzxoL/Ofn+nGb8z6U/
B62G55+1fvu024T/Ofr9HvvnfO4QYMb/XPN/j10m/M81vppnR59/0feju5Nv
/8L/vSbA8y/SlwXDeV/tC/UbZMb/XPGS/rcF/3ONT9MvC/7nmj+8tpvwP+f9
9Rvo86/kU3+gz7+qve3s0edf1Z/VjrF//lX9F/0Nnn9V+7f6hj7/pvlkzFX0
+TfNt9Xaw/Nv+OF8QZ9/0/hMMNb/8j9X/afMheff1D9lB6LP+X6bOZyH+6Z4
vpbWjP+56mf5CM+/qz6RaeD5d8WHUxl4/l3rpc+p4fl31XflOfLt38WDkqUs
+J9rfklojj7/jr9nc3j+Q/PDvrfk23+ov/8a61n5n+t5qqSE5z/Uf5dPw/Mf
as/mxeD5D/H32F8T/ufSl0V7wPMfer4V4ejzn/x/wyTOw/3U+BoYhj7/qXgN
bsD75z+1vqvV1Yz/ueq7c6kJ/3O118fO8Pwn/5dw3Iz/ue53uSDn4X5pPo6v
Q779l8Zf9Trw/Jf0zd7R5Nt/Sf/PcCLf/kvzxb1R8PyX7nfiMDynPPsR5+F+
a77I2R6e/9b9O/iQb/+t8Ttuvgn/c83P46PIt/9We+4Nhee/2S9pY8b/XPPp
79bsn/9Wfe9URZ8naLzEtoLnCap/v6Hsnyfo+TesgOcJut/NSHieoPFu/8GE
/7muPyHOhP+5+jfrMvR5AvPvexP+54r/ErvN+J+LRwvemfA/V3zfysb7an8U
X8cGcR7uj+J52032z/9ovhjqDs//aL69GALP/yh++4fA879q34ApJvzPxefw
Rmb8z3W955ng+V+Nj3VmeP5X/fnkpQn/c81vHd3g+V+td0zGej+J5ym8k+r7
2hWeG+XE5/uwGZ4b5UTeri8Dz41yUr6qLjw3yonPE9qf83BGObG/F2+E50Y5
6f+zjbL8z72Txt+/5+B5Su8kPWvqC8+NcuLz+daC50Y5cby17gPPjXJiPD46
A8+NcvL7bPI/906KL+dH8JzfL6qBPk+p55t2iv1zO++k+Nqdgv1zo5zY/sWM
svzPvZPGV6ERJvzPvZP0xpEHJvzPVZ8OJ9HnRjkp3+1Mvt1O7WHvzP65UU7U
T4N/w/NUuv+J0ZxvN8qJ/VVhmRn/c7VX0FH0uVFOXN80CjDhf+6dNN8s8ECf
G+XE9eDD7+yfG+XE8XQpL/o8leq/cRH59tTeSTxtfAuep1b7R+Ym355a7VUr
N+fhUqu+226Y8D/3Tppvu7WB50Y5kTe956PP+f3JefDcKCfqv+Wt2D9P452k
t3Jcg+dGOen9tBzoc6OcGN/ZB8Nzo5w4njO7mfE/906aL39kg+dGOTH+l+5C
n6dR+zzOij5Pq/7qdMmE/7m39kuakW9Pq/46NgOep1V/pL5owv9c8XXUwv+9
plX7/WOB52n1POvPm/A/V/xnMMryP/dOmp8Cz5nwP1f89+xnwv9c4yvlVnhu
lBP5WXwKPDfKSf9HEQzP+bzLFvS5UU7U4wMmoc//0fgIroc+T6f2LT/RjP+5
4vXZc3ieTu2Xsi/n4fh+0AbOtxvlxPnTfQP6PJ3a72Eq9LlRTlyP5E8Fz9Np
/mhoB8/TeyfxvedaeG6Uk853j0afp9fz9XsEz41y4vzbvQA8T6/nKzSK83Dp
1b+D/6DP02u8DKjG/rlRTlxvFcwPzzN4y6/ziAn/c7VfqDf75xlU/+O/0OcZ
VL/mv8i3Z1D8PjgEzzNoPFT7Sb49g8bnSE/y7Rk13uIjybdnVPxUyY0+z6j2
velBvt0oJ/LNeTE8N8qJ669GjujzjIrfuW1M+J+rv34t4H21jJrvJrjD80ze
SeuP4g7wPJN+v/cm+jyT2rNlDvLtmTTeju4x4X+u9vM2yvI/V3u8aWnC/9w7
iZfFyrN/zudj56DP7RXPI4z1uvzPxYtes+G5ve7fx0q+3V7xePEK++f2ml+C
MrN/bq/2iDCjz+01P2e5jD631/y96BL59szeSfp3byZ4bpQT1+fH/cz4n6u/
xk2D55k1v7hkRJ9nVvwuz2DG/1ztMTH5fbXMet4fL9k/z6z7j5nMebgsev5h
Z834n6t8LwZ9bpQT1y/mCPbPs2h82W024X/uncT/FEXJt2dRfF801rfyP/dO
yh86j2f/PKt3kv6ZUxOeZ9V4OlTHhP+5nq+nsb6V/7mef0NtE/7nun4eY30r
/3PvpPzT7YK8r5ZV8/mYtSb8z72T1k+lRsHzbOoPp5om/M/Vv+WDLPifK94L
OsHzbJqf9nYh326UE9fHzUfwvlo29ZdPAjzPpvqVH44+z6bnuVTNhP+55u9U
ndDn2RVPHkPheXbNz5sD2T/PrvYp+BOeG+VEvd4sFzzPrvm7cADn4bKrPfyM
9bz8zzX+Xudk/zyHxk/VnOTbc2j8n6hiwv9c/fPQWA/L/1ztsX8RPM8hflf4
gj7PofrP/mzC/1zfP3PVgv+56vswK/l2B91/gTs8d1D7RpWB5w4afzkvo88d
xCNzZs7DOWi+uLuD/XMHzdeDm8Nzrn/Jj/1zB81nH2ab8D/3TsovDW5Kvj2n
1gPf3Uz4n+v6LZuQb88p/h1vDM9zqn5OW834n2u+9n9jwv9c4+tWQ/bPHTU+
PRqSb3fUeMx2Gp47ar6wawDPHdUfTTeRb3fU/ODdi/Nwjqp/QBj5dkfxIHwy
PHdUe4asN+N/rvE5PAae51J8zS0Oz3Opf3Y9N+F/rvr+a6wv5X+u71/sCs9z
Kf5DjsLzXBqfVY+iz3Pp+daPN+F/rs/LGGX5n4uHaZ+Y8D9X/X9XZ/88t+av
hYVN+J+LN7eqoc9zq39ejjbhf671zcUDFvzPVf+9DvA8j+Ln0EMT/uca/7Xb
os/ziA9dveB5Ho3PKE94bpQT89OTPOF5HsV78b3wPI/Gd9v7JvzPtd54sZt8
e17xzmUR+fa8+v3ehejzvHrem5XZP8+r+h9agD43yonT5v1K7J/nVf/X+4Q+
zyt95D0ffZ5P8ZnqIzzPp/Z+URGe59N6IsRYn8v/XOuXDRXYP8+n9oxpgj7P
p/lsSHkz/udqj+GDTfif635PcprwP9d4udKI/fP84kWGt/A8v/o7Og3n4fKr
f8uUZf88v9pnsyv63Cgn5sOyXIXn+TWft7hiwv9c431RNhP+59IHr9Zb8D9X
+3401tPyP9f3O06B506aPyKM9bP8z8WDdpPhuZPWT6/XsH/upPFQeg3vnztp
vVX/GTwvIN7d8uF8ewHFV/5i8LyA4nH1ABP+59Jbmc+a8D9Xe/Xub8L/XPPB
XmP9Lf9z9feJaPR5Ac03kd/geUHpgf5R8LygxuvZJfC8oObnLP+Y8D/X85R3
5n21gmqvQ0Hk2wuqPXN7sn9eULybkQZ97qz6uRpl+Z/r81ILOQ/nrPZ93sOE
/7nmgwPzeV/NWfNFu0roc2fNVxvc4bmzxs+yO+hzZ/HJ7pgJ/3PN3ylSwvNC
er7APOjzQorfiQFm/M8Vnx9moc8L6XqlhrB/Xki8yP6G/fNCat+yg9HnhdRf
rQ/C88Lqz8uD4Hlhjc/KrvC8sNrzTXv0eWGN5w8//fA/1/xhsZFvL6z6R8XA
88JaD9csRb69sOKtX1sT/ueaz7p998P/XOPRrw08L6L6NTTD8yIaTxOzsH9e
RO0f9tUP/3Pp8Yd+6PMiqt8re/Lt3C+wKDx3Ufs/duF9NRdd79RY9s9d1B7F
jPW4/M81/5wZA89d1P7tW5jwPxePbBnguYvGe5l+6HMXzU+rH6DPi6o9twTx
fzJFFV+7wsm3F1V/jdtqwv9cZds98u1Fpc/Tx/nhf6757Wsa8u1FtZ58fAKe
FxOP25yA58XE7yv54HkxPe+Fhib8zxX/nwLJtxfTfPdiown/c43XOkZZ/ud6
3qcpzfif6/m6d4XnxaU3QnKxf15c8/efzpyHK+79//9zkP+5xmfoSz/8z8XP
LIPgeXHFd39/eF5c68kVNnheXP1Z+zc8LyE9cG8VPC+h9vu7D31eQu3T2EK+
vYTmjwXJ/w9XQuOhSFb0eQmtTwOzkG8vofa88cQP/3PF68JvJvzPxY9S3+B5
Sc03TzPB85Jqj8/9Od9ekvzVDnheUvF321ivyv9c8V25HzwvqfYv1oJ8e0mt
dzt6mvA/1/g8XwV9Xkrzy5sFJvzP1R7xyfvnpXR/z17o81Lqvzwf0OelNJ+3
ijPhfy4+jalkwv9cn4/eDM9La/yPTWXB/1zrvcnd0OelNT6H2aHPS6s+7Tai
z0uLr50awPPSipe8b+B5afTcLHheRuuhsHro8zK6/v518LyM4ntkKPvnfP9l
HXheRuvjsJfo8zKK9znT4HkZjQfbavLtZRRvpV/Ac1f1944Y9Lkr+bSVnG93
VX+1nmLC/1zje1BpeO6q+F7zjHy7q/qvR2t47qrn/7kMfc7v7Vqxf15W8Xug
Gvq8rOJr2QTy7WVVv6wT4HlZ6efxS9DnZcX/TMXheVk93+wLfvifqz2WNEef
l9X6Yc4n8u1u4l+zZpyHc9N88DAYnrtpfM8dA8/dNB87jEGfu6l+Q0eTb3fT
/b8Y62v5n4sP9Tejz8vp983uw/NyrAcrkW8vx3o3CJ6XUzylqkS+vZzWE41H
mvA/VzwtGGHC/1ztbTcbnpfT+LbegeflFU8nneB5edXv9hr0eXnxwVIHfV5e
93szHX1eXvGwPZ8J/3P11+Mb6PPy4mNQXhP+57p+mCvn2yto/lqex4T/uerj
YpTlfy49Pjk3PK+g+7/LhT6voPbub5Tlf676HKwGzyuoP6sPQp9X0Hi6mxOe
VxQPj5Zg/7yi4rfEYvbPK+r+rcbD84qKr4M50OcV1X9bLqDPK4pfaS+gzytq
vvoxH31eUf0X5gHP3TU/OnnAc3fNV677/fA/1+duldHn7hpP2wqzf075dhD6
3F39lTkL++fuWo+2jITn7prvip1Bn1fS/NHyLvq8ku43vgLvq1VSf7TtD88r
wYvb6PNKGk8Hw034n6t/tt2C55X0/Mvd2D+vrM/zZSDfXln3j58KzyurfV0C
0eeVNd5uToHnlRVPUWXQ55XVf4O2++F/rvVI/uPo88rSd0GD4bmH9FmBY+hz
D80/Pv/Ccw+N1zZb/fA/13zapzvn4TwUb75HTPifq312XWL/3EPj9VNXE/7n
Wt/scWD/vIo+n2Al315F7ZnZDn1e5b/8nvzPxe9ToejzKhovWYyy/M81X945
y/vnyd/vaML/XOuP5vvhuafqs+yPH/7nat+4EfDcU+Ml7xn0uaf6p7axnpb/
udrjVwH2zz3F68LGelX+56zPhpJv99T4yeOEPvcSf8aEoc+91J/XM6DPvRR/
rU6iz73YTzDW2/p7LukJ51bw3Ev94ZWHfLsXPMhNvt1b/HLqCc+9Nd/3zQXP
vfU8RdKa8T9X/DU6gj731v3+dIPn3tKLrQ/Dc66XPTX7595aHzke4jxcVbVH
709++J8r/s41MeF/znowlHx7VfVv0Cby7VUVLw83wvOqmj/rZuU8HOWixnpa
/ueK99vz/fA/1/o46wD0eTXV/+seeF5N/T1qnh/+59Ij7uvgeTX115a5fvif
a7z17wvPq2m+aZsRfV5N60u/OX74nys+fOua8D9Xf+xPz3m46szfOzgPV139
Pag2+ry64uNvLXheXfH87SU8r671s6OxPpX/uebX9GnR5zU0nt53g+c1lG/4
18eE/7nu/7YGPK+h/ij3GZ7X0HovYzP0eQ2Nr0rV4XkNtX/cFD/8z9W/T5/6
4X+u+u6sSr7dR+PBWhWe+0hvzjTW3/I/V/0ubyDf7qP2ftqQ/XMf9OoC8u0+
mt+/eMLzmtTnN+fba+r+8WvR5zW1HihbH31eU+M7YQ08r6n+b78GfV5T9Q15
6If/ueJx+xx4XlP9vXusH/7nivfcsfC8lj6vUQme11J8113JebhaGl9TanG+
vZbqEzITntdS/0VWMOF/zvUi/fA/V/+nqwDPa+v7tiD0eW193jue/fPaql9r
Yz0s/3PF94Xbfvifi+eZ3OA55SVP4Xlt8SFVWRP+56rv6IbwvI6e5/B7M/7n
ip+67zkPV0f9fag+PK8jfjarjz6vIz6ufAvP62h+aj4BntcRrzIF+OF/Tj4h
lvNwdbW+M8+B53X1/Uuz0ed1FT+Tx8LzuuJXBaMs/3PF/8D78Lyu1lPLKsLz
uqr/7qIm/M/1/B9HwfN6io9r5TnfXk/1uVgEfV6P/OAz8u31NB9NmMp5uHpq
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
r3HnOE9mgvxHmBHvSv+c/acnyLdPED4kHQaeT5C99csCnk9QPFHQxnkyEzT/
xhd2oH+u+d27L/VwE/HHbuxXmyh8sPch3z6RetIA8u0TZf/zhtvRP1f8VnEs
/Hwi+8nOgOcThfcjc7F+Pknz6Utm+PkktdcvM/Xtk2Tvo6+B55NkL4l6Ug83
Sf0TeoT180maPysG29E/1/wPCoCfT5I9e2Rg/Xyy8MK7C/n2yRrfQnlYP5+s
+Kn0ZRv653p+goJ29M81XuvSkW+frP4tv4t6uMnyV42K2dA/V/++9GP9fAr9
sYP18ymaX0mK2tA/Fz/9EQA/nyK8rZbXjv658PbpIQf658ILkwM8nwJfzWNH
/1z93boH6+dT5V+ic4PnU/X9BXaxfj6V+p79DvTP5d/SWcHzqcqfpP1LPRzX
45KSb5+q8RlnxLvSP9f82xrB+vk06mmc6+fTqDdzBc+niX/mdoWfT9N8350e
PJ8Gn0rO+vk0+Pd36tunaXyOrGb9fLr6y5oFPJ+u+LJKY/afT9f37fADz6cr
HzSiA/Vw0+W/V3cl3z5d/VP7qA39c91vsj4A/XP2z/pSDzdD39vIBD+fofYH
74Gfz5B9VN1Kvn2G8Ge0qx39c9l/WF2n/rnam2oL6+czNH9W7LKjf67+LtKY
9fOZ4m+zGsHPZ6p/ozY60D+XvbWx2dA/l3+q3wE8nyl/8+4X6+cztd4x34v9
5zM5v6E+6+fB6o9UFvLtwRrfHF3s6J/LX6z7AD8PVnwb3QY8D9Z4/0oIngfL
nr61dqB/rvm7Zg759mD58yNfybfP0vP6hLB+PkvzwWbEi9I/1/eWjCPfPkvz
sZMLeD5L7U/xx47+ud6XbCd4zvNLfoaf8/yTzamHmy378GlPvn22/EGKMPB8
tvKF+z6wfj5b7TnSlPXz2Rrf6+E29M/1/67fwfPZsm+vOeD5bOF7znfk20N0
na42+fYQxWNZWpNvD5F/fZfChv657HVvHPw8RHiVexb8PET+rdhE9quFyD7c
k9vQP5f/OutiQ/9ceHS+GHg+R/bWcgb8fI7ih3r1Heify56KdLChf67+GVSV
fPsc9U/eMexXm6P+jl1qR/+c/jTiP+mfK77yrAw/nyv/ZK3tQP+cfLQRf0r/
XM/vM4L69rlq/8earJ/PVftKPIafz5U9z5tAvn0e8UwNB/rn8qeJ3ci3z1P/
52pAvn2e4qGFL+3onwuv6p5j/Xye/PnC+Xb0z/X/yvPh5/MUb4WcYf18vuL/
XwOoh5svvEriDp7P1/f0LA2ez1d/ranMfrX57F+fA57P/69+Xvrn8h9lK4Hn
89Vf6yrCzxeoP69MdKB/Ln92I9SG/rnsKetj8u0L4IdvbOifyx+m/WZF/1zz
0TGE/ecL5C+SjGe/2gL5t9ZG/C79c/V3UIwd/XO1v0VZ8Hyh8K7jAvB8ofzL
DQf71RYq/rt2ADxfKHuJ7g8/Xyj+Nzob+9UWyt57lnagf07+554d/XPq2y/B
zxfJf5WzUt++SOP/tRJ4vkj21K4P/HyR8OmrEY9L/1zjXa0E6+eL5e86uoHn
izW/3gylHm6x2pu5tg39c71/QQ/y7Yv1/ro3WT9frHjwc7AN/XONl8cNO/rn
nLcQwH61UPmPXuXs6J9rvl10gOehspetZVk/D9V4HswOPw9V/96IBM9DZZ9e
D2zon3Meymg7+udqf8l97FdbongmNgv59iXKR560sH6+RP4x9Qsr+ufEz/ds
6J/Lf/2OsqN/LvxyKwU/X6L+f+fCfrUl1f6nbyX9c43/vt4O9M/Vf1uGgedL
5Q+uFCffvlR8s0Fx8Hwp542ct6N/znkmt+DnS2XfNROTb1+q8RqbCDxfpvFp
EkA93DLhs88gO/rnypelz+FA/1z+4H1q6tuXab7s/cv6+TLFO9l8qYdbJn+Q
zIi//+F5mPBs81XwPEzxf5+U8PMwtW9JGRv658KTSr84TyZM/be+L/n2MI1X
zp/sVwvT+yespx4uTPbd8Lgd/XPOc7nE+vlyfV9wkB39c31/mozg+XLO/zkK
ni+Xf9p014r+ucbvWi87+ufC9+YNqIdb/l++TPrn8g+XtsHPVwj/Tx+yo3+u
+X53Lvn2FfqepUNs6J/LvsschJ+vkD/KGwCerxDfCAjh/PYVsp81YeTbV6o/
thSBn6+Uvw+fRb59JevfhcHzlbKP+7+ob1+p8fo8k/PhVrJ/95QN/XPZw9hr
VvTP5Z/vG/Gy9M+FF2mbcJ7MKvbvnrShf67+6bkbfr6K+udk5NtXqb/9qpJv
X6XvfdsAfr6K89Laws9Xqf93ZrCjf855PF7g+WqNf+Uv4PlqzZeJRjwm/XP5
n0Zu8PPVel9Eejv655r/rXvBz1eLH+TYZkf/XPiwoAL1cGvYHxRuR/9c8/3Q
bOrb1yjeuhlGvn2NvmdxOfB8jfrzwhbwfI2+51Ew9XBr5H96vIOfr5U9zXLY
0D/X8267k29fq/k4cwZ4vlbxwv2NrJ+vlb/pG0p9O/+PPG1F/1ztbz6N/Wpr
ZV9eKezon6t/K1Qj376O/ZMW8Hwd+3ks8PN1Gn/vO/DzdeIjEUb8K/1z5UsW
mcm3r5P9bk9mR/9c/9/Qzo7+ud5XJRl4vp79/W3t6J+zvlKR+vb1sjdzJtbP
17Of0t+G/rnae8GID6V/LntIuYp8+3qNz7KC8PMNal/e1uD5BvmrJQWob9/A
+WjlqIfboPgwajl4vkH9fXk0eL5Bz3/gzfr5BvmjLkZ8L/1zxTeNy4DnG9mP
GxWA/rni//K92K+2UfFX9y029M+pR/dl/Xzjf/lD6Z/r/Rl/k2/fqPaXuQc/
3yT/ur8a/HwT9mJn//km4dXvDTb0z+VffBbZ0T9X/xYZTD3cJvVvjhd29M81
P/ZY4Oeb5N9ijHhf+ufqvzPP4OebZY+eZurbN8ue5u3iPJnNav/LOPB8s/zx
DA/4+WbZz/eMrJ9vlj85UoF8+2Z9r28F+PkWxRvV2trQPxcenA4Bz7dwvlc+
6tu3yL+cbM36+Rb539WJybdv0fOHP7Sjf674x9WIB6V/rvbcOUQ93Fb1z3xf
+PlWzc+I9zb0z+Wv3njDz7lOOgJ+vhW+kIr9altlL1dTws+3qn+nTyffHk49
0F8r+ufkI414XPrn7Ef4Y0X/nPyEDTwPV///qAaeh8se9my2on+u9ri3g5+H
Kz603wbPt8lfv7llR/9c9tyzCni+Tfa8tjX59m2K/6b4B6B/rv4cu4P959zv
Vwk836bvn9vQhv654oMq3cHz7eLXaebb0D8XHrY6Bj/fLv+8LpZ8+3b1R46v
VvTPdT1sLvx8u77/5G/2q22X/a3/YkX/XP0RlRd+vkP91yEv9e079L41btS3
79B8S/OT+nZ+7x0FP9+h8eobyHkyOzRfd8SA59wfH0B9+w71b5gP+fadnJfo
A57vZD/gciv656wflgLPd7Lfcib8nN+vnmFD/1zxYv4v4PlO+bcBnwPQP9f8
yF2X/Wq71B/124LnuxSv5c8Gnu8S3/kw1Yb+uebD0jvg+S7xndqDwPNdsu9q
Ndmvtkt4Ev3Kiv658NU9jHz7brU3g3Ff+ueKZz73h5/v1vzudZN6uN3yD48n
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
b8h+JvqRb7+h/ttsxPvSP+c8nEj2n9/U998cZUX/XL/fls2G/rneX68U/Pym
+m/dOSv657K3bw3s6J/reXsagOc30Vcy4l/pn4Mna8m339L3Rgy3on+u9++9
z/r5LfnTqavJt3M/5DTr57cUb5fYRL79lr7/YV/w/Bb7Fw+zX+22/EdSI/6X
/rm+b9wG+PltvS/NHfj5beFl1YPUt9/mfK7O5Ntvs5/0sw39c7UnTWfw/Db5
5lac93pH8WbEDfLtXFfOD57fkT13aQmec99vMvz8jvo7+QAr+ufyz0c94ed3
yBdfpR7urvBmemob+uea7x8Xws/vsp6fivXzu4rHHIet6J9rvjVcwHkyd+VP
7+UCz+/K/1d/Q779rvDr1Gsb+uf/nUci/XP5s7zb2X9+T99b5hV4fk94+v4B
6+f3ZD81ssPP76l/Oy1l/fye5ndgMvj5PfHrAaPs6J9rvmQYRb79vuLljLNY
P79P+7zB8/uyr76Lybffl/9PmJl8+321f/seK/rn8l9bHeD5ferBh9nRP1f7
IiPh59Gyzz12K/rn8p+NMoDn0eIfHT870D/X9/xpAj+PFp8s/Yl6uGjOqztB
PVy0+Fav6vDzB8LTs2nB8wdqTwGLFf1z+YMsMeTbH+j75z+woX+OPwuhvv2B
+OKsBuw/f8D5U6nYrxYje80QTr49Rvjt8dOK/rn8Z7Oi8PMYje+wezb0z9Uf
vj3g5zHyv82CwfMY4bv7XerbY9QfHYPItz+UPVU+AJ4/1HzNmMWK/rn8wf2C
7Fd7KP975wx4/lDjG5GJ9fOH1FcUAM8fyn9VuQmePyT/OJR8+yP1/35fK/rn
6h/fdVb0z+UPAl2t6J/r/+kHg+eP4D/HwfNHig9yDSLfzvMHriHf/kj9W38n
eP4YPbkS8PPHGr9Rc+Dnj1lf8rGif675GhDC+vljzrMsRj3cY423yy/w/DH7
X9qzfv5Y88ffiL+lfy58W10Yfv5Evz/Rg/r2J+qP6YU4T+aJ/NebrHb0z+n/
29S3PyFf+wo8f6L4aec5G/rn6q8it6iHi1X/Rr2won8ufAxNbkX/XPN/bT72
q8Xq+X8cnA8XK/9YuhV4Hqv5+n0y9XCxmp+TJrNf7ansN3WoFf1zjeeqj+D5
U9nLqw/k25/Kvw7cjr7aU8XbiXKx//yp/PWeE+A51w99yLc/VfxeKwf6as/U
v6UTWdE/53zSN3b0z/X+8k3h58+ED5kSWtE/13yoXYn182fCR8do8u3P9H7f
V+A5v496AD9/rutZh23on3NeeCPw/Lnm398RDvTPxd+6j+A8mefw7yWsn/P7
cw2s6J9rfsccYL/ac/avBFEP9wK+4Qo/fyF89OrEfrUXGs8hseD5C+F58WDy
7S/UH8G9wPMX+v4maamHe0E9lxFPS/9c/eu1Ajx/Sb1TM/D8JXiVyI7+Oes9
063on8v+RxrxpvTP0Rtry/r5S+WLv/Wjvv2l7DPuOvz8Fc9vDT9/pfhliJsN
/XPZp1cr+PkrPa9CH+rbX8le4mpY0T+Xv+xzz47+ufzrCyOelf65xte9Bfz8
teLzogvZr/Za+PoknP1qr+X/PetTD/da41OtJ/Xtr8W3bIng56/Vfr897D9/
Lf+VJz/8/LXm9/XN8PM3wofbf8m3cz1/rBX9c/bnhHA+3Bv5745uDvTPhdf9
d4Dnb/S9u/yob38j+6hjXEv/XP13aBvr52/V/9lqgOdv9X5HLvLtbzW/H9dj
/fyt7OXtGfLtbzkP/SN4/lb9v88fPH+r+X2sDvvV3qq9peqA5+9Yz8sOnr9T
/Jy/PHj+Ts8/W86K/rnGz/cC/Pwd53d1BM/fsZ503o7+ue7vKGNF/1zP+9iF
8+HeU896Fn7+Xv728Ujw/L2+t3Aa8Py9xv/3e+rb32s+NTvG+vl79e/pgVb0
z2UfNcuD5x9kbweWUg/3QfZQ+y317R/UH5/Lgucf1B8nSljRPxf+zSkBnn/Q
98wZAp5/UHuWHbKif67582cx+9U+ovfUEn7+Uf4ptjT59o+y928HwPOP6p/V
B8i3f5S/y29cS/9c+Dg5Kfl2/r/zEfz8I+thRazon2v8WpSAn39Cb+UQ/PyT
/NuaXuD5J/mzi4vA80/UG3izfv6J+psD4Pkn9Zd/NPXtn/S9KfaA55/lr47u
s6N/Lnuf1Yh6uM/iD696sX7+WePv3Rd+/pnzgnva0T9XPFHzpgX9c9m/V0Hq
2z/re98lAM+/6PctguHnX/S9k9zA8y/yn022W9E/13iabrF+/kX9n7Yh9e1f
hE9zG4DnX9j/E876eZzGv144eB6n+GGBG3geJ3//JR/59jjO68sDP4/T95be
Bj+PU3tyW6iHi1P/LcthRf+ceoU6rJ9/lT3k2cr+86/yB2W+gedfOa9vEvz8
q/zluFrw86/oF18i3879SRPIt3+V/6/1BTz/qnjrVg/2q31T/6f4bEf/nPr7
ceTbv+n5HuNYP/+m+KLUetbPv8me/KqRb+f37uNYP/8m+x97DjznfY0yUQ/3
XfHdpnOc3/5dfDPBWfj5d+FFxFny7d8VH1gzkm/nfq2R4Pn3/9bfpX8uvLr1
Cjz/rniteyT7z38onp4f6UD/XPbdIJ0V/XPZ36nyNvTPOW/9FOfD/ZD/r9TB
qX+uePrCCQv655xHvww8/yl76NWO82R+Cl/KlCXf/lP2kCs1eP6T/FcZ8Pyn
7L9FG/j5T7W/0RIr+ufq/5qD4Oc/qeeOtaJ/rvZ8fUJ9+y/N98Mtybf/0vz5
uAg8/6X3tXbWw/1Se5eWtKF/rvH1KAk//8V+xUdW9M9lj5W9reif6/u/9wHP
f8u/Lolh//lv2X+OpKyf/+a8qcTk23+jv5uEfPtvzmueBz//LT67Y78F/XP5
59GFwfM/ms8zG7H//I/6a/496uH+YB8JWT//o/GIa8B5r3/Qk9kDnv+R/aZt
QL79j/o36jfr539kn4cCbeify99m3c3+87/yh0mCybf/lT/K2wg8//vf+rz0
z4Vv/eo69c/1vbV/sP/8L+ffhMPPE3j+49NNdlDfblzH2/Od7ayfG9fx86XE
T/LtxnX8+P/ZBp4b1/H9Uesa9XDGdXx8lW0q6+fGdTw+37XAz43reP/gk5P9
agn1PvNk+LlxHd9/5XKA58Z1vL/5ewk8N67/5TumgufGdTx+e33kPBnjOt4e
B4Zb0D/3/Gc/jz/Dz43r+PmyaSN4nkjtifwEnhvX8f7nQTXw3LiOjyd2vmW/
mnEdjz9rq3KejHEdn3/KvdmC/rnnv/5uMIF8eyL1R4VOnPdqXP/Dk9Hw88R6
f99X1MMl1vcHjALPE6v9y9ewfm5cx49aTAfwPLG+f0QH8Ny4/rf/ZYMF/XPd
H+dhR//c85//WvKM9fMk+l6PTjb0zz3/+a+wp+Tbk+h9T4aC58Z1/PxoORR+
nkTPT/SSfLtxHY+P+U/Dz/l/0zUW9M89/82nuc/JtyeVfRU6yvq5cR2Pv+lG
gOfGdfz8av6M9XPjOt7em7qzfp5U/T/8MPVwSfV9m1uA58Z1PD9s0ZZ8ezLP
f/Z/ujx4nkzfHxLK+rlxHR//93hCvt24jvePvfuB58Z1vD/vm4T95/w/sqwV
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
eF5R9vCnLXheUf5r+VT4eUXNv8yZOE+mouzVY6MV/XPZR4VB8POK+t641uB5
RX1vibfUt1eS/xg/gP3nlTQf3vaHn1cSX236B35eSf7clo58eyWNf1Ae6tsr
yb/2H099eyXZ+/3S5NsryV79W8LPK2u829dk/byy8LhmCHheWf2VKSX59sqa
f4urs35eWf678A0L+ufytz9Gcd5rZfVv8S7k2yvLPgd+hZ9Xkb/ae5zzZKro
+bersl+tivzLljAr+ufCh+ii4HkV9f+ecPLtVfR9NWZY0D+XP78w3YL+ueZ3
oyTw86r6f+Bh8Lyq4vnlhcDzqrL3BA3B86ryn1+iLOify76bHYSfV5U/9UwI
nlfV/Jj1AH5eTfbhlQh+Xk3ve1iffHs14kdXK/rn8m8eruTbqynemvUGPOe6
VD3wvJrmx8R1rJ9X0/imyguee6p969zAc0/Z2xUjfpT+ufjxiDzUt3sKrxL2
Yf3cU+PVfjV47qn+Xe/H+rmn2l8jNfzcU/7veqQF/XP1R6ObVvTPybeesqB/
rvf7N4efV5c9jSoGP68ue9v53Yz+ucb7VlPy7dU1v2oGk2/n+dk/Ud9eQ8/z
q0i+vYb88YyO8PMaev6czayf15A/WOPDeTI1NJ8vxpBvryF/8OwS/LyG5ssc
C/XtNeR/1rUn315T193N5NtrKt6uGM15MjU1no6h8POawp9ur8HzmrLHURfI
t9fU+J0/aEH/XPOrvHO/Wi3P/503LP1zxX91PpjRP9f3H8sNP6+l/hxhxIfS
P5d/cX3O+nkt+dsk+8HzWurfSCO+kP657KufN3heW/FlppzgeW31f/rU5Ntr
qz8flbWgf67+WPUEPK8tfnusCOvntdX+e80477W27PHoazP652rP/GDwvI7i
wzw1wPM6ys+06wg/r0P/uHCeTB3hT/sY8LyOvrfxcerh6qj/Dy3mfLg6Gm97
NfC8jvx1eFLy7XU1ftuqws/rCn+HtgPP6+p5i46A53Xl37OWsKB/Ln9lSUy+
va7aU+YueF6XePM8+fa6+p7rt8m31xMeBtcj315P/GnRROrh6jG/54Ln9eTf
orZY0D+Xv5rzFzyvJ3sr6Q2e19P4fMzu1D+Xf/52nfPh6ut7p46jHq6+8Olg
IQv657LXSCt4Xl/fE1GTerj66t97P8Hz+mrPryZ29M8131NtAM+99PzAH+C5
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
X/dyrp+b9b2mtPBzs+brvZnguVn2c6Mx6+cW2cPg06yfW9Sfm4+Y0T/X/+8k
gZ9bhFdLxoDnFr3/8DT4uUXz69xo8Jzr2scs6J9rfNz/mtE/V/9HNCLfblX/
LE9IfbtV/O6Qi1P/XHhi/W1G/1z+c/sx8NzK+uVE8u1W9e8kI56V/rnwpVwi
8u02tSekPnhu0/dNPQg/t2m+L60NP7fJnq8eAM9t6p9vicBz7r/YT77dpvbu
NOJd6Z+zfpOQ817tGo+w2uC5XfFYuirUt9uFZ60Hw8/tmt9RValvtwtPq/yC
n9sVfy+KYL+aXfZX4yB47tDzxw4Gzx3yLzFfwXMH4zEIPHeov8IqkW93yH+f
3OfUP1e8efYHeO5Qe859gZ/z/FODwPMA8ccsxn3pnwt/21Vi/TxA77tTwYr+
uX7fpyJ4znVMWerhAtTf43eC5wGa34k9OE8mQPZ8dasZ/XON98Av1LcHyt7S
fSDfHqjxufLWjP65+mtuOdbPA2Vv3ftR3x5I/Up5znsNZP/KdvA8UP3fL8CM
/rn8Xd8y8POeiifWh5Nv7yn8Xfqe9fOesp8uZVg/76l4J0cg9XA9Nf8Sbybf
3lPjN6C4Bf1z2de1N+Tbe7E+VwI876Xx21kcPO+l/gh8zXkyvdT+W2vN6J9r
flx9Dp73UvvvWlk/76X+H73GjP65/KXZiEelf654IPU6zpPprfEYvdqM/rn+
72Yyo3+u6/JFWD/vTb6wIPy8t8Yr7Soz+ufMNyP+lP654oXRq6lvD5J/eN0D
fh6k+VuwoA39c80f74JO/XP5884rqIcLkj97kx9+HiT73tSd+vYgxR9NHsLP
+whPBuQDz/vIXvfGsH7eB374wIz+ufrrfbQZ/XPhQUI38u19tF6U1Y18O9cr
o6lv76N44pcv+fa+Gn8vX/LtfdWfK434T/rnGu/WoeTb+5Jfvgs/76v2D7sL
P+f37zrCz/sqXu3ZETzvq++J8zGjf675UmMheN5P/bmhA/y8n55X6hZ43k/j
EXGT9fN++v6188HzfmpPTDvOe+0nf/R4HvvV+sk+iswDz/tr/Hu0Jd/eX99/
MDP59v7UV7cBz7mf9boZ/XPhY/824Hl/z/+d3yr9c/3+b2sz+ueaXz1cnfrn
+r/HLParDaC+YbYZ/XO9f6wr9XADNN8yuLJ+PkD9ue6yGf1z5YtiZlLfPkD+
coQ3/Hyg5r9XC/B8oNp7cDrr5wNlX7mCzeify/+mTk093ECN/4QWZvTP1R7P
tOD5QOFhx5TUtw9k/2IzC/rnen/eqeTbB8kfPkhOffsg+b+bk5z65+qPJmes
6J9rfDdNtKF/ruvQSeTbB8nes09i/XyQ2ucfaUX/XPNxXjKn/rnsKdNp8Hyw
+EDP+uD5YPGzwg3B88Hqn7eTzOifK18xrA759sGKP5MloR5usPxhswkW9M/1
/93JyLcPER7+PgGeD1H/vj5CffsQzZ87icFz/t95DHg+hPgxCXjO/98eYf18
qK4HGfGl9M8135NUd+qfix/V+wueD1U8tWI4+fahmp/RR6hvH8r+piOsnw/V
eEfXgJ8Plb1V9ATPh8k+8x8Gz4fp9yWrOfXP1d/Fq4Pn/D70L/n2YRqv8zXA
82H4g6Hg+TDhfcF98PNh4Hst8Hy4viduMPx8OPv9RpjRPxe+7dvF+XDDqVce
Dj8fLjyI9nDqn8t+932jvn24+NzvvuD5cI3/FCO+kv653r/uA3g+QuM1YCj8
fIT808xt4PkI/b9qHPn2EfIPBTzA8xHyB7Z3Tv1zfc/TXeD5CPn36DLg+UjW
64z70j8Xfh17D56PVHu27DGjf67xvdmP+vaRen6ZODP655oPoz6yfj5S/ZMr
EH4+CvvdBZ6P0vf32QKej5L/7bGBerhRmj8l3a3on6t9A56D56M0nrZ+ZvTP
FU+tDSDfPkrtebTWqX+u8exuBc+59t8CPx8tvr3fnfXz0YqnvIxr6Z/Lvl5t
As9Ha3w2rnLqnyueymncl/65/Ns2K+e9jtH8rFeWfPsY2dPtWPB8jPCm00On
/rnn//S7pX8uf1zJzal/rv79sw5+Pkb9M/sZ/HyM2t/UBj8fq/lTLpB8+1iN
b/RS8u1j1Z89NpJvH6v8yqGc6LGMVfsWdnHqn1PP+oT69rHimyULcD7cWLX3
Q37y7ePUHy27UQ83Tv1RYTF4Pk72UaewBf1ztXdKcfj5OPnzdivB83Hq79gV
nCczTuMx+CF4Pk72PmUJeD5e/Z3Qakb/XN8/aA38fDzxzA32n4/X/O2Wh/r2
8WrPqSJm9M/1/xxm+Pl49fedXJwnM0Hjk6Ud57dPUP+uXWlG/1z9E5KTfPsE
9tNcQY9lgtrr/tCM/rnGo+hl6uEmyF96zQfPJ2j8b+QBzyfqfRmXm9E/V38n
ykO+faLwI+4q/Jz7g4z4UfrnGo9LF6hvn6j+PZeKeriJal99PzP65/DlpfDz
ScKHlOk5H26Snp+3qxn9c+p5faiHmyS8S3oJPJ+k8fDowPr5JOH9yjtm9M/l
38OacJ7MJLXnxQXwfLL478xI8Hyy7LPfJPafT9Z8f5CFfPtkjeeEXGb0z2Xv
By9T3z5Z39fhphn9c/G7Iimc+uf6f6LZ4PkU6kdymNE/1/9vuDj1zxXvNXAB
z6coP3OyJfl27vsmo759iuw//AJ4PkX2/e0UeD5V4+lXl/XzqfKH413h51Nl
n/PqcN7rVPb7JQbPp6q/OqUHz6eqveFtzOifyx+9TUg93FTmZ2Yz+ueaj+1/
UA83Tf13tD71cNP0vFGZzOifq3/6p7Ggf6543fWoFf1ztffXV9bPp8n+Jn+F
n08THpbzJN8+XeM/PYMZ/XPi6/Pg+XT2v/4i3z5d78s4kfXz6Rq/cq7Uw01X
+0amAM+53665Gf1zXX9rBj+fofEI/c5+tRnKt5Q6xvr5DPhlUzP657K/AhWp
h5shvAv1IN8+Q/NlRaQZ/XO9L1kTM/rnimc7GfGT9M9lP50Gw89nCk+71rGg
f45/2erUP5f/WFMbPJ+p9g/6CT+fCd/bzHmvM9UfnU7Az4P1PeGbnPrnin8+
9gfPuX9qI3gerPbn/049XLD6Z2wN8u3B6o9i78m3B4vvbV9PfXuw/Em5bVb0
zxXvRHmSb5+l+LJGOPx8ltqf/YgZ/XOtR0wuz3kys8QnXvUm3z5L9pO5rhn9
c9ari8PPZ8m/3uoFns+WvS8faEH/XP7L5RP59tnyNyeceD5beDKrCHg+W/HH
6x3sV5ut+bh4B3g+W+1/+B48n635lG8D9e0ham+T7eTbQ/S+pe/g5yFq74qn
8PMQjb/3U+rbQzS/RpWEn4eo//farOifKz/t8HPqn8ufpMvv1D/XfB7xx4T+
ucY/NBQ8nyP8yxTK/vM5ss+keZ3658KzOb3A8znqn9iVnCczh/oAI16U/rns
r4hxLf1z+bt+G1k/n6v5Mm4AeD5X39uhI3jO/fy5yLfPVTz7eJ4N/XPZw4Wn
7Febq/h69FX2n89T/8ZlB8/nqf9zbwPP54mvDMgPns+TfWbODz+fp/Hw6go/
n6f+6/gGfj6PfEtWzpOZJ3/lOpt8+3zZQ5PX4Pl89ceeLyb0z/W+lm7g+Xx9
T4OH5Nu57rWQ9XOu0+ShHm6+/OvAIuTbuV7+AH6+gPV9b/B8geLr0z2oh1ug
9sW6m9E/V/tmbSDfvkB4WT4MPOd+kWfg+QL1R9715NsXUP+Tzql/ruffjjWj
f85+/0vsP18ofAzID54vZD/pJOrbF8o+P3cBzxcqHzrjBOvnC/X+YVby7Qs5
/2oReL5I82/4Ivj5IvmTZm7w80Wyr0nFWD9fpP8XXwieL9L7e2aEny9ifXaF
Gf1zjccbF/Lti5V/6N2CfPti+aNPPuD5YvXH98Jm9M+VT1h91YL+ufzvpB5m
9M81nxY8N6F/zvkGI8HzxeL7iXKw/zxU7698ivXzUOKZu2b0z4WfL4axfs7v
C6Zh/zm/32vEa9I/l79PfAJ+Hqr52yoCPA+V/xlbHTxfov4MyweeL5E9BHYB
z5fgzzJb0D+n3nwR/HyJ/GvKQfDzJeyXnwGeL9F4l3YDz3lfgs7g+VLxU+/p
FvTPhS+pz4LnS/W9/VpQD7eU/EFHM/rnwtMrpy3on8u/jU1Kvn0p5wd8Z/18
qfrj/Df2ny+TP2kaCT9fpvE80cGM/rm+d9Q+zofj+lFa8HyZ7GPkZfj5MvEN
l73k25exn7kx+9XCPP+njyb9c33Pjyjq28Pkv0dWpx4uTO3xz0a+PYzzBT5R
DxcmfHk7CDwPE14ebMD6Of/veYF8+3L4QUrwfLnmZ4Kd4Ply5XuGvWf9fLn+
/zI5/Hy5+rtOSerhlstehmcCz/l/3CrwfLn6x3e6Gf1z6tdumNA/V3t+GfGk
9M9lP3W/s/98hfqv3EgL+ueaf0n7kG9fofFt0Zx6uBXyV5mDqIdbwflYw+Hn
K9U/1XuTb1+peKdgYfj5SrXvWiLWz1eq/fXLgecrhc97y4LnK8n3XTahfy68
/VzGqX8ufM4fCD9fJftLWwZ+vor9OGnM6J+Lb3l/hJ+v0npMPQf59lXCnzSl
qYdbpfgzlS/59lXyb2s7c377KtnTDhv8fLX+38yNfPtqxR9TB5BvX63vmZGS
erjVev76h/Dz1bL/hmPh56uVb7haGTxfLf/SIDd4vkb+1DeGerg1wmfrSurb
18ie0q8Ez9fofS0rsX6+Rv5saE701dZovD+MAs/XaL41qUh9+xq1760H/Hyt
/FdEEfLtaxWP58pOvn2t2j/TqceylnzcV/j5Wupb9pFvX6vxK52V817Xyl5G
xMHP+X3WOPj5Os5/ijShf67x7FeA9fN14oMTu1Lfvk7PT1CWerh1Wo8ae5P1
83Vqf/Ey1MOtoz4uH/n2deI3C55QD7ee8x47U9++XvHvWFf4+XrWu9aA5+v/
X337etn/zL8m9M+Fz2fmWdE/V7xx9Qr1cOs5b2wi9XAbhHdeVvB8g8ZvqhE/
Sv9c/HKUhfXzDbLX65fIt2/Q+JadA55vkH/YsQJ+vkH+40BlM/rnrE++Id++
Ufy+/WzOk9ko/9u3qAX9c413eAqn/rnenyIMfr6R/cDLyLdvVLy4LCv59o3/
xRPSP5e/ST8TPN/E+Rl1yLdv+i/fIP1z4d/rpKyfb5K9rO4Fnm9S/x7syv5z
/v94Kvn2TYoXu7fgvNfNsudqNVk/30w8sh483yz8OOAKP99Mvnsh/Hyzvs+n
Oni+WeN1eI8J/XP51+pN2a/G/RYO8HyLxn/IRPj5Ftn3uXng+RbF37OPUQ+3
Bf5VCjzfwvqDzYz+ufxpmcvUw23R9xwoCT/fovGfYMST0j/X9yTIBZ5vlT9b
YwHPt8reL4wBz7fij7yoh9uq5/csDp5vVXxe0wN+vlXxXIr6nCcTznxfTr49
XN87vA3nw3F/9Uin/rnm98c48u3h8o9L9oHn4fL/xbOyfh4uvCtQh3x7uPjA
lOHw8236/hkvTeifC39fnibfvk39W+g2/Hyb/EW9aeA59z8VNKN/rvir91TO
e90mezpcyql/znmgU1g/387+tvfsV9uu+4tPws+3C2/OeHJ++3aN77gETv1z
+SOXBOD5dvX/tVgT+ufy/5/+wM+3a/72agKe75A/DPW3oX+u500uCp7v0Hzu
+xp+vkPt7diJ9fMdmk9RW8HzHfLPlRuRb98h+6laGH6+Q+N5tA94vlP8Z+5Y
C/rn5HMemtA/l7+6vIn1852yz529wfOdssdUXvDznfJ3rs/g5zvV3tIX4ec7
Nd/e5ICf71J/nY6lHo7rAbPg57vU/5/2sV+N+wmiTeifK/4tU5b9arv43gDO
h9vF/pS1Tv1zzf8XERb0z2XPYblZP9+t7+82g/Xz3XpekjAT+uf6nojp5Nt3
y95276a+fbf8Z61V5Nt3y17bWdmvtkfjG7SL/WpcLxxMvp3rD/fh53vUnrkt
wPM9as+qKeD5HuFjgeXw8z2yz7QZwfM91L9MBs8jWE/6a0b/XOPVvyh4HqH/
xzSFn0cw/1zh5xF6XtlFJvTPdb0kPfw8QnhwICP59gjhZ1wh8u175X+KGfGW
9M9Zv6/E+vle4v+C7D/fq/Edsxk83yv/MqQi/Hyv3pf3Oni+l/MBfcHzvZwP
YMR70j+X/eyba0L/XPxj0wb4+T7ZW/bO6LHsk/8qFAs/36f5diE1+fZ9+r7K
l6lv36fxmXeJfPt+vS9mJHi+X/PJxQc830/9RXL4Ob9fMIL69v163pTP8PP9
4jud7eD5fvV/3+Fm9M/1+w3nTOif6/ltjGvpn+v5oR/h5wf0e8+P5NsPyL57
J2X9/IDmT4+k1LcfEP41vg+e83yvIWb0zzW+e06D5wfhk/cs6J/r/WenmdA/
V/7s+zL4+UHFb0P8wfODso/xCcHzg5pfF3vAzw8Kr8cs5fx27j/qzvr5IdZT
T5rQP1d/3X3F+vkhff+A/uTbD2l+5DxhQv9c1yF/TOif63tHHTehf654ZNov
+DnPd50APz9M/dZ48u2HNf6FjrB+fljt3z0OPD+s/vlRgfPbDzPff5rQP8f/
N4Sf8/sBT8m3H9HzL3SyoH8uPlJiHnh+RPHcXzfq24/A1+aSbz+i51/7ZkL/
HP/mA54fUTw5qB54fkTxXbEU4PlRzQ9Hbvj5UcWXGz/Bz49qvu6uAz8/iv2v
MaN/Ln82qx3r50fVngUx8POjrLeMNKF/Tv73Afz8mPjYxTbk24/Jv59Owvr5
Mc2fNtnh58c0/8+/deqf6/kn75vRPxdeX2hFvp3nZZoOnh9jf3NL8Py47GXg
ctbPj3Pe8Dbq27m/zRt+flzx1rL+8PPj/+WrpH+u+3MLUg93XP1h32lC/1z5
ok/PwfMT1Ou8Jd9+QvVcXs+pbz+heNClslP/XPHYoQzsPz8he+k1ETw/of65
5Mr6+Qnxsw0TWD8/oe9JEQqen5S9RGwAz08qP3HsCefDnaSeyg9+flLj//kx
/Pyk4tkEFcBznpfoO/z8pOxt/jf2n59iP1IXM/rnwqszC8i3cz/pCxP651ov
DjkAPz+l9jS9Ap6fUv/s2Q+en1J/T+tsRv9c9tPODp5Hav7XGgWeR7If+jN4
Hqn4c9lKp/455x90BM8j5d/2lyLfHqnxC74Hnkeqfyv1NqF/TjzwxIT+Oet9
PuD5ac6v2k2+/bTm3+NlTv1z2eOp26yfc/3oHfl2/p82Gfz8NOujS+Dn3Lev
NaF/zvpdEvD8jObDzFDy7WcU3z7fDj8/I3t6fR19tTPy18m7WdE/V7yU7DX1
7WfI72cn335G/H1yVyv659T3RIPnZ/V731bw87Pq7/UJ4Odn4Su+8POzGp8d
z9mvdlbfMy8/eH5W8fGblOTbzyk++TuXfPs5+bMFlcm3n2O/T2bw/Bzx9B0T
+ueyp3WTwPNzet+QX6yfn+M8k4zgOf//3ot8+3m9v/V5p/65+u/GOdbPz4tv
bujJea/n9bwVN03on2u8M+Vi/fy88MBnLXh+Xu1vnx48P6/85S0nnl+Qv8gS
A55fUPtaj4WfX9B8bzgdfn5B31fDz4T+ucaj2AHWzy8oXvh0kv3nPM9noQn9
c/bTLDChf85536XJt1+Uf3z2G73Ui/IXc47Dzy9qfpqXUw93UfOl+3zw/KLw
bEEm8u3cjznq1D9X+6+YWD+Pkn+oMhE8j5L9uCxj/TxK/TXuFvvVovS82bup
b4/SeJzqCJ5HCX8PHQLPo2Qf6YuRb7+k6z4hJvTPibfGsn5+6b98gPTP1Z/b
roHnlxR/rfZj/fyS5l8WP/Cc58cFm9A/px5rL3h+Wf1fpR38/DL19mdM6J/L
Xtq2NaF/rvun9rB+znX6F/Dzy+yXyw8/v0z+J4p6uMvqr6e7nPrn1IvXhp9f
Ef7McQHPr7B+8ZT69ivK3zYZAp5fYT/GVBP65+rvDTWd+ufUQ8ea0T9XezMZ
8Z70z4XHN7aRb79KfN7bjP653v/zlwn9c/XHSuNa+ufsJzKupX+u8YpKxPr5
VepBc1LfflX+aeUW8Pya4o+jkfDza4qvDhvxh/TP9f7j5c3on4v/vJkGnl9T
PJW9Cvn2a5wHnw08v6b+L5gNPL9GfdMq8Pw6/r2xCf1z+ZvZx8m3c39FFvj5
ddab4uDn19Xeth5O/XP1by136uG4jt5vQv+c/loOnt8A30eb0D/nvM878PMb
4g9NvoPnN/T+GZ9M6J/LH1V0oMdyQ/P9liv5dp53KMKE/rnsf38ceH6T86nj
wPOb1JOPMKF/Dp95b0L/XO3PcgN+flPxSsLS4PlN5R+O72P9nP+3Wgw/v8X+
3AbsP79F/cwi6uFusX7uBz+/Jft4VZ98+y3hQ+YI8PyW8LhrcerbeV7zVJz3
ekvfv+myGf1zvf/RNaf+ueJp77rw89uyJ9su8Pw2+ZJtJvTPNb9P14af31Z/
5S5APdxtvf+iC+fD3Za9+7xm/fyO8L12LfLtdxQPNJ/P/vM7au/Sjqyf31E8
lqEm/Jz74dVM6J+D57NZP7+j+bk8CefJ3BVeLJ0Dnt9VvDR9K3h+V88b0deE
/rnyAS+esX5+V3ibqz/59rvk78+A53fBjyAT+ufoHVUFz+/p9x5B8PN7+n1Y
Avaf31N88a0d9e38fvV0+Pk97KcN+fZ75KfWmdA/5/zhHOD5PfnPGznB8/us
/5yivv2+nl9iLfz8vp6f5Df71e4rnjvVE35+n/ruluD5fcUHzwPh5/f1vWMn
s35+X+3JGACeR7PfdjL59mjlU1KuJt8eLfvdXI7182jq6yaSb4/WeBxfyfp5
NPVwK+Dn0fq+H4fIt3M/oAx4/oB6DKsJ/XP5T9+MTv1zve/EbRP657qud5B8
+wPx++YW6uEeyB4rjAXPH2j9NO4meB6j/ti1FDyPkf3NKwk/j6H+din8PEZ4
FboEPI/R/LvawKl/rt93+Uh9ewz54uusn8eI/4UWZ//5Q/X/2FDw/KHme4Y0
Tv1z6m/2wM8fgr8j4OcP9f1Fr5nQP5d/LN4NPH8o+wgexnkyD9X/T4eC5480
vk8Lw88fKZ80JIVT/1z2N38neP5I8zEyivXzR2r/s0vg+SONf6oo+Pkjve91
cvD8kdpXdBD1cI91/1It+Plj9vcNBs8fq/+i8sPPH7P+P4h8O//fHm5G/1z8
u2ZH8u3cT9AZfv5Y4/NoAPvVnmj8m3WCnz8R3x7cATx/ou8p5cb6+RPqs8+Z
0D/X918PAs+5TuxjQv/8v/oV6Z/r+85uBM9j5Z/ztKUeLlZ4WHU6eB6r9m2u
Aj+PlX+ea8QT0j8n32LEg9I/Rx+jMngeq/nj8wt+/lTx9/MAp/65fl+5Evz8
KfH2Sfj5U82XO0fB86fi673KUQ/3VPb5YQV4/lR4V34SeP5U431tIuvnz/Q9
tY34S/rn6s++raiHe6b3P1nFfjXunzkGnnP/kgM8f6Z4Y3wc+9WeyT8PKM15
Mrzvgjf8/Lnst/448Py54j0/k1P/XP373R9+/lz+o/JY8Py5xjfNEfLtz4m3
DpvQP8efhFEP95x8Rhh4/oL8+gf4+Qvdb2wxo3/O+cpGvCb9c+Kr0tS3v0Av
qij8/IXGL30mE/rnij/avwPP+X+XjCb0z6m/7oq+2kuNZ//C4PlLxWetujj1
z8F3I96U/jnnIXwCz1+qP+4XB89fir8e7ezUP1f7zN3Jt7/S+zrtAM9faXz3
F4Ofcz2/Ifz8FfGJEc9J/1z3G0VQD/dK71v9gv3nr9T/mYtS3/5a/3/f1Yz+
OectjTShf672/y1Mvv217H3pM+rbXyvfUNYNfs7/m9QHz1/LfryfWtA/5zyc
uexXe6Pfz6xnQv9c3581lv3nb8jn1DWhf67+rZoEPOc6wLgv/XPO86/L+vkb
1jeHwM/fEC/m4DyZt9QnPIKfv6Xe7IUJ/XPiqdom9M95/0P4+VvFDzfWgef8
f9Ig8JzrksHg+Vv2i7mxfv5O/qBtL9bP36ke4H5zp/65+uf2DParvdN4fKph
Qv9cz1tUA37+Tv1dLzN4/k79F3SSfPt7/T75dNbP36s/tjSBn79X/6Wexv7z
9/IH1cuD5+8VXx8oBz9/r++LywGev1f71udg//l78dGGy8HzD9T7bgDPP6g9
tY6a0T+nHjYIfv5B9nZ6GevnH/S+OkHg+Qf1z0EjfpT+OfFob/LtH4RP1Zey
fv5R/rZDGvj5R8VrL1KD5x//q2+T/rnas2w8+88/wgfHk2//KDxNlQp+zv2L
TcHzj2rvsED4+SfFE0WvUN/+SXiTchH17Z+I3yrAzz+B5xnBc65XfgDPPxEP
rKQe7pPav62RGf1zxfsLkjn1z5V/OjMPfv4ZvHlHPdxn8v1lTeifK35bnIT1
c/4/uRD5dv5/P60Z/XPh+fSC4Pln8r3LTOif6/nd6rNf7Yvi0TmzwfMv1JuW
NqF/jv7Gdfg512evgedf5N9K9GL9/IvGf1Eq9p/H4f97OvXPle9KEsl5MnGM
T0r4eRz7/U6B53HKP52tAJ7HcZ7cSfLt/D96oQn9c/YPDDSjf67vnbqF+nau
Td3A86/kDweA51+FL7uPUd/+lfM35pvQP1d/V3piRv8c/vMdfs79ue/90T/X
+ya6s//8m+yz3wUT+udaL92Ynf1q3N9e2IT+ud5fspoZ/XPwfA54/k32+/Eg
/Pyb8nmvPlMP9531sgfUt39H/++sCf1ztTdrbzP657q/qxd47rw/m3o47vdI
AD//LryOaQKe8/v5q1k//wH/Wc1+tR+6n9CIP6V/Lv9iHk2+/Qfn/ZwCz3+g
17aHfDvPW+oAz7m+Y8Rr0j9nvcHNhP653rf/hAn9c+XT+u+iHu6nnl/5Fuvn
P+WPjr6Cn/9U/6ecBp7zPFMb+DnvG5MGfv5L+avrL9h//kvt++zO+vkv/b74
dfD8l/B2/DbwnPv3SsPPf+n93cPJt/9Se71C4ee/xD+CBnHe62/9/0YK8u2/
qb9YTL79N3jVA37+W+M5NDl4/lv21GUz58P9Fp88VgN+zvODm4Pnv7X+FveI
9fM/nM+yn/XzP/L/D/vCz/9ofH/uA8/5/ZEk4PkftTdnU/LtfzQf366jHo7f
tzHiLemf63luc8Hzvxq/+9Hg+V/115x7/uifcz5NFfLtf/W8i53Jt//FH4RQ
D/dX+LmzMXj+V/7I/x78PEH1f/456z3Wz43r+P7Ns9uE/nn1f/F/60D4uXEd
n5+KCwDPjet4fDDfAc+N63/5YB/w3LiO7480weC5cR0/3s0qgOcJq6s+uYMZ
/fPq/8ZnwUnwnOtWaeHnxnU8365lA8+N6/jvHd6OfLtx/a+e8IZT/7z6v/hy
4nXy7cZ1/O1xz0zon1f/lx8KXwI/T6Tn1W9DfXsivX/cVhP659X/9X//UPh5
IvVXQC7wPJG+P0Uu6tuN6/j4yLsU6+fGdXz/v6wBP09c/Z+/C+oBnifW+2c9
NqF/rusvn9l/nlj9tbQG+fbE6t9tG8m3J9b35XIBz7nO3w9+blzHxxtBxTgf
Lonaez0Gfp5E3/vkA3ieRM8vURR+zvWeB/Bzfn/WiJ+kf672Lm8KnvP7Wb5O
/fPq//jV1LPosSTV93SvSr49qZ5X9R31cEllf7Yz5NuN6/j5na0Q/Ny4jvc/
KwtynkxS+m8U/Ny4jo+H3WfBz5PpvqUR+fZk6p8ylcm3G9fx/qLLbwv65xrf
9K/N6J+rv9wqkW/n/og7JvTPdV0uEDxPpu+vspJ8u0v1f3xh/3Ty7S66X2AH
58MZ1/H5iSffOe/VRc+LXg4/N67j8wFL2qKX6qL2NGsLP3fR96WrwPo5/19V
Hn6eXPdrh1HfnlzfX9oGnifXeJy1mtA/V/u+lAXP+f2CpfDz5NX/l4+Q/rn+
X8OIr6R/Xv1/9R/SP+d5oSb0zzXexR/Dz1Po+Svc4ecp9P9UoeTbU6j9Ga+A
58Z1fP7lZ1bWz7nf/rIJ/fPq//xf4azk21PqftsY8Dylxnt2U6f+ud53IcqE
/rn848Qm5Nu5H2TEM9I/1/dErQXPuT+0G3ieqvq/fOScjOixpNL3zVljRv9c
3988Mfyc+8X94OfGdTwf88zHea+p9L5Cici383vPnqyfp1L/J/joj/65vrfb
HPLtqXX/Wwj8PLXmY8LnrJ/ze98V5NtTy1+dHcJ5Mqn1/roeZvTPZV8RdeHn
qdXeVnXB8zTYl539amnUP4ER/uif6/r4dfDcuI7H4yu1wXPj+t/5tc7zXtPo
/ddPws/TyD9MHEA9XBq1Z3t+8u1p9T3PToDnadWeYz/g52n1+0Wh1MOlxd/v
8kf/nN+bqG9Pq/dndNbD8f9+7cDztOrPfJmph0un3yeeRr49ndoT8gI8T6f3
rYiCn3Nd+Cv8nP/vnQI/5/7sBWb0z9W+HEdM6J9rfCNKwM/T6/dtLrBfzbiO
X2/6cAc8N67j45tOPcHz9Hqfq58Z/XONz5JPJvTP9b1PbpFvTy/7WFPRqX+u
5+euSD2cq9rz8gx47qr5liwNeO6q583JbkL/XPg0vAL1cK5qT+bN/uif63nr
fnPeq6va13+TP/rnwvPQpeB5Bn2/dawJ/XONz+Gr1MNl0HgcjjChf672fCsA
nmfQ+wZcceqfqz3uMf7on+v5kQ/80T+nv16b0D/X8xt+J9/O/V7twXPu74/i
vNeMet/3jOA51zszguf8f7mzHi6jxn9AW/LtmdT+eg3B80yaT3tLkG83ruPz
B6vOg+eZ9Lx3rTlPJpO+r81kM/rnuj/+M3huXMev5x5KwHmv/N7/jj/65/r9
p3Dw3LiO5/vJ5sDPud+3Jfn2zPr++2nh5//H1VlHVdV9X9/GbkHFTgzEVlQQ
scUWW/EW2IFigd0FWBjY2GJ3KzYGdmCLYjd2vtdnfs7vO8b75xpr77Xjwp1n
rrXOnbl0ni5nwHPsJbds6J/rvh++h587yp+5rj/65x7/5QPadzb0zxU/dhP5
dkc9r/4pBj931N/j2XBD/1z7u50BPHcUvvh1JN9OvBNv4OdOOv/DaPLt2L29
4OdO+jwGOMLPnfT/cbcw/NxJ+x++AX7upPiHr9rQP5c/zBM8d9J+Nrfl/fPc
fB/spB8uN99XDuA5/pqjqJ/n1vwBBQz9c63XoRZ4nlv3k7YNeJ5b+802BX7O
+OI16YfLo/jHVoPnefT3mjU1/DyP7iPsNnieR/M3BsPPsce4g+fYH1eSb2d+
4i3wHH+qleTb88p/bhN4nlef3/uh9MPl1d/r/HHw87ya3zo5/JzxbzKA53n1
fdbbkffV8Pf04n01Z52v8kPy7c6675TX4ef442Nt6J+Lf3wbRf3cWfstmY5+
OGf9P35tRH878T4sgZ876+/HvQf97fk0/0B38Dyf7n/nLxv65xo/3P78I/1z
7cc3DXieT+f5vhp+zviX/uTbGX820h/9c8XPnJp8e37+3/qD5/kV7/d38Dy/
9mc6YUP/XPOz2W3pn2t+XBT18/z6fnIfauifK16Wm9TP7fa/elPTIfDzAop/
tze/346d/6sN/XOt59gbPC8A3gbBzwvo77t8EPn2Alpv11Eb+uce/+Xnhg7i
9+EKiO/+8aB+XlD73xQLnhfUfNsff/TPdZ/p/1A/L6j1d0+1oX+u9Z+tpn5e
UPvd/Msf/XPFmxJAvr2Q1puYGn5eCDwvCT8vpPGxH2zon+vzazjZhv657mfK
QvCceJkWws+x916AnxfSfouE+6N/rvkJrvDzwtr/qKq8r1ZY+0kWRr69sOZH
vbWhfy6/qSz8vLDux+EteI5/Y3vy7YW1f7cY+HkRxbvfjvfPi+i8fWLh53b7
X//b2cuG/jnP49PA8yLKN9y6ZOifK/7wsTb0z8W3SlaAnxfRfYwcA54X1fov
24DnRbX+tZ029M8Vr+MP8LyozvPsuQ39cz3/l1tAf3tR7S+1/XlA+uce//VX
BlgM/XPNb9XKH/1zjX/SEjwvpv0FH4OfF9P31agI8LyYPp8rsfTDFVM8txjw
vJj2e2I89fNi+jzaHOV9tWJ6fp9aCn5eXOO7vQbPi2v90Lbw8+Lan8s48u3F
tV7kbvAc2+Mw758X1/3td/JH/9zjv/y770z4eQmNf38Qfl5CfD9lCUP/XPNT
+oDnjB88mvfV7Pa/en/VMEP/3OO/erBDR0P/XPtvmI/+9hI6f7LG8POS3L/9
eU765zpf7Bv4eUnlc460M/TPFc8rL/3tJfl7WG9D/1zza7wm3263/9X7wguR
b8c/ch35dhfNPxIMP3fReY+ttaF/zvNuG/LtLtpv1V28r+aiv9esWcFzF32f
xU0Cz12035ZZ4Oesd2e1Df1zxfs9FDwvJf+8UfDzUorvPYp8O/4Qb/g5tm0k
v/daSufzXGVD/1zxF+Wgv72U9pO2DnheWvFrGv3tpfX3OKgZ/Ly0xg828u2l
+f6JsqF/LjwZ7kS+Hf+GrPBz4re4bkP/nHxAOvLtZTS+1HIb+uda7+ky8LyM
x//px0v/XPx02Ujy7cQrZR8v/XPymUPg52X0+Z2tQ/28rO4ruCZ4XlbzN/QE
z8tqvE9/8Nxu/8snv8hGvr2s9pdkf36S/rnsabXh52V1/+NugOesV99uS/9c
3z9/NpJvd9X/w8E+9MO5avzJAPAcu1Ef+tsZ/2w1eG63/9UPDgwBz13JDw4A
z121n8YDeP+8nM77w2ZD/1z7T9ELfl5O8Z8vId/O+Go36YfD3z0Kfo7tcYPf
hyun9W5dp35eTvm3fAPBczfyE9UD0D/X+bItAs/dxEevriLfzviWy8i3uyn+
yqrk2914nq4KP3cjP1XD0D9X/Pn25zXpnyteUHnwvLw+7xHn/dE/1/2ttvqj
f67vs3PVybeX1/ohf+Hn5cm/LIefl9d9nJhlQ/8cPLU/r0n/nOc9M/3t2M1c
wfMK4EcE/LwC69mf56R/jv8beM78A51t6J/LP/Ur/LyizudSBjyvKH+3+eB5
ReXbSnYHzyuKn92KJN9eUff1OcaG/rnmz+rK++cVtT/vWf7on2s/cTPA80o6
/6q59MNVUj3BpTz180qKv/I0eF5JzwfN3ODnlXSfRabb0D/X+rFf4OeVtN7M
djb0z+XPddiG/jl4a8d/6Z97/FcvfmKCn1fW+jEz6W/H9jgBP6+seEVdwPPK
Wq/Uexv65x7/1Y8e+JFvxz/3APy8is6/5jB4XkWfh5/9eUn654ofPsmG/rnm
X/vE77dX0f6jZ4DnzD/cmffV8LebaEP/nHziEfC8qsaf/Eg/HP5vr2zon+u8
h/bY0D/X59ndbkv/XPurvB9+zvzru23on8PnWoHn1ZT/jyxKvr0a+P4OPK+m
8Tua2dA/l9/6FjyvpvhTxsPP8T95Bj+vpufLyb7gOePnNSffXl330TMveF5d
5zk5Cjyvrnj3Em3on8u/wm5L/1z7K7sTPK+u+Kd2UD+vrvv66wOeM77nVvDc
Xc/HX1rQD+eu59HAFvS3u+vz/ZNgQ/9c8VOMgZ+7U0/aAZ67a3+tn1I/d9f5
djyGn7vrPBUb2NA/lz93E/h5DfIZT+Dn2PeDybczPrFRAPrnilfrEf1wNbTf
0BDwnPHBD8m315R/8EbwHPvaPfC8pvb/KJr+drv9rx/1WUPwHH93+/Ob9M95
HloHntfU/cYPgZ/j/z4UPK+l8wxaD57XEn6MzkZ/O/5fa2zonyve7PXw81rK
X6YZSr6d8Uc8beifk89ZR/28ls73OR4899DnN8wLfu6h8Q9uws+xXTLQD4ed
fzV47qF4q1bRD+eh9T0zguce2u+oQPCc9U7an6ekf8793yDf7qn4w9Px/rmn
4jmkg5976vvvZy34OeM31KB+zvgF7vBzT603/KoN/XOtN2a5P/rn+vwKpYGf
Y59w5/dkaiu+d2r4ud3+149tdef34RjfpDp4XlvrH65qQ/+c+1lCvt1L9q2U
5Nvt9r/+pam96G/HP20xeO5F/SuFoX+uv9/+KcBzL52v4SLw3Iv//+S8r+ZF
figZ/LyO7Brd4ed1FC9HMvAc/09/G/rn+v9/UpH6OePbVYSfM/6rDTyvo/s6
Mx88x1/ZBj/39vivH65zefLt3tqvr5V8u7fOH+FGPxz2igj4ubfi5Y4g3+7N
89NP+Lm31i9pBs+9yc/b8VP657LHfgfP65Kv+A4/r6v5wXZb+udab9U36ud1
tZ9lJ8Fz7C725xnpn2v+v99bl/45/QFf4ef1dJ++XeiHq6f9NDnO78nU0/gJ
XW3onyt+Qhh4Xk/39aSLDf1zjT8WBj9n/IwYf/TPtf88SfS319d5B5cEz+tr
/T+hNvTPef4/Cp7XV7zMJW3on2v9sA70w+H3PkK+vb74+dEihv65xs+3P89I
/xy+OY36OXbAAfrhGvB9dRB+3kD7cXgPnjfQfgcfAM+ZbylC/byBznvmDXje
UPP/TIGfN1S/R/dWvK+G/+8b8Lyh4vdqQ/0cv+sE+tsbkg/ZDT9vqP2ub8nv
ydjtQnZ7tzP59kbKRxZ1pr+9ke4jWSvy7Y3od3kFnjfS30eavIb+OfXdgjb0
z/l+GsPvyTTieamVDf1zjW+Sj3x7Y/Lh+W3on8s/28nQP5d/xBP4eWPV5985
GvrnGl9gB/l27MF5ybc3ht9vhZ831vPxkFzUz5voPs9vg5830X1VeEI/HP5b
ucHzJorv7AieN9F9v9pEvp35w0bb0D9XP0zP7Ib+uc6ztzF47qP7XjCc+jn+
3I/Acx/6SUKon+MvE0J/O/5zG6ifE69Rdvg540s9IN/eVHa+u/S3NyXfm9nQ
P1e8Y+voh2uq82T3gp8z31Ifft5U93PuLvl24l1cA54zf1ZOG/rnuo/NHvDz
Zpp/diD9cM00/nU6fk+mGf8vQeA5/pFB4Dnzo+pQP2+mz3t+ZvrhGJ/Z4OfN
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
/IENybcP1P3FdAXPB2q/gb3A80Fa74KB54OoBzSAn+N/vRA8HwS/eGJF/5zv
hx/0tzPfPZb6+SCd79R28Bz/5/ngeZDsjqWonwcpfs+q4HmQ4nerCz9n/OYO
4Dn+46d4Xy1I6w04BZ4z/uVk+uGwU0bw/vlg3demueD5YPl3n6B+Phj+YPDz
weSXs4DnjB+y2Yr+uewRSfTDMT/rcvj5EM3fuox8+xD6WT1t6J/LvzoGfo5/
QSbwfIjit20NPx/C39tR8u1DeF/mD/Vzxi9YAj8fSn9KLfLtQ8nfLoafD9V9
ZvXj9+Gw04eRbx+q/Sz/BZ4P1f3NOuSP/rn2M+IN/e3E75Kf34cbpngT3eHn
w7SfSdPh58MUb3xp+Dn+gZ14X22Y4hXvBJ4P037WvaR+Pkzr5yhF/XyY7uPo
DSv65/J3eEE/3HDt59he+PlwrV97Cng+XOvfmkw/3HCt9+cZ+XbGr/EHz/HH
NISfD9d+b67l/fNgrZ8qAjwP5n24VDb0z7Wf+Vet6J/zfWq3pX+u8zSvT749
mHqh/XlB+ueK368N/DyE90eCDP1z2SsrUD8PIX8VQz9ciPbfIIF8ewj57sLg
Of7yhXn/HP/ei1b0z/l/f0i+fYT2Nzcr+XbsXUut6J9r/ag48Bx/dBZD/1zx
Bxp6LCN0Hxd+W9E/Jx+6mX64EfRfbKJ+PlLzly+2on+u+eFd4OcjtV71LvDz
kZrv1RR+zvjBi6zon+v+dvUOQP9c431qgueM35mX99VGaf2+weTbR2l+hrz0
w+GfMdWG/rn247QePB+l+Lur0w83SvHHL7Cify67zF7wfJQ+n1clbeifkx86
bUX/nPreWvB8tOL/2m1D/1zxYtrBz5m/aJ4V/XP591ynv5149Qx+Pkb+SRPB
8zG8z1IZfj5G8ZJPpL8d/yFf+PkY+qnsz0vSP2e/KQ39c94/bWND/1zruY8H
z8fqPs9upx9uLPw0ATwfq/VnGr8nM1bxH12Cn4+lf20b+XbidVkOnhPv6Vby
7cS72J98+zjtP+69Ff1z+pPKwc+xn3mSbx+neG1mWtE/5/mqBf1wxOvThffP
x2m/txdTPx+n9Qs2J98+nuf5WuD5eN7fzw+ej1e8haUN/XPNDzH4OeP3RFM/
H8/z+h3q59i9YnlfDbtWB/LtE7T+1FdW9M8Vv1c68HwC+aoe/J7MBN7HzmtD
/1z38cPAc/zj15Fvn6D7GzoMfs56NeeB5xPlr7bPiv65/I/3WtE/Jz9k4PlE
rbcrNf3tzE9ytKF/rv2PPw6eT9T+v1r5vddJvA9aBH6O7dXK0D/n72c2eD6J
/p1CvH8+ifenVsLPJ2k/aROt6J/LzrUSPGd8eTP188nUI5LDz7EvlYefT9b4
buXB88nkHwJt6J/zvq4b/XCT6Re9RD/cZPhDU0P/nHptKPn2KdSLX8PPsVf0
h59P0Xy/rNTPp2j+l5fg+RR9vpWWUj/HvrwfPJ/C9/US6ufEX/6C+vlUxV+a
mXw79sWfNvTPeX5vSP18qj7Pmj/h59ibMsHPp+q+muylfo7//Fkb+uf0g9yz
on8ufya7Lf1zrX94N/l2/BG94OfTND9VLPwcf4VJ9MNNIz99x4r+uc6f4wl4
Pp377QE/n671vp4Cz7FfDYCfT9f5zQP4PRns+tl4X43x1beD58Qf88mG/rn8
DQN4/3wG/dtjybfP0P4zOsDPZ/D+VlX64fAXTbKhfy678Vz4+Qzd99iP9MNh
b7kPns/Q+RdlIt8eqv23Gs3vw4Vqv02t4Dn2slH0w4Vqve8Z0EsNVbzuGQz9
c9ktR5JvD9X+98+0oX+u/dSZST9cmMabKsDPw3Qf5Yx+uDCttzQefo5tLc/7
52GKf/QQ/DwMPnkIfo5d4Bbvn7NeDmfy7eE8L18Cz8Pph6hCvj1c4+/an8ek
f654nZdb0T/X/EBX8u3h2r9PKurn4brf5sus6J8r/u3n4PlM3cebX1b0z2Vn
M8PPZypeWvvznfTPeX4Igp/P1H4mlwfPZ1KPi4Kfs94e+/Oa9M95nyYZ/HyW
1ksaSP18luL3TqQfDvuaC++rMX7kJPAc+8s3K/rn1C93guesN+M3eD6b/oTO
1M9na/zwEjb0zzXe8YwV/XP5L2eFn8+mf/QReE68gr7wc+zLxvvns8nXZYGf
z6EebH8ekf45/b3dreifa71Ci+Dnc+i3mwc/x98xFn6OXaEW/HyO9nduIXg+
R+cZ1Qt+PpffQ9lMvh27zGgb+udaL/sX8Hwu80eB54xPs4n6Of40hcBzbIc7
4DnxMjSnfh4Bn4qAn0dov+MC4OfY5d9Z0T/X/ZWIh59HaP1pDuTbGZ+Uj/p5
hO4z/S34+TyN3x/D++fYyQsa+ue8T2nw83laz1QAPJ9Hf4OF35PBv6CxDf1z
rbf4CPl27FcVwfP5steEWtE/574OWtE/V7wG16ifz6eekhs8xz71wor+uc47
0m5L/1x2Fbst/XON//f+tPTPqee5gecLNP6bI3i+gOfvKPB8AXzxBXi+QPs7
fQk8X6Dz/N0HnhNv4FTy7Yx3mQo/Xyh/oYHgOfb5RPLtC7W/8YH0ty/U/OQ5
wXNs5zjwHNt9shX9c/pZL4Dn2HGPwfNI3u97Qj9cpOaXPg8/j6T/ZSf9cJHa
X+v2vH+Offw79fNI3U/nrOTb8bc7S759Efm9LOD5Ir6/PMDzRVp/71f4Of7B
vvDzRdrP+uLwc+J9bmPon8ufbxz180Xkc8eRb1/M989YK/rnWq/PWPg5drst
1M8Xa/4V+/OO9M81P+0p8Hwx/SknwfPFus85razon1O/qA6eL+HvdxP8HLv8
KN5XW6J4hdLDz/FPCeD98yXUG+LJt2OvKAieL6EeFE/9HP+/30OU/jn8oip4
vlT3OyaGfPtS7TdXDPx8qeZXfAeeL9X93LhBfzvxXK3g+VLqi2vBc8Z/nQk/
X6b1Uh8h346d38LvySzTfJ819Lcv0/mv5aUfbpniVXkNnmO/SQ6eL9N+zw8D
z5frPNlfgefLFT/nKt5XW878odTPl9Pf2IB8+3LtL8EPfs740X7Uzxl/8g94
jr/qJernK7SfD9Ph5yuo1/4Gz1doPwuegefYQbng59jxy/i91xXaz6+p1M9X
6HwJf6zon8PHfoLnUZq/sSz59ijt78AK8u34O68Az6M0f8kT6udR1LO8yLfj
32R/vpL+ufx9DX5O/OpnwfOVPM/an6+kf07+Kyu/D7dS4+MiwXPsvKXoh2P+
+3bw85Xkg39Y0T+XvXgJ+XbiT/9uRf9cdq9e9MOton7Sz4r+ueLv6Ame48+T
id+HW8X/YwnwfBV8+z54vkr38d2d/vZV8Ft3+Plqxfs0hn641fLfqQ6er4Zv
bKZ+zvhiAfDz1fw9jIafr+Z9glbg+Wqdb2cR8HwNz/stybdjZ/xkRf+cfI4V
PF9Dfc4ZPMcu7ACerwEvXpNvx98lL++fr9F+s9wi375W57lekHz7Ws3vcpN8
+1qNz2GGn6/V/cYXAM+xO1aEn6/VeXO/B8/Xwpeu29A/13le7gfP18nOn598
+zr6q/2t6J9r/pXp5NuxPY7SD7eO/lln8Hyd9tM6J/3tjM+3l3w744NzUD9f
z/PCX/B8vda/sZt8O/7Kg8Hz9fTzDgbP1+u806PAc8Y33AU/X6/9zP8Nnq/X
fe6oCJ5vkL/oCvLt2K8GgucbeD6fCJ5v0P5STQTPN5CPcoGf4+8dCJ5v0P6s
ucDzaP7extMPF6318u6zon+u8X/7g+eMz7IVPI/W+cZ9ox8uWvur+I331fDn
SSTfHq39tPeCn28k3/0EPN+o+/S7w+/DbaQe8Zh8+0bqB2fg59hTPoPnG7Ve
/9PgOfE7x8PPscNGkm/fpPNF3IKfY9fIAj/fRP99Byv659pPzVrgOXaezPTD
MT57iKF/LjttM/B8k+53RDsr+ufkP9eSb99MvjcjeI7/vDt4vhn8G06+nfEX
7c9H0j/X/t9WB8+ZX7cJeL5Z9xu8xYr+OX+fV+hv36L5Xy6Tb8e+YyPfjr16
JXi+RfFLNOL34bYo/lcr9XPGv7oNnm/V/j2j0GPZKn+8A/XzrdQ/48HzrYrX
KTd4zvyN0fTD4e9rt6V/rnhzwsi342/8gnz7Nu135nlD/1zxNtcFz/F3qAie
b6Pe3dyK/rnGh1WAn+NvFwI/36bPNykYPMeO6Qeeb+f5+zr59u3wx1j627cr
/php1M+3830zDTzfrv1NSw4/3873wzDwnPFFT4Pn27W/767k23dovRLJ4Oc7
5L/5F36+A7zZRX/7Du33eUfwfAf9Ac5W9M8Vz/EyeI5d5Q94jn3lIe+f79T8
hCjy7dgpH8LPd2p8q9LUz/FnzmtF/1z7ydoePN+p/R4PoH6O/9J4+PlOnW9C
BvB8l+KNrg4/30X+KT14vkv393og/JzxI44Y+ue8n5Iefo4d6gueM35BPSv6
54r3dqkV/XP5Vy0Fz7GzBVrRP9d+6rw09M/5/jH4OfESwsBz/N65rOif8/xY
DDzfo/sskIZ8+x7t931F8u17NH5CRfB8j+7v6D7q59iWfeA5dqYz4DnxHVNR
Pyee33TwfC+2/flF+uca/+AUeL5X583bHH6+V+cbkgJ+jr1ut6F/Tv96Ofg5
9rWs8HPG/0xGvn2f/MdOWNE/l98yH36+j8/XBzzfp/8np53Uzxk/eJ4V/XP4
SE/4+T7dZ7NV4Pk+3U+2y/S371e8+7/B8/06b6/f4Pl+3j+6RL59v/bbwpl8
+37F+9IQfr5f+w0OIN9O/HzuVvTPFb9wEPz8APhzl364A4rv3wA8P8B+X9MP
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
39sx+HlNnae/gefYX5+b0T/X+CN2W/rnirfjGvwc/49n5Ntr8v2ehfp5LfhT
VfLttTz/rx9P+ueabzoCntfSeR8ZeF5L+wl5akb/XPELdLGgf674T+zPE9I/
1/jtDcm3e8he1Q8899D82Erwcw/NH1aJfLuH9tfpIHiO/9468NxD+/vRETz3
0P5XdoSf47f0oX7uqfWWr+V9NU/FmxIHnntqfx5x4LmnPv9cvcFzT8X/Pgs8
Z/x9Z95X89R6S9sa+uc8z/WEn9fWegvdyLfXJn+eBjyvrfP6+VI/x3+sLPy8
tuI5jATPsc95UT+vDb9MxfvnXuTLXMFzL+2vlyt47qXx6wPIt3vpfjxDLOif
g4dO8HMv7b/Ie/Ac/6x7ZvTPNT/BBTyvI7t7GerndXS+7afph6uj/dwsDZ7X
UfxZtcBzxpcuST9cHfKPKcBz/EtrgufYOd6A596y/yQHz70136El/Bz/lxvg
ubf2e3kIeI7tdtuM/rn2e9pEP5z3/+rb0j9X/LbxZvTPdZ6mgy3on+vzmLCJ
fDv22WO8f15X8/2DqJ8zP/GPGf1z+c83Jd9el/pbcfCceOcKwc/ryd/mO/wc
+9hC8Bx78zf4eT3Nd10IP6+n+zkdCJ7jtx0Bz/HXq0/9vB71hozk2+tr/Oix
vK9WX/dZJiP8vD715UO8r8b44DjwnPEB88i319d6H0eD5/iPPibf3kD35dcB
PG+g+Ok6gOfYY/PCzxsoXuE65Nvxp1oNnjfQfddtAJ430H2ZR4Ln2ClGkm9v
qP24zuF9tYY6j9MH8u34/+kJSP/8f3xY+ufaT5Mo8JzxGfKD5/gP1aW/vaH2
6+pIvr2RbFM++tsbaf6j5eA5tuk0+fZG4Hlr+Dn2snv0t2P3OAU/Z37OU+Tb
G1EPX0q+vbH2tzUMft5Yn0fzXfDzxuSTSsHP8afIDp5jB1SnH454nQPg5411
vsMfzOifK17oYPC8ie7zqSd43oR6oCd43kT7/R1rRv9c8W7b4OfY4+1+6Z8r
/qbMhv65zt/aETz30f4WVQbPfTR/xE0L+ucaX+Mm/e2MN78Fz30U/0oT+uF8
tL/KgfBz/Evng+fM310DPG9KP8B18u1Ndd6D6XlfranuI2mTBf1z2bMPUj9n
/Ojs5NubUm8+YUb/XPZkN/g546Ozwc+baX+eaamfN5O/zHfwvBnfx+Xg5834
fywInuPvehk8Z/79vfS3YyesB88Z//oL/Ly5/Kf20N/enPrHffLt+I9VBs+b
6/yez8zon8t+7AyeYy/pBD9vrvMvsj+PSP9cn2dp+/OP9M9lh2UEz1to/WF5
6YfDrtCRfDvj92eAn7f4X/1R+ue6z3IB4DnzWxj185bkayuA5y3lv18ePG+p
/abzB88Zn2wVeN5S9393GnjeUvsJMvAcf7Vp8HPiHYmyoH8ufy4r/Bzb8x14
jt2uHHjeSus7/wLPW2m9s5upn7dSfN9g8LyVzvP5FP3t+KumAc9b04+RGjxv
rfur9sCM/jn1jvtm9M91n9bs1M/xT51I/by11itnHy/9c/A0G3jO+JNL6Idr
o/X+/Z6W9M9lPy4FP2/D319X+Hkb7T+mC/n2Ntp/eBb4eRutN/0YeN5G66XN
wvtqbXSfX4Pg576K3zwOPPfV+FaV+T0ZX+1nXCbwHHvtDjP65/Bl+/OJ9M+1
v8+rybcTL+t5+Lmv1g/Obeif0/82EH7eVvOH+MDP22r8um1m9M+5jye8r9ZW
65ey+6V/rv1Nbgeet+X/MYp8ezvFn2bUz9spXv5cvH+O3e2XGf1zrR/ny/tq
+Ac0It/eTvFr+9IPhz/VIwv654zfDz9vr3hDrpnRP+e+9sHPsQefBM/b08+V
jf729vQT7aV+3l7rp3kAnjP+V2/wHH/lVvDzDrInl4afYyfrTT9cB63fJ9qM
/rns65l5X43xnb+a0T/X/c+sS/0cv3N++HkH7feDN/y8o/Z3pST8vKP8vXuA
5/h/1YGfd9T6JS6a0T/XehFNybdjZ0mEnxOvvp3fS/9c848GgueddP9rL5jR
P9f8jX/Ac+zQJvDzTjqPTxPq59jO/uTbO+nvu/F5M/rn8qe8CZ53pj7gST9c
Z61/rx/8vLP2m/MGeN6ZfF5h8u3YiwqD58z/a/Bz5r9aaUb/nP4HC3jeRf4V
ucDzLvST2G3pn8v/yf78IP1zref6HX6O/2cv8u3MH/0Nft6F/rEVZvTP5Q9/
Y0b/XOcf2I36eVfFt9Ul395V499MgJ/j358PPMcO9ub3ZLDTvjajf07+1MDz
rvRPfgbP/eDDy8zon8v/4BZ47qd4m8aB59j14qifMz5/F+rnfrqPvf7wc+y+
F8BzP30+vzzh5914nvsInnfT+Cw3wPNuGh8/lXx7N+33YybwvBv1knPwc+Z3
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
3GUTPP+o9uUnoc+x+62B5x81/+qx8Pyj2pf8CM8pf/c6kfzn+L83NCT/ucZP
lh6ef0T/1cHf/on4DIPfyn9OvOkoeP5J9VcZvFb+c/yBxfG3f1L/896hzylv
E4M+/6T5NAxy5D+XvW0tPP+M/l6Lv/2z2pd5C8+xF8YSD/dZ7c9H874a5X9q
oc8/c78dTyT/OdejPf72L5x/RMHzL7wvcRqef4HXgcTDfeF8ZxX6/IvG+9YS
fzvlB1qiz2n/YCQ8pzxHS/ztX7VflwLwt3/VfMxNEsl/znldC/zt1O8xAp5/
JR4pDf526v84jr/9q8Zb6Yy/Hbu+K/72b+ovpSs8/0Y89CL0+Tf+z1qizylf
8zCR/OdqvysV5+fUvzYwkfznmt9Kw1b+c7UvOpTz8+/ESzWB59jbm8Pz7+qv
5hD0+XfePwqH59/V/1F7IvnPeX4N4/z8O/EQjeA5/RUNg+c/NP8BTo7858RD
+hEP90PzCQ6F5z/wrxh6XvnPZV/8iz6nfdhAeI69pjE8/ynbZQE8/8nz+Z9E
8p8zHzvx7dQf2B9/+0/Np1UoPKd8Ww54/pN44t3oc+p3uMv5+S/OO38lkv9c
9TvtRZ//Iv4pGH2Obb0Jz38Rf2NHn9N+wE7Oz6k/zsb5OeWPGySS/1zjb7PC
c+wUP+A5drtZ6PPfWl874/lA+c9V/nJ7IvnP1f/qn/Ac+2r3RPKfq37erPjb
/8gelIC//Y/qF++OPsc+dg19jr2hAefntN/RA55TvjkrPP+j++1ePPoc2yMr
5+d/4WlpeP5X+2nxhud/+X/qgj6n/EMp/O1/dT13bU4k/znxnpnxt9N+3GV4
nixYz/ul4LlhJ/mP6sNz7B+Z4LlhJ93fV9Dnhv3f/HtMgeeGnfQ9gVKO/Ocq
r1sCfW7Y/13/FR8SyX+u8X98hOfJ1X/EJvzthv3ffFNvQp9T7jYRnmOPMniv
/OeyCxm28p9rvJ0b4HlyrSdDR3ieQuMviCUeDnuaod+V/1z9FQiC55TfaM/5
eQqtr8g7vieTQv0XqQXPU2j8qLOJ5D9X+xUG/5X/XPs1fRw8T6n2Pu3wt6fU
+IfbJJL/XP1NWQPPqR/dBp6n1HxSjIXntC9wGn879V1j4LmT9vdsWs7PnTS/
YS/huZPav24Fz7HzpkWfO2m8P1Hw3EnrWV8InlNeoxD63InrsSKR/Oey+xn6
WvnPZf/ryvtqzppP0xXoc2f1ZyuIPnfW/AsVdOQ/V/tlI9Dnzprv2NSO/Oda
f6rl8NxF/Z029JDyn6t+i2XocxeNn384PHdR/4Oaoc/pr6UL+pz2aY1y5T9X
//uHos9Tqf7QI4nkP1d/AUPheSq1f7EYnmOPWQzPU2k+dfzgOXZJJ3hO/5cd
32+n/+ZVHPnP1V/3xonkP1f9jA/heWrNd2weR/5ztY8M4/w8tfY7VQp4Tvv5
yfG3p9Z8Gt5HnzNeRCg8d1X5uNBE8p+r/6778be76v55NAB97qr+l97l/NxV
41e4iz6nv33z0OfYjf7Ac1eN364fPE+j8T7b8LenUfkVK/qc8re3E8l/Lrun
wU/lP9f4Llb0eRqNt93K+Tl2lTmJ5D/Xfi7J7sh/rv7KVUSfp9X4Z83wPK3a
W3rD87Tajyx9Esl/rvZ3sjryn6t9wE14znjbK3B+7qb9mzQDfe6m/p9dh+du
Ws+V7ehzN/W3sjw8d9P4WbPyvhrluaajz7F79ESfu2n8U/Ho83Tqv+0X/O3p
+L1dg+fpNJ/+mRz5zzXejmnwPJ3Wu/sf9Dntxxj6VfnP1f/Oy+hzyhO3os/T
q7809eB5es238hTi4dJrf/J2g+eUj90Ezynf/AGep9d8Wn7C30753I3wPL3G
/1sbfZ5B82vUCZ5n0HqLd+H8nHKP2pyfY5dxx9+O3bozPM+g8aLi0OcZtL79
k+C5u+a/r1Mi+c9V3xaLv91d/fUdj7+d8uFn4bm75nc9LpH856o/8DX63F3r
/3gOfe6u8U+8Qp978P+bHp5jb3yDPvfQ/O6Ngece2q8La+G5h/pLfxaee2h+
7unQ59TfZuhd5T9X/zkKw3NP2XdHwXNPzT/LSvS5p8bP9xx/u6fGm7wCnlO+
fCQ899T4847Dc+y4U/Cc/teMQJ9nVPuTLeB5Rs1n4En0eUaN9+k5PKd+fsf7
atjrRsFz6ncbRTwc5U+Hoc8zaj7vRuJv95JdaQX63Evtj7aE515q/+UpPPcK
/n9/q/Kf6/pvPoa/HTusKTz30v6PHgLPKc/jgj7PxP+ZM/o8k+azfDD6HNvP
GZ5n0viN/NDn2L/98bfTX7Hq6PNMGu9cLkf+c9k7w+C5t67Hor/oc2+1X7GY
eDhv7cfdAfDcW/Mp8BCeY1+dhz6nfv8H8Jzy+SHo88wav8lgeJ5Z483MTTwc
5der4G/PrP07OgeeZ1Z/a+4lkv9c9iNDLyr/uexF+xPJf671rbLib8+i/mbm
JB4ui/bP4ybx7Vk0fouG+Nux0zZEn1M/q6FXlf9c/buFos+xO/5Gn2fRfF72
gudZ1d5kRp9n5XnzGzzPqv0b+wueU17LsJX/nOfNYPQ5/Xn3g+fYKYxy5T9X
f1+uwvNsKndLwN+eTeXPdiWS/1zlWcqhz7NpvMOV0OfZtJ5BldDnlA/7Ds8p
t8Zzfp5d809ulCv/ufqP640+z67r0fwjPKd+3oqcn2dX/xOvw3Pau19Cn1P/
ijfxcNh7e8JzH/V/fjr63EftgyfDc+w603lfzUfjrcsGz310PVNsw99Ofw8n
wnMfjbfnCjynv7dl0ec50H/pHfnP1X+nqfA8h/qbF59I/nPVTzkVnlM/Mh59
nkPXa+5r9HkOze9OLDzHbrMWfZ5T7V+mxd+OvSwt/nbst13geU7NZ2A9/O05
NZ9D7vAcu08a9HlOzedJZ/zt9Ne6LvFwuTSfR0XgeS7VPxSDPqe8dCb0eS7t
n+9J9Hku9ZexDfFwlEd4JZL/XPdbh9acn+dW/cUT4HlulV80+Kj855r/Yzd4
TvnV8YnkP1f/3Y6hz6nf2ChX/nOVP0yLPs+t9dQNQp/7wvNxxMP5aj5dItHn
vlrv03b4233Vf780vH/uq/1v9gh/O+19C8Jz2pdfDc99Nf+TYzg/zyO7saGX
lf9c81n4HH2eh+ddf3ieR/3HPIDn2Gmf42+n/e9q8Bx7ezX87dil06PP86r/
SSs4P8eOO4A+x15UFX97Xu3fuv3o87xcz/2cn+fV/rgUhufYLZ6gz/Nqvo/v
8D0ZP/UfVgV97qf6WQbyfTg/1f+4l3g47EfDE8l/zv/fAPS5n+ZTKpLzcz/t
f26jvvKf8/wZCs/zqb9REejzfBq/y7BE8p9rva1D4Dl21E14nk/9dS8Az/Np
/Nmz0ef0X7Iv5+f5+X2mJr49v9oPOZhI/nP1Xz4cnlP/3XV4nl/9dT4Az/Nr
/2Is8Jz2aSz426l/5Qs89+f/JB8899f4wXfR5/7aTx8XeO7PflyF5/7qP64n
5+e0/zwNfe7P/XQFf7u/9mNTQ+LhCqj/sL3o8wIqz98QfY59NRSeF1D/1j3w
vIDm8+YHPC+g9by3w3P632yH55RXvMn5eUG1bxSCPi/I/dWX+PaCPH/MhucF
eZ6qhz6nfryD5wW1Xg8bPKd95tzwvKDmczJXIvnPVf/ZdfR5IfXn3AeeY7c/
B88Lqb+6E9HnhTSfw2fR59hVc8LzQvxfesHzAI1fpCP+9gD8mWfQ55R7nYHn
Adr/bj3hOfU3+MBz7GVbiYcL0PzeBcHzAI3/MAGeF1b/9h7wvLDWF3EKnhfm
ep9EnxfWekKmwnPKfTzQ54XxF9WE59T/8sVO/nOVT3RHnwfy/+uOPg9UfxM2
wXPKF6zA3x6o+U6tD88p33cMfR6o/t+OhOfU9/9oJ/+51ld2Mvq8iOwLhdHn
RTT+vUn424uofcp68LyI9vf4OXhO/WtL4Tn9bRzO+2q0r7oenhfR/KK94XlR
7U98J+Lhimo9Oc+iz7HfL0afF1X/DSLgOe23jEefYw908Jz6hV6iz4upv7XF
4XkxzX/UOHhejPpN4Tn24yB4Tvv9Y9HntD/uCc+LaX/SpYbn2LZ28DxI7b09
4XmQ2tdvDM+DtD/Bz+B5kMY35YPnQepvX1H0eZDW+9/32JX/XP119sPfjn1j
FDwvHvz/8U3Kf67yOXnR58V1vfKPIr69uPrvmgjPqR+ZAZ5T/+U9O/nPZZvz
wPPiWs/maHheQus5uxN9XkL1Y0agz0uo/qJ06HPsVIV5X436Ww6jz+nPbQf+
duo/taDPS/B77Q3PS8o+sxh9jj2kFzwvqfbPrsBzyndWRJ9TvngR+pzy8Gbw
vKTmk68n+ryk9utAU/ztpXT9Xaehz0vpeoy8C89LaX23r9jJfy77ZhPeVyul
/juU5/1z7JSD0efUH/MPPC8Nf+bD89Ia/94F9HlprWdoNvztpdV+ftVE8p+r
/bdG8Bw7riw8x372A31eWvuxvQs8LyN77zk7+c81Xvo98JzyIpPwt5fBv1Ea
nlPfxQ99Xkb7ObMuPKf8SCl4XkbrC0yE52VVv2EoPC+r+X7qC8/Lqn2Hjrx/
XlbrX3TSTv5z/CVf4XlZntdC4Dntn3rhby+r9fyywvNysm0p4Hk59T/rMzwv
p/nUdrx/Xg5/ZWX0OeUpe8Nz2udJDs/p/1AleE794g6el8d/mAyel9d6akyH
5+W13+NXwPPynBf0RJ+XV/9vlsNz2g+N4fy8vMZLPg1/ewXVn3QJfV5B802V
A31OuYtRrvznsttmcOQ/R18udeQ/V/nSBvCc8mUX8LdX0PxTtuT8vKLmZ1mC
v72ixm+yMZH851rfoK7oc8qrOvQ5tut59Dn1e9Xn/Lyixp9RiPh27JpD4Xkl
nk8NPir/uezar+F5Jc2393r0eSXN97/voyv/ucarmwV9jv38DP526h9ZgD6n
/5AC6PPK+ONc4Tn2p2r42ytr/Amn4Xll9V+/Gv526r/OD88r6/45dwp/O/bo
U/Cc9hVPwfNg9d9vAPo8GP/lOHiO7TUXnmPPdIHnwejlsfA8WOMFueBvp/xM
O3geovF3zub8PETjeyXibzdsZ6O8xQs7+c9Vf7Idfzv20xXwPET76/wEnodo
/CM18bdj960Jz0M13k4PeB7K81dveB4K34Pxt1O/R1H87aFaT/UYeB6q+/3b
Q87PQzVemtbo81Dt19ZW8DwMviXH3x6G/7gnPA/jeSEanoepvy0V4XmY5usf
Dc9p/7VFIvnPZfeKwt+O/d/7hcp/rvX1OIg+r6L+Mv2DPq+i8Wr4oM8pr9sc
nlPe8gA8r4K//pad/Oeaf4eu8Jz2D7LB86qym96B51VVP3KunfznwSFORvnF
OXbyn2u+tRegz7GbZkWfV9V8Iuvhb8cuuA6eV9V+/1MXfV4N/+QEeI696SY8
r6b2DW/yvlo17d/vAfC8mub7/hv6nPY7vdHn1TSer8Ff5T8PDvlp1K81zU7+
c/XXPR/6PFz717QEPMf+9QWeh2u/dhcnHi5c41XfmUj+c/TKLHhu2D+M9rkM
fiv/ucq7jya+vbrGz3wNnlfXeFe3o8+rc56Xh/fVqut6HD9tJ/+52ocYtvKf
q/3WGfjbGa/XDHgewf9NSngegZ71hecRnAe2gufUX9ULfY7dajo8j1D/ObbC
c9rbxtjJfy57cU94Hqn2ZjM8j9R88+WC55FazzET+hy7fQ94Hqn5zmnO+Tnt
3XLCc+pninTkP1f9qO7wPEr1152H51Ga3/7y8DxK9eMbcH4exfnNUDv5z/G3
zHfkP8f/WACe0757OPo8Wu0/dYHn0Wq/oz48j9b+LfFHn0drPkH10efR6q9Y
NvQ59Ud0huf016gq+pzyfPXQ5zU0/kJDPyv/uX4vloboc8N2Mcq7fLaT/5z4
nkS+3059UyL6vIb6X/4MntfQ+q+Pw99eQ/OdGgrPYzT+3NrwPEblG73hOfaK
EPR5jPr/3Rue0z4kD/o8hnis3uhz7B+PiYejv82x6POaxFdZ4HlNlZ/YYCf/
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
nYHnndV/udzo887a/3JGufKfy/6TAp531u8jm8FL5T/X/kxYC887a/wqDdDn
lK+Mh+ddVD4nOf72Lup/aErOz7sQvzIBnnfh+qV05D/X+J+O2cl/zvVLgT7v
ov0sngx93kXrX5UTfd5V9f+Mg+dddb+8G20n/7nmuzE7/vauml8pQ18q/7ls
52PwHHvZUfQ5dmMfzs+7qb+1deB5N54PfsLzbhp/7g87+c/xBxu28p8TH5YV
nnfT/g019Kfyn8vOeh+ed9P63bOhz7vLvnMInndX/5XuwXPKnw2G5921P1G/
4Dl2trbwnPbr2qDPu+v/aE2Enfzn6q+3NzzvwfP8R/R5D+3Hz9vwHHvTbXje
A/+pNzzvwXlUEDzvof6r70ef0/+oizbyn2t+l/bhb++p+Q039KDyn/P87QXP
e/7vvEX5z2WHFkOf91R/53rbyX/O/5WXI/+5+ss6FH3eE32U0ZH/XPPNfwOe
91L9x56O/OfqL5nBR+U/53zLE55T/ioQnlPutxue09/9QfC8t/RzoBM87636
zSPR572JZ11rJ/857ye5c37eW/Mv1hSe077wCRv5z3n+2sn5eW/tz/dkdvKf
c/3Sw/M+6M338LyP9FTRvzbyn8PrQvjb++j3nbqMnfznxGM1gud9tL4lh23k
P9f9n7MR8e19eT/4HTzvq/lsf4s+76vf2+6fNvKfq/2lGejzvppPBoOPyn/O
+51p4Xlf/o9uEw9H+dwq8Lyf5vfxm4385ypPdwGe99P/b0VDbyr/udZXoCX6
vJ/267ANnlPepoWd/Oeab50vNvKfc37ZC33eX+P9uxF93p/fWwg876/5N5kL
z/sT352X8/P+2q9+qTg/76/rFTTHTv5zld8M5vx8APGDz+H5AI3f2tCzyn9O
vMp2G/nPVT+7GX875YcK2Ml/rut3txs8H0A86VP87QO0nhWT4PlA9delEjwf
qPXlmgTPB+IfqQjPBxJvdRKeDyT+8AT6HPtwLnhO+6ic+NsH6v5cn9dO/nOV
f+yMPh+k639psp385+qvZ2d4PkjrGTIeng/S/1PQehv5z4nXqw/PB2l/Xq1E
nw/SeqeXQ58PVn9tyuFvH0z8dzl4Pph46mTo88HqL9lReI5dwgd9PljzKZWD
8/PBmv+ZMvCc/uYegedDZI8YYyf/ufZ38S/0OfbM0fjbh6i/93fR50OInzoE
z4fwPLvcRv5zrSf/XXiOvWqZjfzn+j29yWwn/zn+m4Po86Han/iR8Hyo5vO8
Dfp8KPGKJeH5UK1n4WJ4PlTXM91iG/nP9XuwenF+Pkztnffjbx8GjxYR3z5M
47f1Rp8P0/4G3rCR/5zzhpucn9M+dBg8H8bz7Q7Oz4dzvhJBPNxw/Z+ZIvC3
D9d8M1yzkf9c4z00+Kf855rPwt3wfDjnse7Ew1HeIxp/+3Ct75knPB+h/p+n
hecjVN7bsJX/XNfD+xX+9hG6Xr8COT8fgX87zE7+c+2n/wwb+c+Jd4tEn48g
HmsOPB+p9bbqAc9Hqn2dZ3byn/M+bir87SP1e6141kb+c+JfGqPPR2p/E6uj
z7Ets+A59otw9Pko9N42eD5K87l1ykb+c/zJKeH5KK5vP+LhRmk+JSfZyH+u
+Z50deQ/1/5vWmEn/7naH6zK+flo7X/X5ejz0Vr/aIOnyn/O+/fn8LeP5v3D
l/Cc8tapeF9ttPYjtT88H63reSwMfT6G+BwbPB+j6+tn8Ff5z1WefCr6fIz6
L1nCTv5zra/bc/Q59QuegedjtB+3WhLfPkbzWXsano/Fv+8Hz8eq3NMCz8eq
v+fB+NvHqr/Fze3kP9f1ydYcno/l+WuYjfznsj+4oM/pf8paeD5O92v3ofB8
HPHahTk/H8fzsy/6nPIHH9Hn49R/+hPwnPpHC8Fzygesxt8+Ttdzz3sb+c85
DzsGz8fz/9QZno/Hf73NRv5z7df9qejz8ZrPvznhOf09v48+p7zda5t4PkH3
3/1y8HyC9rODoVeV/1z2ajP6fILGy5kDnmN/SIY+n6D5zveB5xPQMyfQ54yX
ui48n4jerQPPJ+p+KnbcTv5zzhtz28l/rvoNssPziRrfmstO/nONP26cnfzn
vG/Zjng4yncvwd8+Sff3yl928p9r/Pu30OeT1P7Afng+Se1ftYHn1C/+CJ5P
0nznloTn2LO+28l/LrvJIng+me8PZIbnk9GHI/C3T1b9qjfgOfWnDIPnk7Uf
Y+7ZyH8ue9q/6HPsfd7wfLLWU7M4759PUf+XPsFz7CNB8HyK7s8cn+A55emv
w/Mp6EMveD6F7+O0hedTNP4FL3hO/dPN8bf/o/X8mos+/4f4kkj0OeUrM8Lz
f3if7C36/B+e3w0eKv+5/i8XbbWT/1zXK6YI/vaput69DF4q/7nGOzoAnk9V
/1ubwPOpaj9pE/p8quZTLwJ9PlXj720Mz6fq93L4ko385yqf0ROeT1N/AdXR
59NU/8ZMG/nPtV8jwzk/p77PFvT5NI2/5zHxcNP0/7KjGvoc++05eE79n5vg
+XTZrc8RDzed/9+q6HPK11SE59O1nzM6E98+nfjaAujz6drP1Snxt0/X+Nvv
EQ83XffPnOX422dofT9Oc34+Q/21DUOfY+8z9KfynxNPbUWfz9D1GTAFnmO/
XwfPZ/B9Cld4PkPr2/sEns/U+L+6w/OZ+j/NeNNO/nOVL7wBz2dy/n/ERv5z
/APd0OfU73kCfT4T/+hYG/nPNb+zqeD5LLVv+Ah9PkvrTWHi/HyW9nvsaBv5
z9V/s6t28p+r/qYr+Ntnab3HiuJvp/8ULvB8tvYvwReez1Z/6yuizyk/mRue
Yz9xwt8+W/3f6wTPZ2v80uPgOXbLPejz2bqf3+y2kf+c8wCDf8p/rvth2Tn8
7XOI5+wIz+fwPJ0Iz6lfIRGeU/4qB/p8jsa79w/6HPtdlI3858QHlcXfPpf4
9FHo87nqb+oAG/nPWZ8P8XC0H3cLns/lfZ7snJ/TPiE7PMcufRx/+zxd/xql
4fk8te+YDZ7Pw197FH2O/Tsr8XDUz18Kns/T9eieFZ7P0/3ScCzn5/Nl/w6z
kf9c86l8CH0+n3jeVuRXm6/xyl+H55TnLAHP5xOP6YiHo365a+hz+j/7xU7+
c+JJ5sHzBVr/5q428p+rfNlO9DnlEwy+KP+51jc5CzxfIB6GfITnC7S+E7vw
ty/Q9V4bgz5fqPnGzkGfY2e/ayP/OfFlUfB8ofqr/o54uIWaT+1oO/nPVb/K
bRv5z2Xv9kSfL9R83QbA80W6XxfctJH/XOV9DR4q/znPmx7wfJH2I4uhD5X/
XO2zLoLnlHc/D8+xUxaG54s4X5kBzxer/5EB+NsXEw+WAZ4v5v2aAPzt1F/d
y07+c+KnrtjIf67yJxs5P19MPFoY5+f0F50eni/RfJr1hudL1P7NI3i+hPdX
p8Jzylu5wnPaRxSxkf+c+KDK8HyJ9idtV+Lhlmp9rXrib1/K+wn+8Hyp6n+f
biP/uf6PKt2D50vVf/9OdvKfa31f08DzpbxPPBl9vlT7c6cDPF9G/FlBG/nP
Vf7tFvp8mdrfmwjPl2m+hV3hOe2bBqPPsdfc4Px8meY/qzT+dsp3tCEebrn4
lMbQl8p/rvIr19Hny7We6yYb+c+139m7oM+X6/dT/LeN/Of4x33xty/neeMw
+ny51lO5Ivp8hfqrHg/PV6i9Uzw8p3xZBfztK/T7qngIfY5d7BA8X0H8qxM8
X6HrOeCbjfznxPM2sZP/XHavDvB8pa7vnjro85Xan4MjbeQ/V/+RM4iHW6n1
/xmBPqf8Wll4Tnuv7PB8la5H10L427GnxdrIf6776dAw9PkqzWfobni+SvfH
uFo28p/zfpQNnq/i/YoR6HPKf8fYyH/O9xEy28h/rv6zx6DPV2u+D8zEw63G
P7vdRv5zte//G3/7at5/XODIf078wgB4vlrXxycr+nyN5hd+BJ6v4TzopY38
5yqPKgHP16DPNnN+vkbXM8MQ4uGo/6wP+nyN7pfKMehz7DF17eQ/5/2FQfB8
reY3uw76fC3nc0/g+Vq1v9oMnq/FP93Mkf/8f+c/yn8u+7cXPF+r/XLahr99
ncbrNIzz83WqX8gLnlPeZxc8X6f5xHWzkf9c6583E57TPrQ/PF9H/FNmeL5e
9+eYLvB8vebfwJP49vWaX4PN8BzbPtBO/nPZmzfBc9pbG8Fz7BXLbOQ/57yp
o43852o/OACeY3fsAM836H6L2ow+36D7f2RfeL5B86/qAc83aD/s1fC3b+D+
SkSfb4A36dHnG9V/eAb0+UaeD9rA842a700bPN+o/dxSAH2+UffnyFLo843q
P8MU9PlGzff7GvT5Rs1vlD8830T8eQ/0+SbN98Ak/O2U35pjI/+5+jtj8EX5
z4kXbQ7PN2k+Hzvjb9+k+dacCM83EX9aCX/7Zs4Db6PPNxNf6ML7apv1fxJR
AX2+medvJ3i+WfPbk5r49s3q32c8PN+s/TzTGX2+Gf05Dp5vIT42DzzfwvtV
U23kP9d6Wyfn/fMtGq9fG3hOef9k6PMtup5lT9rIf679qGDD375V68v7F32+
Fb1dH55v1frC5nF+vlXzyeOMv53ydsfwt2/V+NOKc35O/cMT0Odbtd5L5YiH
26b55/GD59s0v5vj0Ofb1F/Ww/jbt2l/cjWwkf9c/W2Nt5H/nPc5DVv5z7We
xoHwfJvm87cN+nw7520N8bdv533YhvB8u9q7t+H8fLv40/IU+ny79m99LPqc
9ounoM9p7xELzykf1gqe79D9NMnglfKfa34tJuFv36H55bPgb9+h/oKHwnPq
dyoBz3foei+taSP/ufbjxWB4Tn8BO2zkPyf+wihX/nPO91/D8526vkVew/Od
vK86EH2+U/sxz5f4dspbb7WR/5znX1/87bs0v1/74fkutf96x0r+c9Wv0x+e
79L8zkbhb9+l9ZwciT6nfqq68Jz+YnKizykf/JHz890q/+kBz3er/wVF0Oe7
td4Pw+D5bt1/p3bhb9+t6+c9DJ7v1nrTNnbkP1f7YbXwt+/W79+pKvp8D/6O
61byn+v63WiIv32P5pOQjvNzbOc18HyPxu+0DX2+R+OZQuH5Ho2XzREPt0fz
a3kPfb6X849e8Hwv8XD94fle9f/LFZ7v5X2iDPB8r/bvzHIb+c+Jp6wCz/dy
XtaJ83PKB93C375Pv+9gD3i+j+vjYiP/OedV6+H5Pt6XDEOfU3+XGzzfx/3d
zkb+c87vFuFv36/xS4bib9/P+XU3eL5f/Wdcjb99v+a3ZIGN/Oc8n6bl/Bw7
Nh8834+/pCv+duyuwejzA9rvBZdt5D/Xfv65BM8pH5sanh/g/KGFjfznqu/Z
mfPzA5zPdUSfH+D/ITU8p/6wDujzg7zf0xF9fpD4k3j87ZRPP2cj/7n2a+No
eE79iCNW8p/r95u/KPr8IO97tIXn2H/Lw/ND8OCblfzn+FcMW/nPdf8O+mol
/7nKzzo58p9r/PR1OT8/pP2q1BKeH9J4J1sQ3075sbLo88Ocf022kf9c5Zdr
o88P83xwHp4f1vWtYrWR/5zzn2L42w/r+poNW/nPiU/6YCX/Of7yYfD8iOp/
nM75+RHO8w/D8yO8jzkUfY5dPbsj/7nGzzUNnh/R/mwewvn5Ea2v00F4fpT3
cVs68p/LXp/HRv5z2SunwPOj6v+Kr43857pe5t/o86Oaf/d9NvKfy/5dgPfV
juKv3Wsj/7nscT85Pz+m/S4xEX2OXecI8XDHtB8PDnN+foz3Nb7jb6c8zIQ+
P6b5e22ykv+c98Oj4flx9d9+KPr8uPazXRT+9uPEc+XB335c/TVugj6n/raa
6PPjxCc/spL/XPPJso14ONofioDnJ/T7/DWC8/MT2t9L0Tbyn2v/rgyH55RH
Die+/YT6C19tJf+5ytPu4n21E7rey4cS335C62/XF56f1PzXBKDPT6q/JgHE
t5/U9W37GJ6fxF+/3Er+c9Uv746//aTmG7wOnp/UePNfwPNTmt+yAfD8FPFY
Azg/P4V/JT3+9lMaL0cVeE77U0/h+SmtL+e/VvKfq7zxRnhO/+8zwvPTnEet
hOfYL9zg+Wni/0Pxt5/mfg5Gn5/mfTc3R/5z3T/DK9vIf67rmXoZ+vy07of8
JvT5GeLlgzk/x24cDM/P4G8x+KL85xo/OhU8P6P1VbtoJf+56ndoD8/P8Lxh
2Mp/zvsz5eH5WY3XtYud/Ofav8S2NvKfw8eU8Pys9uPNTeLhsNtWRJ9jJ1bi
/Pws5z/z4Dnj3ajnyH9O/ForG/nP//d+ovKfa/zX5fneK/aA3PD8HP7aCzby
n2v+M8sRD3eO88BcxMOd5/3iOvD8PP6bcvD8PP7nZsTDned92rL428/rek6Z
YSP/uf6vapfmfTXKD/60kv9c7Vfl4Pz8AvFTLXlf7YLGjy9DPNwFvndUEp5f
0O9t20l4jh04wUr+c+6fwjbyn2u8fsnhOfVnBdjIf679qP+L+PaLvG/1xUr+
c5U/runIf67+G2Zz5D+X/Xo/PL+IP70m+vwieqsRPKe/P/428p/jzzHjb79E
PEphzs8v6X6+aye+/ZL6ixuHvx17WQL6/BLxeIat/Odqn26ElfznxNsPt5L/
nP+LeHh+WfMZbdjKf67ysd/g+WXdn2U+wnPs7kOt5D9X/eq+nJ9jPx+Lv/0y
/ojG8PyK7pdO26zkP9f8lgyH51d0/86NR59f0fWsOhp9fkX7v7Y68XC03xCH
Pr+i9bQcCs+vom/3EA93VfWbxsLzq+j73PD8quafz+Cj8p/z/o2HI/855zE1
4flVra92NfztV3m/8w3+9msaL+8W9Pk1rW/IAPT5NdX3qoE+v6b+k1V15D/n
vL4g/vZrxDtl4Pyc9r022sh/rvkk62cj/znnN5ng+XWeHweiz69zftkHfzv1
P/nD8+ua/25/9Pl1/IWr4Pl17dftlVbyn+v+SOnN+fm/ss91tZL/nPP9qvD8
X633/Tp4/q/+P4q7o8//5Xy5io3857JfesJz+j9yB33+r9a3+oaV/Ofab881
dvKf4y9YYiX/Oe9nreL8/Ib2I9ly9Dl2o5v4229o/J4r7eQ/J/4gD/HtN7V/
35bYyH+u+hNvwfObup4nKsDzm5qPkyv+duqProi//SbfH7mBPscONHim/Oea
X4ur+Ntvcf2u8z2ZW9rf2+Xg+S2N53mF+PZbnOeW4/z8FvfrBSv5z1Xe9xI8
v6X9LngJnjPedCd4flv7f28W+vy27pe7ZeD5bfXXJg5/+221t5Xl/JzyM7Nt
5D8nvrmZlfzn6Jtk8Py25tM7GTy/o3KP0ujzO9rP4aXQ53e0vvq1HPnPtX9T
zsHzO8SDnbSS/xw93MhK/nO1X5UNf/sd4kV+Wcl/rv2t/Qee30Vf/Uaf39X/
jc909Pld9X+jMfFw2G1O8r4adshveE7/bQw9mcTze7ofttjxt99T/0MOW8l/
rvG7Zsbffo/zPoN3yn+u/epkR5/T3zEbPKe/09/Q5/e03nIT0ef31f7VV3h+
X/NtNYF4uPvEBxTh/Py+7sdBEcTDUX+MwS/lP+f9W0c8HPXTjrGR/1z1+wY6
8p+rPEd9K/nPdb2tI+H5A12vgPfo8wfMd5eV/Oe63i/ewHPs3b7oc/rr+g6e
P9D8AnfB84fq3/ct76s9VP0N29HnlNeLQ58/VP+J7ujzh7o+lu3w/CH+wMFW
8p8zXg4b+c+13s9bbeQ/V/+9a8HzR/q/a5Mdnj/SeC614Pkj4kEMvin/Oe8f
9Ifnj4hn2mgl/znvk8bA80fwv5+V/Oda7/u+8Pwx749GWcl/zvshUTbyn6v+
54c28p+rfOc6K/nPiZeI5Pz8sdYT1QeeP9F+rPZDn2OXeMD7ak84H+3F+fkT
3c8X7sFz7Oa90OdPdH8XyAjPn2g+KXrib6d8ZjV4/pT3E6vC86fqL6a7lfzn
rG+FlfznPI8btvKfE4/dFX/7U+3XrOX42+n/3TL87U95374L5+fP8E93xt/+
TP3fcbOR/1y/Dy8XR/5zXc/rzvCc8huLiW9/RnxoTs7Pn2k+Ls7422lfL6cj
/7nqt3BFnz/Xeqa3h+fPNd8hqeH5c823Rjv0+XP1d2oB+pzycanwtz/X9Rzo
gj7HfnsRff6CeL42+NuxM84lHu4F8fHZef/8ha7P+DLw/IWuT6U58PyF5v8q
BTx/oevvd95K/nOVpz+LPn+p8qjk8Pyl9mt0Cyv5z7W/FZvx/vlL3g88hT5/
yfupf+A59fv9tZL/XPNLa9jKf671LWqCPn+l8mpNreQ/1+9xX2N4/gr/tsEv
5T+XffKnjfznnP8Vs5L/XOsZ8x1/O+W5f+Bvf639PzLZRv5zvrfxlXi41+iN
H1byn+OvCbSS/xz/fAA8f63rs/WgnfznvM85nni419rvxAnw/I3GS2Elvv2N
6i/dD8/fcF56yEr+c3j+AZ6/wZ/7GZ6/4bx5v43856p/+oCV/Ofa784f8Le/
5f4rRDzcW96/LYQ+f6vr4eoHz99qfjv3cH7+VtfHPgKev9V4Pu6cn78lnvod
PH/H+08F0efvtP4vuYmHe6f9ybILff5O800VD8/fcX5ZF33+Tvv9X7yT8p/z
vOjvyH/O9fZHn7/XfE+8spL/XPs74yk8f0/8r8Ef5T+XfTkWff6eeIrsnJ+/
53pthOfvNf9RPvCc/pMPsZL/XOtp3o/z8w//i69T/nONd/0B34f7wPdt+hAP
90Hjn79PPNwH+B4Nz+k/g6GPlP9c673wAJ5/JL4vG/527KU14PlH7l9f4uE+
Em++wUr+c12vrSt5//yj1vvkATz/+L/vESj/Oc/73Tg//8T5wSp4/kn9e0Ra
yX/O/Z3Lkf+c75euRJ9/+t95vfKfo59Xw3Pqp/PC3/5J8ym8nPfVPmu/9ztx
fv5Z8/9SmXi4z3w/x9NK/nPNp5dhK/+57LLd4flnjXcuDTz/TPxse+Lhvuh6
2iqiz79ov7/Mh+fYFyvD8y88j5cnHu4L3xu4AM+/aL+2XLeS/1z1H4VYyX/O
9ydc4PlXjV+4k5X851r/07P4278SD9sRnn/l+yMd4PlX9d8nrZX85+jty1by
n2v/avyB5/RvvmQl/7nqTy0Bz7+pv25treQ/1/79bWMl/7nu37/HOT//pv5v
NMff/g190hp9/k33Q97W6PNvfB/jO/r8O+8HNeX8/DvxlWWs5D9Xf4GGrfzn
nMdMRZ9/J57qOPqc+tF29Pl3fm8zreQ/5/z7IPFwPzhP+W0l/7n6SzmF8/Mf
2o+ShdDnP7hff+Fv/6H+J5+wkv9c+/X2PTz/wf10iHi4n7xvNdVK/nOt5/0x
zs9/Eu//ifPzn5qPRwI8/4n+3A3PfxJfVBR/+0/iOfajz3/yPcux6PNf6END
nyn/Of8H9ezkP+c8wuCZ8p/rfp1og+e/NN6M/PCc/q5+hOe/2I+t8PwX8X65
+J7Mb81/bn14/lv/V4k7iYejfNB7eP4bf2ws+vw35wUF8Lf/5n3zd+hzylsO
gOe/tf4VMcTD/eH9vFFW8p8T/2PoNeU/13wHv4bnfzjvzsX7an/Uf/YtnJ/T
X40R6HPKL7yE53+0H8nroc//ch70GH3+F/+qodeU/1zt86R25D9X+arb6HPa
p8yOv/2v+q/zzEr+c+IVUjnyn4fo/dO++OMM+7/97OcC3w37v/vNdA//HPWd
7/E+m2H/N/7Tlxb9Hxh2kv95KeftlM/xxn9n2Em8CSWeDvtFjFX/F4adpAd7
8nxg2P/N8kdK/HuG/d/9Z1qE/me8tuv4PzHs//a7UDT+feab6wbnefTf5YmF
/OshSde31xqr/m+Sq37365znJ1d/nyLwDybXfCPm8byRXPu1bC7xPNT3ycDz
R3LNP/1V3r9JrvGXd+R5JLn2t3y4Vf9X9NfxMv4G6ueshh5Jrv0MKsPzSnLt
h/sl9Anj/3feoXzvKg9bxv8b7ZMv43kmhdafrBT/dyk0371h+CtSaH+r/cQ/
mULtN5XgeSeF9iNLG/4PKW+72Eq+eLVP953/xxRa39BvPA+l0PqnB/N/adiO
83flk5edcBo9RP2QL+S7Yf5FJvF/yviXUvL8RPu8J/l/TanxJ57geQp7zVz+
b1Nq/X7j8Zek1PrGNCEeGbvFe85DsIcd5f84pcZv/hd/SkqNv2+WVf/PKbUf
p/7wPEb96gX4vzbsJP9pQ/wt9L86ke+HUF7mkoX89mqfqzT6jPJ4O/4YyjMc
5P/dSfd3qumctzhpPpes6DcntR9o5fnOSfvzfip6jvo/9+G/cdL99Wgo8VRO
uj6WofhznLT+kXs5j3XSfHKYeR6kv65B+HOddD377OF9CeZzxKEHnXR9Fu/m
PMdJ+xP2GJ446fcyu4FNz4/M/8Ipi/jirPaj4nmedFb7AkZ5Em+cNZ/RO2x6
vnTW/NMa/Erij7Pmt7cw/iPsYoXhkbPGmxzA8yd29nHoTWf9Pke843nUWevL
uBX96azr87Agz6eUf9/MeTHzvzHaqudVZ+3nvlvwzFnrr+HN86uLxnuSCb65
8P+SiedZF12v1Jk4X3bR9ezkxfMt7ad3Q8+6aPw/1zmPctH6i+eDhy7av+7D
8WdR/9Ewq/hIudmwk56HGa90XvSvi9ZzsxPxpbTvEYUepvxtR+JTsEsNgacu
2r9Dg616fk6l/evcgffHUmn9TR/zPI2dyrCTeJtK17t9LvxllL98CH9Tabyi
OXneTqX1nDH0UxKPU2m/auTg+TuV5l+/v1V8pv2J1MS/pGK+96ziNeUXwvC3
0f7RYuLfqP/yFM/rlGe7iz5PLXtpC/xxqXV/f+htFc+xq4bA89Sar/tCeJ5a
660SjL8utfZjaGareI697CbP+6l1/4zyRt/TX/5KNvGccr8eVvGc9r//tYrn
qbWeTHNt4jnj7+gGz1NrP543xL+fWvfL7tnwnPUM6moVz13VPsMfm3juqv7z
euIvcNXvY7cHPHfVfGN/Ea9H+QcrPHfV9f1aGp7Tf/XL6A1Xje9XGp676vfw
4Dv6g/K96YkHcNV+jLsIz111f4aWJD6A8oUXrOK5q/ardQI8Zz7XGuB/pL3H
eXieRte/wQqLeJ5G8w3Ygb8ijfpvsdwinqfR/txfZhHP02i+nT7Cc/q7dRqe
U3/RBOKL0mi9bqc5r0ij/dsciD+T/srWgedptN9/WqCH0mg9ad/h/6D9j0UW
8Zz5tjPsJJ6n0fWv+waep9X4m2vxfb60ar/+GDxPq/3pvcAinqdVf/lfwfO0
2p/MR/Gf0F/uGL7vRXnvtcQ70H+/EZyHptV6auYn/oH6/8ULJPGc8eZG4W9J
q/0oFoV/lf4ePSU+gv5e/LGI52m13/MMO4nntC9k2Ek8d1P983k4b8F2GwLP
3fh9DobnbrqfMtjguZvGb7YP/42b+j/9EH+tm67P8L1W8Rz7xAN4jt15Ce9H
0P/AKsRPu+l6pTBzfsP81t/jvNZN6/vtA8/ddL8tXwjP6e9xA/xBjNd8AXox
neb/JJ7znnSaf91s6Md0Gq9VZeIz06m/U5XwD6dTf/ZexHc42t8kPpv+t360
iOfpdH/EboXn6XR/5cvMeVE6zf9OHfRnOu1/XW/ev0yn9W4qh3+Z/vrVhue0
r7rJKp4z/5lxVvE8vfbzRUb8z+nV/tsV3u9Ir/reby3ieXqNP+mNRTyn/LDj
vJny4pfxX6XXekZfIp4sve7nXR2JH02v/fs3Bp5THhkDz+kvfwb0b3qeV9pz
fpVe+9mpPTyn3PTCIp6zvvnF+N5qeu3XkrbEn2ZQ/V8r0csZNJ8jbTjvyqDx
Pzy1iOcZ1H5XIP6yDLq+udNw3k37U6eIb8mg+6HScniO/c9ji3hOf1lP4j/P
oP1aMdginjO/QifQ38xnZ3N4nkHra7EEPZ5B1+PiMeJjqD/Fmfh2d9kFFuOP
c1f74wMs4rm75p9jkVU8d9f1ONTfIp67az77D8Nz6h8Jgefumn/2BfDcXdcn
sRHx8e5a/46+FvHcXetvfMcinmOHJsO/x/i1blvEc8Z/sJ/vU7mL55l94Tl2
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
VnjOfAL2w3Pq10kPz5nP/sycn1N/2UqzeE5/5Q07ieeVNX4TN3iO7WLYSTyv
zPnHcrN4Xhk9nYzzc8qPboDnlYlXTAbPKxN/+NcsnlfGv7fULJ5Tvn0dPK8M
f7ajz5nPeTvxcIx3dRs8p7zGNuLhKnMeuwh/e2WtP3NdeF5Z+zVnoVk8D9b1
P/XDLJ4Haz43NuNvx35ihufYEwz9kMTzYN2/Uzbhbw/W+lNHmMXzYN7PSY6/
PVjzi45Fnwf/L56G9HA6D0sGz5nfeEPv8Pn4pP0rYNh8TlbPc4aeyqHPyyXd
n3eXwHPa11sLz0OIJ1kDz0N4/nQmHi5E8zk+0yyehzCfRfA8hPO9n+jzEN6f
e28WzynP8wOeY3+LwN8eov2bGgHPGb9nsFk8D9H1fTKP83PGP1+L8/MQ/M/h
nJ9Tvngu+pz57PnHLJ5THm7YSTwP1XjNP6PPQ/+nb5J4Hqr9XV+D8/NQ9u+T
RTynfdNf+NtDtV/jouE59c+EwXPsPQvR56GaT5Yo4uEonxEJz0O1/hvPzOJ5
qO7X4RGcnzO+/zf0eaj2Y9hT9Dn1M403i+f0v6K0WTwP0/2Rairn52HEH5Uy
i+dhWk+yx+hzyi2v8LeH8T5oFeLbw3j/+SX6PEzXO9lkeI49szz+dsa/8Bx9
jn17PjwPw7//HH2O3TgEfR6m9XvU4v1zxt/2BX8744UMMInnVXj/rRr6vIqu
b59qxMNVIZ6ziFk8r6L1+c7m/Jz69T9yfl5F++E+FJ7Tf90rJvGc9hXymcRz
2v96AM+r6P9ziZ9JPKf9+tMJ4nkVXf9kRnkSz6twvjOS989p//0N8e3UdyqL
v53xhhVDn1fVfCbeRZ9XVXn4E/ztVdX+pK9JPK9K//3N4jl2ibHwvCr+6twm
8Zxy/6vwvKquT8JD9Dn9V+5uEs8Z/1Y+s3hO+/6GnkniOfMtaNhJPKd+ljMm
8byq7vcvZfC3Y7/Ly/k547Ux7CSeV9P+ZuliEs+r6f72vs75eTXimW7D82pq
v/O8WTyvpuv9IhCeU167h1k8r6b51RyCPq8Gj7ujz6tpPxZchufYWw4kiOf0
16EM+QiY773SvK9G/1tPm8Xzatr/WUXxt9Off0H0eTjxO3ks4nk45yOnzOJ5
OP7AwybxHNu5rUk8p/3fwZyfU94+P/Fw9OfSxiSeY7/JZRHPwzXfqbngeTjP
+61N4jn91TH0UhLPw7W/fQ6YxPNwrX+qoV+SeI49ZL9JPA/X/vZtZxbP6W/f
Fd5Xq679ae+Lv7265jMmP++rUb7L3SSeV+f8w9A3STyvrv6ydofnlC/KYBLP
q2s9S73M4nl14sc7wHPa/2yFPqfc8wL+9ura3/dNTOI5dvd0JvGc9ubM6PPq
2t8smeF5deKxOsHzCM4Pd5rE8wjN99/NCeJ5BPqmkUk8pzzDDpN4HqH+xxyE
5xH/e55P4jntbVl4Xy2C+IPdZvGc8f/Ld5zE8wjtz5itJvE8QrxvtSFBPKf/
BEP/JPE8gnggN/Q5481thD5nfm6O71VhX91kEs8j4YezSTyP1PWumhl/eyTx
Mp7wnPprzCbxPFLz3b8Tf3uk+g/Zib89kvhFm1k8j0RvbzGL5/Tvm9IkntPf
yf2cn2PvXGcSzxnfIw3n57R39ub7WJFa/+6N8Jz6qTzwt0fyvRx3/O1Rml+P
Hfjbo9R+ZX2TeB6l8Vf/TRDPsX+kMIvnUer/rQffy4zSfJJvQ5/Tv1c63j+P
0v6m3oo+j9LvcewWzs+j+P93wt+OfelXgniOfWCFSTzHnpwGfzv9fbagz1nP
p8UJ4nk0vwdHPFw048WZxHPsTU7o82i+t/EjQTyP5nlpqUk8j9b9V/V7gnge
rf2Y/Bd9Tn+htc3iOeU74szieTT+/rWcn0drf6K+wnPKO9VBnzOfQX/hOfO5
uIp4ONYXvgR/O+UFHO+f10B/LDCJ59iXo0zieQ2N776a8/MaWt+EjwnieQ38
cyuJh6vB+wjL+L4Y/c2OMInn9Odn2Ek8r6H53fpCPBztA6LgOeNZ5pjE8xr8
3t8liOf03yOW8/Maut45FqDP6X96Ld5XY74Va/H90Rj9/tJWg+cxrCcafR7D
82C4WTyP4f2CaQnieQz+jQji22M0X8/5+Ntj8FfP4fyc8apPTRDPYzS/NrPh
eQw8n8H5OfWtVcziOf3vDDGJ5zHaj54z8bdTXnouPI9Bf7zl/Lwm+1sNfV4T
/8ts3j/HbvwCntfUflw09E4Sz2kfF4o+r8nz+tME8Zz2uybBc9qffQnPa2o+
ZyebxXP6a/wKfV4TfVqZ83PsZS/R5/TfMRh9TnvzVPztNfHnT0KfM7/I8Sbx
vJbu/+NTiIerRbyboU+SeF5L+3e+Ivq8Fu8vl4PnlBcw9FASz2sR7/gIfU5/
ieM5P6f8xzh4Tnu/h/C8FudnD3n/HLvdA/Q58/UeDc9r6X5/VtIknjO/vw/I
t1RL9+POUWbxPFbrjzHsJJ7H8v2HMejzWOL5RhEPFwuPR5rF81i+N3af+Hbs
7HfQ57HwvjjxcLGaX58R6PNY3hcZCc9j+f7HLfQ54wUW53sy2NWGo8+ZX1xR
k3hOf/eGEQ8Xq/V2GkZ8O+0/DyUeLk7rfVwEfY7dsig8j+P8eTDvn8epf9fB
6PM49ecWCM/j8L9eM4vn2DMHJIjn9Jfhqkk8p332q/jbGT/3ALN4Hsf1GUB8
exzn5QXxt9PfoX4m8Zzxfl0iHi5O+9/gUoJ4Tv2TfYmHq636+y4miOe1ib/w
h+e1tX8j++Bvr631D71gEs+p/yYf5+e1df27nUef18a/c473z+nvn3Poc8pD
z6HP6e91XuLhauv/q81Zs3iO3bBngnjO/KflNYnnzM/7DOfn2Kl88bfXkd04
j0k8r6P+6p5En9fR/Bbk5nsydfge4An0OfUz5sLfXkfXZ2NXk3iOPbELPGe8
bz58T6aO5mvtxPtqdXhePo6/nfL7nU3ieR3eNziOPmd+J9tzfl5H++3ZkXi4
Ovo9DPKB58w/9Ag8r4s/sz36vK7WE3GY98/r6n5cmhme19V4qTJzfl6X7x0d
QJ/TXy5v4tvrcp5/CH1eV/Or6o0+p/6olrx/Xlf7NaI1/va6/F+1xN9Of81b
cn5Of4db4G9n/lGGPkziOe1nGvotied1tR83WqLP6+l6HG2Ov72eyhN2o8/r
4Z/cnyCeY19pgr+9nubzsik8r6f9uNbCJJ5TXrQpPK+n+czYC8/rab3JG/L+
OfW774Tn9YjPaoi/nfrF3c3iOf1l3GUSz+sRv+kKz+vxvSZDnyXxvL6u319D
/yXxvD7Pc43Q5/W1/nFpOT+vr/0dtBWe19d+/dzA++e0n2/okSSe19f8tq7l
ezKU/7bjb2f8xoY+S+I55XGpOT+vr/l+Wou/nfEvb0sQz+trf36YOT/HnmPm
fbX6Wr//RvR5fV2vkM3wPF7r22notySex/N8kAx9Tnk6i1k8j9f+Fl3F+Xm8
5h/uRDxcPN+baEB8ezz/b8nwt9Pfp1XwnPYhv/G303/JVfA8XvuXelOCeE5/
Jdbgb48nHnljgnger+vhZthJPI/XfuZcij5voPqF4+F5A/Xnu9YknjdQffcU
+NsbqL/RTujzBsSvOfztlLvVJh6ugdYf+hueM15ivEk8ZzzPJfjbG2i/ryck
iOcNtN6GP4mHo/3WH+jzBnyvbQU8Zz5FqsNzyp+Hw/MGuh88lqPPE/T7mV0H
fZ6g8Qu85/twCeqvt+N7rwmcz87m/Bz7jaHvknhO+78L4Dntu4bzfbgE3veN
hecJ2q+rr/G3097dKE/ieYLWu7gW+jxB6yn91SSeM36JWZyfU95uLvqc/uu9
4Pw8Qddz3Rz87Sbtf8t/0OfYj18RD2fS9Ru0GH1uUn9pDTuJ55TPHQ/PTVpv
ZLRJPDfp+p2Zir/dpPXEvIDntE8ezvm5SdfnkKHPknhO+YQF6HPmd3C6WTw3
aT/HzYbnJuITRuFvZ7wywbyvZtZ8XA39k8Rzs8azTzWL52a1j51pEs/NWu+0
McTDmdVfBkO/JPHcTDzRe/S5Gf/5K/zt9F92ToJ4biae9Cn63Kzr8b0U+pzx
f7yA59jtZyWI54yfrxz6nPKwe/DczP1aAn87848owvtqFrW/+5Dzc4vmszUE
fW7RfFP+y/tqFvXX5alJPKf98mLw3KLxv4w1i+cWXY/09+G5Rftx/kWCeE7/
FW5axHP6vxaWIJ5bdH3+FCe+Hft0GfztFu33qAHwHLvgUPQ5dtEgzs+ZX73b
8Nyq/loVg+dW6ufj+3BWzffjE3hO/V/n4bmV94VumsVz7OaTEsRz6u/Pw/m5
Vb/nvmVN4jn13brCc8Y73J/zc6v2b/Mok3hO+eZ8nJ9btf8XLqDPrVyfTvCc
9iNy8v65Tb+XdQXxt9tU3vV+gniO/S0P8e029ZfjHOfnNp7fjsNzm+6nOH/O
z22az8WyCeI59bNcgufUL+r4noyN7ztdNIvnNvTlNZN4btP98e9J4tuZf8RJ
eM54vjnIj2DT/vY5B88Zb3pX4tvtWp/XQfztdu3nl2PEw9k1vvMB9Dn1q95I
EM/t2o82GYmHs+t+qVIiQTy3az3ZhiWI53bOS3uYxXPqDw4wieeMV/gwPKd9
7Q68f27X+trtJh6O8sNX4Tn95/LB327/3/ehk3ieyHlub/ztiVpvsXToc+xK
x+B5Iud5GYlvp32VXibxPJHz1ab422m/sTXn59ixTYiHS9R+bcoMz+mvQ394
nsj5zGF4jt11N/FwibqeNfsliOeUz87E+Xmirk9AJuLhGC/BBX3ekPP4BnxP
BvtURuLhsP+vqDOP07ns/ngy9hA/EonykGrU2B7EJDK2erK0zff7vYkxu9kX
c889+4yZe/bFzJiNRpYWKik70VMUEsq+5dGCUqORwoj87tf9eXv15/W6tnOd
63t7O+c650zjflM895P+VgRin/vpft7ubhPP/XS+RJd95ea5n75v3068n9Nf
+zk895P8N23wnH6Hjfdz5m+9C/sced63eD+n/9J7vJ/7SX9jEk3x3A/7ey35
53763je3Jx5uDvZ6T0s8nyP9bezC+/kcrTeqC+/ncyRvfCT2Of0PutpunrPe
s7tN8XwO9Rs2Ed9Oe8IL5J+zXlG8KZ7PoT7CavztyPNnHDynff4h7HPG17va
bp7T/8k1/O3I0/8a8e3+5MPsNMVzf95PpxPfTv8TLbHP/fW9bN+Bv91f+4W7
2m6e++v7WrWU+HbawbOwz1lv7IPw3J/ve7MlnvvzPuJDPRl/3c+gG+Sf++v3
VtWEv531tnW2xHP2S5hBPBzzT/8Gz5H3O5d95OZ5gNoZnfC3B+j7Xe8PzwO0
3orupnjO+PwG4uECpI/nlhPfHkD9mNHY5wG634iW8DxA+u3vh7+d8Tt88bcH
6Pt8yRd/O/Js+Rn7nP6YWZZ4jnyzP+T9nPU6vEN8O/1/3M37eYD0ffpleB6o
76FFk008D9T6OSPgeaDOu24x+Wq0Ey4R3x6I/3GGJZ4HSt5aG/Y57ewFvJ8H
6j4uWvA8UPf5yG1LPGf/e6djnyPfjVbwnP3ODyFfjfWPXYTngcTrexPfznxv
b97Pg4gPaol9HqT76FJNfHuQxl8eCc+DJO/LLnvRzXPG75ttiudB2u/8f7DP
6a9tJB4uSOf7u8kSz4P0vcyeZYrnzO//Nu/n7Nd3OPZ5kO5rw0n87UH6nlrd
bYnnjD/TQDwc62XMNMXzIOmnsY54uGDpz/ki9nkw9ZlXWOJ5MHxsa4rnwZLf
Kwf7PJj4qNumeB4sefocJb6d+Zl/w/Ng6XOaZYrn7Hf8zAzxPJh6A/14Pw+W
/uyHiG8PlvyWFzwPJj+jkPfzYH2Pj9zEPke+0ALy1UK0/64WpnhOu6HCJp6H
SP57via+PUT6nJVHPFwI79fPw/MQ7bf7OUs8p73+Gexz1g9Mhuf0v3EMnofo
PHuuwfMQ/Cc5xMOFSD8lR+E57Zl12Och0k/uVVM8Z78D3sTDhUg/ljfxcKHw
1058eyj1+6ab4nmo1ut5CH8744tG2sTzUN1nDy/87fTXP4V9zvyjv+NvD9X3
deRr4tuZHxQHz0PxN3bl/TxU+n42lnw12utj4DntiBM28Zx2n7GWeM55Sj7F
Pke+kMfg+Vzi+X+A53O5z0umeD5X8/8VST2ZudL34v7Ew83Veb4+YhPPWe/Y
I/jb5xJfOx+es75XD97P6e9SB8/pdyTAc9ZfdRGez5V+PGrhOe1nJ8Jz5K36
2RTPWd/xjU08D6P+VDU8p520k/j2MN6bN/F+HqbfX1AVPA/Tfn0OYJ+HSd6x
I/C3hxGPlI99Hsb/R04QD8f4l8aZ4nmYznfzK/ztrP94FDxn/vVP4HmYznfa
Cc9Z792xpnjO+GmutpvntGf/YIrn4Trf2W3428P1e2uTA8/DJc/A7+F5OO8N
2djnjO/8MTwP5/8ng4mHC8d+v03+ebj0cWEG/vZw6bNNqSmeh+t7vZZpiefI
1ykE+5z9NhTzfk7/0xb2Of31QdjntCdvxD4P1/m3BhLfHiF5fFqRrxah/l/f
4f08QudpW4h9HqHv4+B+SzyP0PrJ/vjbI3TeHtd5P2f8/1Is8TxC582JIh6O
9q1PbOJ5hPT9USQ8j5A+wiJ5P6cdONwUzxk/ZTY8Z//K5fA8Qr/vjHOGeB6p
8f+dzvt5pPZvEY6/PVLy+n9MfHuk9OHdA397pM67Yyr2eaS+h1lDeT+PlHxZ
7chXY/1l7/F+Hkk9ml3422mXdsM+Z/z7/4HnrHeoAZ5H6r5+jIfnnGfRSvzt
jE81eD+P1O8nsQn7PIr6lgNN8TxK573PF/s8Svsvf5h4OPofnQTPo7T+0BhL
PKc/pxqeR5Ff+TLv51HSz9A52OfMb/MnPKff/zzx7VH8f3UA/vYo8v+uzBDP
6Z+Vgn0epfON84TnyGPrwPt5NPnyH+Bvj9b+D5WTrxat9V9u5P2c9k9l2OfR
0nf796knw3or2/F+Hk18hA2eM3/p67yfR1Mfor8pnkdLvsObiYeLlvwb2mCf
M/+pNvjb2e/kSuLhovW9VPWD54z//h14Hq3v9bvr8DxG+23vir89Rvru50t8
e4zW7+Tqd/M8RustXk88HP1+I4hvp71tHfZ5jH5vpzyIh6P99P9hn7PfzM9M
8TwGvnfG3x5Dflhn/O3MHxBjiue01w3FPqddH419zvlqDhjiOf1WM/ztsdzH
Gngeq/tfORZ/e6y+p6Uu+8jN81jJN7gX/vZYyfdRB+zzWOLxV+NvZ/2Hl8Dz
WJ13b71NPGe/c6N5P2f+Y+3xt7Pf+Qbez2P1Pc1+HX874zc9AM9j+fs4Rfw9
FvrPpWCfx2n/Lc/jb4+T/PVzTfE8Dv/GKOzzOH3fU1dZ4nmc9DF0JPVkWO/I
bkM8j9P9Vzio9xqn86VNIh6O+b9cwz5nvucuQzyPk/yex+A57c++4O9jxuk+
L3c1xXPai8Zjn8dRTySHfLU4/R7Ksnk/j+f37oO/PV76vOxviufxkmf5WnhO
/2cHqScTz7+fv1vieTzxRN+QrxZP/rmr7eY5+63xw98ez997m058O+slNMLz
eN1H9RpTPI/X+Ud4ka9Ge6zLPnDznP2+j6DeK/J+W8/7OedZ4mq7eT6Pv0fR
0RTP5+k+dgzg/Xye9u/2GjyfJ3nvHoB9Tn/0r9jn83S+JV+SrzZP8uT9As9p
nxsJz5n/roN4ONqvhlAfDnl638/7+Tx9fxd3Ue+V/QbcMMVz+tc2meI57b79
iYdLwB49ZhPPE6g/d8ESzxP4/TvheQLx7sPgeYLWW9Ia+zxB9zXzbXieIHnm
+OJvZ/2dr5riOeu1PEQ8HPNX+GCfJ5B/5bIn3Tyn//dMm3iO/K+sMMVz2leX
m+I58jdth+cJuv812+G5XfJ7eMBzOzx/yRTP7fDtLDy38/+7MZZ4bpc83jbi
2+34++/G327HvxsGz1mvfSo8t+v+uz1BPBzrT/rWEs/txBNdguf0b/bk/dwu
/TzlSb4a65+8H387/c28LfE8EXvzBezzRPJFVxvieaLWH15AfHuifh+9dxEP
lyj9fuCyn9w8T8Re6A/PE6U/ZwD+dtqmyx5z8zyRess/w3Pa647Cc9Y33jXE
80Tq/002xfNE6bN3PDxP1P1NrKd+O+f76LAlntPfvhP12x3YI7E28dyh/Ttf
N8Rzh8a/cgv73KHz75lgiucOnffnOnjuID/1Tr6aQ/tXfmOJ5w7soZnY5w7s
m0p47tB5Cm9QT4bxNzPguUPf17hVxLcj36VyUzxnfNofhnjukP7u/wOeI6/5
IDxP0vkbt5B/nkR9TwOeJ0mejanwPEn62etDPZkk7XcpBZ4zPrgUf3uS9OE1
jni4JPTRHZ7T3/ZLSzxP0nn2nDbFc9bPLcY+T5K+ungS3448Hnf+Hgvtr5rD
c/YbH4h9nqzzv/IY8XDJ/P+p3hDPk8kPagbPk3Xfs0dhnyfzPpBAfDvrja6f
IZ4n8/c/plBPhvba2/Cc9ql4eJ5MfYqL8Jz1vRcZ4nky75W5vJ8z/1+LeD9P
1n19eAT7nPlrPrXEc86z7idDPE+h3vIw6sOlaH7mMPLVaJdfMMRz2tMmw3Pa
k7JN8TxF+jl1Dp6nSP+NE+F5ir6Hc67/P7t5zv6to+A54ydvg+cpOt+1DPzt
7HdzPDxPkb4b28LzFOpdLjTE8xTpc0oF9nmKvu82A6n3mqr9N20hvj2V+Jxx
8DxV+xcvwN+eqvk904lvp3/ePlM8T6Ue6EDez1N1X8e9TPE8lfovofjbGd/2
K1M8T9X5BvewxPNU6cszBH87bbM78e3Ie7oI+5z1/n56hniOfCkn4Xma9i8u
5P08Tef3uYR9nsZ7SwHxcPQvvY98NeYPLjHE8zTJ++1HlnieRnxfAPHtadLX
xaPY56y3twv2OfsF5BIPx3o+R4hvZ3y5k/fzNN33H3Xkq6VJv1F1+NuZXzjb
Es8Zb8+G5+nUq7tA/nk69Zxu4m9P1/fz2Cx4nq79I4eSf858z8nEt6dL3x8O
IR6O9rQh8Dxd8p1qssTzdMnzzI/wnPasI4Z4ni79LbtOvhr79x6EfZ6u39dv
14hvZ7/trv+/u3nOfl2vwfMM+q/yfp6h+7jyJPXhaI8s5/08Q/f7xcemeJ7B
37t5CJ6zXomBv53+Ed3IV8vg/ydl5KtlUP9iKzzPkL6nvgnPM3Te7K7EtzPe
p7UlntMOTCT/nP0qnyFfjfm7MgzxnPFnGomHy9R5Uh4lvj1T/Y2/WeJ5pr6X
7BPUk8nE/9yJeDjGb04zxHPaEwrwt2fqvBfieD/P/Ke+jZvnmdT/GWUTzzN1
P8vu/L3UTN3/yrvheab0sz4GnmdiT6yD58g7OAWes/7BPfCc+Y/2wd+epfVL
PyK+PUvzR95FfHsW9VyG836eJfluDyNfjfknHYZ4nqX1A3vjb6e9YgvxcFnk
W2bB8yzdT1Yr8tXo/7er383zLJ1v8eeGeE7b126I5+y/cbBNPEfeaX/hb2e9
jZ3IV5sv+W+9hr99PvFVacTDzdf4M++a4vl87Ksg6snMlz6XeeFvZ3yLIHjO
+MWB8Jz9Vl7j/Xy+5P9vOTyfr/Nf+R/558jT+A75avTftdsmnjO/2sI+n6/z
Rzmwz+fjH/iC+HbmGyb+9mzyyVbjb8+mfvpb2OfZuq8Dk4iHy9Z5pkzi/Zx2
yA387dmSd8gp/O3ZkiejjSmeZ+v8ve6lngzzQyMM8Rx5nmhNPBzzi33gOes/
7EN8O+u99pspnmfz916WmuJ5ts7fcA885zw7TfztOcx/A/s8R/d3YqMhnudo
v61LsM9zNH/8m9jnOdpvWBTxcIxf5eT9PEf6bNhqE8+Zv3ga8e055NdchOc5
5M+tN8Rz2qvXGeI5bdti/O050s+QpfCc9WeMwt/O+e6ZYornTv7/vQSeO7X/
e3XEwzl1/moPeO7UfUROJx7OyXtYT+q9OnlPPY99Tv+Zi/jbndr/yFR47pR8
n64xxHOn9LXyliGeO3Vf6VPgOfKM7o597qTezV787az3zAv4253ST92d+HYn
fPrLEM9ziV8fyPt5Lr+n8/jbc7V/sBc8p93KC/s89594bjfPaf/VZIjnudLn
gCct8Zz+Fl2xz3OJd56Evz1X8vfzs4nnuTpvLy/ez3Phy3hTPGf+zTP42xn/
VqIlniNvr8/heR75Ed9in+dpv+ceJ749T/po2IF9nke85A7i2/P0vXifhud5
kmd/iSme50l/zcdhn+dRT6QDPM/TfVVcMcRzxi9tT74a6+0qIv+cdtYV/O3I
+2cRPGe9jaPxt9MfdBme0558HPs8X+dP8MU+pz1kOfZ5vs5/YJkhntNe1Ad/
O+M/cNlvbp7nEw8zivzzfOmr/Sjezxl/9SH87fnkIzrJV8snvykcf3s++Ycv
Uk+G+V2c+NtZf8SLvJ8zPiKM93PkmTCdejL55LNOwz4v0HqpPYlvL1B/i+bE
wxWQH51FvlqBzj/wJ3hOe18z3s8L8Be57EE3z1n/qMvedPO8QN/j/nTi2+lf
67IH3Twv0P0fr4Hn7L/7S+rJFBCPOoj6cIy/+QM8Z/9T3SzxnPkdA6gnU6j5
5mT87YX6PRo/Yp8Xav5jqfC8UPfhWW2I54X6vQZ3xT5n/KnP4Xkh+crJpnjO
+o2e1Icr1H13nUB8e6H04dEEzwul/+86Uh+O9Sd+gX1Of7sn4Hmh9P/cREM8
L8T/fxX7nPUrZhIPV0R9VbspnhdJnrMnqQ9XJPlLd+BvL9L5m05QT6ZI9+Vd
bBPPaQ/8A54X8feQtmGfF0neLh2Ih2P95mXwvEj30TyafLUi3tu28n5eJH33
LyC+nfU6HsU+Z37PPryfI2/QCvztzG++BZ4X6/y/b4fntNc9hH1eLP1N3Q7P
i6mPc8IQz4uJ3++HfV6s+0nfiL+d/r4H4Tntdg3Y58XU9ztmiOfFkvfGEuxz
5EnoSf125DnTEvuc+ZUPwPNina/lAerDIU/efurDlaidNp14uBLyIV7H316i
/bd6kH9O/9kM/O0l+j4q7if/vET3E70I+7yE+IVu8LyE/Jy9xLezf/591JMp
kT663sA+L5F+4/ZQT6ZE57m8G56zXkwNPGc/793Y58j/2Q/Y58jneMAUz0s1
/2oVPKft7AzPS6lHs98Qz0v1fXX4m/j2Up3f93N4Xqr7eO4W/nbGd9tniOel
Os/yrwzxvFTyxdmxz1nvLk94jjye3fC3I0/UanheKn0dHI99Tv8b4+E5/ReW
Ew9XJnk2X4fnZdjjg/C3l/H/OZd94eZ5me7bt4F4uDLJ124p+Wpluo/Nr8Fz
xhtehnhOf90XhnhepvNW9rWJ56w3/Tj2eZn0l/8i8XBl+j7O3ou/nf637iW+
HfmdLYhvZ/8JifCc8WuOYJ8vIJ7FA/t8gb6XZ+3wfIHkXfIm8e0LqO+8gXi4
BdLv097kqzE+9lNDPKf/HlfbzXP6BxyE5+y/0Bd/O+NbjYTnC6SPv+IM8Rz5
draF5wt0ntKF5Ksx/3ob3s9pp/xK/jnrtXnFFM/Lid/cz/t5Ofm8Ffjby7V+
YWvy1cr/yT9y85z2lXpTPC+XfgKi4Xm5zne9iffzct33mL6GeF4O35rIV2P+
pRb422nP/dISz5l/6ALxcMg3p4R6r/Rvddl/bp7Tn5QKzyukj9Gp+NsruO/d
1JOpoB5dEf72Cuo/H8M+r9B5ViXD8wrp79Vk4uEqxKuzGwzxnPVyXG03z2kP
O0J9uArp78Z6/O0Vkr9zM+zzCslvPE08XAX1M0IN8Zz9s0LhOf22XN7Pme+x
Dn97pX4/kXbi2yvV39JOPFylzru9Ep7Tvy8bf3sl+RHL4DnjQx4wxPNKne/w
ROzzSslT/Ak8r9R5z/1CfDvzO+6D54w/eZr380rdV+ftxLczv/Tf1G+v1Pkn
ZcBz1utwwxDPK//Jd3LzfCHvWSfh+UKtn7bVEs8X6nzx7xviOeNjTuBvX8i/
l36GeE5/eTH+dtbbNZD8c9Z73IP3c8YX9SG+fSHxr2OoD7eQ+gF/Yp+z3+Ax
2Of0f32E93P2e6SA93P6/+pMPFyV9Pn2XHheJf1Z7xjieZXmb1rI+3kV8cqh
+NurpN8HXW03z6uoL5+LfV4l/fo/iL+9Svtf6El8O+Mn36knw/pnLexz+ieO
4v2c/TzL4XmVfp8Zp/G3V0l/4SsM8Zz96rKJb2c9v/HEt1eTz9aP+u20N0TB
82r9e/x83xniebXkG+RriOfV5BO8aojn1dJX9+HwvFryOCLwt7P+LD/87dXE
o42F56x/62X87dX8fzGMfDX2O98bf3u1ztdsFjxn/sDD+NurpX+vlwzxvEb7
9+rF32Op0fijnbHPaR9+G/u8RuffloK/vUb7/fQN8XA11Ku7jL+d/kaXveLm
eY3knXIenteQv26zxHPW95pmiOc1fG9e2Oc15C9nY5/T7/MU7+esl7ncEs+R
//knTfG8Rvr1eB/7vFbju0wxxPNa7b/3BXheq/W32eF5rfQ18lfs81ri42cT
306/OcAUz2ulj6G/8H5eK30MfQOeM/+9ttbH/w/jAim7
      "]]}, {}}, {}, {}, {}, {}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.49688281250000005`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 33.1995}, {-1.31450406115619*^-12, 3.05533376376843*^-13}},
  
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814709555959433*^9, 3.8147105505578413`*^9, {3.814710635915567*^9, 
   3.814710647332749*^9}, {3.814710683330346*^9, 3.8147106951396923`*^9}, 
   3.81477532390177*^9, 3.816512606974893*^9, 3.8166071348919086`*^9, 
   3.816756700167199*^9, 3.8169482927018223`*^9, 3.823328081597917*^9, 
   3.823664205029953*^9, 3.8239546103365088`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"cda20160-a055-4b85-9c32-e6858fab5432"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"i\[Alpha]", "=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"Import", "[", 
             RowBox[{
             "\"\<Data_FLRWSolver/res_0.05/alp.average.asc\>\"", ",", 
              "\"\<Table\>\""}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"__", "?", "NumericQ"}], "}"}]}], "]"}], ",", "rel"}], 
         "]"}], ",", "All", ",", 
        RowBox[{"-", "2"}]}], "]"}], ",", "prec"}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.8137427168222227`*^9, 3.813742778052895*^9}, {
   3.813753010287278*^9, 3.813753029140547*^9}, 3.813753115594719*^9, {
   3.8139888279409857`*^9, 3.813988831761333*^9}, {3.8140226363734083`*^9, 
   3.8140226460183773`*^9}, 3.8140226953759108`*^9, 3.814710588704713*^9, {
   3.8147107303832207`*^9, 3.8147107498575706`*^9}, {3.814710822684524*^9, 
   3.814710823224485*^9}, 3.8169482999135857`*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"9bbcdf54-27e4-4051-8885-befc1757ac5d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"i\[Alpha]", "[", 
  RowBox[{"[", 
   RowBox[{"Length", "@", "i\[Alpha]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"i\[ScriptCapitalH]", "[", 
  RowBox[{"[", "rel", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.814710830683888*^9, 3.81471085827304*^9}, {
  3.832554718723988*^9, 3.832554719692705*^9}, {3.8325547781901417`*^9, 
  3.8325548143018093`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"106a0b19-2892-4620-9431-786dfab1c829"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "33.19950000000000045474735088646411895752`16.", ",", 
   "1102.20680013852006595698185265064239501953`16."}], "}"}]], "Output",
 CellChangeTimes->{{3.814710842482551*^9, 3.814710859228297*^9}, 
   3.814775332630596*^9, 3.81651261454154*^9, 3.8166071443851547`*^9, 
   3.816756713065525*^9, 3.816948305985133*^9, 3.8236642141418867`*^9, 
   3.823962010136244*^9, 3.824460896538124*^9, 3.8247813138553753`*^9, 
   3.824785514811502*^9, 3.824791323551304*^9, 3.8248074362441387`*^9, 
   3.824807532873432*^9, 3.824873705937481*^9, 3.824875632360333*^9, 
   3.825231392205496*^9, 3.825479243081867*^9, 3.832495845015366*^9, 
   3.8325545398693533`*^9, 3.832554720452423*^9, {3.832554787666954*^9, 
   3.832554815393573*^9}, 3.832567442129417*^9, 3.832573616693681*^9, 
   3.832589426345928*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"8a691ace-c4b7-4e3c-afa0-a2ebee4d48b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"33.19950000000000045474735088646411895752`16.", ",", 
   RowBox[{"-", "5.6468940353810496738925377847680408437645`16.*^-18"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.814710842482551*^9, 3.814710859228297*^9}, 
   3.814775332630596*^9, 3.81651261454154*^9, 3.8166071443851547`*^9, 
   3.816756713065525*^9, 3.816948305985133*^9, 3.8236642141418867`*^9, 
   3.823962010136244*^9, 3.824460896538124*^9, 3.8247813138553753`*^9, 
   3.824785514811502*^9, 3.824791323551304*^9, 3.8248074362441387`*^9, 
   3.824807532873432*^9, 3.824873705937481*^9, 3.824875632360333*^9, 
   3.825231392205496*^9, 3.825479243081867*^9, 3.832495845015366*^9, 
   3.8325545398693533`*^9, 3.832554720452423*^9, {3.832554787666954*^9, 
   3.832554815393573*^9}, 3.832567442129417*^9, 3.832573616693681*^9, 
   3.8325894263479443`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"589205e3-7ed1-43a7-8132-6904df725bf3"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.824781351927506*^9, 
  3.824781353884364*^9}},ExpressionUUID->"9daa8c17-5d59-4c65-8c9d-\
75df697d0e75"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i\[Gamma]xx", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"Import", "[", 
              RowBox[{
              "\"\<Data_FLRWSolver/res_0.05/gxx.average.asc\>\"", ",", 
               "\"\<Table\>\""}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"__", "?", "NumericQ"}], "}"}]}], "]"}], ",", "rel"}], 
          "]"}], ",", "All", ",", 
         RowBox[{"-", "2"}]}], "]"}], ",", "prec"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i\[Gamma]xy", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"Import", "[", 
              RowBox[{
              "\"\<Data_FLRWSolver/res_0.05/gxy.average.asc\>\"", ",", 
               "\"\<Table\>\""}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"__", "?", "NumericQ"}], "}"}]}], "]"}], ",", "rel"}], 
          "]"}], ",", "All", ",", 
         RowBox[{"-", "2"}]}], "]"}], ",", "prec"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i\[Gamma]xz", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"Import", "[", 
              RowBox[{
              "\"\<Data_FLRWSolver/res_0.05/gxz.average.asc\>\"", ",", 
               "\"\<Table\>\""}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"__", "?", "NumericQ"}], "}"}]}], "]"}], ",", "rel"}], 
          "]"}], ",", "All", ",", 
         RowBox[{"-", "2"}]}], "]"}], ",", "prec"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i\[Gamma]yy", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"Import", "[", 
              RowBox[{
              "\"\<Data_FLRWSolver/res_0.05/gyy.average.asc\>\"", ",", 
               "\"\<Table\>\""}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"__", "?", "NumericQ"}], "}"}]}], "]"}], ",", "rel"}], 
          "]"}], ",", "All", ",", 
         RowBox[{"-", "2"}]}], "]"}], ",", "prec"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i\[Gamma]yz", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"Import", "[", 
              RowBox[{
              "\"\<Data_FLRWSolver/res_0.05/gyz.average.asc\>\"", ",", 
               "\"\<Table\>\""}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"__", "?", "NumericQ"}], "}"}]}], "]"}], ",", "rel"}], 
          "]"}], ",", "All", ",", 
         RowBox[{"-", "2"}]}], "]"}], ",", "prec"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i\[Gamma]zz", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"Import", "[", 
              RowBox[{
              "\"\<Data_FLRWSolver/res_0.05/gzz.average.asc\>\"", ",", 
               "\"\<Table\>\""}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"__", "?", "NumericQ"}], "}"}]}], "]"}], ",", "rel"}], 
          "]"}], ",", "All", ",", 
         RowBox[{"-", "2"}]}], "]"}], ",", "prec"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.813753167442666*^9, 3.81375325046742*^9}, {
  3.8139888420496492`*^9, 3.813988879454987*^9}, {3.814022662801659*^9, 
  3.81402271034373*^9}, {3.8147105907171583`*^9, 3.814710603390387*^9}, {
  3.814710898057559*^9, 3.814710914826714*^9}, {3.814710959959395*^9, 
  3.814710971802628*^9}, {3.816948310288211*^9, 3.816948319662422*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"09940e1f-3fa9-4a5e-8349-c883d23226ad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ikxx", "=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"Import", "[", 
            RowBox[{
            "\"\<Data_FLRWSolver/res_0.05/kxx.average.asc\>\"", ",", 
             "\"\<Table\>\""}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"__", "?", "NumericQ"}], "}"}]}], "]"}], ",", "rel"}], 
        "]"}], ",", "All", ",", 
       RowBox[{"-", "2"}]}], "]"}], ",", "prec"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ikxy", "=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"Import", "[", 
            RowBox[{
            "\"\<Data_FLRWSolver/res_0.05/kxy.average.asc\>\"", ",", 
             "\"\<Table\>\""}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"__", "?", "NumericQ"}], "}"}]}], "]"}], ",", "rel"}], 
        "]"}], ",", "All", ",", 
       RowBox[{"-", "2"}]}], "]"}], ",", "prec"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ikxz", "=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"Import", "[", 
            RowBox[{
            "\"\<Data_FLRWSolver/res_0.05/kxz.average.asc\>\"", ",", 
             "\"\<Table\>\""}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"__", "?", "NumericQ"}], "}"}]}], "]"}], ",", "rel"}], 
        "]"}], ",", "All", ",", 
       RowBox[{"-", "2"}]}], "]"}], ",", "prec"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ikyy", "=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"Import", "[", 
            RowBox[{
            "\"\<Data_FLRWSolver/res_0.05/kyy.average.asc\>\"", ",", 
             "\"\<Table\>\""}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"__", "?", "NumericQ"}], "}"}]}], "]"}], ",", "rel"}], 
        "]"}], ",", "All", ",", 
       RowBox[{"-", "2"}]}], "]"}], ",", "prec"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ikyz", "=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"Import", "[", 
            RowBox[{
            "\"\<Data_FLRWSolver/res_0.05/kyz.average.asc\>\"", ",", 
             "\"\<Table\>\""}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"__", "?", "NumericQ"}], "}"}]}], "]"}], ",", "rel"}], 
        "]"}], ",", "All", ",", 
       RowBox[{"-", "2"}]}], "]"}], ",", "prec"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ikzz", "=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"Import", "[", 
            RowBox[{
            "\"\<Data_FLRWSolver/res_0.05/kzz.average.asc\>\"", ",", 
             "\"\<Table\>\""}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"__", "?", "NumericQ"}], "}"}]}], "]"}], ",", "rel"}], 
        "]"}], ",", "All", ",", 
       RowBox[{"-", "2"}]}], "]"}], ",", "prec"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.8137531998370943`*^9, {3.813753299138282*^9, 3.8137533167173653`*^9}, {
   3.8139888885248327`*^9, 3.8139889153451977`*^9}, {3.814022672633894*^9, 
   3.814022723142116*^9}, {3.81471060522423*^9, 3.814710616319077*^9}, {
   3.814710916807756*^9, 3.8147109315361233`*^9}, {3.814710974021316*^9, 
   3.814710983836323*^9}, {3.816948321387236*^9, 3.816948336917687*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"b3fe19cb-3a8d-4d95-887b-9a0d0331c2bc"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"i\[Rho]", "=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"Import", "[", 
             RowBox[{
             "\"\<Data_FLRWSolver/res_0.05/rho.average.asc\>\"", ",", 
              "\"\<Table\>\""}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"__", "?", "NumericQ"}], "}"}]}], "]"}], ",", "rel"}], 
         "]"}], ",", "All", ",", 
        RowBox[{"-", "2"}]}], "]"}], ",", "prec"}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.8142854517563667`*^9, 3.814285463776288*^9}, 
   3.8147106185382566`*^9, 3.814710935173725*^9, 3.8147109860315933`*^9, 
   3.816948344886922*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"e69b796f-8d16-44f7-a35b-bc104c05e69c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"i\[Alpha]", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Length", "@", "i\[Alpha]"}], ",", "1"}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"i\[Gamma]xx", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Length", "@", "i\[Alpha]"}], ",", "1"}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"i\[Gamma]xy", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Length", "@", "i\[Alpha]"}], ",", "1"}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"i\[Gamma]xz", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Length", "@", "i\[Alpha]"}], ",", "1"}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"i\[Gamma]yy", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Length", "@", "i\[Alpha]"}], ",", "1"}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"i\[Gamma]yz", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Length", "@", "i\[Alpha]"}], ",", "1"}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"i\[Gamma]zz", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Length", "@", "i\[Alpha]"}], ",", "1"}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ikxx", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Length", "@", "ikxx"}], ",", "1"}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ikxy", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Length", "@", "ikxy"}], ",", "1"}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ikxz", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Length", "@", "ikxz"}], ",", "1"}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ikyy", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Length", "@", "ikyy"}], ",", "1"}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ikyz", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Length", "@", "ikyz"}], ",", "1"}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ikzz", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Length", "@", "ikzz"}], ",", "1"}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"i\[Rho]", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Length", "@", "i\[Rho]"}], ",", "1"}], "]"}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.813753032945984*^9, 3.813753125531786*^9}, {
   3.813753375512641*^9, 3.813753456295968*^9}, {3.813988936077664*^9, 
   3.813988972182053*^9}, 3.814018745938177*^9, {3.814285523953339*^9, 
   3.814285582413912*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"5ab351a4-fa7c-4c63-8838-8943f1c4e8d3"],

Cell[BoxData["33.19950000000000045474735088646411895752`16."], "Output",
 CellChangeTimes->{{3.813753038956736*^9, 3.813753126518922*^9}, 
   3.813753459228279*^9, 3.813988973414485*^9, 3.813989187516108*^9, 
   3.813990868606769*^9, 3.814016833208643*^9, 3.8140190616293573`*^9, 
   3.814022735227569*^9, 3.814256618345105*^9, 3.8142599427093782`*^9, 
   3.814284776893064*^9, 3.814285429750959*^9, 3.8142855399646482`*^9, 
   3.814285583141252*^9, 3.8143353717759447`*^9, 3.814710999505609*^9, 
   3.8147753495499*^9, 3.8165126248678427`*^9, 3.816607251613718*^9, 
   3.816756824470853*^9, 3.816768564037458*^9, 3.8169483482593393`*^9, 
   3.8233280978628273`*^9, 3.823664348246463*^9, 3.823954632950815*^9, 
   3.823962019241263*^9, 3.824460918950547*^9, 3.824781554619796*^9, 
   3.824785528235054*^9, 3.824791332454123*^9, 3.824807543982882*^9, 
   3.82487371906221*^9, 3.824874023314259*^9, 3.824875644606249*^9, 
   3.8252314043685617`*^9, 3.82547925133447*^9, 3.8314589079422483`*^9, 
   3.832495858727099*^9, 3.832554830420847*^9, 3.8325674584744453`*^9, 
   3.8325736269061737`*^9, 3.832589439185801*^9, 3.8326449286361933`*^9, 
   3.832661127971449*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"6c1f77bd-631d-4e2e-9efb-9fc5acf61fb8"],

Cell[BoxData["33.19950000000000045474735088646411895752`16."], "Output",
 CellChangeTimes->{{3.813753038956736*^9, 3.813753126518922*^9}, 
   3.813753459228279*^9, 3.813988973414485*^9, 3.813989187516108*^9, 
   3.813990868606769*^9, 3.814016833208643*^9, 3.8140190616293573`*^9, 
   3.814022735227569*^9, 3.814256618345105*^9, 3.8142599427093782`*^9, 
   3.814284776893064*^9, 3.814285429750959*^9, 3.8142855399646482`*^9, 
   3.814285583141252*^9, 3.8143353717759447`*^9, 3.814710999505609*^9, 
   3.8147753495499*^9, 3.8165126248678427`*^9, 3.816607251613718*^9, 
   3.816756824470853*^9, 3.816768564037458*^9, 3.8169483482593393`*^9, 
   3.8233280978628273`*^9, 3.823664348246463*^9, 3.823954632950815*^9, 
   3.823962019241263*^9, 3.824460918950547*^9, 3.824781554619796*^9, 
   3.824785528235054*^9, 3.824791332454123*^9, 3.824807543982882*^9, 
   3.82487371906221*^9, 3.824874023314259*^9, 3.824875644606249*^9, 
   3.8252314043685617`*^9, 3.82547925133447*^9, 3.8314589079422483`*^9, 
   3.832495858727099*^9, 3.832554830420847*^9, 3.8325674584744453`*^9, 
   3.8325736269061737`*^9, 3.832589439185801*^9, 3.8326449286361933`*^9, 
   3.832661127972664*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"484205a9-7a8d-4d96-bb9d-e173e108d9bc"],

Cell[BoxData["33.19950000000000045474735088646411895752`16."], "Output",
 CellChangeTimes->{{3.813753038956736*^9, 3.813753126518922*^9}, 
   3.813753459228279*^9, 3.813988973414485*^9, 3.813989187516108*^9, 
   3.813990868606769*^9, 3.814016833208643*^9, 3.8140190616293573`*^9, 
   3.814022735227569*^9, 3.814256618345105*^9, 3.8142599427093782`*^9, 
   3.814284776893064*^9, 3.814285429750959*^9, 3.8142855399646482`*^9, 
   3.814285583141252*^9, 3.8143353717759447`*^9, 3.814710999505609*^9, 
   3.8147753495499*^9, 3.8165126248678427`*^9, 3.816607251613718*^9, 
   3.816756824470853*^9, 3.816768564037458*^9, 3.8169483482593393`*^9, 
   3.8233280978628273`*^9, 3.823664348246463*^9, 3.823954632950815*^9, 
   3.823962019241263*^9, 3.824460918950547*^9, 3.824781554619796*^9, 
   3.824785528235054*^9, 3.824791332454123*^9, 3.824807543982882*^9, 
   3.82487371906221*^9, 3.824874023314259*^9, 3.824875644606249*^9, 
   3.8252314043685617`*^9, 3.82547925133447*^9, 3.8314589079422483`*^9, 
   3.832495858727099*^9, 3.832554830420847*^9, 3.8325674584744453`*^9, 
   3.8325736269061737`*^9, 3.832589439185801*^9, 3.8326449286361933`*^9, 
   3.8326611279737673`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"bee32c3a-9764-4248-9e4b-2ec8fe443a75"],

Cell[BoxData["33.19950000000000045474735088646411895752`16."], "Output",
 CellChangeTimes->{{3.813753038956736*^9, 3.813753126518922*^9}, 
   3.813753459228279*^9, 3.813988973414485*^9, 3.813989187516108*^9, 
   3.813990868606769*^9, 3.814016833208643*^9, 3.8140190616293573`*^9, 
   3.814022735227569*^9, 3.814256618345105*^9, 3.8142599427093782`*^9, 
   3.814284776893064*^9, 3.814285429750959*^9, 3.8142855399646482`*^9, 
   3.814285583141252*^9, 3.8143353717759447`*^9, 3.814710999505609*^9, 
   3.8147753495499*^9, 3.8165126248678427`*^9, 3.816607251613718*^9, 
   3.816756824470853*^9, 3.816768564037458*^9, 3.8169483482593393`*^9, 
   3.8233280978628273`*^9, 3.823664348246463*^9, 3.823954632950815*^9, 
   3.823962019241263*^9, 3.824460918950547*^9, 3.824781554619796*^9, 
   3.824785528235054*^9, 3.824791332454123*^9, 3.824807543982882*^9, 
   3.82487371906221*^9, 3.824874023314259*^9, 3.824875644606249*^9, 
   3.8252314043685617`*^9, 3.82547925133447*^9, 3.8314589079422483`*^9, 
   3.832495858727099*^9, 3.832554830420847*^9, 3.8325674584744453`*^9, 
   3.8325736269061737`*^9, 3.832589439185801*^9, 3.8326449286361933`*^9, 
   3.8326611279748707`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"3eb64a4c-aa8c-4878-9fe9-d68657122527"],

Cell[BoxData["33.19950000000000045474735088646411895752`16."], "Output",
 CellChangeTimes->{{3.813753038956736*^9, 3.813753126518922*^9}, 
   3.813753459228279*^9, 3.813988973414485*^9, 3.813989187516108*^9, 
   3.813990868606769*^9, 3.814016833208643*^9, 3.8140190616293573`*^9, 
   3.814022735227569*^9, 3.814256618345105*^9, 3.8142599427093782`*^9, 
   3.814284776893064*^9, 3.814285429750959*^9, 3.8142855399646482`*^9, 
   3.814285583141252*^9, 3.8143353717759447`*^9, 3.814710999505609*^9, 
   3.8147753495499*^9, 3.8165126248678427`*^9, 3.816607251613718*^9, 
   3.816756824470853*^9, 3.816768564037458*^9, 3.8169483482593393`*^9, 
   3.8233280978628273`*^9, 3.823664348246463*^9, 3.823954632950815*^9, 
   3.823962019241263*^9, 3.824460918950547*^9, 3.824781554619796*^9, 
   3.824785528235054*^9, 3.824791332454123*^9, 3.824807543982882*^9, 
   3.82487371906221*^9, 3.824874023314259*^9, 3.824875644606249*^9, 
   3.8252314043685617`*^9, 3.82547925133447*^9, 3.8314589079422483`*^9, 
   3.832495858727099*^9, 3.832554830420847*^9, 3.8325674584744453`*^9, 
   3.8325736269061737`*^9, 3.832589439185801*^9, 3.8326449286361933`*^9, 
   3.832661127975985*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"d344c2f8-d9e9-4059-941d-9585edf6046c"],

Cell[BoxData["33.19950000000000045474735088646411895752`16."], "Output",
 CellChangeTimes->{{3.813753038956736*^9, 3.813753126518922*^9}, 
   3.813753459228279*^9, 3.813988973414485*^9, 3.813989187516108*^9, 
   3.813990868606769*^9, 3.814016833208643*^9, 3.8140190616293573`*^9, 
   3.814022735227569*^9, 3.814256618345105*^9, 3.8142599427093782`*^9, 
   3.814284776893064*^9, 3.814285429750959*^9, 3.8142855399646482`*^9, 
   3.814285583141252*^9, 3.8143353717759447`*^9, 3.814710999505609*^9, 
   3.8147753495499*^9, 3.8165126248678427`*^9, 3.816607251613718*^9, 
   3.816756824470853*^9, 3.816768564037458*^9, 3.8169483482593393`*^9, 
   3.8233280978628273`*^9, 3.823664348246463*^9, 3.823954632950815*^9, 
   3.823962019241263*^9, 3.824460918950547*^9, 3.824781554619796*^9, 
   3.824785528235054*^9, 3.824791332454123*^9, 3.824807543982882*^9, 
   3.82487371906221*^9, 3.824874023314259*^9, 3.824875644606249*^9, 
   3.8252314043685617`*^9, 3.82547925133447*^9, 3.8314589079422483`*^9, 
   3.832495858727099*^9, 3.832554830420847*^9, 3.8325674584744453`*^9, 
   3.8325736269061737`*^9, 3.832589439185801*^9, 3.8326449286361933`*^9, 
   3.832661127977107*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"55342b30-7e42-4ad6-92af-19d1554bc278"],

Cell[BoxData["33.19950000000000045474735088646411895752`16."], "Output",
 CellChangeTimes->{{3.813753038956736*^9, 3.813753126518922*^9}, 
   3.813753459228279*^9, 3.813988973414485*^9, 3.813989187516108*^9, 
   3.813990868606769*^9, 3.814016833208643*^9, 3.8140190616293573`*^9, 
   3.814022735227569*^9, 3.814256618345105*^9, 3.8142599427093782`*^9, 
   3.814284776893064*^9, 3.814285429750959*^9, 3.8142855399646482`*^9, 
   3.814285583141252*^9, 3.8143353717759447`*^9, 3.814710999505609*^9, 
   3.8147753495499*^9, 3.8165126248678427`*^9, 3.816607251613718*^9, 
   3.816756824470853*^9, 3.816768564037458*^9, 3.8169483482593393`*^9, 
   3.8233280978628273`*^9, 3.823664348246463*^9, 3.823954632950815*^9, 
   3.823962019241263*^9, 3.824460918950547*^9, 3.824781554619796*^9, 
   3.824785528235054*^9, 3.824791332454123*^9, 3.824807543982882*^9, 
   3.82487371906221*^9, 3.824874023314259*^9, 3.824875644606249*^9, 
   3.8252314043685617`*^9, 3.82547925133447*^9, 3.8314589079422483`*^9, 
   3.832495858727099*^9, 3.832554830420847*^9, 3.8325674584744453`*^9, 
   3.8325736269061737`*^9, 3.832589439185801*^9, 3.8326449286361933`*^9, 
   3.832661127978244*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"dd46e12b-901e-4cbc-8450-861084cb6c16"],

Cell[BoxData["33.19950000000000045474735088646411895752`16."], "Output",
 CellChangeTimes->{{3.813753038956736*^9, 3.813753126518922*^9}, 
   3.813753459228279*^9, 3.813988973414485*^9, 3.813989187516108*^9, 
   3.813990868606769*^9, 3.814016833208643*^9, 3.8140190616293573`*^9, 
   3.814022735227569*^9, 3.814256618345105*^9, 3.8142599427093782`*^9, 
   3.814284776893064*^9, 3.814285429750959*^9, 3.8142855399646482`*^9, 
   3.814285583141252*^9, 3.8143353717759447`*^9, 3.814710999505609*^9, 
   3.8147753495499*^9, 3.8165126248678427`*^9, 3.816607251613718*^9, 
   3.816756824470853*^9, 3.816768564037458*^9, 3.8169483482593393`*^9, 
   3.8233280978628273`*^9, 3.823664348246463*^9, 3.823954632950815*^9, 
   3.823962019241263*^9, 3.824460918950547*^9, 3.824781554619796*^9, 
   3.824785528235054*^9, 3.824791332454123*^9, 3.824807543982882*^9, 
   3.82487371906221*^9, 3.824874023314259*^9, 3.824875644606249*^9, 
   3.8252314043685617`*^9, 3.82547925133447*^9, 3.8314589079422483`*^9, 
   3.832495858727099*^9, 3.832554830420847*^9, 3.8325674584744453`*^9, 
   3.8325736269061737`*^9, 3.832589439185801*^9, 3.8326449286361933`*^9, 
   3.832661127979329*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"6d7cc1a9-7edb-4c4d-a21e-bddd3c6598bb"],

Cell[BoxData["33.19950000000000045474735088646411895752`16."], "Output",
 CellChangeTimes->{{3.813753038956736*^9, 3.813753126518922*^9}, 
   3.813753459228279*^9, 3.813988973414485*^9, 3.813989187516108*^9, 
   3.813990868606769*^9, 3.814016833208643*^9, 3.8140190616293573`*^9, 
   3.814022735227569*^9, 3.814256618345105*^9, 3.8142599427093782`*^9, 
   3.814284776893064*^9, 3.814285429750959*^9, 3.8142855399646482`*^9, 
   3.814285583141252*^9, 3.8143353717759447`*^9, 3.814710999505609*^9, 
   3.8147753495499*^9, 3.8165126248678427`*^9, 3.816607251613718*^9, 
   3.816756824470853*^9, 3.816768564037458*^9, 3.8169483482593393`*^9, 
   3.8233280978628273`*^9, 3.823664348246463*^9, 3.823954632950815*^9, 
   3.823962019241263*^9, 3.824460918950547*^9, 3.824781554619796*^9, 
   3.824785528235054*^9, 3.824791332454123*^9, 3.824807543982882*^9, 
   3.82487371906221*^9, 3.824874023314259*^9, 3.824875644606249*^9, 
   3.8252314043685617`*^9, 3.82547925133447*^9, 3.8314589079422483`*^9, 
   3.832495858727099*^9, 3.832554830420847*^9, 3.8325674584744453`*^9, 
   3.8325736269061737`*^9, 3.832589439185801*^9, 3.8326449286361933`*^9, 
   3.832661127980414*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"b66ebd6d-6d1b-4e6e-a207-a5e5ae3c3a6d"],

Cell[BoxData["33.19950000000000045474735088646411895752`16."], "Output",
 CellChangeTimes->{{3.813753038956736*^9, 3.813753126518922*^9}, 
   3.813753459228279*^9, 3.813988973414485*^9, 3.813989187516108*^9, 
   3.813990868606769*^9, 3.814016833208643*^9, 3.8140190616293573`*^9, 
   3.814022735227569*^9, 3.814256618345105*^9, 3.8142599427093782`*^9, 
   3.814284776893064*^9, 3.814285429750959*^9, 3.8142855399646482`*^9, 
   3.814285583141252*^9, 3.8143353717759447`*^9, 3.814710999505609*^9, 
   3.8147753495499*^9, 3.8165126248678427`*^9, 3.816607251613718*^9, 
   3.816756824470853*^9, 3.816768564037458*^9, 3.8169483482593393`*^9, 
   3.8233280978628273`*^9, 3.823664348246463*^9, 3.823954632950815*^9, 
   3.823962019241263*^9, 3.824460918950547*^9, 3.824781554619796*^9, 
   3.824785528235054*^9, 3.824791332454123*^9, 3.824807543982882*^9, 
   3.82487371906221*^9, 3.824874023314259*^9, 3.824875644606249*^9, 
   3.8252314043685617`*^9, 3.82547925133447*^9, 3.8314589079422483`*^9, 
   3.832495858727099*^9, 3.832554830420847*^9, 3.8325674584744453`*^9, 
   3.8325736269061737`*^9, 3.832589439185801*^9, 3.8326449286361933`*^9, 
   3.832661127981496*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"7d1d3d4f-5726-463a-8f1f-a9f4432aae20"],

Cell[BoxData["33.19950000000000045474735088646411895752`16."], "Output",
 CellChangeTimes->{{3.813753038956736*^9, 3.813753126518922*^9}, 
   3.813753459228279*^9, 3.813988973414485*^9, 3.813989187516108*^9, 
   3.813990868606769*^9, 3.814016833208643*^9, 3.8140190616293573`*^9, 
   3.814022735227569*^9, 3.814256618345105*^9, 3.8142599427093782`*^9, 
   3.814284776893064*^9, 3.814285429750959*^9, 3.8142855399646482`*^9, 
   3.814285583141252*^9, 3.8143353717759447`*^9, 3.814710999505609*^9, 
   3.8147753495499*^9, 3.8165126248678427`*^9, 3.816607251613718*^9, 
   3.816756824470853*^9, 3.816768564037458*^9, 3.8169483482593393`*^9, 
   3.8233280978628273`*^9, 3.823664348246463*^9, 3.823954632950815*^9, 
   3.823962019241263*^9, 3.824460918950547*^9, 3.824781554619796*^9, 
   3.824785528235054*^9, 3.824791332454123*^9, 3.824807543982882*^9, 
   3.82487371906221*^9, 3.824874023314259*^9, 3.824875644606249*^9, 
   3.8252314043685617`*^9, 3.82547925133447*^9, 3.8314589079422483`*^9, 
   3.832495858727099*^9, 3.832554830420847*^9, 3.8325674584744453`*^9, 
   3.8325736269061737`*^9, 3.832589439185801*^9, 3.8326449286361933`*^9, 
   3.832661127982703*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"535a8afe-da84-47bc-aa25-38405364f582"],

Cell[BoxData["33.19950000000000045474735088646411895752`16."], "Output",
 CellChangeTimes->{{3.813753038956736*^9, 3.813753126518922*^9}, 
   3.813753459228279*^9, 3.813988973414485*^9, 3.813989187516108*^9, 
   3.813990868606769*^9, 3.814016833208643*^9, 3.8140190616293573`*^9, 
   3.814022735227569*^9, 3.814256618345105*^9, 3.8142599427093782`*^9, 
   3.814284776893064*^9, 3.814285429750959*^9, 3.8142855399646482`*^9, 
   3.814285583141252*^9, 3.8143353717759447`*^9, 3.814710999505609*^9, 
   3.8147753495499*^9, 3.8165126248678427`*^9, 3.816607251613718*^9, 
   3.816756824470853*^9, 3.816768564037458*^9, 3.8169483482593393`*^9, 
   3.8233280978628273`*^9, 3.823664348246463*^9, 3.823954632950815*^9, 
   3.823962019241263*^9, 3.824460918950547*^9, 3.824781554619796*^9, 
   3.824785528235054*^9, 3.824791332454123*^9, 3.824807543982882*^9, 
   3.82487371906221*^9, 3.824874023314259*^9, 3.824875644606249*^9, 
   3.8252314043685617`*^9, 3.82547925133447*^9, 3.8314589079422483`*^9, 
   3.832495858727099*^9, 3.832554830420847*^9, 3.8325674584744453`*^9, 
   3.8325736269061737`*^9, 3.832589439185801*^9, 3.8326449286361933`*^9, 
   3.83266112798423*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"a49948f9-ee29-469e-ad7f-65572a9dbb7e"],

Cell[BoxData["33.19950000000000045474735088646411895752`16."], "Output",
 CellChangeTimes->{{3.813753038956736*^9, 3.813753126518922*^9}, 
   3.813753459228279*^9, 3.813988973414485*^9, 3.813989187516108*^9, 
   3.813990868606769*^9, 3.814016833208643*^9, 3.8140190616293573`*^9, 
   3.814022735227569*^9, 3.814256618345105*^9, 3.8142599427093782`*^9, 
   3.814284776893064*^9, 3.814285429750959*^9, 3.8142855399646482`*^9, 
   3.814285583141252*^9, 3.8143353717759447`*^9, 3.814710999505609*^9, 
   3.8147753495499*^9, 3.8165126248678427`*^9, 3.816607251613718*^9, 
   3.816756824470853*^9, 3.816768564037458*^9, 3.8169483482593393`*^9, 
   3.8233280978628273`*^9, 3.823664348246463*^9, 3.823954632950815*^9, 
   3.823962019241263*^9, 3.824460918950547*^9, 3.824781554619796*^9, 
   3.824785528235054*^9, 3.824791332454123*^9, 3.824807543982882*^9, 
   3.82487371906221*^9, 3.824874023314259*^9, 3.824875644606249*^9, 
   3.8252314043685617`*^9, 3.82547925133447*^9, 3.8314589079422483`*^9, 
   3.832495858727099*^9, 3.832554830420847*^9, 3.8325674584744453`*^9, 
   3.8325736269061737`*^9, 3.832589439185801*^9, 3.8326449286361933`*^9, 
   3.832661127985792*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"be6f625b-8ea3-459d-8db8-15f8da004df3"],

Cell[BoxData["33.19950000000000045474735088646411895752`16."], "Output",
 CellChangeTimes->{{3.813753038956736*^9, 3.813753126518922*^9}, 
   3.813753459228279*^9, 3.813988973414485*^9, 3.813989187516108*^9, 
   3.813990868606769*^9, 3.814016833208643*^9, 3.8140190616293573`*^9, 
   3.814022735227569*^9, 3.814256618345105*^9, 3.8142599427093782`*^9, 
   3.814284776893064*^9, 3.814285429750959*^9, 3.8142855399646482`*^9, 
   3.814285583141252*^9, 3.8143353717759447`*^9, 3.814710999505609*^9, 
   3.8147753495499*^9, 3.8165126248678427`*^9, 3.816607251613718*^9, 
   3.816756824470853*^9, 3.816768564037458*^9, 3.8169483482593393`*^9, 
   3.8233280978628273`*^9, 3.823664348246463*^9, 3.823954632950815*^9, 
   3.823962019241263*^9, 3.824460918950547*^9, 3.824781554619796*^9, 
   3.824785528235054*^9, 3.824791332454123*^9, 3.824807543982882*^9, 
   3.82487371906221*^9, 3.824874023314259*^9, 3.824875644606249*^9, 
   3.8252314043685617`*^9, 3.82547925133447*^9, 3.8314589079422483`*^9, 
   3.832495858727099*^9, 3.832554830420847*^9, 3.8325674584744453`*^9, 
   3.8325736269061737`*^9, 3.832589439185801*^9, 3.8326449286361933`*^9, 
   3.832661127987105*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"e68cd3c5-bec1-4c38-a9ab-2bea20130f75"]
}, Open  ]],

Cell[TextData[{
 "\nIn this notebook we use geometric units G=c=1. This allows us to express \
mass, length and  time as the same unit. For our convenience, we will express \
all quantities as dimension-less quantities in units of length L. Therefore, \
any physical quantity ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["Q", "phys"], "=", 
    RowBox[{
     SuperscriptBox["Q", "comp"], " ", 
     SuperscriptBox["L", "\[Alpha]"]}]}], TraditionalForm]],ExpressionUUID->
  "db1ed2f2-863a-42ce-b7cc-12981c1c0c89"],
 " where \[Alpha] is a certain exponent and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["Q", "comp"], TraditionalForm]],ExpressionUUID->
  "61f69093-d5d7-498e-814c-4822cf804651"],
 " is dimensionless. \nL is arbitrary chosen: in the ET simulation we set up ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "L"}], "\[LessEqual]", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}], "\[LessEqual]", " ", 
    "L"}], TraditionalForm]],ExpressionUUID->
  "4a35a1da-cbb0-4bd2-a44e-39351b0af130"],
 " , with  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]x", "=", 
    RowBox[{"\[CapitalDelta]y", "=", 
     RowBox[{"\[CapitalDelta]z", "=", 
      RowBox[{"0.05", " ", "L"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "2a22eea7-6525-4b32-b338-e879c78cefe6"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]\[Eta]", "=", 
    RowBox[{"0.01", " ", "L"}]}], TraditionalForm]],ExpressionUUID->
  "bfac4d3a-6dfb-482d-8ebd-f57d9d16a6e8"],
 ".  Within this set up, from Friedmann equation\n\t\t\t\t\t\t\t ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ScriptCapitalH]", "2"], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        OverscriptBox["a", "."], "a"], ")"}], "2"], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox[
         SubsuperscriptBox["\[ScriptCapitalH]", "0", "2"], "a"], 
        SubscriptBox["a", "0"]}], " ", "\[Rule]", " ", "\[Eta]"}], "=", 
      RowBox[{
       FractionBox["2", 
        SubscriptBox["\[ScriptCapitalH]", "0"]], 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["a", 
          SubscriptBox["a", "0"]], ")"}], 
        FractionBox["1", "2"]]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "6357ae41-2069-4824-a892-4f260e333eef"],
 " , \nsetting ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["\[Eta]", "in"], "=", "L"}]}], TraditionalForm]],
  ExpressionUUID->"eefeaa2b-3a31-447e-8f9d-0396f8a1f10c"],
 " and using the values of ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a9e282cb-8fce-4ce7-8aa0-545357a7e0d7"],
 " from the simulation,  i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "in"], "=", 
    RowBox[{
     RowBox[{"1", " ", "and", " ", 
      SubsuperscriptBox["a", "0", 
       FractionBox["1", "2"]]}], "=", "33.2"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "f2f13abc-1c6b-4eee-b2b0-18ae9dbe3b34"],
 ", we have \n\t\t\t\t\t\t\t ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"L", "=", 
     RowBox[{
      RowBox[{
       FractionBox["2", 
        SubscriptBox["\[ScriptCapitalH]", "0"]], 
       SuperscriptBox[
        SubscriptBox["a", "0"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]]}], "=", 
      RowBox[{"268.11", " ", "Mpc"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "09092649-aa78-4480-bf73-85287c8437be"],
 ",\nwhere we used  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[ScriptCapitalH]", "0"], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"67.36", " "}], "299792.458"], 
     FractionBox["1", "Mpc"]}]}], TraditionalForm]],ExpressionUUID->
  "98081ffb-b3ba-4463-a148-41fe6ee13ca7"],
 ".\n\t\t\t\t\t\t\t.\nThis value for L gives that the age of the EdS universe \
is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Eta]", "0"], "=", 
    RowBox[{"8901.2", " ", "Mpc"}]}], TraditionalForm]],ExpressionUUID->
  "9b07dd95-3b78-4ba4-9093-fab4352d2538"],
 " as aspected.\nFrom the expression for the redshift in FLRW, \n\t\t\t\t\t\t\
\t\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"z", "+", "1"}], "=", 
    FractionBox[
     SubscriptBox["a", "\[ScriptCapitalO]"], "a"]}], TraditionalForm]],
  ExpressionUUID->"3b00a4e7-c9e9-4a2b-8578-58d3e49a0b89"],
 " \nwe have that the simulation runs from ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["z", "in"], "=", 
    RowBox[{
     RowBox[{
      FractionBox[
       SubscriptBox["a", "0"], 
       SubscriptBox["a", "in"]], "-", "1"}], "=", "1101.2"}]}], 
   TraditionalForm]],ExpressionUUID->"0f9b9c31-9449-4653-8f9b-ecf21916fff2"],
 " to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["z", "0"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "889136b5-4bda-4e46-9b20-a79ccca93356"],
 "."
}], "Text",
 CellChangeTimes->{{3.828530867773679*^9, 3.828530873523525*^9}, {
   3.8285310321179667`*^9, 3.828531053884927*^9}, {3.828531129342514*^9, 
   3.828531273716264*^9}, {3.8285314754494543`*^9, 3.8285317480769987`*^9}, {
   3.8285318402633553`*^9, 3.828531909198003*^9}, {3.82853194422128*^9, 
   3.82853199376573*^9}, {3.828532029718954*^9, 3.828532093272974*^9}, {
   3.828532131775268*^9, 3.82853237238981*^9}, {3.828674840468855*^9, 
   3.8286749660375834`*^9}, 3.828675022777543*^9, {3.8286754548440657`*^9, 
   3.828675704133157*^9}, {3.828675738905031*^9, 3.828675745191169*^9}, {
   3.8286758250725107`*^9, 3.8286758872546186`*^9}, {3.828675974106687*^9, 
   3.828675999972994*^9}, {3.828676105476841*^9, 3.8286761525222054`*^9}, {
   3.828676183697597*^9, 3.828676199999514*^9}, {3.828763590666542*^9, 
   3.82876400503878*^9}, {3.8325012663974752`*^9, 3.8325012849108763`*^9}, {
   3.8325013220587807`*^9, 3.832501431453471*^9}, {3.83250148478631*^9, 
   3.832501573595664*^9}, {3.8325016158969927`*^9, 3.8325016662738733`*^9}, {
   3.8325017078708277`*^9, 3.832501731011757*^9}, {3.832501865687314*^9, 
   3.8325021081264877`*^9}, {3.832502163093301*^9, 3.832502302618116*^9}, {
   3.832502350276271*^9, 3.832502364861864*^9}, {3.83250245164541*^9, 
   3.832502466969256*^9}, {3.8325025263787537`*^9, 3.832502625907881*^9}, {
   3.832502661097414*^9, 3.832502662284039*^9}, {3.8325027144997053`*^9, 
   3.8325027618143797`*^9}, {3.832502815652961*^9, 3.832502824465131*^9}, 
   3.832502865024149*^9, {3.832502933835382*^9, 3.832503054942747*^9}, {
   3.832503113751985*^9, 3.83250313952074*^9}, {3.832503184618622*^9, 
   3.8325032323153543`*^9}, {3.832567511398616*^9, 3.8325675402622013`*^9}, {
   3.832573646496292*^9, 3.832573647000044*^9}, {3.835149776096414*^9, 
   3.8351497995686502`*^9}, {3.835149846997354*^9, 3.83514987700878*^9}, {
   3.8351504466638737`*^9, 3.835150620111332*^9}, {3.835150670739726*^9, 
   3.835150783444015*^9}, {3.835150878742387*^9, 3.835151016112089*^9}, {
   3.8351510631359453`*^9, 3.835151064624442*^9}, {3.835151830007012*^9, 
   3.835151898145623*^9}, {3.8351519374444923`*^9, 3.835152049833514*^9}, {
   3.8351521194034777`*^9, 
   3.8351521201597977`*^9}},ExpressionUUID->"00359ce3-2c16-499e-9b82-\
7c216577a645"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Units and Parameters", "Section",
 CellChangeTimes->{{3.769424745000573*^9, 3.769424780408984*^9}, {
  3.828675774704452*^9, 
  3.828675779379397*^9}},ExpressionUUID->"e02741d6-f5e0-4d23-9f8e-\
9f7bbbf6268b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"L", "=", 
     RowBox[{
      RowBox[{
       FractionBox["2", 
        SuperscriptBox[
         RowBox[{"i\[Alpha]", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"Length", "@", "i\[Alpha]"}], ",", "2"}], "]"}], "]"}], 
         FractionBox["1", "2"]]], 
       FractionBox["1", "H0"]}], "/.", 
      RowBox[{"{", 
       RowBox[{"H0", "\[Rule]", 
        FractionBox[
         RowBox[{"67.36", " "}], "299792.458"]}], "}"}]}]}], 
    RowBox[{"(*", "Mpc", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"\[Rho]in", "=", 
    FractionBox["3", 
     RowBox[{"2", "\[Pi]", 
      RowBox[{"(*", "G", "*)"}]}]]}], 
   RowBox[{"(*", 
    FractionBox["1", 
     SuperscriptBox["L", "2"]], "*)"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalH]", "in"], "=", 
     RowBox[{
      FractionBox[
       SubscriptBox["\[ScriptH]", "in"], "L"], "=", 
      RowBox[{
       FractionBox["2", "L"], "->"}]}]}], "*)"}], "  ", 
   RowBox[{"\[ScriptH]in", "=", "2"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalH]", "0"], "=", 
     RowBox[{
      RowBox[{
       FractionBox[
        SubscriptBox["\[ScriptH]", "0"], "L"], "\[Rule]", 
       SubscriptBox["\[ScriptH]", "0"]}], "=", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[ScriptCapitalH]", "0"], " ", "L"}], "=", " ", 
       FractionBox["2", 
        RowBox[{"\[Sqrt]", 
         SubscriptBox["a", "0"]}]]}]}]}], "*)"}], 
   RowBox[{"\[ScriptH]0", "=", 
    FractionBox["\[ScriptH]in", 
     SuperscriptBox[
      RowBox[{"i\[Alpha]", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"Length", "@", "i\[Alpha]"}], ",", "2"}], "]"}], "]"}], 
      FractionBox["1", "2"]]]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.769424783712747*^9, 3.769424814779448*^9}, 
   3.7694257000980377`*^9, 3.777815898132509*^9, {3.777817446901784*^9, 
   3.7778175430476*^9}, {3.7779002308532467`*^9, 3.7779002455103283`*^9}, {
   3.778844929293582*^9, 3.7788449397047777`*^9}, {3.779027007768202*^9, 
   3.77902701464624*^9}, {3.781873018888596*^9, 3.7818730264746113`*^9}, {
   3.7822474130625153`*^9, 3.782247428604184*^9}, {3.782301587704297*^9, 
   3.7823016025344467`*^9}, {3.7823031171911087`*^9, 
   3.7823031444082317`*^9}, {3.782303205405478*^9, 3.7823032141180573`*^9}, {
   3.813815610821308*^9, 3.813815642265904*^9}, {3.813989533747772*^9, 
   3.813989538420557*^9}, {3.8139895821359053`*^9, 3.813989606744714*^9}, {
   3.813989675362818*^9, 3.813989702936234*^9}, {3.8140188868466597`*^9, 
   3.814018902293016*^9}, {3.814018948801268*^9, 3.814018954993198*^9}, {
   3.814018991481463*^9, 3.814018995264524*^9}, {3.814019041888026*^9, 
   3.8140190465570593`*^9}, {3.814022753336368*^9, 3.814022765062332*^9}, {
   3.81428535931057*^9, 3.814285386784783*^9}, {3.8165820247731447`*^9, 
   3.81658204510084*^9}, {3.8165824669708147`*^9, 3.816582541468752*^9}, {
   3.816948223183762*^9, 3.816948242366678*^9}, 3.823664604596208*^9, {
   3.823670888549028*^9, 3.823670946980818*^9}, {3.823672196417775*^9, 
   3.8236722027527637`*^9}, {3.828871652009384*^9, 3.828871652615198*^9}, {
   3.832502775215376*^9, 3.832502776494144*^9}, 3.83257122660002*^9, {
   3.832573685432046*^9, 3.832573691742996*^9}, {3.832696570978951*^9, 
   3.832696591791017*^9}, {3.832696666865687*^9, 3.832696692839842*^9}, {
   3.8326967304462214`*^9, 3.8326968289460497`*^9}, 
   3.832825079305637*^9},ExpressionUUID->"067731cc-e536-4b9e-8c78-\
5fad15a811c6"],

Cell[BoxData[
 FractionBox["3", 
  RowBox[{"2", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{
  3.781873115394679*^9, 3.7820285370014963`*^9, 3.78202890513409*^9, 
   3.7820374731156197`*^9, 3.782222778651905*^9, 3.782247460041974*^9, 
   3.7823016108352337`*^9, 3.782464575777089*^9, 3.7824809414554043`*^9, 
   3.782570179225546*^9, 3.782654848640604*^9, 3.782803529481946*^9, 
   3.783007741612241*^9, 3.783077795425496*^9, 3.790677223707367*^9, 
   3.793542360962133*^9, 3.793612470587051*^9, 3.793797474247479*^9, 
   3.796392797997889*^9, 3.798613349990035*^9, 3.8018913308790817`*^9, 
   3.809862782835483*^9, 3.809955862288582*^9, 3.813753574887175*^9, 
   3.8138156448482437`*^9, 3.813926402686792*^9, 3.813989711294055*^9, 
   3.813990828268819*^9, 3.814016813012459*^9, 3.81401890448251*^9, {
   3.814018950164358*^9, 3.814018955966476*^9}, 3.814018996564185*^9, 
   3.814019047615794*^9, 3.814019092382921*^9, {3.814022245826285*^9, 
   3.814022288433714*^9}, {3.814022326817236*^9, 3.814022331588201*^9}, {
   3.814022362077754*^9, 3.814022367025366*^9}, 3.81402245375679*^9, 
   3.8140224850136757`*^9, 3.814022533237616*^9, {3.8140225918131733`*^9, 
   3.814022621209605*^9}, 3.814256603440504*^9, 3.814259930526376*^9, 
   3.814285397149681*^9, 3.814709466649611*^9, 3.814775283139473*^9, 
   3.816512593586294*^9, 3.816582046191441*^9, 3.816582542456379*^9, 
   3.81660697259231*^9, 3.816756583227283*^9, 3.816768529435109*^9, 
   3.816948245797763*^9, 3.823328054424646*^9, 3.823662792031023*^9, 
   3.823664735093169*^9, 3.8236722150391617`*^9, 3.8239546348928633`*^9, 
   3.823962021220796*^9, 3.824460928277768*^9, 3.824782282277158*^9, 
   3.8247857349120083`*^9, 3.824791349645994*^9, 3.824807555528614*^9, 
   3.824873734704493*^9, 3.824874029402508*^9, 3.824874184615609*^9, 
   3.824875675419471*^9, 3.8249140146359873`*^9, 3.825231465664048*^9, 
   3.825479258556348*^9, 3.831458929857806*^9, 3.832502788841113*^9, 
   3.8325548371901617`*^9, {3.83257119901089*^9, 3.832571227740705*^9}, 
   3.832573694344944*^9, 3.8325894446374683`*^9, 3.832644931273161*^9, 
   3.832661130395816*^9, {3.832696820279152*^9, 3.8326968299472437`*^9}},
 CellLabel->
  "Out[234]=",ExpressionUUID->"9f20f78f-f126-44c3-afc2-9ac2f73f7d18"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.781873115394679*^9, 3.7820285370014963`*^9, 3.78202890513409*^9, 
   3.7820374731156197`*^9, 3.782222778651905*^9, 3.782247460041974*^9, 
   3.7823016108352337`*^9, 3.782464575777089*^9, 3.7824809414554043`*^9, 
   3.782570179225546*^9, 3.782654848640604*^9, 3.782803529481946*^9, 
   3.783007741612241*^9, 3.783077795425496*^9, 3.790677223707367*^9, 
   3.793542360962133*^9, 3.793612470587051*^9, 3.793797474247479*^9, 
   3.796392797997889*^9, 3.798613349990035*^9, 3.8018913308790817`*^9, 
   3.809862782835483*^9, 3.809955862288582*^9, 3.813753574887175*^9, 
   3.8138156448482437`*^9, 3.813926402686792*^9, 3.813989711294055*^9, 
   3.813990828268819*^9, 3.814016813012459*^9, 3.81401890448251*^9, {
   3.814018950164358*^9, 3.814018955966476*^9}, 3.814018996564185*^9, 
   3.814019047615794*^9, 3.814019092382921*^9, {3.814022245826285*^9, 
   3.814022288433714*^9}, {3.814022326817236*^9, 3.814022331588201*^9}, {
   3.814022362077754*^9, 3.814022367025366*^9}, 3.81402245375679*^9, 
   3.8140224850136757`*^9, 3.814022533237616*^9, {3.8140225918131733`*^9, 
   3.814022621209605*^9}, 3.814256603440504*^9, 3.814259930526376*^9, 
   3.814285397149681*^9, 3.814709466649611*^9, 3.814775283139473*^9, 
   3.816512593586294*^9, 3.816582046191441*^9, 3.816582542456379*^9, 
   3.81660697259231*^9, 3.816756583227283*^9, 3.816768529435109*^9, 
   3.816948245797763*^9, 3.823328054424646*^9, 3.823662792031023*^9, 
   3.823664735093169*^9, 3.8236722150391617`*^9, 3.8239546348928633`*^9, 
   3.823962021220796*^9, 3.824460928277768*^9, 3.824782282277158*^9, 
   3.8247857349120083`*^9, 3.824791349645994*^9, 3.824807555528614*^9, 
   3.824873734704493*^9, 3.824874029402508*^9, 3.824874184615609*^9, 
   3.824875675419471*^9, 3.8249140146359873`*^9, 3.825231465664048*^9, 
   3.825479258556348*^9, 3.831458929857806*^9, 3.832502788841113*^9, 
   3.8325548371901617`*^9, {3.83257119901089*^9, 3.832571227740705*^9}, 
   3.832573694344944*^9, 3.8325894446374683`*^9, 3.832644931273161*^9, 
   3.832661130395816*^9, {3.832696820279152*^9, 3.832696829949053*^9}},
 CellLabel->
  "Out[235]=",ExpressionUUID->"4e393aa1-d90b-4d45-80bd-d7e11b58eaf1"],

Cell[BoxData["0.06024187111556326102369318264333122769`16.30102999566398"], \
"Output",
 CellChangeTimes->{
  3.781873115394679*^9, 3.7820285370014963`*^9, 3.78202890513409*^9, 
   3.7820374731156197`*^9, 3.782222778651905*^9, 3.782247460041974*^9, 
   3.7823016108352337`*^9, 3.782464575777089*^9, 3.7824809414554043`*^9, 
   3.782570179225546*^9, 3.782654848640604*^9, 3.782803529481946*^9, 
   3.783007741612241*^9, 3.783077795425496*^9, 3.790677223707367*^9, 
   3.793542360962133*^9, 3.793612470587051*^9, 3.793797474247479*^9, 
   3.796392797997889*^9, 3.798613349990035*^9, 3.8018913308790817`*^9, 
   3.809862782835483*^9, 3.809955862288582*^9, 3.813753574887175*^9, 
   3.8138156448482437`*^9, 3.813926402686792*^9, 3.813989711294055*^9, 
   3.813990828268819*^9, 3.814016813012459*^9, 3.81401890448251*^9, {
   3.814018950164358*^9, 3.814018955966476*^9}, 3.814018996564185*^9, 
   3.814019047615794*^9, 3.814019092382921*^9, {3.814022245826285*^9, 
   3.814022288433714*^9}, {3.814022326817236*^9, 3.814022331588201*^9}, {
   3.814022362077754*^9, 3.814022367025366*^9}, 3.81402245375679*^9, 
   3.8140224850136757`*^9, 3.814022533237616*^9, {3.8140225918131733`*^9, 
   3.814022621209605*^9}, 3.814256603440504*^9, 3.814259930526376*^9, 
   3.814285397149681*^9, 3.814709466649611*^9, 3.814775283139473*^9, 
   3.816512593586294*^9, 3.816582046191441*^9, 3.816582542456379*^9, 
   3.81660697259231*^9, 3.816756583227283*^9, 3.816768529435109*^9, 
   3.816948245797763*^9, 3.823328054424646*^9, 3.823662792031023*^9, 
   3.823664735093169*^9, 3.8236722150391617`*^9, 3.8239546348928633`*^9, 
   3.823962021220796*^9, 3.824460928277768*^9, 3.824782282277158*^9, 
   3.8247857349120083`*^9, 3.824791349645994*^9, 3.824807555528614*^9, 
   3.824873734704493*^9, 3.824874029402508*^9, 3.824874184615609*^9, 
   3.824875675419471*^9, 3.8249140146359873`*^9, 3.825231465664048*^9, 
   3.825479258556348*^9, 3.831458929857806*^9, 3.832502788841113*^9, 
   3.8325548371901617`*^9, {3.83257119901089*^9, 3.832571227740705*^9}, 
   3.832573694344944*^9, 3.8325894446374683`*^9, 3.832644931273161*^9, 
   3.832661130395816*^9, {3.832696820279152*^9, 3.832696829950403*^9}},
 CellLabel->
  "Out[236]=",ExpressionUUID->"1b834e68-8b45-43de-81f3-1a9fcffae7b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Loop", " ", "to", " ", "find", " ", 
     SubscriptBox["\[Eta]", "in"], " ", "such", " ", "that", " ", "z"}], "=", 
    
    RowBox[{
     RowBox[{"10", " ", "\[Rule]", " ", 
      SubscriptBox["a", "in"]}], "=", 
     RowBox[{
      RowBox[{
       FractionBox[
        SubscriptBox["a", "0"], 
        RowBox[{"z", "+", "1"}]], "\[Rule]", " ", 
       SubscriptBox["\[Eta]", "in"]}], "=", 
      FractionBox[
       SubscriptBox["\[Eta]", "0"], 
       RowBox[{"\[Sqrt]", "11"}]]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i\[Alpha]", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[GreaterEqual]", " ", 
       FractionBox[
        RowBox[{"i\[Alpha]", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Length", "@", "i\[Alpha]"}], ",", "1"}], "]"}], "]"}], 
        RowBox[{" ", 
         RowBox[{"Sqrt", "[", "11", "]"}]}]]}], ",", 
      RowBox[{
       RowBox[{"itz10", "=", "i"}], ";", 
       RowBox[{"Print", "[", 
        RowBox[{"ToString", "[", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"i\[Alpha]", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"i\[Alpha]", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], "]"}], 
       ";", 
       RowBox[{"Break", "[", "]"}]}], ",", 
      RowBox[{"itz10", "=", 
       RowBox[{"i", "-", "1"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "@", "i\[Alpha]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.832567548566122*^9, 3.832567555894787*^9}, {
  3.8325740004017687`*^9, 3.832574034186925*^9}, {3.8325741140963573`*^9, 
  3.832574172708012*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"33fe7bce-305a-4bb4-b7da-690a167f1bef"],

Cell[BoxData["\<\"{18022, 10.01050000000000, 100.2101102490730}\"\>"], "Print",
 CellChangeTimes->{3.8325675567942057`*^9, 3.832574037031999*^9, 
  3.832589449907832*^9, 3.83264493637148*^9, 3.832661132817751*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"54ab24d3-1dc9-4f9b-9e42-b103fb885778"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"i\[Alpha]", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"Length", "@", "i\[Alpha]"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.8325738157271433`*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"eca6cbea-8ee9-4e5e-ba87-b16fdb9d2ccb"],

Cell[BoxData["33.19950000000000045474735088646411895752`16."], "Output",
 CellChangeTimes->{{3.8325737892077427`*^9, 3.8325738165703163`*^9}, 
   3.8325894544437103`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"ab077d17-29eb-4e3d-b34c-a7014e990b18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Eta]in", "=", 
    RowBox[{"i\[Alpha]", "[", 
     RowBox[{"[", 
      RowBox[{"itz10", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"ETA0", "=", 
    RowBox[{"i\[Alpha]", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"Length", "@", "i\[Alpha]"}], ",", "1"}], "]"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8140227845009737`*^9, 3.814022806439884*^9}, {
  3.8247822893103743`*^9, 3.82478229550028*^9}, {3.832503273497798*^9, 
  3.8325032774541063`*^9}, {3.832567608029964*^9, 3.832567610370989*^9}, {
  3.832571210035288*^9, 3.832571210136778*^9}, {3.832574075545319*^9, 
  3.8325740892504597`*^9}, {3.8325742030772047`*^9, 3.8325742031943607`*^9}, {
  3.832644941365652*^9, 3.832645003217292*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"44e51125-b23a-455e-95d4-c562209117b3"],

Cell[BoxData["10.01050000000000039790393202565610408783`16."], "Output",
 CellChangeTimes->{
  3.814022807469647*^9, 3.814256621616838*^9, 3.8142599465200577`*^9, 
   3.814284795865484*^9, 3.8142854350219383`*^9, 3.8142855893841143`*^9, 
   3.81433537508142*^9, 3.814711006639818*^9, 3.814775353574183*^9, 
   3.8165126278852367`*^9, 3.8166072573911457`*^9, 3.8167568282591267`*^9, 
   3.816768567411714*^9, 3.81694835228251*^9, 3.823328100054717*^9, 
   3.823664579217189*^9, 3.823664738693076*^9, 3.82367224153824*^9, 
   3.823954646114921*^9, 3.823962023487895*^9, 3.824460932174708*^9, 
   3.82478229724467*^9, 3.824785737889193*^9, 3.824791354032777*^9, 
   3.824807558451927*^9, 3.824873738188603*^9, 3.82487418710561*^9, 
   3.824875678485483*^9, 3.8249140176054983`*^9, 3.8252314704232388`*^9, 
   3.8254792617982893`*^9, 3.83145893274949*^9, 3.832503280727077*^9, 
   3.8325548453811903`*^9, {3.832571204905717*^9, 3.832571231236438*^9}, 
   3.832574092401915*^9, 3.8325742042406816`*^9, 3.8325894567354937`*^9, {
   3.832644975641774*^9, 3.832645004054401*^9}, 3.832661134791211*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"468a5df0-8ec9-46a6-aa10-7842f6ad4f33"],

Cell[BoxData["33.19950000000000045474735088646411895752`16."], "Output",
 CellChangeTimes->{
  3.814022807469647*^9, 3.814256621616838*^9, 3.8142599465200577`*^9, 
   3.814284795865484*^9, 3.8142854350219383`*^9, 3.8142855893841143`*^9, 
   3.81433537508142*^9, 3.814711006639818*^9, 3.814775353574183*^9, 
   3.8165126278852367`*^9, 3.8166072573911457`*^9, 3.8167568282591267`*^9, 
   3.816768567411714*^9, 3.81694835228251*^9, 3.823328100054717*^9, 
   3.823664579217189*^9, 3.823664738693076*^9, 3.82367224153824*^9, 
   3.823954646114921*^9, 3.823962023487895*^9, 3.824460932174708*^9, 
   3.82478229724467*^9, 3.824785737889193*^9, 3.824791354032777*^9, 
   3.824807558451927*^9, 3.824873738188603*^9, 3.82487418710561*^9, 
   3.824875678485483*^9, 3.8249140176054983`*^9, 3.8252314704232388`*^9, 
   3.8254792617982893`*^9, 3.83145893274949*^9, 3.832503280727077*^9, 
   3.8325548453811903`*^9, {3.832571204905717*^9, 3.832571231236438*^9}, 
   3.832574092401915*^9, 3.8325742042406816`*^9, 3.8325894567354937`*^9, {
   3.832644975641774*^9, 3.832645004054401*^9}, 3.832661134794704*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"beb29cbf-78ba-404d-af38-53f8673e81e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ETA0", " ", "L"}]], "Input",
 CellChangeTimes->{{3.832554853034573*^9, 3.832554855181096*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"be5f5bfb-9c4b-4d05-a24b-0bb3e44cdc98"],

Cell[BoxData["8901.20124748102378572010278596454019730739`15.455931955649724"]\
, "Output",
 CellChangeTimes->{
  3.832554855882525*^9, {3.832571214446825*^9, 3.83257123367185*^9}, 
   3.83257409978308*^9, 3.8325894597814407`*^9, 3.832645008029129*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"a3cd7ea2-29ef-48ea-bcee-0a3ec0631201"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalOmega]m0", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"\[CapitalOmega]\[CapitalLambda]", "\[Rule]", "0"}], ",", " ", 
     RowBox[{"c", "\[Rule]", "1"}]}], "}"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"arXiv", ":", 
      RowBox[{"1807.06209", " ", 
       RowBox[{"(", 
        RowBox[{"Tab", " ", "2", " ", "5", "th", " ", "column"}], ")"}]}]}], 
     " ", ",", " ", 
     RowBox[{"H0", " ", 
      RowBox[{"units", ":", " ", 
       RowBox[{
        FractionBox["km", "s"], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", "Mpc", ")"}], 
          RowBox[{"-", "1"}]], "."}]}]}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.768812262886331*^9, 3.768812263632814*^9}, {
   3.769363994551304*^9, 3.769363998668314*^9}, {3.769425051358477*^9, 
   3.769425052452716*^9}, {3.769425328012971*^9, 3.7694253495973454`*^9}, 
   3.76942571533825*^9, {3.76950479862391*^9, 3.7695047994990463`*^9}, {
   3.76957516349675*^9, 3.769575196129734*^9}, {3.76957569835014*^9, 
   3.769575702335312*^9}, {3.769589235021893*^9, 3.769589236879373*^9}, {
   3.7697562560121403`*^9, 3.769756256175536*^9}, {3.769756342110237*^9, 
   3.769756342333046*^9}, {3.76975639590956*^9, 3.769756399667816*^9}, 
   3.77790024831721*^9, {3.7818730329430237`*^9, 3.781873036179556*^9}, {
   3.809955881974353*^9, 3.809955914832945*^9}, {3.813989518445169*^9, 
   3.8139895212450733`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"761d4eb8-2e16-4b9e-bed2-4f11f929b522"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[CapitalOmega]m0", "\[Rule]", "1"}], ",", 
   RowBox[{"\[CapitalOmega]\[CapitalLambda]", "\[Rule]", "0"}], ",", 
   RowBox[{"c", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBGKJe1Wcr5LeOFbUmsVqZL1x9HN5uWo2kFax/mA6B0jP
LVF/tgJIa7/O/7sSSF9c8H/3aiCdt/fBb9nsN45BqxfMlgfS4gy53DpAmkWX
V+Y3SPzeHjvpHKA5J4NvZue/cUxg+DJ/JpAWO8y87hGQfuoyr+kFkP6X5uPs
UPDG8cIl4/TsmjeOUpML2vlr3zhuvjvzDIiOz9tTJgykK3oMoucC6Q22hl8X
AGm1+YcnTKl742i2fla1YT3Qnc2dmsZAuvfy7uemQDqAUfSiLZDum/hcMQ5I
a7IfjATR7yKjROKBtJ6C/zmehjeO+yb9PN0KpC8l/+h72/3G8YbX7rrXvW8c
Qx7Vr2Xpe+P43nLSGh4gHfn2gDAfkL7He3SSKJBmrmTbYgCkS1MNJ1kAaQDf
6qeK
  "],
 CellLabel->"Out[43]=",ExpressionUUID->"d2fcf357-b3e1-40d6-9294-da0d9e746b12"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model set-up", "Section",
 CellChangeTimes->{{3.760179705830826*^9, 3.760179725555457*^9}, {
   3.762190609682498*^9, 3.76219061325602*^9}, {3.762190744218953*^9, 
   3.7621907749821577`*^9}, {3.764478003246757*^9, 3.764478006744501*^9}, {
   3.767590223384047*^9, 3.767590258328867*^9}, 3.7778175686754827`*^9, {
   3.828676305755225*^9, 3.828676310666078*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"fcd6416b-f475-4f0b-828a-9c8ec7199cda"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Alpha]", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "i\[Alpha]", "]"}], ",", "prec"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "i\[Rho]", "]"}], ",", "prec"}], "]"}]}],
     ";"}]}]}]], "Input",
 CellChangeTimes->{{3.813753499884078*^9, 3.813753527267033*^9}, {
   3.814016878389673*^9, 3.8140168914438467`*^9}, {3.8140172986594048`*^9, 
   3.8140173413572702`*^9}, {3.814022815753201*^9, 3.81402281644053*^9}, {
   3.814285598554427*^9, 3.814285610639175*^9}, 3.814339083467987*^9, {
   3.814339128561902*^9, 3.8143391351593647`*^9}, {3.814339663635157*^9, 
   3.814339663793243*^9}, {3.814711291505416*^9, 3.814711291841296*^9}, {
   3.824782304361754*^9, 3.824782308231421*^9}, {3.832503303920985*^9, 
   3.832503305558929*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"2ace2196-d1ae-4828-a438-852e74242b27"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "[", "\[Eta]_", "]"}], ":=", 
  SuperscriptBox["\[Eta]", "2"]}]], "Input",
 CellChangeTimes->{{3.813753531751334*^9, 3.813753632711178*^9}, {
   3.813753682534894*^9, 3.813753798309636*^9}, {3.813753962857615*^9, 
   3.813754063343088*^9}, {3.813754173360602*^9, 3.813754173662303*^9}, {
   3.813989228198312*^9, 3.8139892714098253`*^9}, {3.813989735520749*^9, 
   3.813989757395022*^9}, {3.813990884297019*^9, 3.813990893423987*^9}, {
   3.814017361199423*^9, 3.814017424488718*^9}, {3.814259984956101*^9, 
   3.814260052494625*^9}, {3.8142663804652567`*^9, 3.814266497912457*^9}, {
   3.814269379992947*^9, 3.814269391667224*^9}, {3.8142696284711533`*^9, 
   3.814269635828691*^9}, {3.814269757447843*^9, 3.8142697577982883`*^9}, {
   3.814269791409729*^9, 3.814269895295619*^9}, {3.814275709383203*^9, 
   3.814275723173037*^9}, {3.814276106598785*^9, 3.814276112308646*^9}, {
   3.814276382333413*^9, 3.8142764074637623`*^9}, {3.814276467081497*^9, 
   3.814276503344483*^9}, {3.814711847026519*^9, 3.814711847276045*^9}, {
   3.814711883460402*^9, 3.814711958453045*^9}, {3.814712033977553*^9, 
   3.814712059164784*^9}, {3.814712116625619*^9, 3.8147121170810843`*^9}, {
   3.8147685685324507`*^9, 3.814768578786626*^9}, {3.814775433476243*^9, 
   3.8147754688538733`*^9}, {3.8247824456610394`*^9, 3.824782446852365*^9}, {
   3.824782481342968*^9, 3.8247825067072353`*^9}, {3.8248764531463003`*^9, 
   3.824876461074615*^9}, 3.832503415502512*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"5b153b26-febb-4525-9ddb-3b231e3b3dc9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      FractionBox[
       RowBox[{
        RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], "-", 
        RowBox[{"A", "[", "\[Eta]", "]"}]}], 
       RowBox[{"A", "[", "\[Eta]", "]"}]], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "30"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "900"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"StandardPlotStyle", "[", 
       RowBox[{
       "16", ",", "24", ",", "\"\<\[CapitalDelta]a(num, an)\>\"", ",", 
        "\"\<\[Eta]/L\>\"", ",", "\"\<FLRWSolver\>\"", ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}]}], "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      FractionBox[
       RowBox[{
        RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], "-", 
        RowBox[{"A", "[", "\[Eta]", "]"}]}], 
       RowBox[{"A", "[", "\[Eta]", "]"}]], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", ",", 
       RowBox[{"i\[Alpha]", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"i\[Alpha]", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"Length", "@", "i\[Alpha]"}], ",", "1"}], "]"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "30"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "900"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"StandardPlotStyle", "[", 
       RowBox[{
       "16", ",", "24", ",", "\"\<\[CapitalDelta]a(num, an)\>\"", ",", 
        "\"\<\[Eta]/L\>\"", ",", "\"\<FLRWSolver: Full range\>\"", ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}]}], "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], "-", 
         SuperscriptBox["\[Eta]", "2"]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], "-", 
          SuperscriptBox["\[Eta]", "2"]}], 
         SuperscriptBox["\[Eta]", "2"]], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], "-", 
          SuperscriptBox["\[Eta]", "2"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}]}], "]"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        FractionBox[
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"\[Alpha]", "'"}], "[", "\[Eta]", "]"}], 
           RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}]], "-", 
          FractionBox["2", "\[Eta]"]}], 
         FractionBox["2", "\[Eta]"]], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}]}], "]"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], "3"], 
        RowBox[{"\[Rho]", "[", "\[Eta]", "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[Alpha]", "[", "\[Eta]in", "]"}], "3"], 
        RowBox[{"\[Rho]", "[", "\[Eta]in", "]"}]}]], "-", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.81401695036919*^9, 3.814016970506256*^9}, {
   3.814017095601789*^9, 3.814017123829337*^9}, {3.814017198145893*^9, 
   3.814017253235899*^9}, {3.8142848522263527`*^9, 3.814284860425161*^9}, {
   3.814285647726283*^9, 3.814285721365893*^9}, {3.814285786164278*^9, 
   3.814285803702141*^9}, {3.8143393605964403`*^9, 3.814339407619567*^9}, 
   3.814349780134968*^9, {3.8147110313740683`*^9, 3.8147110350263233`*^9}, {
   3.814711151523843*^9, 3.814711151939856*^9}, {3.814711195284602*^9, 
   3.814711261035133*^9}, {3.8165917541375647`*^9, 3.816591802437804*^9}, {
   3.816591862322893*^9, 3.816591874465972*^9}, {3.816756858163245*^9, 
   3.816756858655451*^9}, {3.816756905761413*^9, 3.816757012075852*^9}, {
   3.816757057746579*^9, 3.816757066250725*^9}, {3.823328125026208*^9, 
   3.823328173272596*^9}, {3.832503349232554*^9, 3.832503352594995*^9}, {
   3.832503458058155*^9, 3.83250346212739*^9}, {3.832563832869231*^9, 
   3.832563833661796*^9}, {3.832563953931522*^9, 3.8325639548776827`*^9}, {
   3.8325712657453136`*^9, 3.832571297546612*^9}, {3.832574248197115*^9, 
   3.832574286065833*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"56d5b6ea-b49d-4d90-ad39-370d4711ef4c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwcVnk8ld/XVUlIKCXKlO7gDtx7SRFqp0wNopSKhIgkqZB5SpJCRFGZ5/m6
5mFTMoQGVCqiQROZUoYk3/f5vX/dz/O55+yz9tprrXM22J47YL+Yj48vazkf
3/9+X1k4mVovJcEjTZ+qJPMM7FR+EcgvRAKLm7PPw76k4pP/tLg5IiTgP3+1
NP96KrZ2ZbzfK06CqI+lG2tXpWFj+gqxnxIk2KVy8O+TI+lY7+6xLW4tCY6F
t7dMp6dgtcH7s5rrSbBzztj3snA6lkkbJvbLkYBypCb/9+Ek5P7gPglSJEE3
p3U6cmcq5qP0PJlCAk8xoc9JezMwKyqY0U4jwf1MXu1dgSRMs/lxzEWZBNQx
Ss+SiRRMVDMLX8UhQfB9yu2TgikYvxSrKzaRIDmnUE6kMQljX5OHjmmQIDwx
QNbmVipG5UZK/adFAtKj6/PmlakY7jNjkL6dBFLBQk/bdyXjlX3Wlwx2kmAr
o9zG9kcaBsq3Zf3QJ8Ee+puvu8xS0PcnpydqNwnerJS3Mx9MwkuP7i7dZEyC
jzGK2w8ppOCFuCXqb0xJ4PXL8u3+yRR0cXC28z1EAsmMV9dfmKThac1XtxSO
kqArSKvWJSgN7ZZve9RkSYJl4vtTTDcl44n+rElHa6IfS79H1v0peKxYTHGF
HQnWTTnvsxFNxsNBnqYlDiTYHSXYztJPRdODHwMPnSFB9L1/Te5OabiXvJv7
x4XoL9JWpNwvHQ1neO8TL5AAB8/XM7dn4M629WK6HiQ4GUpNOs+fgdvuhWz7
6kWCoOloRe/dGah5dvRsuB8JVq7Scbgyl4Kbth9OVAkiwZb1/ufoqunIXtnw
pDuEBAIOWQOiOzORMUid9wgjgVna8vPiy9OQUn6Tsf4GCWxKWPSmJymoePXP
sYYoEqRl7+6pIPQie9Q2/OQtYh4Ff6q/RaWhFKOjetkdEsi0/7I78i8FJf6p
DeXfJYGPOC9irXE6ij6/L2WSRKz/YB+7eEkmCqcuNfydSgIxKcNh+od0XHrR
5VJ8JgmORy6d9dNJRz6911nauST4F1ikdP9VEs5LQs+HAhJYL/m6rEknDWe+
5yy9wiXB65nA13EX03CyZqU6rYwEgbqX7R7cSsPRG952TytJcOrfmaZs4wz8
bjV463wtCTqfzHXu3JaJn9l7H61pIMFfQUOREvF0fL+4fLK6kQQXmfsqm1+k
Ye9LWUWrFhKUnbILivdMwZ6sUNPF7SRghu7Xjdqfil2e44FZT0kQab+aP1Se
8NfuI9zdXSRoE7k1Yeicga0yD9+PvSRB5gP0vdGcgo1jNLFbb0gw43RyPmJP
KtY/iNm25R0JDkmzFow3pmF1zN+zfe9J0BItdmaGRPjLzi4xYJAEImrbdcR6
M5C7+emTjd9I4D4C6RfUsjBfcPN86zAJ/tB+7O56S/irN4nhPEYCcfNfjV0m
6eglKdlkNUmCC9quh20U03HvgQhL02kSfIu0qX51LA0VIvmnds6RoME+VT/m
Rzr+avOJ2LxAzEe/io730rFl6S8ybTEZyg1XdcjmpuHdHU716wXIsN4lRaP/
ewae9ft4WFSYDDLp/ZzW0AyE6iPjfKJkeLxLvfTKR2L+U8+v/lpJBkO3s9+j
dmXgV7aBwtc1ZGjSWb9w2YDo17m+6o00GVyenXqs+DkDb+Som3bIkuGaUbmG
lH06qiqQgrlkMtyV23h/sWM6vr2zqjROmQzvbeP0D/mmY8GLa3vCOGRQ1+Eo
P1hJ+Fts0WdvdTIck/YcnvNPw4N7PH3PapLhwXeLvrmvmUi5Or7aWocMNJV8
SZf0VPzTeKrwwA4ypOTqvKceyMQnC/16enpEf0Z8W4qLMzB566GBLUZkmOh5
MHtiRzpe8HjiQd9HhoTAMzcmzmahHm+nmKwpGRq8Aj5ohqei1FhNttghMriK
PovfSE/HEZoqLD5KBvr94jmafCY22Oe++W1JBsH5OzvEFqdjTKrC+W/WZBgJ
+1bRFpSOp/rvCPXaEXgMwmbviWehprRY2hNH4n+nDUMfitJQ5FDo1gZnMgw6
nlVX7U7D9zf/dZe4kmFcZzOpYnMG8p64nclwI4P48gMps86ZeEVwZMkdTzI8
KspR1+Fm4ZFdJ+9f8yXDP26c3+X2VGQE9m7yDSRD0Z8LEdHCabhQa/rUJYQM
U22Hf838Ssfumcf2NmHE/pcmSUfvZ2KmGiwcvEGGXR4lf2t5meh5rvK2/k0y
WEafm5+9noV781VYmrHE/N6cpRlUpKL8t8xWRjwZMoxFjPNZhD8VZa3l7pNh
9Vxt7FEiv5utYmfFU8hwYHDco6wlDePvLo9ekkEGyh9TblVWGp7pCaZNZ5Mh
d2tGguSbdNy2au7h93yCH9WEzz316bjS+PyxvmIyuBe+eG/FzsDP175PPi0l
w7tfGp8SzmVgVfOJ6w8qyfCf+OHOpSsz8Pqi1xtLa8lgxc0+udohA610jOsy
G8jw8Mk1zevBhN68ms3iH5HhjvgJIelcIo/KtUfDW8lQGLaRmXUjDd9MlF7x
6yD0a6hW+UMjHfOZDDnX52QQuX6jv1Q3Df0d0ypsX5DBvqVx7qRWGppmSO8/
9JoMUUW8gfU2WUj6cPObQR8ZpMIUNHfKZuHMesHAre/JsCq8ec1LzMR28wAp
5UEytG7o7LLKScekW9Nc+W9kOLpb7lLDujQ8//ys0aofxPkf77px3FLRRd19
6OEYGWp+0t12j2ag0z3fa+cnybD1ROLo7ytp6LAohLZhmgxpV5pv9e/LQDuH
622df8jwaV340qzhTLR5GnM68B8ZvNY/CbFTIPhQuyvEXkQBSbFNL4MKMtAi
ITX3PT8FuCJqu2WuEvr5L8coSpAC2tphxksI/IfsuUPbRCjEfJ7pOcVm4oGO
ymtjYhRIzRDtPUfkx35OAy1JggIPLvyRdCgm9HGnpW3fWgrkFSqfv/4xDY3+
PT39bx0F/AvPz/F5ZqP+yVdChXIUePN3z5pPezOJ++1drqUiBdyLD8rnBGUh
sD4biVAoEPvPpNyFPxN14n4M1dIosLlb9IisbTpu/Tt57YwyBb78PNA1sSgH
t9jM0dZziO+C7zFPfqXhptZF7e2bKHD7oOJDvWsZyFEWcvLWoECESt1TMicT
VW6JC9O1KRC/2Nc4hvA748/avLfbKfBV08aygJKFSifkd1/bSYE9IV83mnzO
RHIzZVjDgAJ+XUqLFE9koSJDJfz7bgrwW2IptSQT5aPV6fHGFLjQGX9B7HMa
ysxotxscoABv/KyCw74slD6+y2nmEAUWef4XqbozByUf7RHOPkoB4BdN2F+a
jatoB/MOH6eAoMX2VaelMlEs6thuARsKzLs2L/31MQtFpmyGy+2I9eZ/W9oq
M1DQ4nS4vSMFxq87Xw7ZlYZLH7rS1zhTQObjmXVrNHNwMdWzvekcBSx+rh1b
sywb/7sR4OR2kfhe6yPE0cjA+clQYdIlCqy9wBrJ35aFf45E5r3wpkAXd+Rx
k1AOTtfH7b7sT4HBE+d4JXuy8RcpcVg1mAKbriXm1F5Ix4nwjPBPVyjwx+1J
suDBTBydyKfHXKNA0IU2qHfJwuHDpe07IihQZ27oHqqVhd/qapx+3qSACUNT
4LQL4V/FRuHUWILvlYIak38z8GNYW55JPAU2/PsDw42ZODDWuZvvPqFPXXqQ
kX4m9pm9GS5OpsCSwCeX7DkZ+KbmffiJdAosNXUpHf2Rja8UvtHFsinwSuUA
lUzPwu7Qsfb6PAr8uzP7Toieic9Hppxciijg1L5o7K07kf8H/gnL8Shw/omL
ai9kY1sVf/7TckIvPxv9rY/kYIucyB6/aoLPUy/Wr7JJw0chEj+YSAFn1aKY
LKN0fDC87vq7BxQQ7lmlrxeQjWiiyLjRRIHjayrVPSuysKaC1qH1mAIX0yNE
RxflYqUM58yPDgqoSPy92xafg2XBGsvvPacAM23a9PeFLOR+356/+wUFZJ/y
mshR6VhobLBnrocCfatqGx3lsrEqqdTxTi9Rz/LgkXWfc7BpTD500wAFEqdW
/NcYlo3Pt91I7/pIgYO/Pk0kumZib+TsA5cvFPjdKF/vU5mJXwfsBpYPUeB0
0y9N7apM/KnS9TdnhAJVKwLzHFrScd5fR1p/ggJW4VGt9hbZKPg8d/PgLwp8
6mp7rTOUgavlJc0CZyhA4rGdHMfTUf5c8HnZvxRYuLHszFaXHKQ3jEXWLBD6
gD2sTfHpuFnMosB8MRXyP+o/fkq8x3RPtLb9XkqFm9tJlI6abNxXrPYtWogK
3S8oAQNJ/8ubZH7WCipYC2f5axdkot1+EcUn4lRYiNzdnPI7A12TPbefXk2F
d2sWr1qilYc+458tBaSocOTG7ZDxxVkYut3UO309FUzTfZc88crGmCi8A/JU
0HEsj9vYmomJ72nl/YpEveEkzbqLuZjDut3tTaHCgDxNLWl1JpYFLJ5YS6dC
R2m64ZumDGx47rKiXJkKdhpjjJapLGyX76Mf4FDhy4SUfMCibOw5Z2A4vokK
ospGemW2OfixodT+hgYVRF79Fb3amoMjYgqXadpU+H7k1+0l97Jw9sSNlJbt
xHlvdZbGhuTiEu4sntxJ1D/5u73IKQdF+ez7+AyosDekdlNnTCauM+maTdxN
hSYTxt3ShRykpOhIahlTwWBM3UFKKA85E7lqb0yp8GCNzQ/N+jzUBklT90NU
6NlcmrffMAcNbwa7rDpKBYFfFkOrMjPw4Iex68WWVIiXW7rUUysTrdgWuXut
qVASJEbRO5uHToGtLUMnqXDw6Oyj1CXZ6N6p9jnUgQrSBuauq9i5GKiQsoh0
hgr1hzJ4/Bm5eMNVRP6hCxWSpdKbvT1y8M4DT22rC1Sw2vh1zSEib9LEvxz9
607g36U0X7M+G4usTS/Fe1EhK0HXjUzLxmouxqr7UcH2sdaXN5iLTXx0Xncg
FU78+e2n+S4TO01uPz8XQgX6/jWNV55m4buUxaMiYVQIMXUTnpfPw28TLsJ5
16mQfWSRnF58Jk5CH9UgigpnrVPefmvOwoWbBnqfY6jglPbbdL1qDgp/LLUN
uk3wo7/8v1cCWbiGoxAod5cKt+SNvk3I56BC0I3E2kQCj6x3pwThJ2bXbM2R
VCoY39NqrI/PQo0N9m+mMqiwtPRM8b6CPNx5vmsqJocKI+W+DWdX5aDxQx0J
dgEVDvg/f8ivmo3HVuaxnxZToUG9JfOtexba20gaO5VS4fyPqOnTvBx0LQk+
s6ySCivFC5dbxuei76LxsIwaKkjlPlQNsczFq6YWWTvqqWD/sEDk47IsdFre
w1RupIJ/yoiVxppcNG42KZVqIfC/08qqq81FTkCHJn87FcYiXyUkRefgak39
B+NPCX3K3NE0a87F2ckH+n1dVFjW+SHNcCQH+wq0nra8okLKp9zyDV9zsP5U
xUHeWyrsOnF7mV0dMT8FTm9iPxV2J1IL74Xl4pXefOtrH6lQyT+vnTOei46x
lG9uXwh+Rk8q1q8h7nvj1LPWQ1R4EXsioW1DPrIEZX7vGaUCf8Qa2ffSebiq
8bb3lp9UyNQKtJ+dzsZpn5WLNk4R8/R28LqTmYtv1W9cFf1D+CHhYC5vMgfr
xgVE5+ap4BopfsTPJg+Tc4Niv/ApgbSvyYjoxRwMPjm/rotfCe6mSkvdt8vF
U7KXUusElSDBVLJeJzUbjV7/pOaIKIGluk12g0geMqOdi26JKwGv3lBhF+Si
+J5vmwJWK0HL3UHPM3L5+IvfttZJSglsTs9HVnZnYU/9ux2HZZRg24Tpf1Pl
OVjjaf54h4ISBKuVGIul5mGiarexMkkJ/p52d726PAcDR/a+klJSggNScYL2
SXlol9Vqwc8k6tsWH/wbno8G1rqfxllEvZVdzsJ3ibxch459akqQZULXkuXm
oujLLeMtW5SgXGTw1cH/8vFnBM+dp6UE2tO/RvsMsvGlgfJ84nYl6Dw/Z7Vj
MherFuUEX9upBNuVUv66BOfhvVpFIXcDJZi45kubcs1Df/fEKOs9StD7Qbq3
IiQPbVlSknv3K8GIjqxk8/tc1BuKub/loBKsD4lqcBvOQaX0FRs3misBN89U
rEkqF0WOh+WKWhD4Xwbbt8jm47jkEvaclRKcKFlivbMpF7s7/Sq+2CoBRETV
2a/Iw4rwWe2uU0qwWXL0k4xmLibsuviozkkJfFyqWnh6Bei7MGqU46IETRee
DRuJ5qN1lWPnrQtKID/6sfYeKxd3Xhg8HOChBJ4CkfapIYVIYVr1O3krAaeJ
dov+PBeFvr45edhfCYR6zwn6SeTiSPLB4R3BSvCYu3s8qzcfO48+c1UOVYL+
xLxagblcLJUwmpEKJ/Bb98YpP8vF208f+fFHEv1fPu5ZUJeP3le38U9EK4HI
pfAJhZRcPL6jOrwvTgnWbHvqsGNpIcJftZWtCQT/xil3TLbkIam86A4vUQn6
Ouef09cU4LJzNLmkVIIPV4f7eyPycVgpI+NaphJsaj4yaudagM8+yTHcc5Vg
dr4gh2WYiyX3E0qsC5WAvPgsd61PAcYeXq2xt0QJyqSKhSL256GneFT9lnIl
8KK8eb3UOQ8t2oX0NlYrwYegg1nVK/PQsWj1i446JXBbFm0RYJ2DHjHyNm4P
CH2THr158S4PL3vQx2WalMDV1Lk5lcjHm8fU/ZpblWBt84PMa+qEXrfBcpcO
JShx+lWncDEf8xT3JEg+VwLsUXZYvYd4nwgcpjZ0E3wJW46EEH5rGrYud+gh
+jnnrOq2pRC7np3ZKd6rBKEL6W8PEvob4Hl0VfUrgT077CN8ysUft4NO2Hwk
5pki52npmYez3jdGhb4Q8xPNa3lmnY9LT9zx4X1Xgq3kCOk/DkQe7EwTshhR
godFqSHH4wpQnlp4Z8mEEgS1Tor6eOYjc3kVueCXElCf9lXrhuWj5nhjqdmM
EhgJ6QxTX+ej/ounO/7NKcHQkMavrYX5eLDyzfPMBSXY02RYV/CV0Ne9wePG
i2nw5cevBdlNRXg2YOzH9FIabLKaQ7dHeeh98o9XshAN7vi8FgjqzcUwA35B
wxU0cKo+6F2/rxDjGGK3J8RpMD+0SEHivxxME1tHSlhNg7sn+SRTv+Yh9xeJ
t0OKBoIS5nedO/IQX7NgeD0N5IpbXtFECrC9duuzGHkavP9zsyi2rwBfJ+tZ
am2kAXZFy2dX5uHnyybDgxQavCxd/W5SoQh/Olh43qDTQGt86vmKz/m4sOeU
gLoKDb77B3Gvn8zH5ezzsf0cGhgdZ6xbZ16AUqt9FUPVaaBxesx7zrkQybOh
XBVNGpiFaYZds81H1XfR215r0+B+RNnqzPsFuP3B/ScBQIM/Aa4SG8QKcG9G
9jGlXTSYmGnWebQuH4+G8b53GtBgSWJlpIdvHp5yRg+vPTTo4Dz8TvtbgBdN
HvMr7if4NPIQfvUiHwM3vYhpP0CD229juk0ECjFCakDh4mEaMPmKf4usL8K7
89+L1h+jQVrmf36hlELM/vBLu+k4Dfy/8eTb7+dhWdNCu7MNDdzTw5b0mOdh
Y47Q0TX2NBA78LVj/708fH5j9Td0pMHSXaSTCmHF+M5V3v2UMw0SQhzIO28W
4LAZfYmYKw28bSSTK4/l4YyGenTlRQJf7fKenoZC5JcFeetLRD9bfFc8kirG
lYv2FAr60MAr7Jj83tsFKPflkFaJPw12LX1fL8suQEabddvRYBqEfYseriPy
QaPwjPniUBrEa8YHZRUUoF60x5e8azRIkhl4PBlXhAfcgy4ejKBB8vDV3JM7
uHji6I1F8zdpANMmYif1C9BZ505URiwNjkue7F03XIBeG9Jk98XTIMOyMuf3
4kIMXVqYP3WPBs5Pf7X68grw1lClZlIyDa7kHVJkqBVhytPGVv10GuyIGh7Y
X5KPV9a/q9fJpkGL/5eBE13F6HR6qnxTPg16Xu14ovW+EPdXihYyimkg8cg4
Yn9sPm5aqpShWEqDM64hRZJH81H64I570pWEvsyfNb4m8mIh5ViMeC0NpFcv
Y+79V4CDYxevLWsg9jPKPh1ULMTH2hGBC43E9xcb6edDRVgYnnVpqoWY16ZH
W7XCCzHmTYPLSDsNqlKrt+T4FOIlylv7wWc0cKxscy4MzEdLt0nL3m4aDMRQ
PS5v4OKOxuVmXT00+Lh8pX2ZLZHv4uQ9j3tpkKf61X32UiEut9qm2zBAg2cp
J0U38xXjRL65ZsUngi8xRym/t3n46o8ru/ArDZ4kP93Q8akQawzCqRnDNNi2
vO21uW4RJsely90bo8Fg0KzXxclCDBmsWxMzSQOf2WVCxw4W4mlOj8i1aRq8
oD4zWy3KReOA8SWBczQIteBlZNsWoNpTwb8eCzSwkstYoNwsRqn1ipNnF9Oh
LGx7/a6yYvznqDVkJ0CH8GXdF209uPipwuyDhTAdepoOGGksFGIrv8vrA6J0
UBCu8AmV4WLBgavPjFbR4Uv6jzbnqWKMTklpBkk6kJWkhngWXPQYq67bso4O
1sdbLpd7FKCF9otSFTk6XFhVacIcLUIIH8kjK9JB2Dj2bYFsEZLfLE2TodAh
0bA4ujm/CIUp8gkSdDpsGfbIPfGiCMcvatwUVqHDmfGhE2f3cvHlQ9Ori1SJ
8zp1ft9/n4/VYmf8Z9XpYPH3shzFqgCTjoe4j2vSIbLU6bxlayFezk90/qpD
h7qogOX0wQJ0/FNxsn8HHTRt7JsPsbi4z6Dz2Es9OuRV9v/izhajatyQaYcR
HVI+iJYXKXFx7eBio8Z9dNiju+pO+WMuzrNloNqUDn3xe8+dTCjCj/7qW7iH
6CB/q/Ovi1cxtjwxVsk+Spzn/8Nd9UMR5q9zJCcdp0NtfNcny75CvOkYJBNn
Q4eVD1teJ6pw0b3irsQNezpsUh9S/rWmGI/xlwlfPk0Hm8B8wzULRbj9wNNF
3meJ8zdKXzHzLUZSytdZ1/PEetNFgWoP81Fo7L9xB3c6PNh0x9J4MxfHtKS/
WXnRQepckpjh7yJ8cU114JAfHdRHHNpPDBRi1es9r/YG0eEkLcJka24xJpLt
n+y8QuDfPuCaxynG4Iv+j7Zeo0PwCMcrOa0QHR7eqeFE0MF2dL76kFwh7hUr
KVGKpsPkXYZYST4XOcfbc+Tj6PDu0PlZ2fYilMwfTJZMoAOz43u+4GARzs3O
316RSOiN77iVYWsBvteXjORPJealVxws+4+L3f6xi4cy6NBl0nMOPQuxpWLV
pac5dHBsnGvcwyzC6rGbP0oK6IBVJHeROEJ/FDHr21w67Jwf9AjaSuSJVcRL
7zI60HmDUcctuXjr9nKjE1V08DggZ3rkFBdDn13DnXV0+DdSEmwWUYTeAoKq
Sg/owKnIm2YrFKPLttAskSY6PDw7dq3WqRBtPPjX/2ylw1C1H843FaNZUXDU
qw4Cz4u7oSufFKHhVz7+mud08CpcoA5FcFFbLsAz6QUd3l55NCOUzEXW4X8j
wa/p8GJ0Y/DjvGJUjPSxceijw769cqM1/cUo2fLn1Z73dPDTqyvEEkLvC5d2
swfpsGilt0ViKhf/qU/Xr/5GBw2OzCHZrURenHVT+zNM+CnHwDt8Gxc/Z05m
94/RIbbxVX1KEhff9LvKNE4S8yg9FbDrLBc71ozfzJom+p+JeK17rhjr951d
en2ODuJaPUdUCX54V354nVugg95avWD5Q0WYhafHDi5mgI3u1uJqYy4mTH2z
1RBggO3Y9rACkxK8oXzqtYwwA2KPst9fX8XFQPvPexaJMmDHpVe31xVy0S3R
9sGXlQxo9khq9KwtQYdXHza1r2HAN7WYwCvdXDy24kRukTQDQgR1uCVhRD7p
9cvekmWA3gYnHyuBEtT1s4i5tIEBHcOMJdNQjOrlbwUsyQxI/bDzXOquElQa
NfcBGgMcr/28PXe/BGXIPeMkZQZ0T9UOf9QsQvHjZnZCHAbIRt44vY2otySu
+83oJgZ4NUtsPxxYhNNPTPZ1azAgN0BAW4Dga5j/+cMKbQZ4h7ncUnTg4oD2
vs33gAGHB74vGr3CxS63jryAXQz4b6ByZOXLEmwqMJK3M2TAsSXfy13XlWDV
59ZbhnsZEFGsWkd5VowFMvqCyiYMuOpm+WmbOReTzZp8V5ox4F1a8Lnir1yM
uaH7c8qcAcuPn3xiCIQemx7Y91owwBMfC2aL8NB7fltv/QkGSAk1S247U4Jn
N6Fx+kkGmP92OD7XWozWzlqPrjow4KOWzOkK7RI0y6je4nyGAQOaH3r1W7lo
+G5Lgck5BtReqTRVyipGrdUVCuoXGfCWc7a7c30xquzdFCd9iQHyaUmrHqUW
oWIIT2jBmwGlDi9UpIRLULKO7f/JnwH7Mz8oymkXo9DvosmWYAaIwrOhqzQe
zjOUHfJDGXC+e99wfhQXJ07m90WFE3oxjTpkEliCg/doJm6RDEi8o2+1ebgE
e15kNx2JYQB/4eMttPtcbF9O0dS5zYAwyY/1LX5cxJ0ZhRvuMiB7/u8ub9ES
7M3k0R4lMiBytGcf52cxzi57mGmXSsz/4YpbKsI8XOP0fINAJtFvl+eqfKJf
1Sf9idk5hB6L1R/o/CvB/Soj0kYFDJhY+kLlzigXnW/OxQ0XMyD61M4r9+9w
8dqk4KobpQzQePot/a4PF7PM1kYqVzLg8U/TVcv0efiogiz8vIboxz9CV2Id
Dz9IbQp1rWfA9bDH9YlMLi546y5e1ciAQ4c/pZv+Lsb1/Sb+pc0MUIzgG0kn
8khj+4k5szYGhA/J8smol+Dh1LMe008YMLTrm5FxcDFeXOI7eaeTASkmcXxc
nxK8aR/uovmSAQaHJdx2R3OxsDV+uPc1A3YpaIwrEvnRTss+5dtHnOdn+jKH
uI+/Xy//JPueAav4yTP00zxcOvbIquETA/qfeon/8uOhokl3r/VXBpycEfl/
foH34fDiYUIvrxe/X7uoBI+vHu9OH2VA2cOzpqlXStDb45+x3k8GmIyfORqt
wMM7b5Z3fP3NgLOLurMb57lYtnWdQdgsAy560wtzInjYfV/pEW2eAWforNPB
mlwcX9i8veM/At9249IDRJ6I2OjVOi9hwu39h3c1TJcg/dHBLaLLmODyJsrC
5W0xGpBtS4uFmdAvrsdZmsNFu6uuLFNRJvhlhZgGRvIwaMg/f3IlE8yCO048
DCjBpD0R1Ng1THjwWuJQEVGvrvBeuro0E5L58lxq/UrwrVie/GsZJtTuu35S
gVaK0+er7nkqMOHoVqVZmXAurn7ZsnYdiQnvEk39mN94yNn86lYtlQkJnSxj
DclSNI4fFDvOYILD6X8DRQQfZ+Z+Xl9QYUJX7IKjgwQPwyz5BFNUmVC+IBhk
U8LDrHrRkB2bmSAcI3NBWr4EHynI8g1qMqH6fFWNgysXPwQzfEN0iH6e/uxZ
9LUEFz5rzpJ3MKFmAynyv9QSXG9g6Na6iwm58WKqjxtKUCP38ISjIROCddQr
Vy4uxUPL7Z2F9xL1gr0+/WdQghfOXvyev58Jx5ws3JO/E3p5HmS37yATVknf
dJVT4WEh5+aHscNMiM+0uzB9gYftt5Isbx4j1r+OOJwzUYLfpwrecKyY8LmR
79fGA6W49Eit2QsbJpz7cXmi1o3QS01bp5s9E54qmh8s5ZTgdpk3eyVPM+GG
Oe207gkeWvp/fVzpzIS2oqtqd8x56PXh966jrgS/bcI/VZmleFt3ycO5i0wQ
r09QXGFZgqUZK3XuX2LCCCma/XeqBDsFFKp1fJigt9f/7C42D8ccVdTf+zNB
Vyi0nirDw+Ud2iWBwUzY9WD7jKg4D/nuHL3tGsqEu4ZS/vi+BKdtPXysw5nQ
9EDx8OUfJfhD5Za1SSQTegf0ap5fJfw5V6wHMUwILLA7f5eY16uWJ3T2bSZ0
KLu0+r0g+IgZElO4y4SN9XeuHrHiYYOVwJRYEhPwe91JhcM8LKNv7P0vlQm7
LT4xJflKMHd6e8N4JhMenqwmL+4k9NdomfE+lwnZ9jMmg8T9FRvpde15IRNG
XXsy+leX4rVjt10aSpggElxaNRFdgv6U0oPF5UyYs05YZu1Yim6TzzWSq5lw
9Z9waf/zUjxdPyIbhUxQg4+dKwi/WYULLQl4yIStRz85p2eW4sHDlO8uzUzw
VPhifzOIh4aKO59atTFhb/k1/2rbEtQZO8EzfsqE1R5vbFP3lKBqje+dbV1M
EFW9cfZQMA+poQm+Kq+YkKKq+S9mLQ9lDlTYyL1lQkZH0Zefg6W4Su6Fvmg/
Ewri+ZXafHi4bHicsfCBCZS953RXfyDyvVxk5dhnYt4GAst3PeThZBBtuv87
Ew63j6be9i3Bb/v0+56OEHr5nFfr1crDd9InH+AEE3a4ZOj1epZi15eAzMLf
TDi+LpbJs+ZhS8n98MRZJqhmbL24tp6HtX7V5yLmmfBtVcDlA9I85Br1mPnx
KYP71d86gkvKMHPNL82z/MpQwb31SbW+BO9+FJM/LqgMV7Rkbsof4mFUIZN/
n4gynDqzI/737jIM8TIa0hZXBrO2vr1JP0rRS+/UM+ZqZQiSCA8e1OKhy8rL
pTJSylD9r2ZD8zQP7fqT40VklGHlyT6t+deleDS3zm9eXhma/TJvjGkReeD+
1nZkozLclwyytmvm4a4d0wbvqMqg3//p6Dri/tdcIaH8hKEMZc735itCeajy
lrWqjqUMkhKv/wwYlOLGzL0z+WrK4H04SuuUXRlKnT/97t4WZRA3V7J6ROBd
oRP68LqWMvgfeV3iJ1KGi4XSs3y2K8MKFe2I2g4ezrxsuH5mpzJo8ZWUYjoP
R1LeuVoYKMN3dctN3zp5+NH5z6E9e5ShsffegNWyMuzRkNTS2q8MA9kVD4sI
/jr41RQYB5VhdYJs1P2CUnzQuX/penNl8FCPWBHvWYYV952HhS2Uwdw7aVWu
Bw/zHa89n7NShtb3W+P9dMswZVNW2bCtMhx69vpKcxMPb/M9Sug9pQz7vDKO
2Vby8PqT9/7tTsrws304lRfOw8D4+ZM1LsqwhVM/qdDAQ3c7aaO8C8pwqXfz
uc07y9CJvVnlrocy6AzFXrLn5+GJ+QMS4d7K0FR/aeXNV6Vo9vjcrJe/Muge
pv83NFyKK0wKN5afVoFjO7YfS/Ytx63shoj9Z1Xg/poMx21x5ego3jUz5KoC
FyPu9uysqMC4iU82IW4q0HRT91jh83Js7PzdIeepAheKesceKFTgBFdgc7WP
CohrtstlLC1D2WiplIMBKtBnWXpHU7gcd5+nC48Fq0DSiLfaKcdy9DTVdgsL
VYHGqzqOBvrlmMUxHlAMV4EnV1JVj86V4YuV1oYYoQL7/rP7Kv6wFPkmz/PM
o1Vgx6ItUk++lqNK92WZyVgVUPvOYfUeLkcLXlzojXgVMN/4KI5/vhzDYrIn
KPdVoMr3b+tWajlWXKg+9jBZBXo3WCn6t5Th4IGOJot0FZiWmSt51F2O4mr9
KtNZKuDkrn1Y92kZbpMYj7+ZpwKq1JaOau9yPPOLbwmjSAV2S0oorI6swPgX
q842lxD4tumTxKQrsKWU9PpEuQpoR314fjquAn/d2rxjrkoFutzp5TPjZajg
ZpgfW6cCPuPvEl9yytHY7Nga1gMVkBCJzKOMlaHvJueAtkcqRJ4WXMrKKMPc
1f5DJ1tVwEit9vG76VLs+R11cKGd4NP52l6HbWXI/yoV45+pgJcRo7r3RQVy
ykupat0qULTnx26hCxVoFdcc/fSVCvhJB0YLipfjDffXfx3eqoCW4LKywagK
rD40ZL+4XwXiBAwaDmRV4Ff1v8/vf1ABgYpqY8pYKa6WXLF1y2cVsPZPngn2
qMQd03IZXd+IfrNyRzsky9Clhy3q/EMFVISjg8Q/luP9Cl1PgXEVCIifWl/u
Uo5tt80+pUyqwIp+h7119Aqc9ji1V2ua0I9ZU2GEUTmSzD0rXv1Rgfrc+p3F
IWV4YEu4gus/FchwFRBsXFqOAWvvhwsvYoHd8tcfAqiVWDBT+DuDnwWxjlte
vVtWib2vG6y2C7IgYTpvdV99OS6r6nr8djkL6vq3DL2wqcBN8YOqbmIs4D00
uetoWYG2nlP3RSVYIOCwoRtsyjHqyLJluZIsEBkcE5oj+KvTkD6/cx0L/M+R
dlrHluOwFKOvX5YFJDrPjrumHNf+0dbz3MCCuI96fMcJPe96a1y8iswCVfMd
CaY/yvBCtbV0oRILSnP1vDOPV2JywoXLBkwW+PCelWQ/q8AnXiGjH1ksEOsu
fjftXYZzR2+b+6qxIKblsVpRSwUqbc15KLmFBaEftYq7Syvw0LoaRslWFgzP
SJ3jHqrE4LmOuD3bWOB6yWBwJrsCub39/33ZwYIDl7QXdM9XYH/N+OlAPRbY
fDjQPHynAoXvLXq5zogF3QfcCyM2l6OGj8S28r0soP3Olht5WY72FuSc/SYs
eGPms/fShkp0ytTz0TBjgUWPa/dPqETXcXvjDUdYwJq/uGxeohLdNUM3CFsS
/PvcEGjYVIHel7N+T55gwQXBpfYlSysx8GlLa99JFozEJnXYEfxeWfvtbpMD
C6jP3FaMbKzEcJtlLoVnWDD+Lrpv+cVyvJlP3XH7HAvGou9fl/cqx7gpg9UB
F1lwdJKjv0uoAu9ud/zmcIkFVnQJjaPB5ZhyLazGxIfAPx1TXBpZiZkvciI0
A1hw/btfLDOmHPNk26wVLxN4toymd3UQ/DgMqS2/ygKpy5rlDtaVWF4itOx3
OAuWR5vF1oRXYM1fWu+7SBYsNiCVzEaVY4Pe7sLmGAKvm0I+/UgFNkU5BRbd
ZsGtTPpH270V2P42/OCduyzIlT/0JWVRJT7fmE8JTGJBR5165rEzlfjybMcf
xzRi3olHk7XqyrG38scT0yxCD/iz0aSjHN8vEknZmscC6SSrDSc/VuLnPcyL
G4tYcHpQa8/1NxU4FLdXX4THgsNj5yQi7pfj2Htn6alyFqRvL0+o1a3E37SI
kf5qFny62VvHu1SJfy4WNrQgC071Tr+29a3EBXwaU/yQwHtxpVmldCXyC47Z
xzezgO+Y3avvghUodEBUM6iNBTvcc25+eV2JovdVRJyesuBcrZhXzeZKlPhq
/P5AFwvu3KUcMbGuQin2OZ7WKxaYJwx9CPxbhXLeUVdIb1nAPnb6+JLOctzY
VHxkRT8LLvrGXBX/rxyVRDsZ0x9YsLRDgnfmdQWqHJlYGPhMzLeWafeWyEe1
NPHu1u8s4N9722riUxVqjLAzuSMsKKmsZicWVaLOZlPPhAkWSAw9uvTDoAp1
A8/vCf7NgoNCZxU8harQsD1a7sws4ef/5lZ/iavEfat5Pw/OE/ngYbupJKUK
aazTtnJ8bCAJnM4Yy6lAptmfjlWL2dAt68kRWFuFKl7X1Jfxs+H8zZMLpwm9
cpKkk/8uZcOpR33TJdVEXjzKFZxYxoY7sgG7Tw1W4Obvmhc+C7HBUSWudHJZ
BfEeae97s5wNnqpqbb++VqG26jG9pyvYUHRGdsTUtgK3mQ8XPRRjQ8+gZl78
XAXu8PWWqljJhglTR5Gpf5W4K1U4OE+CDf/m05MenK5E/Za7P5LWsIGrYPxr
WrUCDX/QD91ay4aSRYHbF0dX4R7x2vqr0myw/0rNMfxUgcbqe5R817PB3WHR
njHzCjQ51hftKssGYz9zhac1lXgw4MxfO3k2rHfQH9v7pRIPZ/y1O7qBDRFt
z3c011bhkbbrz/ZtZIPW7FKTV+QqtBhbr6FLZsMzl22LXihV4gUlN/IaKhu6
7u8yK5Eh/Gr7ZNV3JTY0/utIEM+sxLT7JL5aOhsCPcrYMUaEf3p8RyOYbAjf
XtvXb1KJ3eKveq1V2JCl2/RpWLwKh3YrP1Zjs2G7/HkVHdlK5LtypVxAlQ3B
1sfiy8YqUaqhP+2tGhtSutoHfDdXIPuP+s0CdTZILfgZUTQq0EAt0i9gCxta
Yo9efx9fhVZnvzod0CT43Pph7XReJXpkbztC1iLw+PW1DCRWYeTH23qz2myo
uf/QKmS6AjPXj6t2bGPD1jqPRYXSVVh3yEAhCdigomGY01FF+DUqecV5XTYs
0tjMd6mxAkfaZuZ27mJDfdlXfpGwSlzCb/JdUp/4Fngz0BtVieu25bwaMmCD
9ckH3I0rKlHVk+9RnREbVF8WvzmkUYm7eUe4UXvY4DUT9dVbtxptRriJtvvY
8PJqBJWqUYWeFKHr6vvZMKDCVs72qMab1jaegqZEvVnlqYb4Ssy5W23fd4AN
F1S2KAjYVmHDy5UHi8zY8DvefpMKsb9H1AmCDrOhOdRh/52uahwzbFQ2O8KG
F+83feDbVYkCl9etpx5jg+7Dj0qcwSqUxQuCcxZsuJqfEKlTUoWbZtqnnhxn
A88uojPySiXu5WwcTD7BBnAcnRz1rka7Mz6dF2wIPbwhm57bU40+mS9Q7yQb
pr2/6/qsrcaY94x8KXs2JP3nu+GHYw3mSYfE/zjFBsXPyywd1Cqx8eC7K/WO
bIgCNTX531X4NmLTxWgnNozkeDi+3FqFE603rO2c2TDl9ejMq+vVKLj4y74t
Lmy4vi3P5EZ/JSpo62gJu7JhzbYZahmhny0ecUr959lA+fPRIuRBFRpzR9dw
L7LhZO+Ko9qLq/DUsN6Sy+5soNE2WA/KV6E/KWni0CU2rL21/kBDbjXGWU33
K3kRejBtaTi9pgoL4o07/noT+fDy/dpHy6uxqTur6pkvGy6THc5t8qzEdyL/
Zab6s4GZ5Rx/aXcN/tI3v+UWyIbRm0soxQbVKBxUHGgQzIaEMOHZqMJqVKxd
5rIuhA0eL6gbUhOqcevUCYvRK8S83m6fnHheiaasKsMHVwl9D/CXtmpXo+Np
8c23rrFhsPeNhiOxPzDdceOp62z4texKQ/KtSozvfyCuGUHo0WKnW1pjNRav
lV5YHkXgdx7YOzFahS2m538M3CTyaXGri1BqFQ5cb3tTEsOGu4W2z39+rMLp
5g0tIbFs2JDUm9vDrcYVfN6l5rfZEJbRfXP7umokbe1OocezIb9shVVZeDVq
u9Ej/yWwQdQ02U24pgphUIg7c48N27I42v/o1bjzwFDXz0Qin+yT1WbeVaH+
w8e/fiSz4ZpFezz1RhXuZues+ZpK4H2QKiYnU4PGyVe3fEgn8iLEZYi0tBpN
RR2O9may4Wnd9+DBEzVo5qfv8zKbDeVvvJzNLWrwyAg58VkuG0xPGUfZ2Faj
pcXShsf5bCgbdzntPlaNJ9o/f2gsZIPF1K3kTWuq0VazaTEWsyFzg/uwrUo1
nspJJ1WWsOG27yvRW47V6LT2sn5JKRtWeDRcMpmqwrOhto755US+uw0wgnqq
0XVqR3hmJRuWeyj+fl9XjW52GwqSq9lALf78btNUNXq+4HuWUMsGK0m/WQHi
fvLR/TB+C9ngdHy257NVDfqXNKyMbCD2w7xQ+49qDFZIVgt7SOi90EhnZksN
hkb5Hwp+RKz/6aDZsrIGry0cv+TbzIbFcq//i7xYgzfO6iR4tBL5bCn1T8qa
8P87mVrXNqJfqd5iW14Nxu6Zf+fUwYaV+pss8FM13qnpW7B7ygZ965fj+cE1
eJdWq3DiORvIntdNP1RVY1L8Xd2jXWwoWP2t/DKnBlOXedsdfEHkbVWW25f8
GszwOBq67xWRB1/+rbC0qcGcLxo5Bq/ZcFFrpUTVqyrMN5Nq3/GWuI+M/vnO
S9Zg0aOZH1p9bGiV7/HKn6lGnurrFZv72eA8kic2daway1MrWOz3xHlrRlpD
2mqwSvy2Kf0jG2oPq/zWflCNdQHuF0mDbBBIvbh/QbAWG8bM4uS+EPdJx1YX
Zf5abDy+qVLqGxvUpmaTX/ytwZYnEm9XDbFhiemboTdva7Bd69ecyA82fDle
q/ukuxqf5nXLLBsl+O7devPIuhrslOZtWzTOBqER6R0mA9X4Miza+u8EG/a/
8P/vY2cNvplxDZ6aZMPBVQ1Xs7fWYt8pk4zx32xY7RPtZOVTiwOvWC1D02wI
rdDQW3WgBj/tEvs+OEvUzy2WzGiswa+lY0IDc4T/3zd3uMnX4ZDiM8abeSKf
//V0LV9fgyPRhfu6F9igYLEwIXulFif4Is494eNA0PPhTuWeGvx9zjm6ZTEH
HgRNdfaSa3BmYE/pA34OzO14cubs9hqc28d4VSPAAYXYzZ2fk6pxoU54pkyQ
A7Zy+R5BV2txMXNYqliYWH+S247TNbj0XtvWXBEO2HRnGIV51KCgcK5luigH
ah80yjt8qkERrzD/RHEOUI2v776lUIvi3x1S7qziwETNwz8bJWtRwtygMXo1
By6GlnBtf9egZAvl83VJDuxSrojkSdfiOnUBgVApDuy74+BV8q0WydLxXz3W
ceA0lTyZuq0W2f9orQ4yxPnbQ+1+yNbg1o+12UfkiHry4YesubWo17wvzEiB
A2csPwVXE/o1yX3vuFWRA0X+elsU7WrxWMR5IwaJA4muJ6PszGvR/vwSugyF
A8bxNil/Ptei66E44RVKHGiNa35eXl+LPprUH/9oHDDf+bdok1IdhspWd4wx
OGDYJHG5q6QWby7aU/BemQPpy366BXbX4r0v7250sjgQfPrC4/eKdZjV5nL2
IYcDr/NWluh61SK3kM+Yp8YBjcOGlmM+dVgbHaOSrs6BK3zTMRIStdjiThKL
3cKBESvV12mEXruOVoyHaHJgt5XIeTZR752OYae7FgdeeRjujTQn9LGhl3tK
hwMvnG59f9Jehz+XOkebb+fAkPl/hV/KanF+6N95wx0ccHM2cAh9UYsCz6IO
aO7kQNLkEasT2bW4krdBja7HAXZr/zqBylqUuV0qsd6AA/GDN9TLg2qR4q33
e7kRB+7uFi/TNq1DjtXrl/O7OfBubabm+zt1qK17unx0LwdCVC9HzhL96FP+
xg0Yc8DhIXMtZ38tmgpHeDw34UCY6r8+yuo6tByTM39wgMCLP70+NdbiqW7u
lhIzDrhv+3PRYEktnq/QlUo7zIHed0Hbqwk8vndfzsYc4YAAi+2bEFCLof6n
3l4+xoHQAcOlkSN1GG07W+1mySHu1zKPXS61eF8//K69FQce/3zCpF4j+KfL
+By25sBsmVxjaWsdlogWWRjYcoAuE8+a7KzDusnt2hp2HOh0uPCh0L4OW3q6
ZGinODBz3y/8s1MddtWc/CftSPT3rSvEXIrgP2mqX9iJA0vWBn/atacOvwZf
rf97hgMDx/j/S6MR/J+STh45y4H/yr3yR+II/nfnB/Sf48BR2amIe4KIAiwd
62fnOXDv3Z5bl38Q/Es8h4aLHODvJwkVX6lDmRnrDVx3DgzbDX7ejXVI7Ztc
lHqJA+GUs9VHd9ahakPIp2gvDrRPXbffnU/wny75KNiHA3/Klxv8IvYbXM1J
v+jHAZF9yUHrzWrxwJmtIXYBxHw36e6PPYVouf+J3aEgDtxe9cbca1kdOqhZ
6elf5kDgjv1HbhH+ubB2grzlCge+aS5MyjnUod/fIAGlqxyoXqvi4b0NMey9
xDepaxwQq6dwlQj+Yx5ltgpd54Do8IO/ZVCHidlbcuZucOCa8k5939FazLne
FvYjkjh/+l5C7TNE3jmL0+9ucqAwYDA+7V0d4sFRo6cxHDjXuP+h/9NafLwl
gF4fS/h1cHN3gAzid/bbyIjbHFBlrQmqSUBcRlf7ZRnPgUsd0TLRCXVI2Rhh
zrzLgUyJt6fr4+pRX+Zb7d97HBhbXlO6/RPiqTU7FDoSOXDcqSVDhvBzqOi9
kLvJHFjxZouuNgkxa9nU99OpHJg/t/LqD1HEZr79+zTTObA4W/PAq4E6/Pwn
p0QwkwNMxYC+Cw11yP9rseSbLA5YGfG9bbJAJI1YemfncOCCaKd7O4Fv15eK
AY88DtyamygcTKtDuwHxnfoFHJAftmkOJNZffu2UvaaI+D/gQaaCImJaZ9Py
L8UcEG5Vy/xwjriP2uRcy0o4cMy/55u5eh1+avR8ebmUA1uevNf/uxFxUV23
xsFyDkRP3Tq87AWiQjkzUbGSA6TfL5/xriJCUeiiySrCn49Vgw2W1aN19gf7
hzUE376isVxjxICUre0364i8GmuO1uXUYVJCrIp1PQd2nhMUtKch1seMxbAe
cOBt1C9z52kk3nOGMwsPOZBFZfis+4n4LyTN4tkjYr+R5YKbF6KM/3xDYjMH
jF5FM6g1hB4vHSadbeXAp/4dhpcvEX535YZpt3Fgg9Ud7fjndeh7Wnh0eQcH
fKSXLiwXqcf7tnamfU8I/22vH73sReShRX153jMObO/+c36O0EuvmdQ6705i
3rVcs1aC37l9F/yNuon5XZFd6TaPuM7gySeplxzIib3XL2tSj1uBYvD9FQda
Bpramgn/HNMMzK98zQGhqv1Kv07Vo5dqr9jVtxzAtium1baI8YxNbof7OFD/
NFq9/wBiFSnyDbmfAwlOe+qXZyK+kf2uPTXAgUNC+8pVdtfjjKRuatMHwi/H
fx6OqGxASfH7S2M/cUDq+wmdQ671uFlo+vTJz0R+OjvIll9BPLzY5JnqV2Ie
o0csPczq0f1vruri7xzYvPr5gc1n6zH295I7XUPEffLz/jqzVMSy0eN/U35w
IObd9A360Tp8+bXyhOsoB/o2mcAX+Xr89X5l0/ZxDniJ1GJzP+Kqt2eUxH5y
wC//52QMsV+1u/nGwCThV+p/cxX59XihyeuQ3zQHoi4f63FLqceSCmU5mTkO
3CgrnJG7U4+dxVeDf/zlAE/0WUVMeT1O5Hz8WvOPwJsTjhGe9SieprUn/D8O
5MZPRUcmI7LvxRUfXaQKEXGaTGGinknsuARtiSoY7MByvTOI5yKMPGf5VSHg
Qs3oI816jAxNf9cqoArHTGVDdW7WY1HAP7gjqAqx2WVqA/kNWFM48DZCWBVY
C8s17sUS/utruBAiogpeEnHcwmMN2CmUutxHVBXGll0U1vdvwHdbgjPOi6vC
ko6NoluLiXywP6njuEoV/rT9DZLbT/Bza1eP1WpVKNxYcF6GjrjwkHzukKQq
JP9TnllkUY/CEwKCe6VUYam6keXwSD1Kyn1P0V2nCgf/xCzL+tWAG/a2aWrK
qMKMjlnYAe16ZHrndbPkVOGMpmD721X1qJFz/QxFQRUO3aXhU1497upx5pdV
VAWrmp9cew7BB79xogRJFegPZD7G325AS1XWZmGKKnyrEBkbONKADtbiz/mU
VKHczSfqKTH/C5E/HWZoRH+j2HqK8JN/XTffGEMVHrq+P1fgV4/hw6UJn5UJ
vm/0GeiINuBtqTjVPpYqjOclzC7JIfJD36Oji6MKd/q5st7fEAvdzO0eq6mC
kdN3AVNKA1alafyrV1cFv3Vz63Z3NGBTp/Tt8i2qsOKVKE3fFbFzYU6lQFMV
fA11Y1JPNGAf811rmpYqzClYOvQ31uPXY2idoKMKrtOnou5fa8DJsKQ/UdtV
4bVcH3fvuge4UBEQE7pDFfYt87Uy29uAQl+sGX47VeFd/JlU90bE1RK6TRf1
VGH/B/GVt9fWo8KOjcedDFQh6mjspXJCX8xz/NPWRqrwdu/pzqvu9bgl8Uuk
+R5V+JRUEDJF8Kfb0UI13kfoaerE9uGiBvw/Cq08HMq3C0uUUkSLpKLyKyXF
7EPplJK1BW2SiAgtoiQkhaKEVEhli7IlIYTDbJhhLEOhDUVoQVIqSd/z/fle
77zPuc+9Pbmutv1+yNm8nQILbuldiNSpRNsV4fsMdlKglPLs867ySjy8y/2b
njUFEvx2UGqnV6JnsPlVrV1E38X2WQomHAx4slpTfQ8FzBzMQ/FvBbnPZuLc
fWT+eh3dD8QPN2YO7ZqxnwLMGpk5zR2VmGjQNCh9gAJHV6XJ+oorMcvtyeXf
9hQQTHl7TudbJRbFxWh8daCAXcXHHU9iOcit8n7We4gCd+eefPvWuxLFIzZW
b50pkLPeVpbysRLblzA+t7hQYLkhf1fqokrs2a4SUnuEApuSFCYt3cDBoXO/
FnLdKeC9e83ikbYKHMt++bT4KAWuXNb89i+bg1NelW7LPU4B+NFmsrS9EpXl
7valeRJ+dUPadMnzIsa5oDteFLjfu+palDoHtZztVWNOUUC4T6vaWZWDtJgN
+WE+FEi+t8hlRzEHgaNhft6XAmmBYrfHfyrRfHBSz2k/CiiW9GhJ1nNw98Lu
gKMBJE/2nWPb7nDwkJlgrlMgBQxaNRwqSb8c903P3RdEgRU1gwETOzno9+DS
1h0XSX786k5NdeHgpeeuXcYhFCjzck/v3MTB69KmZ9dfIvtc7U48yqnE/C3f
bimHUUDhQVl60nEONofdye8LJ/q465bmmxC/1W1uLL9KAV+1w9SzxH/KioOf
r18j+xectXWT5yDFKk7ONYr4zd58dFIPB61vwX/rrlPgjmzykTwKB0+1f9yo
dIMC+dq8MRvy+5tqN+x7b1Igt3hs3z0uBwvt1/mXxVIgfI6b+l59Dr5I+RAX
HU+Bhgd92Y73OTjaE1l4OIHoq7UmPtCf9L0WS6J/lwKp3h1+LkUcZHi8G1BM
pECrU+mavK8c3JN7ZfqHJAq81gpt+L6Pg77D1BWlKRQ4s/5tSZ8rB+Npb42i
7lNgw7D4SFkSyeeZSw7O6RRY3dOWcfg0B1+Wrj3HfkgB5a0qRjWPOTj2t/22
QiYFtviZ/+0heBZsvFjUnUWBioilSoHXOKgfot1SkkP0OF7Eq2By0Lbm+dC1
XApgtuMKbQWix/TAGU55FGiJH7+2R4ODdyxXrGTlE7xTK01GgYPl0U1bZhaS
vOUlPf9+koNvWs4eev+UAiu9Zp3Sa+Tg+Lxl54uLKeCsZ1+yPJWDC23FdyKe
UcB4c4J7zn4Orrt3usSxjAITUpPU1g1w8EDX4hcMJPlgH/c5G8zBwGXCYflK
Cqh+mL7kqgUHE11OKrzjUGB62ceKdzwOVmQu0C7iEb9QHCQrb3Kw8wt/61UB
8UtAncLpNRyU0j3m7FBNgezD0ranif80vOddoAspEF1/iLLUn4tQVHlvei3J
6/UZ9GNjlej4+0hpZx3pgxcnVJ/M4uLFdcpthfXkfvhiKBSpczH1fNlIeCMF
PvacWH+T7MvjOc86KCH3ycHXexQYXOyWVdChtVCgaOPv5TmWHJQxLTad9oIC
2up99cH1HNSMcHDpaKWATtZEmKcUFzc3TgsuaCd9uHa9wHIjB52VC5LCXlEg
aEaAwQkNLobssis/8IYCFtKfdqyw5mB6vOxLSgfp0zQtOyUmF6tf5/6Y2kWB
udkcpW5FLvYu3qv89h0FFvt+HdJ5QvJ+aNLa/G4KrLG8qnLpLweXp2eZX/5A
geNfHP+rVeOicb/1Ebu+/99HDTWcLg66av8N0ftIgVs+cV1brLkYdvxBypTP
FPgjkzbJ8hQXM55sr3j9hQJLmuZHeZRwUPj916u8QQpYXdjyOGMrFz8yU3+G
fiX3xxKN61Six3R/8zn7v5HfF9c7vJfl4qqK77q634lfavMSihS4aDYp0VJ2
lPTxorDWEF8Oemze6v7qJ9FrIUNdvIOLEZe/Xnr8m/SPwGztdOKfnNrb90P+
UODGiZTXXTQulmyq/R70l8zfsuJBYTMHq0rHtpz7R/KcrygpdeViM0U77uwk
KuzequkaTuFiR9b+/tOTqfBPvv17H+H309IItpcsFc4OcE26yfmjCeVXjk+l
wszH7Rl0oo/07IHX7tOoME0tpL/vBBcVry7ScZWnwtNpz0KHwri4cPK2QKeZ
VOgJTvjcu4WLWv6BjQcVqeAfsL3HyoyLtJFcDTslKtSpJC5Znkv60qPz5N7Z
VFjAjzSdepmLFt2KfJu5VPjYL7znTPTZtx/m7FShQiiFOu9fBQddWjwPW6qS
eZwV53v1uehlnlJkqkaFqnGf2SGHuRjIl0w1XkQF9778U9/YXLxqIL1vkzoV
CtcfGmp34mJ8ASXLcAkVlAZch9bHcDBN2+mP/jIqFKS82fgvi4t5929YMP+j
gtTm0tdTv5A8qwnuUVdQ4eskOyuF+VwU3vg+uHYlFZgeTKfsfi6+kP8PVmtT
wUFyTvh2KQ/fB++6rqVDBf1Nar6CXVwc/BP6XnMtFc5F5F11J/yPeRdRl+gR
/GsbZ7Xr8nDKl96QRVQqOHo/k/13nYvKziqtqnQqzO1dnuLF4aD6m60r5jGp
MNG74+xqks/VNr6+ymwqFPOZmaHdHGSJM0QKBlRwXijef1CH5GfzywXy66mw
5mum+8ozXNxZPu3o1A1UGKJtenwsgIv2NH2cvJHMe9G+s+82F91z3BWkjKgg
K9ywofYsF3007xwc30yFF2M8qc0hJO936/J+GVNhq2LGuQiiT+Sc8Uk/TKhg
vWTenkvKPLwTsdp62IwK2/Zo7ej+j4cZMgfSBiyoMGz1RH0y8WNhwLUfH7dR
oZz2yGjfAi5yvqNx7w4qHOviavUKuSg+Ohj33ooKyz5Pel9cysX2nsUfO2zI
+xLfP2ciePjBbrv+691UcI0slrf6ycVvz89fbdtL8FlqKL1Q5+GERd6bFlsq
KE/I/xWe4+L0qi6dJjsqXPH4fbdMk4sq65XOi+2pEKFcRn0Ww0XNpxubhA5U
2HnkrFWFFg91dbyWVB2iQk3NMf1KOhfXpad6cZ2pkHVxkvrRf1w0WdTCRxcq
qHBHog+s4KHNrclzS48QfvnTrq2YxkPHmTSXIncq6FZ0vBaF8PB4qHNx/lEq
KMhMkVVo5KLf35tyj49TITXYsLT5KBcvna7al+35//+t5nLgUBcXYwZ+ZD30
osJGtV3Zxi+5mHh4+fj9UyQvi5y9lwbxMPvtbstkHyqoGl24o+3Ew5JdlxPv
+lIhMOr78yhrHgrqi4fi/Yj/mlR3jwt42F6a8O9qABXyF7s/VfHi4eeH5xTP
B1LhV2ex0NSZixM3HdS9gggfreHe04nflS8arT18kQojauPVvSY8XH5i+Ya9
IWS/3s9h+oRPfbtp280vkX1c+rUKSni4zfSLvWEYFRIWXSk9MM5FR0bjcb0r
VNg3cmEwhuhxall+oGYEFYJ+HtXdfZeHYbNuRapEUuGa/+0rT7bw8O7fM4nT
o6kgvT5u08h0HuZ9ss39e53or2Pd96We7NO2vuLrDSpsKBgf4RjzsE2g0dB9
i+g59nvX6d+kn55M7miNI3r3p+fssyH7JPYOiG5TweLrx+9jBWSfCNHf8jtU
ODFa1OXF4OF/Z3Nm5t2jwsoVT92UmTxkuUQtup9EheVLy/ZM9eOhhbWXTmwK
FXYU6o+0X+ChA+xaH36fCsddLfavjSb76LAsA9JJX/no7K88QPZZoHbgxEOi
t/33NFovF+9MnTh6KJPg+TJpBFu5mPu9K2BXNhUqJ4JUf0t4yHvHjzB5RAXT
oIIXU1k8bG14cNfgMRXCK25liKbw8VNZeM6aJ1Q4raobtkqG+DnjaPmSAsJP
ZL+gzJWHSrHbxXOeUuGT6R7j24481AymvJlaTAUacHP8L5N9POd+GSsh/C8/
K1x5i+xz4NefgVIq9A4XbF8nzceDZq/l35VTwWYYlXZm8NCLWaH2vIIKg+kZ
mcsO8/CSZop2DYcK9paxuz+RPkpQCjEo5VHh98bH8TmqPMydcDF/JCD9MjYa
EaFJ9vlsuj+5mvS1tIL8WzEPX7Sv9rghpELkM8sB4ywe9lcp+l+qJfna3ZA1
9RMPx/O/XTkrpsKNlmN2Fh48nJX8IuFoA9HLUcDZTvBpXivJOthE8je3rH3p
arKP351Sq2Yq/GxssFvO4KO5a2DtludUeKYQH3mW4LW3cXzFaqXCnfn7qox2
kH02bv6k3U6Fko093AKi76U1K8YWv6JC2vag+thJfLytNn268huiP2PmFJdY
HubIDajKdpD7Lt4qbloxDzk/Glf+6qRCHGX+6uz5fHz+Pp/9+R3h//S7Kcs8
+NjfeMu0o5vwVTSX1zBI9in33Sf5QIWQIbNDVx7wUDFrv5ugj/Bb+0gzY5SH
S+MMzxZ/JPcN5ZKFhSMfGSFLwrM+k7y1ral76cpHs5Myt+8NUCFnceN0o0t8
tLfvy4geIvo5Bvm9lOGT+6y2JHiY+F/Z+Mf6HB6Gsh4JfUaokHGz/z9XMz7G
/xfd7vaDCgaSI8uOePMxR9m73+4nFcbGZmmmhvHw+ZzFAWt+E/97vd726h0P
/84TKUr9Iffbu57j+8jvl6ueui8ZJ33ixo1OseLjNjV15v0JKgRLC3M+mfPR
Z1Ft7SkpGrz6oOR9wYePSeqn7Y2laTBss+sYg+ARLtH4piJDg0vFNV/VLvLw
67K60I+yNLCftMxWcJGP85f7qJZNpcGG1PeVCnQ+btRa8ihiGg3iqY01N/k8
dF8lBnt5Grym51zf+4CPMavPPF87kwbLTlZb3TjGw9I1S49MUqSBuWTfHyXk
Ybdu/Z/mWTTIjywMGSZ4ZlB9o9KUyfwJgyzvAj7S6MuW+cyhwahz+sKAPD7a
MRuKts6jweWLapNrD/IxlH3WTHU+DWTKFN//KOVjroFmxydVGswz+mj0qo/k
cX3jyXI1GlSYL8zLIv05scFPNnIRDa7Zz7RdvYqPKzb9d/ugOg1sJQUbnhbx
ccfmptV6S2iQ+GXb9D0KfPQ19udIL6NBTWKh/ekBPiabLLd5rkmD77Pv784O
5aPITNKXvpwGpZ7JbielBfjNIsD/jBYNOqKrBO7tPFywfYWi6SryfUBHYjbh
b9PO5tQFq2lwd9W2qUsd+OhhfY7xRYfsE7h4SfBMPt7cpVWLa2kQ9LX2m607
H8v3tByI0qMBrtzsnkDjY8++wGEHKg1ip0y2n36KjzPtVoZS6DQINPit8EeV
+NH++XwZJg023Znts9eU+M/hfM4LFuF3upy4XUaAlw6tgof6NFhxz1ft3i8e
PnZ+0eK7jgYZ6yp/TJD57S5BrmaGNBjpGs37qMVHKTftP2qkjdbN+mspHOGj
lkdr5MBGGpzyHsw93MDHnccuLK00osHm8/utfar56HdidVH0FhpIp/hvXnSf
j6kn20wPbaWB0dajRnsq+VjrffEt1ZQGT86cczCO4uPIaZ2TsuY0aA6evSdj
Dh8X+rbLtFnQQEV9b7cC0XuzX3B8xjYaXFA8a/A+mI9HA9as9ttBg56AgePH
qHy8Ffiy0tyKBuper8RLjvKxIijEepENDSLcLqwNP87H3otr+wZ3EX6npF4L
l+WjQugrP84eGky0hfOvlfGReTlUIWYfDV6mBxx5P1uADuG6qU77abCar2Qg
yxBg2NXXdPoBGoTnv7vzSY2PedcuiaYcpMGHYMPQomw+vozSO9DuQINnak5O
XD8BSse8+Zp5iAZJZXB3/zU+rrp5OcTfmQZpvC19r8L5aBVLmW/pQoOAxEnf
OiV89I9/m734CA06L76sT34mwLSEsA1f3WgQ+udu7R0lAYrvUlu4HjS4eoTy
rIHku6vl8J3SYzQYamMWbzvCxx/T450KTtBAuexz9pG5Apy+qVY75yQNNB/s
DMgh/bT47PhImjfxw+08q4hUPlLy1pTfO02DAyE9HnPbBbi1zyEk9gzxe/6W
bS8cBGi3+IZF1FkaGBS9m9kexEfPXVVzwvxpUBs9x1KFPIdE/HwTdI4GjJtJ
q64UCvA2f2X62fM0+GW0mXu5WYC5Y/uPeV2ggcU3bvSvXQLk6UXSPYIJvvWB
o1HDfGw9wvnrFEoDz75Hp4yNyf2Y9K3K7jINrNaEPNcj+Zlo1YzcFU6DtnMx
3v86+DhbYc/ubVdp8HOl6vBz0tdaW8IXb71GA9lbznFSgwJcF1DWuyGKBmM/
s+k5TwS4o2Agl3WdBvKPFOXa6wXo/En9jN4N4h+5Y2ve/BOg7xKrDatu0SDY
QP2oibYAr+0Nmbosjvi5X/baKOmr1KiiRrXbNJDjrtWpfyjAour+uDl3aDA9
1bbgwpgAa/8ucJh5jwZbirLLl6wVYCfNUmtKEg1c94Wkj3fz8bvH+a8TyTQQ
u0+R83ISoNz9JyU/U2lgveqhrNwX4u9X3UFf02jQ/aDM8Y2eAPWU5pl+fECD
+t8ZB4/WCNDYxETpfQbZ71m88ikXAdqe93v5KosG+qYPJm2uE+DxopyUlhwa
nHsivWMu2S94oMNNnEuD6EN90xiE73hNJUpVHunr2oLhWDUB5uw3GsN8ki9B
989CvgA5Mad5RYWkDz0OhbXWCvCF6OGVx0U0UIg5uLVnpgA/Sb2yyiihgdl/
8xIGSR4mmDPUUkppcHPd6gsLZQWofMKw+3Y5Da77LGJ/6SX9+cAzO6aC5Cl/
5Y2Px4geb1O9r3JocCJfe19fCdFjzguDEB4NZp2cLTE8VoXO5lNlzglo0MI9
pXXfS4BnL7LFp6tpULfs8dXehVUY+czj5nEhycM/p/JvOwWY+vWenWstwa/Q
OmV4JdFjRZOmg5g8y827afZKgHX20gN7Gwh/Gn3qy8oF2HWL9nRnEw2E42PG
Bp8E+F3scs6smQaiT8cvyS4iesjc3mL0nOQ1q33d7i0CXGRQN3NdKw2O7eYs
2WhQhRSvvy9o7TT45PPlbBvJs3Hm2kSdVyR/vH/GK24RPbocXZa/ocGV3BaF
XS5VeELl5hr1DhoUBmfJOYQLMGRb9ahKFw1aj6fYCPYQPUJ/Vcx6T4PfV5VC
tTlEj/JVl6f1ELwGO6Zn7yN6jNhtl+6lwa4p1FkeLAE+XxWl8qePBtuN/oQM
ET9/dOR2jnykQer9Ravy1atQObdMu+4z6bdd13pm3azCdWNPz6QO0GBvza01
m9dU4WHjPP7ZIXK/LL0YKr4owMiYLMWdw+R+VxgfFrQIsKQjbb/WCA3SH/Yt
M7QR4LtVSQ//fSf9NCjjc3dHFU4/c3ukdZQGlLtOJn9qqpDGv7Eh9xcNQuI+
HKzyqsIDipFXQ8do8CLz+unAjVV4aX9Ym9048Y+aXP6hqVWY9/DiMtoE8ZdF
5XtpuSp8ORJwQl6KDmd4WR6dWVUoDWfK3k+iw6GSBsHrywJcHXFyaulkOmSG
RT2QJXrtavewvi5Lh9Muj5XWWlZhoKZL0pGpdPjv/PzeFKJPhqfD5w3T6DDk
YRb/71oVSsptmSrydBhoZ5fpvhDgmNyu4MEZdHBx1Twl8K1CzV3bG6sU6PDs
Xv/1+7wqtEwxVbs3iw4nVu9LPRxThT4DRq6nlOnwYnORs/9vASazDQvM59DB
44PzxKn7VSgKZf1bOo8ODdsPWpf+rMJvEor5mAodJovszleT8xcu1omTqNLB
K6741+6/AtzivqI7Q40O6bm0QEWdKpLXJWuDFtHBKXgJ62FFFcZLL/Tfo04H
R/Mms8TIKuRum1ezZgkd0qQ95hQrV+OnhFmzpyyjQ/lkdeuvU6txTt/0g281
6XCh7Zm/hXwVrqfKZhcup4Nb0QwT8e4qdDn/b/SqFh2UJaF/1L8KMLru9yan
VXRwlc57+0S+Gp+pfI/UX02Hwf9invY4VeF7p8FXSmvo0KL3LzntexXOyOtf
/nEtwZNaH5X6qwrp4++9OHp02O7qu0iR+Mne5G1FHJUOK5quJnyzqcKwm23T
T9Dp8GR+pXcl4edJl2S3MZMOhcNLw6MuV+Gr1eLURWw6uI8sHRz1rEKZs9WD
3/XpIP4rp5Q5rQp1qjj64nV02Bo8lljRX4W7lcou3TekQ1/ch2qVKVUYdOBp
sx8QfygMHvHbWYWZmY8XW22iQ7SH/6i2YTU2/8h0X7mZDmPJS9fRL1Th+Ma0
IiljOoQ23b51Urca/4tMlG7fSvah16TYf6jCba/itz02JfuPWM5f/q8KfZff
SLhkTocqVY89P/SrMMXrWu8BSzrQ7DImmb+qwtqKyxT6djoc7n707BTh7/v0
i4EzdtLh89qtzV/Y1bhoT0BttxUdVFpaBg6RfBjf95lXZkMnf1X6bH1xuho9
hzwPxeymQ1HKF4djKVV428Aj120vHZYV/hgpCK5C3uXDY2BLh+ZNlbzKDdX4
peWg8Xw7OiQ27TXVL6vCuRq2MUMH6KCDgkcZn6vQ8KhNR/VBOpxTm/3qzhXi
J51JH2860uHlleSq+G3VmDT4aOSQEx349/+cbjKqxqbHthO6h+nwWDqIkz5Y
hVInp07750KHgOdx3MeEH11K4ez6I3QYDVsacN6qCh1HHBbfcadDx85st2jH
aowpnLnS7SgdcmtsHcs7Cd7TpVTmcTrIT/pjQztcjd8YroayniQPGUOxn/Wr
cdmv2aYtJ+mw8uW0/7SiqtDmGcc6xZsOdXvG/7EVqzHE75j9idN02GSfz/Y8
WI1PDRa4rT/z//M2z3miUY2949Xe8mfpsPnU7sTt6tU4r8I78KUfHb5ajJq/
HqvCrec1wh8G0EEi5aKgRfzpC/U3TgfS4XnwiYHtOtWYMckv0SiIDqt8vKlS
hI+XvOWZShfpYMydlu/+mvRZSEtBZzDhS5Bt+uhENepvCap4FErOqz6Y2X25
Gj2m6Ij8L9MhK2H5A5c3VXi35mWLaTjJ/8OPC6il1SgOu9ShcpUO327mz52v
WoPjptSPHyLokFyvaeuWWI068l0jBZHE3zs0GiqJX+zFERMXoumwsdHkRKxF
NUZeY0/bEUP4TDn0ZndqFVZs6529+CYd1lhT1kaZV+OQ4o3FX27Roa1arFQd
V40akg0rS+PokDRLM6OV8LUj5gs17DYdbpwWX1faU4NB1rcNd98hfXek+fTd
B9X4ZI6xqeY9OqjFvbI9G12N7198s/6WSOYtEDcF2FejclySPSeZDp0mV261
/6hGo70WbpGpdHjvweLnN1fjKdXf3nZpdKCC/7rPxN9pr9IDVz2gQ8pu7Qum
T6vxxR2r8F8P6dC6LFr71cNqnHLg343qTDrQU+xWKv2uQsbinMSb2XRIMNxW
/DWvGl0792YeekQH/+IcwwO51RifLFuo+5gOj3yX5O9UrEGhY37FRB7R3y9W
Uf5bNf5eelAkzqfDySTFNdPW1+CqHvnnCYV0CI7bsbRmTg3appd0HCmig97z
A3X/FlXjFZfDHxkl5Lw42kEZ4p+yFcrfZUrpoGW8zqZjSw1+6a+YaC6jw+W5
4ylZ5PcLszympSAdKrbuFHMzqtHCY/6cE5Ukn7Ffvf5bV43nVlctXs+lQ3i1
xkmN6TWYO3BypTyfDtnKVcwFYTXYkbuY9lJA+qZlpCacUYMKnnWGD6vp8HDQ
dU/7nmrcoOdrelpIB1tQO9XWSfL/TdPGqJb4oTBYqpX4K7lAYq8kJn247X4L
K6AGJacC3Trr6fDGvo/j+boapRnapx410gGDIWCwoAYpP9sC/SV04GimacYP
VKNTSUi4aQsdzN0qOxVvE/1zS4SGLwj/wVPlRhJq8G7al6m0NjqIOuX+nAok
fZ+gsXXlS6KHiHPcksxvjba5tPg1HcY3bojSGST5vRRWNfstHe4bnTjcXVyD
iufKZaZ10oEdWLyyIrUaV3t/NZroooNP87UrFqU1aOKmGTzyng7zao+ar55c
g84H9/L6e+iwb5ymvii0Gi/sipjU0UuHPWkrfkV31WCiOQda+omfRZTx1241
WLrx+3nhJzrMT2vay/GuwVamViV+oUPsnMGsIK8aHNGxm8gfpMPb4Zhzl7bX
4CzN6PUZX+lg1PrQqPF5Da5eIAi4940OPfvKdhqcIHhm/SqL+U4HOSnt9qjL
NXh4yuo/l0fpMNdzSuXFhzV4cfyg/rlfRF+DzDL7/GpM/HbjrNcYHa7+e5JX
dpXg6a8pcR2nwwSl/KDVzhps6/jz026CDuszVIdGqmvw+/O1TCspBuh/j//6
WJbgqXPy2SrNgISDjd2xwwQPN+7pOhkGBK+d/VcrrgZNi+u+601hQN7Woq6Z
B2vQ5dE/6go58v269FCPuwTPfar3wukM+OBnuPx5D+Hntmu+0gwGlMUq1zt0
1mBZ1J3hKQoMaLwtWp4nLcT20EbdcUUGyLclJX/TE+J3/8mew0oMsJ2SY3Nx
M8HjxXzcO5sBSj8CRlQW16DOEY/B13MZoBV3YWjgWw2a2SfpSFQYcPvJsntT
FhI8Ni1Hq1UZsH7x9X2pUQSP2dScMjUGjLuuLUoNrMEkMPict4gBzs/tA9Qb
arCccWLVA3UGzOkaUOg7XoPtq++73VnCAPHiXdsKusl9uLQtI3oZAx4vkj7W
QN4rqcr3h/7HgO2D/oEM6xpco7hhhf8KBpTPerG8RkDwyHq7eK4k/HhnCuY7
EDx/HqQf1mbA1551wkvXajB4+FWPrQ4D/qacoPgsEmJyn4LmjrUMGNCsyLh+
ieB5u8lpix4DWvVnzQ8pInhafFL1qQzYPFrMjntbgz9EWe/W0hkw08JIYzSp
BpU5HRr/Mcn3lOgp724QPEXKDgvYDDi3p1B8eYYQzXKMkxQNGHDD42qS2sca
dE3165BZz4DQ9BnfeJFCDInPXTRmyIALq88c5kzUYHLke7shYICp1Ao5n1qC
J2Te3Z5NDKB2bv4dOVWIL/3MXr/czCD9mpMwkCfEUc/ABY3GDDibfTGlv1aI
yq75+wQmDOher9gWWCLEtQd645+ZMcDBj9PQnl6DFtYL2nMtGJAx7Pnodl0N
HjHdppK2jQHqX1a1h00WYuiGi7tv72BAlYlKy1OxEIvMAlWPWTEg6dP+AX/S
T/27/N6ADeEzZXKopqMQVR19kubsZkBYQInixC6y71GvQ/17GDB3lvKw9IEa
DDhz/L/yfQyYuriZM7tSiI8uuvdH7WfA5KWfHnwh/u645pLtdIABq1tXD7de
EOKs24eOMw8SvA0yCef3CHFTmr2evCMD1I5UW6vn1aD3Y9vvHYeIn0137stz
F2Ja6e7ifGcGDDeu/ZpUKMTWKiu/Sy4MyFE9rP1kphDlJNvW2x5hwE7xgTkL
g4TIfmMmtcadAb++SJ2ZUSRE9z5j/qSjDPD/fe3bERkh3v226dKLYwx4aMuY
N9AlxIa/hqaZJxjgm+VRc3euCP/JGcw4d5LkcVYCy7NfiLpzmI07vBkw6Xft
g6OKQjykTo3RPM2AaVv56G4txBur1u765cOAByr+D6SjhSiga88X+zLg5WHt
/EYg+sGK10l+DPhpVMpZhkJcYbEs0TuAAf3uL3SnHBHi3j3qjlsDGTBWN31h
G3l/5ZCaploQybcT4636MiGWHVPpG7zAgF75F6dvkX2/+M7O4gUzINtMz+Yo
ydfiEMVjsaEMsImNCQltFOL2KHld98sM2Ju9OuTUchEGJUwdWR/OAJ9fL62i
PIWYnz65SOkqyUfmPsdbs0TYk/fP90MEA0Tto+/v5Apxbvkfg2eRDEjjBLTN
EgnRuObnREQ0A3o8/C7vMROib/MI1yGGAb/NXJTOOAgx8+1QCO0m4f/qrmQn
JSG+6v+8VS6WAS6ma2vW/hXijO9909/EMWDX+9jF534Lcf2/7vrHtxmQFWuj
PBAnxOPTu6KD75B83DD5oOotwuS5b6z33CP+qtQUVy4WokSjfZ52EgMurfJJ
WMkWovTq5y8nkhnAVVrwz3mvCGnMprvNqQy4eetvsvZlIR7eJD74II0BgsXa
DTwbIcZaCpf6PWDAFR/+7t0bhCjcK/hgmcEAeviZ6RpbRTjmxMlYkkX0XmO7
V8pAhNonyj1+ZDMgRXtogbWsCO38StaIHhG/6PtLSsaEGBlaOHz3MQMuWu11
W14uQk50XqHnE9KnbZvTH0aIcPhOzpnNBQwIXPNtbHO2EJc+zNCf/5QBr0Ka
7/tfE6FNftrfz0UMCDAYUrJxE+ElTOZUlpC++Cr9emBciMXCu8E3Shmwp3ut
fHKFCPtb4o1dyxkQE+gRtHevEBd03pxmUEHuj4ELwignEZp/ihYrcBig8uuH
3pwRIQb8iIh6z2WAkazV8XauCHOlwq2K+AxYxymc8Cf4OuVD516pYsBg5Fzt
J9+EOG4uNzO0hgG3/J9HbkQRLoi4KhMkYoBHvUzNjBdCZIoVxv3qGCCd+Jlq
+l2INjNiRk7XEz07vKuGykToZTH3s2cj6RPBBWmnTSKMioh/7yEh/cm2LvEx
EWGOWO2VSwsD/p2Me/LqsxBrZyRJHF8wQPX5rGn7loiwz2KpyK6NAUsHymZx
ptaizLV0zp6XDPDaxJCN9BPh0nqtEqvXpK9nLb7g/kyEG2bmPLZ8ywCz+L6N
z/8QfSzXPjTpZEAUc4/g/GER+l3LTzR6x4D5Kkc111uJMK6eHmvYTfpptXz5
eg0RFs58do39gQEF6Xdu3vspxGbLdaG0PpLPHXmZnUTPoWuVAWs/Er8N3wtj
OopwRsOmU6s+M8A+Uumk9ZxaXKVQ7fHfAAMacj5Jbj0R4dZtpk4aQww4E7pf
VpkmQudIsa3aMDlvgePvMEURXmzYbjVvhAERudJTa+giTFJoMVX6wYCrLv7O
kaMiLN+2e+OMnyRP3TF5hzeI8FXkS9bU3wzY8ujhjMQfIvzZYKcr/YdB/n58
z90fJMI5il0r/o6TfPDSize9EyFlu5P6rwkG5HeELdF1qSX57503IsWEjHXb
MgZptXi00U1hUJoJGjY5M72m1eIVxQHZjzJMuPIwTNONJ8KM7Z5/u6cw4fLB
bjmdCRFWRY1875Bjwp+zqyJnfBPh+0afLy+nM4H/vupQ545alJo11v18BhO0
pIr4ZsUiXLTj3OtGBSYc82sulL4oQv1oqZbaWUy4o3B3+/z9tbi3Kbi2SpkJ
1+T8f9oG1uLpWVN5nDlMKKpLnJfqXIsxO648K5vHhOBbyS+3X63FvOiZT4rm
M6EvPafl1udarG+KzniygAn+tu9OUi1F+GnWnOSchUyoj5CYDItFKLczLu7h
YiY06HmilUYt/nd9QVSqBhMMCg837jAV4SbJvUv3ljJh+60ab1+RCB2UlgTG
azKB9mnfabmAWgzcmXb6xnImsJ401pgW1eKd6yuORWox4fbC0r0TX2uxRJLl
HL6KCal1L1LGpGqxVWmNXchqJpRkpun6EP+P7HxifX4NE/bR6t5Y2dbirBia
uZ8uE3qfuxx6dqQW1zQXbzpNIXy5JlftdaxFc2UDfU8aE1TveGenmtXiEasK
PQ8GE6xWKyx1Ifpditm40oXFhHVBn7cGEP7uNws0HPWZUH4upnmouxY5yibz
7dYxQfzGkBW4thY7rOoU9xgy4bFVi3rKmAj/xGybagVMOGxZ9Dksrxbnt0gm
LDYxoU5ByWKwS4SM2btGt24m+46ax3dH1qKt8EoO25hJ/j3QwRicUovnz3EO
aZswwVc0cdBIsQ7TKKPzF5kxwXPtVzW/N7Uo7NNuVLBgwpyRR8p/yD4Ddx1D
pbYxIV97MK+D5FfZKs7g23YmzG40HZypV4uMqfXD3TuZ0GZJDx8OqcX95dIZ
L6yZMNa4fmZCcC0GnWTZ1+wi+xTtppxNqMW05cfnPNvDhPSwFXf37K5F0ev7
tVn7iP/0KZax1rU4GP0y6O5+JrSYNCzeWk3mGSsyIw8QvjN71MK+1CLzz+aB
8weZYLngyUefbXVol+d3/6Qj8d9i6pINxmTe4bx9Tk5MCIr4WXOb7JO2oFdx
12EmKCQMbZt5kMxrVKs2dmVCl67mqJ5rHQ6G7AxguTEBOt4ZyRuQefqXKas8
mKCeIoqml5H9hsr71Y4xoeDYoJNWG9kv7VvizBNM8Ptr7baohMzbp7XrnycT
buSUB3L3kHkK9vLDXkwYbvX1Ym6vQyH/Bvf9KSYkN7DkuqXqcMBXdOa5D9GP
vTX3ZjyZt+afTrUvE/5bH296Ym4dMrppPcV+TPDQW62ULSLz4t0TMgOYsGv2
l8H4UjLPMnnHnUAm7Py055gqwZsm3TrlWhATXNI/BSwjfhYVy2PgRSZY60n/
0+onfB7d6O0ZwoQ3dgttzUgelZeeWXnoEhP23pssfHmN8NmW02kdxoSOa6La
7yQfdhHvb225woQDGzMMRsbIvI3zLZgRTPBaMcXgCNZi+qil9MpIJqRkYr5j
eS3WZgeXLIhmguyvI30hToRPh2fHZ8QwQUbVM4AdX4fK84Y0J24wYXXPj5j8
W2RenebroVuEn5WN5z7+X78g2+vv4piw9NLwROb/59Gjt7bcJnkuci4w4xJ/
fqr6K7jDhMDqzOivBWS/pD8FRfeYMDo2JWXiNplno+eekcQE+VXF3L9cst90
V42EFCb8Xd/bmXiZ8Fl5t/XqfSbEKL6+FR5Vh/tPNUecS2fCvS6TffWDZN5K
OaMTD5kw896YmuIzMq9j/W+HTCbsEGT8HTeoQ9EN78dW2USPQ9mud2LJPJPM
w5sfMWHGaMiq4C6y30SHGuMxwfNjYYtyeh0yC+Y0r3jChEyFV1HdGWS/I2Zh
qgVE7z+xFi+31GHQoiBD+aekD3YM+nCD6jC9+en38SImaDM//3MMrcPay5+z
BkuYMLjznNBCRYyD65Y4dpUyQdrhzYXWL3U4+9tuleZyJmDE/FrX2WJkPYyo
51cw4dbq7ipvwo+dHS/4KYcJkaKW1O4FdRi7nIOhPKL/reJnz1fUYeNX/LlL
wIRTSYesfhbXoVxZmd7yaia8aPfmKLrX4abQZx6jNaQfV8enT9tfhwHbi9Or
RUSfnWZ9e//V4VPVp52xdUywf9xkP12a4OvOV3WtZwJ9YGz/NWEdauXmWTMb
meD0rJ1e4yvGQ76516ZKmPBhivOSvVCHdzbl1LQ1M4Fp8TfnoFwdPp+RNSnj
OcnPwxe7k/7WoULbQwPfVuKPKQpaQx51aJKSftqknQnm4XoembvFeMHj/uP5
r5hw3Ib/PSazDkvpKR/7XzMhSWoiJXeeGL//S1z27C35Pefx7z2rxbim9u6B
8E4mGFVo1Kum1qHrzYS4fe+YcDfi4TvD9WJMto+XrOxmwqvnSczPy8T4SitW
fqyHCTqjNqd1H9XhnJEbW2p7mRBbpC633EyMlnj9fEI/ExZO+td/0FmMly5H
PXP/xITrk5Msn+iIkbPz2oj+FyYc1dN1mpgkxjG1qzryg0xYcF6q6ZWcGKm9
Ya6vh5gwbd9FZp5NHR7Nu5SSPUz6Ss7IvGCWGB/4hbz2H2GC+493vUWaYuza
fHGuxQ/SH6pv+eWWYlRVDNq+8CcTVlQ4/Ou/Ikarl+fCv/wifN6UtlMJr8OI
+/788jEmrJe8rcm7L8bqY2f/Rowz4XOrs8uhXWL8xzzDPDDBhK0mDy9tP0P8
I336pI4UC5zMnj7ae1uMXmKv7L+TWND5VkOnvLMOc2I9P9RPZkGi4TOe4I4Y
PzgcV0+UZcHS3kvrxoRiXKx9dN/xqSzwL+6wLfxZh3t/uN0wnMaCd7X1x/eI
xRhT6VqvIM+C5MX/rBtSxFgXfnhq5wwW2DvYVvYsEaOMjdPGxwosuNnzcs3w
TTEaLnb0Pz+LBRt3ZHet/i1G3377p9uVyfORVbI7osT4JN9uSH0OC14x1gj5
U8T4KcB25de5LAjeyApUXyVGza17nTgqLPg2fWCZ+X4x2ivtvhetygLHnFcu
fUSvuNfWbQ5qLNBoS03/3S3GpvSdSnqLWFBuql7l3CfG6Z7bzSeps0CnUI2L
WmLcrG8ZKtFgwcxxh6nrg8R4Tsa8MmUpCxaEOg/mG4ixqMHk90lNFtFrrG/k
jRi/xhtTNy1nwcf4OK/XSmJc5bT5mLIWC9aW3IvyJX5w0tn08P1KFly88HRZ
UagY7/7c8C5fmwVXtJM9p3+uw1buerVgHRZoxVn2vyH6K0YY7LJeywLX5vWU
pVfFaLKbHbVMjwXnY+tOLCwV40UNpmiEwgJ9jfJVaU/FWPaJNllAY8GhaaW/
iv2Ifz4+O1nGYMHgLsVsG6LXlI+GXfksws+Gpem7pOpRu5+/LUufBW/d1eem
mItxR58JpqxjwRsdm/lf1erRp7de+7YhC6blL9HaVy7GOx+sEqKBBUZJJcP7
KPXI6WmTC9vEghPNX4+tNazH3m67M+c3s+DXP98wPYV6nNH97oOPMQuQ0dPx
0Kwe9d672Bw3YUGM96Cikk497n73mXfYjAVWId9OLlpRjwFdnnoHLFjA1RF/
tVesx9TOH0k221iwN6IxcXKCGGs6/BQsdrAg4LONm9/ievzy9l+AkRULdizf
tlHXuh6V34Z81rdhgVys4gOfTfXIejPNlrKbBZZ4njU9S4wHXkcKV+4l+zs/
g/uEj4uvZjOX2LLg+foDqRmsesx4GZ8+344FJnvV5LTIPg3ti+bMsmfBQZMl
wef963GkLfXiVAcWrOjZNH+nmxjnt60YnnBkwfxDafp7ltajYWvOwVEnom8d
LXHDVzE6v9BrGDjMgp/ipS2yV+ox/HnRug+uLPh9o3yH+Ho95rYYZL9xY8E1
7Y8/Mn7U4/NmjupzDxb0axTOGxXX42/JlrC6YyyovTs/xEizHhdLakd5J1jg
5tJ25cfDetzctP1w6UkWqAtNumFhPbo1Pm954s0CnuTkbY8H9RjZsG9T5mkW
/Ku7anRmqB4L6zvyks+woDgwc2mCUT2+FDupx59lgdqXO5lwuB4n6vqvRfmz
QDva06BhWgNq1h0bv3SOBWwdazOtpno0rf3mHnieBUJm4MaDSg14XHTm5ekL
LDimPaB8/mg93hSObz0WzIKrxlvtzjnWY2nNhSLnUBZQZeZavW8WY2f1lP/s
LpPv987t2xdQjzLVV29YhxP8xtfhfgHJS9UsafOrLOg2Lew7ymzAHYJbnpuu
sUBph+5fy9J6PM1f0MmOYoFq+4/WVXb1mMBLstS7TvJ3YvXse1nEj1zNcq0b
LPiwrHVoyowG7OVkrtK4xYKwspc5yZMaUJ6z5rZKHAtqeuVeKs9qQN3KgqmK
t1lQxMvaWHOT+LGC5TPlDgtKmmkPat8SPyL2/L3LgnF8KArd2oAp5ZusfySy
oHlC1932ZT1Wl9VwvyST/ttRTvlBzvtSaqHbk8qCibs2RR31xI+lksTXaSzY
ciDo6841Dch8tntmywPCt+zWjLbkBrQree1fm8ECWpD2rcEL9Xix2OETN4sF
C4/NOXuFzH9Y9GHvsxwWeBnM3K/r2oDip+41ebksWOVxOkgttR6/FQ7RM/JI
/qdURTaFNKBK4am0pHwWDAxc8XksrEcrITf2dCELZueZVc/n1mPEG4Vw8yIW
fJeZpfuwjeD/ut9/SQkLIrvlVxc6NKCUbOaxn8/IviYGes3HG1BfdfRgfRkL
vqSiptcA4V/HyOo+soDSu2zTkgUNmLcxevPZSsLvlYaUiMZ6/LTrLWM7lwUr
v6T6GlsR/7ivWvkfnwWbt+8O1SDn2QeeUfsjIPfHovVxas4NGB8jmCmpZsHn
bglVRPhpeaAk9VDIAj/rYy0ra+pRocz+W0AtC/Yfql8q49GAJo3ZPVZiFjDc
8oYG2glf3b9atRpYMHX8GfP81AYs/7lFNNFI8Mz5rVhJ+BqVv1H2XEL4beFf
9iX+19XoepTVwoLDr/e3Tj/TgO40neSgFyywU5E9QG1vwHQTv5jdbcS/195I
vetpwC67mpDVL1nQ0Ppb8ebRBlxwcs4Z6dfEX6vy7y9ybECbUEe39jcsSFhm
mDP5ZANG3s7dn9vBgjUZZq+jbBtQ+OiPZUgXydsvpxypNY04mWcCtu9Z8NfJ
RIZBng1bb1F0e0i/3Zhp99+xBvT99F5zSi8Lon6Mjp/gNmD+xFqVN32kj3Op
PdPiib+Uz03L/8iCKc3VUTe2N+DyFbV/Ln8mfTQ4kZCxogEdDVQGDwyQPus1
Dr52vwHvbnfuog4R/p6mN10l+W11etI8bZgFL8J2Dk862ICzfCcEnd/I/fJK
wasvqQHNIsyLn34neQgaODW2twFDkuMzr46y4Mw1n4q/jxqwsvDDHcdfLLhN
z429TWnAMSElkjnGAnF4dql/UwPS3p4PmjlO7ruZJ7GF8HV8WOzV/ZcFd660
7SlRa8QM2QWHn/0j+Oc5HwoebsD3qq57oiaxwVFYPhjl04CL1hSaHp7MJv/+
Uq0WEP32bpq0zkCWDSnr9LfsIHzF7N62RmkqGwZbLmeWzGtEsfsdjT45Nrh6
ihJPyDTilPP9yjidDU3dDMY600aEG3TZGzPYoKHcKWckaEC/hxd/HlFgg8mP
EOnaGY1YWNb40XAWG5TDIlnmmxpxqHHhmznKbPi18pK827VGXNXj1vBpNhuW
3b56PMG7EZ1/FXE4c9kwdGr07KzJjZg4Q6YgVoUNteqRFcKEBmzX2Jl+VJU8
b0ueK0XwKNMT4zapseGp1sa+5hsNaGn6OXz+IjYo2U1ipXc2YNgBVsDgYjbY
3bAICyN4eCdDjws02ECZhYI/5Pvx0GaHhKVsMLv49dMZ8sxIULf21GTDlfer
Hk6ua0DP3KNbjJezYcVo6nJlswbM5j1jLtRiw/ezRyhNRK8v5s/6+1eyQaVf
JmnSnwZc86Lk9lNtNrzQefol1LIRPe1LzC7qsGFYq6Zfht2I+X3Ff7atZYNH
31TYJ9WI3z2Lc9T02LBesXn28tEGpI8VHeinsKFYbu+HZw6N6BNcpPCUxoYl
Z11+3z3YiCUziiovMNgwoGRUtzytEcduPfXcxmJDemzShSv8RjRQf7pETZ8N
m1be6jef0YQBGYXNfQZsUJy6OcyI8F+hVxhcuJ4Ny+eJlsWYNaJUWQHtwgY2
UDvO9/dzG3Hj5oIPlhvZsOWrcy7NohEv1ufHLjBig4Fr7rQrfo0o2J2/tW8z
G7xTTsxoCSV+6Hryq8CY7He0QyU7vRG3uj3JDDJhA53jN/pzVSOGfcuztTRj
w2uT/nmcdY1Y658nv8CC4LkcqzndqxFnyOaV91qyYe5xM00dxSa0jHx8rGA7
G4KLtSPOUBoxUuXx4qCdbGCvvVz1vbwBm5JzGy2s2bBPvW3r/p5GbK3KuXHe
lg29u0L6ld434ptPWXvyHdmQYWi2zquzERefypI770T2C62ftmJKEx78m/nM
/DAbrBdf6X1Kzk++lOk+35UNss+/332R0IjvFTPVPhwh+Puz6TFzm1Dzdob4
iTsbvowuLYiIbcTDSzPOBR5lA/Pc1d8W7o34IPvhGvPjbKhuX90Y/q8R+2kP
O1U82RDm8aJYqoD4u+JBdM9J4v/INRVHHzSix9YHG594s8GtNjTx239NmNOU
/u3caZK3ichVBVJNOLgv/b7ZGTZcPlCaqfSmEXW702xUzrLhbNupFR+sm9Dr
aJpsjx8bLrS4X2lb0YSFP+4X5QWwwV//4EflhU34I/C+67lANmhtuPpZj5zH
kLs/3yyIDQ9UZ8+4SM7zvZ4qmneRDevEO/rnyjRh6YJUv+5gcr6K0nKrHJKH
+ynaeaFsaNMz9eRta0JDnZQ3AZfZMD3N/JWrbBOeL0q+ZhrOhpDk4YQllCbk
bEg2nHeVDXeUTkwuGWhEaVHS0PsINgSElltQ6E242Sop+XEk2fchfySquxFD
XyfuDIhmQ4O9+5wR3Sasdk6UNo1hw23vzhE9oo/c4L2CuTfZMGr4U17Zvgmv
St2b+ziODe/UuziRe5pQYfbdMyZ3CL81fUHvbZtwnWTpgXX3CF/KflMatjah
W1TmJt0kNtCSTFd92tmEsZa6WpopbOif6Sj7K7YJBfLFM+ffZ8NG5bz4tUua
8Jto/Yh8OhsmNh+XK7FpQvUwQfu/B8TPFT2ygdQmtDA2rxjJYIO73zSZQo8m
9JNpvt+XRfKbl9G/cH8TZvD2hr/OYcOBI5fCgNGEL4I6jzfmsuHfW/j1/2fp
DS42/Dw2sOysbuUfakLdv1/YxflskF7yJf75vCa0L/NWzy4kffI4ZItcONn3
7JhMUhHxl8bugDzyXMK88CmmhPTBztWav9yasPfH1KZLpSTfetMuq81uwjmF
kU/9yok/r24v6S5qwo1ec+8cryD9WHQntcC0CY/r3g06xPl///jrvMhpwruD
S11289gQNJL/oVOvCWtzMs3NBGT/Yts1Gg5N+NNdV8+wmvSh27nJ0yKI/1cW
z6MISV4se2xVLjehVd/68f9q2XDds/tnWVgTBqUL3qmK2TBtefS5K9ea8JGT
ec3MBjbIW6/zfEBrwldLmnMmNbHhTEsrd5DsL9e1N+aHhA2/S5yqlG4SfyZ2
nvnYwoZP+rT07MgmdLJzOfD2BRvEb7TEUZ5NGL1gYJOkjQ0tjR62PqFNWNHu
rVX1kvRzRYL9GNHrS+zYzGev2WCvG1jz+3ATqu66MJLzlg0PFwzun5XdhMaz
5V4md5L7bfKQ19ncJjwliay4+Y4Nkp8tM8xONmFq1Ny0sG7SH7xLI0EVTdho
eTc84AN5L+9y72RxE47LLzvh2ceGuOeBkt1kv1W1mTbOH9lQaIwbt5L3XTzB
J+owmffFYFdBKfFbWWfQ5N/ED5G/p9ST94KzLi4/x4g+esYeuyubcJg5YP55
nA2aK59s+uTfhItHvfU6Jwhfx0JNYquI3wrH5rVI6cPJLl//3w3Eb14Xxqul
9eGw7u+DsUoSfKgr975URh/Mv4UpRl5swueDkTW5U/ThiO3C/7puEb89mvso
VU4fKC2rbW++IX7zuBsTO10fDrrf042+0YQHVi7zvTJDH8avN2WKpCV4pS/z
QKCCPtz3vHG5g/Bfkq5r5DVLH8ZecYsa3xO/ORVruSjrg8JBnw5BcBPOXmqo
YDtHH4T1k7M+3W1C6BKMWM7TB/1BiuT1I+K3RPOXG+frg29jV1WYqAmnnpDS
eROhD2Zm1YoyIEHGmdbaF5H6sEuqxqX5sgSdz+ccaYzWh8g1xQ+KoiUYc/ni
FFGMPhzgXDfZGS9BTtTeNN5NfRiIDy0LWCHBwbg1m8pj9cFuj9ra0c0SXJQs
0/U0Xh/2+5lUjByQoEXGq3OPE8i8YhNDaScJ+uXlqWXe1YfeSsPUFRskmFFy
6VlqIsH3w9q6+LwEWzl2e+4mE/54f+z7NkpQRkT5cStVH3YcwTLKdglSJXI3
otIIvvNTw6blSvDQyw7d8Af6sHXv0PXQcglGvytsuJihD3+W/ju/+6AEKz5e
ORqQpQ88gadjpocEvww7TPfJ0Qf39ImzvwskuGCMkXEiVx90nCu/emVJ0FR6
prFbnj50dF970v1Ugr7Tu7sP5evDsK5e4qSbEnyg/OyCXaE+iAuzbjanSvD5
gij13UX6sK6rzT2tW4LSyw7j9hJ9+PF1ffqZ9xLU1TbYb1qqDxkrQ1cKvkjw
IFXp96ZyfShWnTnTLV2CkQZ9sesq9CHu44Mt91GC5UZIY3D0oe2QVLuEfP/J
/EbzWh75vkD1ll+MBOfbuHmuFOjDk+AmjctPJGhst0FhWTXBE5cksydNgqed
5+YsFOpD1np+ldkvCaYd/Ww6r5Z8v8+/cX6VBJtPcfsUxfrAKP4qO99FglLn
4kKnNeiDd79OcMNHCa4NPbZscpM+tPCmGVu8k6D9NSPuuEQfzppaUj/XSDDi
lurB0RbC96odJa8/SLD03tD40At98FpsuqJqSIL96VUJH9v04fjKwKwHtyU4
L/cOq/ulPujxzOLG+RLcUnSy9c1rfVhyPWh//B8JnqrYeqr1rT5s0z2Wp6LV
jKnVi5SbOvUhSOXoG49CCTY1jDwWvdOHYGeBlvbeZpxoFVnyu/VB+9QRiuHz
/1Vc5vFUfl0U1yQkUVKSqGROaMJzh51CUVKGyFChCUlIxmTMkEolElEqKpUk
KXYoSZFy53uJylSUoVKmH+95/zyf59xz9v6utfahCXXbcnorOk3gW0+z9QJT
Fjp3H08s7TYBT/nZIhbhl9RvpVH0neh3Vdv94joWlv1b+vpOLzn/fYJa4ecm
7Jr85573k9z/U6NdcbIJ5SUaxbL7TcCsVy8RzFhoKnvz2uVBE9gyz3RNw1QW
HlsYSjv/2wSOBMv7ef5uwlxVG1HiEPHrCgnLAlJPo6Z6cMw/E9intaVfl87C
cf3x+REjJmD8/bjhbGsWahuzHgeNET6H9YdOljah44aCHX7/kbXjJ40dQSw8
veVk/+FJE/hnoBUnLsfC0h12KR5TKDj0vHemGfFPh5O2jus0CuQVPF5usWLh
XHextw4zKIicuvF3NeEDXrwDNjMpmP/S8Zb9fBb6+hdOt5SkIFxSZsk6JRZm
h0bf2DiLgpKA5Ky2j034OV21Rmk2BS8TVrgt3MBCtScvOn/LUFB4zbE9YTEL
D7JcZjbIUmDevEPptyoL7/aPat6cS0HOEsFVDuH3U/qKZbg8BSqGjYu9Rojf
tdf72ClQENo/VDukw8IAC26K7kIK+oYevRkk+pR6BjycvogCHfcb20oPsHAk
Sq6pRYmCOvfn9cvtWEjLefirRJkCJa2oh+5kfapim3yKCgU+WTX3DMeb8JWw
d+3+pRQEOidYXAljofi/xF305RRYmodde0h4W8prhsxfQUH2W+G1dhcWphjU
Zv5Up8Da/kL1r7Ms/GjtWfFak4LR6g/67zNYOM9namu2NgXim5RHTxSz0CEx
d/K4LuEntz03ivgl8zZjqbUeBVFKGfRXGiz89KrFVF2fAot01VWpgSxU/RLq
OWFAwdrqeIFpBAs9JxbG81ZTUHuh2/kS0TNf6Wn+g7UU3Ds7drFjNQt7jOzf
xq+nwExyj/q9zSxc6fC7x82Y/H7ph4YZxG9+AanS6ykKgryb/2n4srDk/Cq9
OXQKlMu+zqgj+//df7+9m0GB07/opuclLDSp9z5WCRRMNbt0pWgJC09+k7yY
bkpBvMyDwRXAwuoZBSVHN1Hgt+VuzT1XFk5fbs6zMKfgajLtZ+4qFlpAxz+V
zRToNa/p7AhmYZJrtOLwFgq2DazWWB7LwsZQVeqjFQV8nbatXTdZKJfxwqVg
GwVVunML93xgod0Tl5OntlOgsT/e1LmAhRms0RzHHRQsP9GlnLiPhc39GdX6
thTgxbUze56ycMns9e0S9hQk/E7b23mGhfu0udO/OFBwfmhZ/ipSz02LAPVn
jhQU9Mmpy/Wz8Jun3ObU3RQcC7NdEUbu04l+ePiwCwX6M3ZmdVURf+dsS97g
RsHXQ2337A+ysLiit1BxLwXOM9C36zELh4SJjYP7iN8czNpCu1lo9E9j4K0H
BQzldpVvl1kYJl8rd2M/qbeSa8EKZZH/xzxXhx6kwOZxzIhaOgunbp9qv/Mw
BRlr13SG5bLQzCc3SNub5DEthqvKZ2FCIiNj6hEKPF5Gvnj6iYUNt1ueiXwp
cGWffyw6xcI5NaHNxX4UBOc6XHYPYOHOLwv/S/KnIHa2ikZGJwvTJkqXeASS
vGw19NrDYqFAyR6oIApkc/RjuJUsVDL+vW9eMAWP2mJv8IdY6OaQGtMbQkGZ
z5du2TwWXg9YdetVGAWszKGF5x+ysOP8+9qrERTsnLkssu4zCzUfeH8LiKTA
VntSnEn0866XlNoaRfJj2Dst+i7Jo+vunkUxFKTcMvpy9D4LxQbuvvseS4GJ
WvH0uDaSp+ixu2XxZB48Hx35KMvGS/Jbk08nUCC1bv+eR79Y2Ho7y9shifjr
tMdAE+GpZfzTasUZwuvQPWblAjYG1tN1/6SQ/hlDiYuIX1+4npV+dY6CD9vt
Omd1sVBioPVHair5viI+016RjbbRq97vvUjy8m5EV+cHC6/Jn7q/Ko2CaVJJ
kYV6bPx2+2PKxGUKxppS/iTKsNHQeKnv+wwK1plujtBksjGi/ph1ViYFjQWX
xEaU2Vjn+lLPO4uCXTMSE0S9ZF4OzJ1jco3w3+KxpGgWG12iPfolcimI8dgo
cJvGxnz5kg/86xTU++lHVb1h4a/b04tu51HQ9fH+k7IxMp+M7c8fv0XBrKIv
/VWtLIyvv+W3KZ+CvXrXddYZsrHJ9a/NvDsUrJR3bMuay8bFA+YGX+9SwJnQ
oMXtZ+OB6HS5R4UUTH/UdX1Iio1F8t8GIx9QEDAeXrZrlIVjt41Y1kUUMEUf
yte8Y6G5cWKxcjHxs5Hy79kqbDxfL7zw4zEF7OM/esZt2Chy1Q4of0L6Yd57
80efjSsGQm2TnhK984aSuBQb/aLrVzs9o+DT69s2sRfZ+Fx+sbxmOQUNvtd/
mHmxcXq+z5+/FWS+vW76Mt2WjduNkfP6BanfNaDzkhEbM+tnP7lURYGCkdi+
QV82dri6pXm8pODzh7Dfa2ezUW/gwXHDGgpyv7k/Uyf1hURP2k+pJX46Z9tR
ncPGGnmbdR/fUCD9LuvEYWk2yuTnKuS8pcB9XYA4n+jjaDz490g98ddDztV6
Hzbm1W/g095T8K1EeXONARv7XC88nfWBApd5Bc1NDDYaDXxNF30k82lrnEEF
uS86enXwHRYF+xIHvuutZGODfKxjMIfMN7uE6Ni7bFTI5xhZ8Mj70/vmSqA/
G/cZr1BUEFBQLfdyqwnRu7D++EiHkNTfGnLZbgMb/7rWCh83k3kYs0vzxRI2
woDC8+hPFNx+MeXDhBUbk6IPZu5oI/o05JuPkvtK6u8opXRR4HvzkXWJAxsn
XEfHnL9RkO75wvW7Exu3DFi2aPcQfTbeY0aUkPxEX60Y6aVgSsKGkQP2bGyV
/5FV95PoP5R4dQnxr2Y+LSK9n4ITetXp39hsDDBOcT0wSObB9KWZcZVsfFH/
ib72N5kXUsvS5rSxUcJNb8n0IQrC1DZ4by5mI2OF+OrRvxQ8rngcYEP2H//x
yWJgmIJko6/buWak38dPXLpGKbgjN7LO/xwbv4amHGsZp8jfb7qFFvlsXGi6
P541QcEaTofNoUtstJakX60To8H3z0bBvqT/2I/yRS+m0kDySYXH4idsLE//
UVMynQb5ur8lvp1m4y+3GuFdcRroax0XfN5L+lHP6suVoMHytbDl7As2uv0M
mJYuRYNuzxePBYcJjxKrhSnSNLj1siJ8xyk2vgtbvjJGhgZ2/Qn/3hD9pmwc
2xAiS9aQ9XxVBdFfiu1wdC4NNrhMWY5jbPRtuuu9X54GZwsXLY58y8bNfZKV
9MU0eCVtF6NVy8Zlsw7PVVCjwbKN/925Ukf8xgINaXUabBQ/V/S3nI3nriyk
TdUk/cAzrbcZbKzdO2AzrEWDd47WQcqtbBzXqNvfp0ODTZyk11e+k3nTnxPa
sZIGwtmZI79fsvFQ6YlzolU0OOSZktBfwMZrEdtvfjSgQXT5NxN1Uj93k8az
2tU0cBu6npAVw0Zp6cn3FWtp0N/ZUJA4zkZTNu9r8XoaWExXNf3DYWNw5oN/
BcY0qN6gt1/sGxsf7IuXzqFoEG4mrjdjFgc7NN2WptFpkKpRO25BeCgNrF2X
zKSB/HW/sqirbNz5dLZV1AYa/Lx3NlzzAxsTTnbuObGRBrfXzmHKrOTgCzMM
PGJGA3HVgzti3rNxSDot0cOC7LdfaFDMY6Mux+ea0xYajO8Anq8CB92vbnq8
3YoGWZmCHZcEbMxwX1xnto0GK80ylvcS3h+0/rRQ22mwiO+95G0ZG8UH6wcN
dtDg269N44FNbKSV5Ylr2tJAZYsJq3KYjf6RYUpL7GngEWi6bLUTB++Y2+rL
7yL+eR77saOdjZ9n65hJOf2f58+Q13IcVOBO3S3mTIOCaSFUIpODW7NEvn9d
aDDPfOOtr4RftEdxzA83Gvx6264tVOJgmXZSxte9NKC/yL0SmcLB/sF99wXu
NPC3uDhwisFB9WfGLxs9abCkVlN+UpKDLqfk+DUHaPD5RN+sNfs4eMHie+/z
QzRYuOByqt0UDtbJVIs98qKB1M8ffW91OTjBzZif70ODc8YJyyf9Obg22087
25cGze/Wp5qYctDHczPzoh8Npp542NgXysEbOqp2if40OHxN1q+E3PdzZtUP
10AanBecyHxL6jXq2BNnGEQD76cs01F9DsZWTSrPDCb9PUqWmkX2f8jKKW0O
oYHX2fTS+9c4uCiEub0ojPhp86xFs45w8IB9W3dsBA36xmbGe1tw8JFB5Cmn
SBqEed/aAws4OD5bRVEvigZmPjpZ1rs5uLnnxaOpMTQQjJjvbwrj4MVaN0t+
LA0uKRrco5H6W29MfL0XT4M97MsumR4c1I68FnYqgQZ/57TuEERz8LgzQ94+
iQaFw2LuUTQOVq1vLdQ6Q4PR2iBwIPVJy580m0ihwYXP2j9CvDm4a0C5lXWO
Bo5LxY4lmREeDRiUn0rmSSfffMEODvYVuM4Jv0iD2KC9wpOBHDSO+y/fJo0G
nOWq5yvJ+bH7smFFOvHnL6xYxefgRzpdOJJBg+QfsvdP13BQadGnY42ZhHfe
69p6F8Ljb7hUXhYNtOLkJUaInsWsxXknrtFgJHJyd2UOB/97UEFtzaUBV/uK
u905wiPZhaN6g+ipk3x5WgIHLx0c9xnKI/PoUqDHfVJP28asGe9uET30Aqiu
KsJDlXbtWj4NEk5rBVh6cTBovHldwB0asNe5yL57y8FqQdgHi3s0aJsVfmTD
c8LjidKhxfdpUJSdI254gvBILRcbfEADvl75/dvuhMcR5yuvi8j8+vNA7yGH
8NgyZpBZTAOj0ndlK2IID/Wr73xLaFBzP9gj5APhMZXy2FhKA9lrczxCOwiP
VtHYgjIaePZ9f7rXmfAoD7304xkN9ve/a/y6iIsH0hetrC6nwb9LjvTD94k/
Ap6/TkMaKDxac5KRTPyxfbebVyUNjiZHbL97m/DQHf3LqKaBooXcl9gg4g+J
zHPzXtGAZnd568l3xB8dxprfaki/y1scr/QTHtXCqopaGnTJGZvrE32OZ4c4
pdYRf/4aXv3+JfFHiOKv/e9IvYsTS5MHODjL4VmSSQOZF5+sdhz05aCDodPy
OY00iKxYWd72mPCQGSlv/0D0aPzU/uQ8yUtPhl1ZEw2mjEaz8tpIXt4Y/TzD
psH1o6OTbk2ER54gbh+XzNuuxVy1qyQvkcFL1vFp0LIrK1AoycVFLgufSglp
MKBVcS6ygvjDqGx7m4gG/1ls3bY/ifCQd/z2uIUG2SYLZcuJfuMD/04ltNKg
8r/0hpPlhMf7dEXXz+T+98+HT0hx8eKd9cUGX2ngzM2qKCJ6tMbxLcU7aBDE
4g+9Ivppu59oF3XSwHxD3Y6ZZwkPxoLwh9008NH9VjlPhYuF2xlb7n0n+dlw
9paNGBc79u5XyO+lQYO75Nw4BheV/M+03/hJ3qNtay7W/uHgzpjHRdf6abBm
YPlGe8I38ZIoInOQ1FeufOHDF8L31hSry79poOTnK95sycXhUs2FF4ZosMPV
e3Dzai6uqtvemfKPBhKPvkwOLyd+EAYVJ46QfisKchOfcfBaT3Zk3BgNPr1I
41+s5CB3rGZr1H80cFod2N6mykXp2T8UIyZJvmZOS5z1iIMbl8zrDp5CB1os
d/NSNgdDV5mUBE6jQ8rsP/7J5Hsx7Ivym0EH29TyjRlMLn7fkWDtM5MOK1Xw
uMIMLqp6PFQ6JEmHqHlqK9vFuegYyPvmMYsO70tS34YOc/Bc3H9P9symg7kY
HBMj69rLajHOc+gwv+zpwreE73/5Vja75OhwM7DX/CHhueaZv7LtPDpsORX2
eDrh4fPuSo/1fDoETOm/nUrqyWuuemq5gA7VzNrpR0Y4KPrRHWuuSIdbPtsV
p+7g4twJmZ2mSnS4JBHsQ/Pl4pY561QYynSwe/V+JBe4eErV9YexCh3Uf19S
bg7i4lOD2Gdrl9Kh7rOpwTIDLvaZ3os3WE6Hg9ebJLVI3tTtWLYrV9DBQZi8
aNVGLrruH1HV0qBDi9a2rsx7XLwUpNqnpkWHq8NTaRUHuNhw2qJcVYcOnVab
3Z5f4uK0K74Ji1fS4bdrgF28DhdN7qbZL1xFB8P8NLY8Oa+gob1/zmo6qCwb
sSg15+KCfoOkmevpIFY4oBu9hYvWYk67phnTQfHW6sTKXC7Gy51SmzShQ+ZM
PuV8g4u4LH9wlEaHomdPGXnHufhndeOLvwxSf2VOYfsDLuqYDSX/AjpkvIx6
arSLi+4Oi536TOnw/NiBghwaFzMPblTv2USHtBlGSpreXGwK9vrdaU6HNznT
et7e5qJEUmrVl810ONeQX74okYtwtSzlkyUdHpdcpw0RficK23YLt9Lh/t26
BQv3cvEBimtyrelQ2i4W6kn82dm4cuijDR2YHZvwbzgXF3+2e9mwkw4bP5kY
BTpy0W4w7FydHR3mCmatvkZ+nzw1z6XGgfjtXFPKHTYXX857p1XlSIfcoVKP
GMJzVG3wb/luOmzzijtca8RFg3ULa5660IGjUVobeIeLhyyYqY/d6PDxp2Hh
3rNczHE84PZwLx1k312/5xbJRd7hFJ177nSYaO3ozK/iokxYyfBtTzqYnXvf
ouzHRbMzza9vHKBDcg6jttSGi7Fzn+xIO0SH8ZOjirVRpJ6Ms59Oe9HhLd1I
6Vk7F8VUDh0O9SH9uHanCb9wkXFrw5CPLx0GH4yWiE9yMVxHKWqPHx3+7nz1
pPwUF8sf/ZHe6U8Hv711sjuqST/rGzM2BdJheNullyqvuWj0Il9tfRAdEo2k
WvYRvYM2RRVpBdNhveSCxxrfuPjk3W7a4lCSz1axDU3viN42a+pkwulgHfx2
/XIpHhryZ9tNOUkHht7SmaWlXPRz7W77HUmHbOajXWEcLj5sr/LuiqJDZWzN
+bW/id8PZ/4TxJD+FWPE1gm4qDsQEFMfR4cPKjZxtL9c9AraNufFaeKPt8k6
D2fx8M64+tWiRDqE+rbM7yf8vkWLaeQl06Hqjc5tpQ8kL5Ki4rQUOgimfOzE
Z1z0PPeYkXCOnMe7HHtgCg/z5qe8C02lQ8Kv6/B6Cw+/Xj3gcOQiOU/f3ole
TObJMvi6J40Os2wL5Q1UeOhWoOi7M50OXuUjnR6Ed7be75FNV+jwpXDVEt4T
LraUNMStv0oH5wshEfdOk/eBui2nnU2HQKewWapDZB5VR2YvzqFDemHV+e3G
PEy3cNKac50OSk8mPhTwiR/eGz6ZkkeH2QqPZL/zuChvJ73hz00yDy4dct69
g4c7RZ0NXbfpEKfoFXDvJRdT91Y6CgvIPPK9v6nQiYcfuzI66u/SYe2Z+XtH
eomfjvj7vSikAzwbzzHp4eLW31bjRQ/oYGUv2iTbQfwdsiIhr4jkNUl2l7Ul
D99NTsy7XEx4WemV1ynzUCJekJNQQof9ttmG65u5aC5drBNWSvK6+4HCFk0e
xl1IfnqkjA4i+5vg7M7DmoX7N+59TgeTMIsO2wkuTs1hfNhZQfLBybsjlOAh
rFjobPaCDksi/7TILudh5L3BrvVVdHjV9jV+SiQPXxjU+2u/pINRanlXGOl/
/OnNicU1dNiV2/9mxI2HJoyTSXNqyXnOh+c0BPAwpGaXwtQ6Oix6tjqydSYP
yywNbvx5S4d9G65K7PLh4d+PUnrd9YQ/T9PenfBYs6vjmfA9HWJ+DXoXefIw
4BOaNXygQw7KyfX1cbHYI73pRRMdJNAyJTSVhwPf/VwfsYk/ZjW9mxnMQz0/
y+95XDI/Y3jFsuT7kb/Lj1/mk/ucJCZabvGwMPw/sUQhqXeVxs8/63jYM5V/
JqyZvE+Tk6ofN/FQM7Fooe8nMk+rLvudIXk8OCfp5t42ktdtCjVx23l4O81D
3/YLHRZyds6kvHjYoUSvMGsnfnRUC48q46HR09Z6hU46cGW9zLRP8TB556nm
7i6i9/WZQz/0eNj6c2lv2Tc6FGSnjWnnkvwlvhpN7KED/QrN9ehLopfafinn
H3TIf7whwSmBh4JK8UW6feS9lHiV4WHDQ13nAq3/+umg2SFRIKwk+vzdYtw4
SIdnk1SWTgEPWam9m3N+06H4Or/g0l0eqq9McfQbIvPBQSfoUDbRo07v0IZ/
JL/L966McORhg8fHE3NH6NCRff9qYTsPVSePnW4fpcOh+rAv3xmEf+a89JJx
Osj5L7/lF8/D2rVPbsdN0GFOjoKVjCsPFzU5lDqIMUDMqXdZNPGnr8/wa42p
DKBNF2kWHORh9cxM7vA0BhzbdStE6yQP5fOozrczGPCEdU2/3ZqHhxif/mTO
ZMD81pv846d5WC48Od1HkgEpa2Z0OubzUOa4qjx9FgNK/rzbGtLCQ3fZl8tl
ZjMgn/N3/Arp98k9j9VtMgzoUuaW/IogebCYsbFIlpzXL0x4S767fL29M2ou
A6TETukvi+Xhw4jN7jvlGVBk9qZqXiMPpyr2HFuuwICH0ba2ywgfh5LkqD8L
GBDx3Tt59DGZX9tXpr5WZMD59U53GoQ8HO9pzL2sxABJw4LHEfU8tIn3Kzqo
zICw9VL8Pzd4eHPp3CojFQa8Fgpq+nbz8F/F4w+SSxlgV3Dzzvh5Hlo62reJ
ljGgH8ezbwAfr/3+23dPjQFV6d5biqT5OHg2YyJcnfQjXdaykui3SdtExlqT
ATGmKutcuTzMeN2srKLNAJ3fN+NWb+Jj796IlQM6DLjg7HQ2dxEfGeNL6NUr
GVDNOnqC4c3DC+lVWy+sYoDKle/Rky942Gno7uJhwICgiSu7jVfw0ahxms+a
1QxYa3eyUJbFwzOHb4XNWMuAZOvbN77O4GPbdItk3joGeLiGhAxSfDTM/ZaZ
b8QAF/HsrgIeD+OppLvBJgyQOP1SKoLORyFP5/kWGgPWKa4wmzefj7r+798u
YjCguZkzx0yNj6dmHxX2MhnwM6Evv6qbh+wC2e8VGxigdHrsK2clH9U3FQ+n
bGRAwOogq89L+BjaZiuxx4zws8kS+7Wcj+9DhxboWzBALeHi4STSj6pCusaU
LQyYpnDR9Lg+HwMfGa1nWTLgrNsersFzHr7ZKjLP28qAIZPcHX3viV+/hTkE
WjOgJcE75vxUPvrGKB8ws2GA3Irsjd4i4tcllccVdjIg2OmIVFwD8evzvXHd
tgxY8+licutMPh6yn5pWZs+APufGo5+k+Fg+kHczcRfR/5Nx86PzfBytavgW
5cQAxyvzXpUOknmYOqQb6kzqkzh2x5P0G7JvyTF/VwZkjW6af5f4uczA4onX
HgYsvH9dfJcvH4en+I2472PAydlPUzZo8nE9K4Pu7MGA1f/tj45W52PQjeoo
2/0MeKNayf2wgI+l/j2vrQ4yYMKxYV+MPB+HTOdJbTrMAGfPuqXB0/m4Zh7N
mubNALdRk5i1loRPu+eFNUdIv+V1myyX8fHx4xSe7lEGzEuJ771syMdfMaWL
VhxjwKuaz5UWeURvuzY35QAGRJd7hztG8vGYmkTe/OMM4En1OKrd52PRH/3u
2ScY8HjZ310lG/k4UOOkIx5C+M3d47X9KB9XpUUfnQgl9Q5JNeQg4b3/3uO/
4Qx4cSj04OZtfHywlvOv7yQDOKlaZ8qu8fHnjP+o7lMMMF1t3VrFJ/7hrTjV
Fs0AV45HqjCIjz63rWv4sQw44ahYPLqLj/eCTkh8jGfAcd6983dC+Nhjnru1
LoHU8+fVVXnCS3vB2/NVSQzIU/xko67Ax8Pdg5yyMwwwMX2huOgEHwueLlJ8
dJYBW/Q0Lx014uO30xtd75wnvO3Hol4c4qOGo8/16xcY8K6lXRhyh48HNNM6
r1wia80zuxwS+Xh7GLUuXGbAyD6JwiWFfOys6zqSlEHq/1SxXf0sH9WuzCmO
ziT6hMSPJzjx0fOw0d/QLAZ496R9EkbwMc94n0nANdK/X8JWjQt8/CqZdNI7
lwFC1Uov7SQ+LhMVv/S4wYAVH/UkX8fwcd/dZnGXmwzocF16oV/Ix9zQ6VZ2
txkQ9y4gX/EvHz9brjy3tYABkVOEO4/38FFFyYG96S6ZD5/Dvgrr+OjWe3IB
vZDMDyvpqIkmMn/K853XPmCAkcn5N2dG+Pgp+WPOyiIGrGp9qPFoiI+LXUba
VxQzwGrZiZihTj666C7TXFJC5jPLyzsinY9Xxy19FEoZMDhf+UipNx9FDQFF
MmUM4Ffm7XMg/SzKzvoj/pwBNn3D+uk/+eh05LXRZDkDHBr2DHOz+ZhB7wv/
hyQv/uKGFoSnYPaC6v5Kom/82zzrP3xc0Mqc8a2a5PX7aMsHor/Dg0NbPr9i
gL7Nuaed3Xy8fDI1RfCaAT9WKkZPkv651s+bPr5hQHGF5BxNSQHKq7TPf/uW
AX9tZgUq3uSjXf+s3dX1DLCeLXlEZZYAL1auufbsPQN+i9+VNiH3sc65fn30
gQHP3x8fdcrh49y98ep3mxiwcvTuudx5Atyh/9DrBpvsnyjynjfKx/NiggeZ
XAZ81260jP3Cx47OuqBjfDJPg27dpYsJ0Kj+GWOzkAHUgOTExno+nim6K67S
TObfCqlA4QoBfkm72jjUwoDcY5K94cQ/68LOXG5oZcDpgzop5aTepL0Rbnmf
GTDuWM7fYivAVjNf9dCvhFftahP1VySfOnv6bDrIvO4RFgb18TFe1qZUo4vw
+H4WvLQFKBqCkxPdxO9l/71YTvKq12xgzv3OgJpD8zZKGQowumqZTGEvA+rn
/dAImy1A3q15vOif5L2xal3uOkbykzz9mlM/A75ue1qe/ZWPJ/2G9usPMqBU
oSh2aK4A2fZdK2f+ZsCd7r9fFq4XoCbFH/r0hwFXx53Vs9h8DFetw5K/DOg+
7v5SntT3ccazuORhko83W8ZGFwlQrffONvdRBiyR/CdjzhRg8MfM+cbj5D3c
k32esUWADU+SP82ZYMC2R1lpnv/4qHo1/FbXJJmX7mGes4legaeOHMEpTJAx
urRKQkeAdfvd1l6axoRqc9PgwWMCXGy1/T+vGUwIOP9Pi/5IgH768HrDTCbE
xMtYj0QI8PV8g5SFkkyAwz/X2JN+F40tte+XYsJ2mdHATXIC9P08V7lWmgkL
zvycIZQS4MvX0zqzZJgw67KPvjoIUOHen8IAWXL+WHh5rp8Avc53BlrOZYLJ
X6XoqGABvjjOoy2VZ4LalEOP1hsLcK7zm+nD85lwZWxDuHkvHw9CWUPjAibs
wvwR2UABVqy4c+mWIhMsP3d5ZeQIUHZWpku4EhM0Og5dcY8SoOdAkpqtMhPs
joVTz8jvy7hhP7RUmCAepnU5dp8Apct9SsSWMuEVTdxPuliAe3Ndw/nLmOAy
xVTw4YAAS+KsNz1QY8JTm6Vp8FKAkt5M6Th1JvROF/543iBANxt9jrMmE9rq
0oKt9guweO3SLENtJijS7mavuyFAcaW5npK6THiYp7bENlyAu8Wm6X5eyYSI
Fb7zvXwF+KDz9+/SVUwwYpqmRjkJcGp9R3mKARPePuhZJEn0cCjixniuZkLz
VfmtV58I8F5arRW1lgmLr37Ulf0kQLGwp/PmrmfChPK2+NJEAdrtLWj+ZsQE
YRiVocYXYIHZlbxKEyaU5P8Y/E5+P66d5H2ZxoTplkcr8zoFaCMbtvoIgwlm
le1l8ysFeHPIe2wjMKG8ubXJQFaIwyKXV4tMCd/MyEH3KULcWrUteXAjEzza
y7TV3wkw9xbDts6MCafn7s2LJf3+SVqllGPBhJl3H5uu7hbgZj/V9uNbmLCt
DGNaCK9se7l7W62YsMlo9o+QWAEOPywxWLSNCXIv5QcHlYRoJ+VY1m3NhNUV
s2sViB8eeo4xntgwwdN15ZzU8wKUqrz2OnonE4KY9wbsiB4HFE232tgxIXXD
h2GxOwKsDuhkKTswQfq/hdTGauLnxgSn3l1M+OyWeF9MSPKiqfu5zIkJx1SO
Bfx+IEBO9IcD8c5MeOYaFjyQJcBVn/x/2royYdW1kEfpZH/SeoXApXuYsPCa
ubztQwF2pT4b7dvLhPFCua4ZHwRo+sMlqsKd8PYtUizrJ/2Zi0kkeTIh6s4M
29uE/3Bu3tldB4if9zYt8ywk+oyZz19xiAmD5fsbNUQCLLLvufrrMBMarpsv
UW8V4KyilGVV3kzwGp34L4TUc0DK4E7KESYwI2tLxpyE+NKTs8r5KFnrSs2p
rxLgksoTpZrHmDCwz/c4faEQQxSV6H/9mTDVaujG39VC5AS8ePUqkAmmUpu2
/aclRP3GfZapQUyINct+snNMgGc0ZzS5BRO9EpdOTSJ6d0cX7NINZcKkZJ9y
vKkQTT9ZtY6EMcH+uqdP2YQAr63v93wTwQQr9+m5FApwJPVC76VIJkgYbPhu
8Ir092Otv3sU2f9SU5tD/FlkLhxeFcOE5ZvZD86AEGddD4/8L5YJZXtCL+Us
EOKBMRXx+nii9/mGcOPlpD/7V2cyEpjAoO8sLuMJULnowLwDSWReeSbIfPUW
YrCUVObqM0y4cLO6RKae6Od5X3XKWbLuPeezU1mIqypt8hvPMcH5+XBn8yoh
Jin+WZmVygSnZZsfFOsJsSsgveTwRSZkN29/5TSd9NdoQq1PI/mSDtm6PECI
2Zqt1dPTCT//fZmhRsT/0VGbWRlMYE0Jyd2wm/jzk9qHnEyiVxJrpRzxc9H6
OvsjWWS+jE20XT5H+rvg3WJyjQmP/urb2dmT/n7IeEjkMuG2i80DIcnPS/Pi
79zrTOjQ+xFy8rQQl1y398vLY0LfPiuN/aFEv7Hhv363mCBWHe78fBHRzz4r
gpHPBF16+ukX0kS/IuZ06TtMOJv0ZHIuye8ZqfYk4V0mfBPfyLMtI/p5xsvl
FzJhUf5ltyJN0l+lVkbgA5IP2SHz+mtCvKb4folpERMOsqdmCEm9owF+t+YU
M+HWkyTMlRGifeM83U+PmWAYl6x4PV+IRZpPi+8+IX54ts2aHi1E6ZjdxsFP
mXDn4qUsSBTiwU//VZo9I/7HvFWyPqS/9dfN55UTnul14j5ppL8Lm95/rmDC
/l02/w0/Jv396LZ98IIJxWsajPbcEGJV2Nw5eVVM+LjPYbe3sRAlZtHfpb8k
ek/bWfJdR4jbMw/GnalhQmDKeuVWXyFe1roAUbVMuLx5R7YG0ae1rGLseB0T
fgLV5UD8s2Jzd6nXOyZ8uffysFKuEH34cv57GpiQW9THziT+KTlAW2nXSPie
0g0RJ/WPDx34tvkjEz7Ye1R9VxPixrjUPDqL8FpRSHVlE//IV7gZcpiAuT/k
F8QIkZXXpajBY8KyZ3/15rOEuGi1HFdJwISUI5v9vicJcd9L6rysiAk5Kyrm
H44VYsGOA1YzWphw6esGL5GXEAc+nxcf/cSEUwd+R0ucFKKRX3l1XxsT/sks
ev/yjhAjJzvD278Qfhu2HfHvEGLtWVkjQTsTmuxyFCoJX5kl1O+GTtL/fZc5
daeIXvf3P6juJvPrwPKdKQ1CzKKdP1z6neiRZa57NkKIHfXP1e71En/5+aoP
FwhRx7mzLecneR8XbHFRHheif8+cq5f6yfwfiTei2oX4PMTEIXGQCb/e3Om9
xhHiFMn9cid/M+Fe9K903Qohbs441+A/RObPmJryaI0Qz2s8P33wH/HTtuE/
dweFyC/tMHUZYUJmgv9Pjyqiv/mcCZsx8j4WPTHMGCB54Bo/M/uPCdwfSkf/
zBLhfU/PQJNJJgwZHj634ifxY8ib9HQxgO17ZlltqiZ+rXYZSp0CMFP5BrOY
+NFU8tfOM1MBLDe0rNv3geTZ5nRR/DQACSX/SxJ2IkzMWCwTNR1AO/Y+Z4ua
CHU/P/IOmwFAOUq+2NYmxI8aFm+PiwMced+uI1cixMCjLep+MwF23bKOO9Ut
xIVPj8V6SQC4P9UqP+0mwooJ8a+ekgDOKcHL3Jki3GOexdwjBXBiQoLNMxHh
1LMG2U6zAOq3D1rYrBXhbW7tqK00AFO2c/c58t1S2cXRejZAz5ry0ZFtIuzz
HHyyWQZgpX/p4DQfEV4ojJ+3cQ6pN7vjs+GwENf9UTpGlwV4M1Oyx+mLEEXU
o8b1cgAXnaS0o3uFGBFjrms4F8Dv/KLAUX0RqtY3J+rOA/h8ODI9IUGENXOP
davLA6gpjqVFEL0O7RY3WzofYEGIdfEXKxFK37h6Q0kBYGNKSewdVREWfdcX
U1gAsFh482yQhAjtDGpdZRcC9NuL/k6eFOFwsHO5lCJAotc+rc2jQrxaNbBw
xiKA7hrrw2K7RciQiA+aJOs2gZrOLMLr63YlzogSgAbtUpVSkAjj04sM/iwG
uGLgwLb0EqF2m9m5PmWA1u8/022jROhoUKknWAKQ2x3260ko2R9j1FitAhB0
U08/SkOEJdxHR+6pAlTaiKoXO5LzNXRmpy0F+Gm4ZGDysghlQ28WnlxGztep
eXsykdTToLz10HKAVQmZno6yIvRZkt67Qw2gYAqjMJ/446qfbDK1AuB6zKaU
P3EifPcyUXuFOsClu9rqD06TfuWnvZPRAGive+BdQ/arHww/PEzWOxxNnZSJ
PnbPhiS+agLUyvbkG60UYfSsowX1WgCPundU3FQnPF2/WTzRBji26cl1GQsR
tj7c131NBwAizgrP+BH+U5vjE3QB4vq2o1a5CE3s7NT9VwLILJtiRa0R4aHb
71876wFMzzN4oUj4XB4232+2ivQnZVMzdIXoa1k1fZU+wBz3U296UIS/soxv
LjQAGFgfLe63lfihv3jjVEPi19tSr3v7RGi9Qbe9l6yjtHsspf1FGHHxVjR3
NUDYksU7Ey+KsLBzybLKNQA3dk+oiFeLULQ+o7pgLcA0l6hNOWdEKJEkt+/C
OoAvi1q/zyf+WdeSJBa+ntSjEsxjdIjQU2967n4jAP7TtapyRP8LpyKY240B
5oUGBfd1irCK9bfVyITk9TD7IjuA+F/N7+QyiuRDutfCaLMIF5/4rixNA/CZ
LbG7h+TD8q07DpH1w8rnIWcHRBis1OLSRid565cQLE8l+TpiP17HAGhhxrgG
TIiQU9l4lTxfEKH4d960MZLHuZupLILbhHXAyOGpCPU9q0VxGwBcOVc+dUs2
455Sk9CjpkSfjuY/gbdEeFaiRNFpI6mvr7ZVNYfkfffKZ6abAMSD5gb7Ez49
hbcddc1IvuR1+7pKRbhwUmV4vjmAgoLDkHO3CM13XEmfJOvOkpL6Pw9EGJg3
d/13C4A9P8VnK5Pzbgwl81ibib8TsuKUc0X40WJGUMUWgOVnJ21XtItw4srJ
+bctST/S3qKWCjKvfvwrOWcFUK5t1370lQh3M47ZhWwFMO0cic0meUw83/Pb
fRvAVO+YhNP3RVj21ePiVmsApz0SGoW/Rdi15pPhuu0AFQ7sN5oSzSh/2oGl
YgPge6Qvz+WbCE2FH45J7iB5fyJ+4+pHEfrpbJH7Tda0pRldDNtmvBbxsqhl
J8CysruPQ26IsOEDZVNrC/AtckfylSXNOLr0Sf9DO4Cx+mVsHdK/ZqDeuSv2
JC9L43vMukToUJuvF+MAYOvoGrO+WISxC5c2+uwCsNjD8igeF+Fjr8wjDo4A
C5cyD8sKSf/Wj4ycnQD2PvAOrJ7bjJar66bt3Q0QKhucmbWqGdMWtDV6OgNs
C98w12NPM34eG7py2IX4N2Jnb8O+ZjLfpff7uhKeS+yH4uyb8UTNcv0AN4At
b6YZT46I8GWBydiJPQBlPWb+X4lfZFJ21IbvJecf+tA/lWpGp2OHUqP2AdwJ
zdCLUmnGm/aRLvHuAKeX76GS5jXjgPFljWQPAKMfK09ct2lGasn9X+c8yfvB
daQUW8i8mlqDl/YTfhPoylnejKwuUcKVAwC3LuhOzyX3K9cP2l47CHD0vHyg
3sVmPPRQQiXvEEDD08Bgm4PN+PiiSk/+YYB7Ssb+dtOaceLEuieFXgCTOzf4
tJoTHi7bTj3yJnl6snuaWhbhAZ5WpT7Eb02rD+wOJjzUwhTKj5D5I2NSOphD
eEhe+FLpS/L1PHy7JNl/4mdBYc1R0o+l/kGb5GZ82VR54q0fgL9+4msJ72ac
XcozbTwGUO16MXnGzmZ0zPw5m+0P8OKq2nfjEsLj5HQhPwDA0+ut13a3Zux3
V7rZEgggfSMvSj+tGU0sDI9+OQ6Qd025d51OM8brbDHpCgJQ3uXWs0qjGZvm
7J3RewLgeKcZF8h68Z+gj/3BADN2T1gsfdiMBwUpV/+EAKTMDCssT2/G4oqb
B0ZCAfSn3Z5+gug9kVtuMBFG8nvDAObymnFLHGt8agRA0paP6jGPm/HS4e9v
Zp4EMJ6ilHSilPDYJnZROhJAUjHCgu/ejDqGC9zkTgGcjNvnbXWkGYMU9LQU
ogDkBD4378USHqOb/iyKBhi+8HTnt2OER5tzpUoMef+yzZ56OxIer/yT1GIB
rKQOlV19RnjkJ9prxQEYDgTDCSfCIzlXVS8eYOvub3voPYSH39New9Pku93s
HZ8aCQ+7xtL1CQAjH1hXhkl9TUadUbREgGDPFWKRNYSH8vjWDUnkvZxr8Mh5
bQsemjJvoXkygKg4fE3dghZ83KnVbnkG4J+RQtvktBaceAsPtqcQv+7dqtTF
Iv54sCvE7izRS1VQJUf4pV3w3eR0jszviof3o78QHkFxc9zOE73apE/rG7Sg
rnOWyD0VIDnKj9GeT/zBfHzr4AWA1Q+WykjeITyWv/PzuUj+PtlZcvNIRzPK
SHyhjl0COHj7m8TT3yQvP/6JB6WRvy/6NxyrUGnBmx9lWKGXAdxSDGsuCEle
SlZkR6YT/S4nSGjVk7xcoR2KzQDYvNjxeopSC8ZH2K5OvAJw4WzbifXvm/F/
fG2aNg==
       "]]},
     Annotation[#, "Charting`Private`Tag$7094#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10.010500473244898`, -1.026216718355573*^-10},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[CapitalDelta]a(num, an)\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox["\"\[Eta]/L\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[FontSize -> 16],
  FrameTicks->{{True, True}, {True, True}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Opacity[0.2`16.], 
    Dashing[{Small, Small}]],
  ImagePadding->All,
  ImageSize->900,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"FLRWSolver\"", Bold, FontSize -> 16, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814016971214382*^9, 3.814017124922833*^9, 3.814017255854446*^9, {
   3.814017350905315*^9, 3.814017370521523*^9}, 3.814019119084016*^9, 
   3.814022827689561*^9, 3.8142566547747583`*^9, 3.814284831364387*^9, 
   3.8142848622001877`*^9, 3.814285639921638*^9, {3.8142857085770607`*^9, 
   3.8142857220691843`*^9}, {3.814285787477491*^9, 3.81428580458379*^9}, 
   3.8143353835844717`*^9, 3.814339141699789*^9, 3.814339364881516*^9, {
   3.814339397675609*^9, 3.8143394083248043`*^9}, 3.814339488765811*^9, 
   3.81433952580026*^9, 3.8143395897136908`*^9, 3.814339673583147*^9, 
   3.814339718466954*^9, 3.8143398419454193`*^9, 3.814343835411188*^9, 
   3.814349781674384*^9, 3.8147110549994993`*^9, 3.814711153103609*^9, 
   3.814711227291231*^9, 3.814711262013852*^9, 3.814711296693694*^9, 
   3.814775365010549*^9, 3.816512578837853*^9, 3.816512638583687*^9, {
   3.816591757564756*^9, 3.8165918039038486`*^9}, {3.816591863578561*^9, 
   3.816591876453711*^9}, 3.816607277193906*^9, {3.8167568457053337`*^9, 
   3.816756859592169*^9}, 3.816756916995171*^9, {3.816756960118352*^9, 
   3.816757013192328*^9}, 3.8167570675097017`*^9, 3.8167685745453463`*^9, 
   3.8169483600914927`*^9, 3.8233281749156713`*^9, 3.82366475326687*^9, 
   3.823672258227293*^9, 3.823954657579405*^9, 3.823962032994121*^9, 
   3.8244609421989927`*^9, 3.824782327084021*^9, 3.8247857471703453`*^9, 
   3.824791420487933*^9, 3.8248075688029337`*^9, 3.824873753797947*^9, 
   3.824874197099041*^9, 3.824875709120767*^9, 3.824914025929503*^9, 
   3.825231481775173*^9, 3.825479271335792*^9, 3.83145894955504*^9, 
   3.832503354775331*^9, 3.832503463630945*^9, 3.832554867521592*^9, 
   3.8325639549729958`*^9, 3.83257125816413*^9, 3.8325712997029247`*^9, {
   3.8325741890547667`*^9, 3.8325742095213327`*^9}, 3.832574253391927*^9, 
   3.8325742868558273`*^9, 3.8325894701372833`*^9, 3.83264503132052*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"e8dd3bb6-fb59-447f-98d8-9a6358f1c11e"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3c81t8Xt4nsvcfDY7RUZOTpOWSTMkJSRjbZe4+y9957RaItOSWlopT1
LUlToqhkr+r3/P76vO7rfs77nvO+7zOupKOPmTMNFRVVOQsV1f+/Uy+dO6io
FsjRA/1HI2xXuqODYmcD5BbIOyvDj1Sp+ZMEhMskZk4skHdp91vIqwTitZ6b
1jZhC2SFElvCsq4XGrsMZQ/WLJDXfpitcvf74leWuacwsEDWG4ln36vnjLFX
6alvLC6QafZ9f9GTb4VCVhJqssK/yfJyq2xNR86Rbmyr+5Ue/U1+ZZFBd83Y
BE1qT15i9fpN/kR1/Ky7dxDO6vl+is3/TVZNao0J6grC+B+pgsvdv8l7Jtb+
y761G0XzGkxdp3+TE6JSv9fwmmOnak/KBOsi+dibeo7DIr4ks/cTD44dWiTH
9Ym/7owMwPmElY2es4vkBR+pSXlDPUyU5ziglLRIfjcZvM3r4E+SeKng0dS+
SNZRfpBaa6qJXYE6tULji2TrgznDNzeOoYWQ/UQG1RKZsTVNo/KOFf66H85F
Lb9EZhiYn1A87IOpzgWGgaZL5MYPzq9tnW1I0iwd8TNhS+Th4yq/LB1C8V7H
QJdN7RI5LSpwnLvRimRtOb04OLBEjs85cmPltAdpceufgubSEtnnWmFV8rYf
Kb1G6NwN4WVyP1GXiXTXCol6ymWy2stkvud61+i2zEkP5o+PlnotkxnteLJo
U5zQNteDha1gmXyf/40Dm6gZrqpcPBqHy+T3B/RNf5j7YPa7qojl6WXyk97j
p9on9VAhoeu6K9sKuaVUvmJrpwc+kvtvbuLQCvn+YttMYHEQnn3xi2Bit0J2
OOI5HpXth+sBzLYPklbIxK8pemuKYZgnKJOv1LFCni5fslNQ08a998nPm8ZX
yMsdtLU9nlb41MmGTph6lbw8tMvyQ4kzOjIHaWTKr5KzzQe5WI3tSNvtWYHU
Zqtkv4DkFu9CVyw82XI5MHyVPPtSkC9BO5CkuPXoy0ztKvmjcFKpz2ML0kD1
B5HTz1bJSlydfuQjPiRn3U2LF0ur5NqSfeRhiTCkmufJ0BRZIz+wzWJ4IOlA
Ks3Z13dDe428OV0xQH8oAJVUDP/Inl8j13F/Uwiy88cXk07KZQVr5IeBnCSj
H7Qkt/iY82z31sirJvXq8R8sSDRypQ1xX9fItnVKczeO+JHKB2+8W2ZbJyvR
jhJizNxQJeAlr5vKOnlD56DrO8ZwHBH4fuyt3Tp5xG1H+yzRDr3u0SWaJK+T
2W4e//Rb2xkZnMTvPehYJ2sE5hmV5hph9Q71VaU36+Rn1AdVHSWBpN5usbeZ
eoPcarTK9IrsjWMWPi7CChtkB62/GfeprUnemymVmWYb5DubUu4Xfjnhjur6
V9QRG+Rvz7P1dW64kup17rMF1W2QyTa9LBUf7fDI3Bvd2Wcb5H8SBQqJLKak
8ezl6NPLG+Ra51Mqz10Pof8h9tsvRDbJk63f/Yv0zLH+Sc5Ks/4mOaBg9zit
vgXpP2sepYTATXLPneVcY04vEsP3Qv8z1Zvk/hOP3Ei/HVE1QvCqyvNNMv8/
O9k5Hwl031n+i3N9k7z4TOSEfNl+UmmF2N55whbZIlBop+I+F9LzvTVej49v
kTciaB4f2XYl/blPaK2O2CInH1pwCxbVwr2mjd/Cm7bIfdPnpLmPW5DsP8vJ
nRzdItPc+trpleSDOQGtLvv+bZHndjEu3/JxIfXS7W3YsWubPK17VzLVPgCX
Czqmpiy3yWcSZkN/yp1BGdmDUvfit8m+1SvEplf2aNl50774yjbZ5IS67tJF
d1KygWqV/8Q2uZfDZ5+Bqw2pa6LrnTHDHzLNQ5P9LCrepDlPkojsgT9k9Ssf
bv6y2osif+7bUJ/9Q16+TVfOFmWFJplaJW9T/pCvafSuGrcEY4x43+ubN/+Q
9TT/czV85YcdHXp82Z/+kN9vpjpPLbqQPmsOWHiw/iW3ZtG+O5qsjdyjxnna
an/JJ55NqK2qHkZtp5fDYs5/yfUvJh05nkdj8Iopx0b2X/KEpu3+yymx2JQ4
ZjLa/Zf8SeSm8SKVDmmc3yqjbfYvOf/2r1N3J0KR+dKbZ0k8/8i5VRoc8sf8
8bC6LbMj/CN//d2bJproSPJ69l5fw+sf+a19W9XYc3tSpa1DEl/xP7KWL56y
U3LBoR9TfQsP/5H5O2LXaFpdSdQxLnTPfv0jX9VNSv2a70ASTA6sGWGlgo3d
qY3DFjF4behmz30CFQh3frNxdvMkGQqufbisRgWaIxxZ5m/9cMpB9V/JcSpg
T+8Uk9T2w8iWMLEkZyp4e1z10KqcPYlnqYsUGEEF8gz7zjPuCMW2w9u2DjlU
kEUbvHxJxouke4EUadJEBeUPjw0KWQTj++fRZYeRCqymhyPeWQeQQnh7uuRG
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
w92ixh29+D8cNKHo
       "]]},
     Annotation[#, "Charting`Private`Tag$7225#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.000000657132653, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[CapitalDelta]a(num, an)\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox["\"\[Eta]/L\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[FontSize -> 16],
  FrameTicks->{{True, True}, {True, True}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Opacity[0.2`16.], 
    Dashing[{Small, Small}]],
  ImagePadding->All,
  ImageSize->900,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"FLRWSolver: Full range\"", Bold, FontSize -> 16, StripOnInput -> 
     False], TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814016971214382*^9, 3.814017124922833*^9, 3.814017255854446*^9, {
   3.814017350905315*^9, 3.814017370521523*^9}, 3.814019119084016*^9, 
   3.814022827689561*^9, 3.8142566547747583`*^9, 3.814284831364387*^9, 
   3.8142848622001877`*^9, 3.814285639921638*^9, {3.8142857085770607`*^9, 
   3.8142857220691843`*^9}, {3.814285787477491*^9, 3.81428580458379*^9}, 
   3.8143353835844717`*^9, 3.814339141699789*^9, 3.814339364881516*^9, {
   3.814339397675609*^9, 3.8143394083248043`*^9}, 3.814339488765811*^9, 
   3.81433952580026*^9, 3.8143395897136908`*^9, 3.814339673583147*^9, 
   3.814339718466954*^9, 3.8143398419454193`*^9, 3.814343835411188*^9, 
   3.814349781674384*^9, 3.8147110549994993`*^9, 3.814711153103609*^9, 
   3.814711227291231*^9, 3.814711262013852*^9, 3.814711296693694*^9, 
   3.814775365010549*^9, 3.816512578837853*^9, 3.816512638583687*^9, {
   3.816591757564756*^9, 3.8165918039038486`*^9}, {3.816591863578561*^9, 
   3.816591876453711*^9}, 3.816607277193906*^9, {3.8167568457053337`*^9, 
   3.816756859592169*^9}, 3.816756916995171*^9, {3.816756960118352*^9, 
   3.816757013192328*^9}, 3.8167570675097017`*^9, 3.8167685745453463`*^9, 
   3.8169483600914927`*^9, 3.8233281749156713`*^9, 3.82366475326687*^9, 
   3.823672258227293*^9, 3.823954657579405*^9, 3.823962032994121*^9, 
   3.8244609421989927`*^9, 3.824782327084021*^9, 3.8247857471703453`*^9, 
   3.824791420487933*^9, 3.8248075688029337`*^9, 3.824873753797947*^9, 
   3.824874197099041*^9, 3.824875709120767*^9, 3.824914025929503*^9, 
   3.825231481775173*^9, 3.825479271335792*^9, 3.83145894955504*^9, 
   3.832503354775331*^9, 3.832503463630945*^9, 3.832554867521592*^9, 
   3.8325639549729958`*^9, 3.83257125816413*^9, 3.8325712997029247`*^9, {
   3.8325741890547667`*^9, 3.8325742095213327`*^9}, 3.832574253391927*^9, 
   3.8325742868558273`*^9, 3.8325894701372833`*^9, 3.832645031425756*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"0b5c7f23-6e8e-4c0e-800c-1b93a4d0508a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
mA/rXkfr9Gym46sGqZ7/xNNB917ao8tIx2MGEYyKN7FgnJN/gLaNji/6yp1W
K2fC/qDKL92GdJxNuWOlviEbnE7WeXoZ0bFKiOp8nZsIHqYPRdbupiPDpTWE
NMMHX/VnMe176KhZvOXuxTcJEK7wRsVjLx1bYzNTvHgxkDL75frKA3RkLfPK
0F0QDfnvvm9utqHju5Eqy+m5TLjRPNd+8hBhv+pozPnrOdBUILF/mSMdJ7/N
/PtzOAe6wuQ+1zkT+IoGad7X8IXXbqvPOp2k4xGVyddOFukwbMGYL+tGxwx2
+Bc2MX9MaWlE3/KgY1vdA9s95+JBZBWutj9Hx59FNXh+hz8snmdUKn6Bjonn
cqLZmzNA+aPlpgofOpYtTZa1cUsCZpt9234/OgqdOCzcwBSAVumJfcKBhD3m
OMYU80E/2vNjUTAd2d8LX7/nJcCes1c8zMPpuM34UoRfky/Y7Q+bNxtFxys2
bZ83LkuHk5AYmRNHR/o+V1y7OA281mSt2pVEx5Bt3rXNv+IhULS0+GcqHT9G
ThwwK8+E2KFb2hmZdLyMI9ObW6OB39nUapBN2M8zk9x/WwABK1/XQz4dKw/P
O7vDKxKOH/t5U72Yjmf/9ddU66bB7lsypcwyOpaUlSomNhP7rCgtZ20VHdtZ
rAKlqwJQNNdLVbxFx5bQtAAH4WyY4x+IWXSXjtHcQ5KnDyXDhzGP4AUNdHQ7
4qfhcDUBHm4O951romN33tspiI+F0pC8cz9b6PhXaI1KoXI8xPQ2uI62E/oU
jjeOJ2fCOcorxw+P6RgW/On0s/u5cPDM5MG+pwSfrbf/yC/yA70mKYsnL+n4
n/r+HqeQDKAsIhs97KNj6IPT5brEviVlq7Ol4Q0d+3+sWjkYFgUTxfu0q/+j
o7+zpTIo5sOL327c0k90/PTv8LWnf9LgjmEINWeYjqXnal77DKdCZny2cuoY
HTlT9nplngng/6F2WcwkHa1O5Zm+nc6AY7yX0sG/6LiAnntb9GE4mFwen+87
Q8dNe89fb6cKYH2n+B/POTp2ZuysOxgSCQor1066CDPQM7/4z5P8cPjrvGnI
QYyBGy32bWw3DoD/qi3eWUsysGXri9IHOcnQKuLas0eGgRkbkrONGgKhZM+1
xzuWMPC/v5bTdZ+jIJrPf4DyDEwa6XlYeiYMPMdqajVXMPCBsbR01EA2WG9+
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
JInoz+cn4/1LsuB/fPv7Tg==
       "]]},
     Annotation[#, "Charting`Private`Tag$7278#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10.010500473244898`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->900,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814016971214382*^9, 3.814017124922833*^9, 3.814017255854446*^9, {
   3.814017350905315*^9, 3.814017370521523*^9}, 3.814019119084016*^9, 
   3.814022827689561*^9, 3.8142566547747583`*^9, 3.814284831364387*^9, 
   3.8142848622001877`*^9, 3.814285639921638*^9, {3.8142857085770607`*^9, 
   3.8142857220691843`*^9}, {3.814285787477491*^9, 3.81428580458379*^9}, 
   3.8143353835844717`*^9, 3.814339141699789*^9, 3.814339364881516*^9, {
   3.814339397675609*^9, 3.8143394083248043`*^9}, 3.814339488765811*^9, 
   3.81433952580026*^9, 3.8143395897136908`*^9, 3.814339673583147*^9, 
   3.814339718466954*^9, 3.8143398419454193`*^9, 3.814343835411188*^9, 
   3.814349781674384*^9, 3.8147110549994993`*^9, 3.814711153103609*^9, 
   3.814711227291231*^9, 3.814711262013852*^9, 3.814711296693694*^9, 
   3.814775365010549*^9, 3.816512578837853*^9, 3.816512638583687*^9, {
   3.816591757564756*^9, 3.8165918039038486`*^9}, {3.816591863578561*^9, 
   3.816591876453711*^9}, 3.816607277193906*^9, {3.8167568457053337`*^9, 
   3.816756859592169*^9}, 3.816756916995171*^9, {3.816756960118352*^9, 
   3.816757013192328*^9}, 3.8167570675097017`*^9, 3.8167685745453463`*^9, 
   3.8169483600914927`*^9, 3.8233281749156713`*^9, 3.82366475326687*^9, 
   3.823672258227293*^9, 3.823954657579405*^9, 3.823962032994121*^9, 
   3.8244609421989927`*^9, 3.824782327084021*^9, 3.8247857471703453`*^9, 
   3.824791420487933*^9, 3.8248075688029337`*^9, 3.824873753797947*^9, 
   3.824874197099041*^9, 3.824875709120767*^9, 3.824914025929503*^9, 
   3.825231481775173*^9, 3.825479271335792*^9, 3.83145894955504*^9, 
   3.832503354775331*^9, 3.832503463630945*^9, 3.832554867521592*^9, 
   3.8325639549729958`*^9, 3.83257125816413*^9, 3.8325712997029247`*^9, {
   3.8325741890547667`*^9, 3.8325742095213327`*^9}, 3.832574253391927*^9, 
   3.8325742868558273`*^9, 3.8325894701372833`*^9, 3.8326450316539907`*^9},
 CellLabel->"Out[54]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvWnQHdWZ53lb7/tKbOWlXGVXuWqqamp6Jrp66sNETUfHdEd/momYieiZ
jon51F9mXtll7MamMAbcxguYVcKAEEthwCyWKMQiAWIRQmKRQQIkWUK7kARI
ICG0C72AhFaknPPPPP+T/8w8mXkyb16BHZUR10b3vffmyXOe5/87y3Oe85++
+cPzvn3BN3/43W9986/+j4u/+YPzvvutS/7qf7/wYvPW0L/o9Yau7fXG/dFf
9fDfUa/H/8ld1+F/er1/H//fUPSd73yHf8l/9D/+8yf/+ZNtP/lo/L9nRj/7
2c+iAwcOuK+sWbMmuvLKK+P377nnnuj48eO9B+33P/nkk+i8886Lzj//fPOv
Cy64oDc+Onr0aHTq1Klo5syZ0eWXXx5dccUV0caNGx+yX3n00Ufjr+DD4+L/
nRA98cQTpbdKvnd2tGvXruiGG26I/37jjTdGO3bsiL/juVXvimZPiae46KKL
4lvgeuihh6LZs2f3WORZs2ZFv/71r3Er8y+8Nz5asmRJdPvtt0cnT56Mdu7c
Gf3kJz+JTpw4wYr54IMPoh//+MfRtm3b3FdKbpPc5ZzoF7/4RfT666/Hf1q/
fn102WWXxf9dcqef1z3jSOYZx8bGokWLFpkqTz6/e/fuuMrwr6TQw3FV3n//
/dEvf/nL6NixY+NsudESK1ascAaB2t+yZQtr5913341++tOfosw9fsXezX3F
3i35yhnR0qVL45vx+sEPfhB99NFHvBPLaG8U/+vyuscd0sc1D5M+JioM/3rY
Fu7pp5+Orr/++thQ+Txvv/0273r33XfzcZ0F7NmzJ/r5z3+O9jH1WvzpR2yN
b9iwIbr00kvjtrI/2/P9bu3TZA3UNHc0derU6L333os+/fTTuJFmzJjRm2lv
+/jjj0fTpk3Tp8ncdvny5VIDZ8a/i2LCEst+O/nshOjIkSOxoaCN8Jm6e1Q8
2kzbNObno02bNvERx9mngBHdeuut8f/fd9990eHDh3u0mGXLlsUlxWVME7oR
WxAsxtxZLWbz5s3xv2bE/3tO3HbWiuLLuFw0b968+L89t+QdcTfaKCwGhcZV
cceAR9+6dWt09dVXR9/73vfSR08qcN26dWJL50Q33XQTKzUuv7W12HngoSgc
9AA6YeztQdu2b731VnTttddCO2MzvO2226LXXnst/qq9jS3NOdGUKVOi1atX
x3976aWX4meruEWF5Myy78FaoNDm2Xps1+effz5+XrQZXkZOnarDiVCF+M6k
SZNcQ+HOjzzySHxnqPo777xjLfKMaO7cubFF4gUNZSvZ+yRQSVSbxZthb4eH
gc5eddVV8cPv37+/9HZXlD9tlL0GCOp/Zz/5wUdH4k+b/89/8v9MPvk3yb/i
n+T//H/4n3+R/aVVb+6J/77yzT29/9ZTDt97f/XPn/vcf+5r8f+6Zl791j83
8+/j58qaedPu3hOej/vemx34uavyt9ob/3mFudUf2feefmVzdOntL0cnPj3Z
u2uwt1/zdvH2M+a/EY1eNTc6fuJkXhX/jf/br2/c3fsD+96hw8ejAx8fif/F
/uJNDy2Lf/HY8U9rfnGt+8Vd7hd/9cTq6NuT56e/OA4/Zv5w+OgJ91y5n/27
3M9uLv7sXbM7+9nlG9Kf/dakefGz9vGz6zbvy/5s/BMjLX9sS6Mf+0v7NRjB
7Y+u9N3gS/4bLHuj0Q1+8U9Lox/e9lLADdbbG/z2jZ1NbvBf//Fl1xDVN3jj
nf3uBhyHPPTcBvf86a2qbzqO95Pry/W3unHGsuiSW18a1K2Wrk9v9eNfLnR1
0uGtNrybu1X8nfHd32DJ+h2DucFG3mDdoG6w9YP4BosHdYNNp+0Gawd1g23J
DV5b+77cYMj+Fb949Pin8b+K9ztyrPn93tx2oOJ+37vhBScA1fc7034DKP/7
a+eh99D7SsMyvLpGy4BprSPH3RBMipL8eSQ6lftZqHtV2TA+QWHQowkt21vv
5co2ZG++d+yT+PP4BbyMjPdcwU5li/byyvcqC7bg9W3xbzz/23f7LdhQtPeA
K5hhb1Kgk7kCPbXo7Z7PSlmgX89ZF5fgnifXNC7QK6u3Zwv0zo4PCwX69GS2
QFfe+1pQge5uUKC3tycFWpQvEHosdQW6qqZA055pXqDN28f8BUJfp7ZA9w2w
QKtyBTIeEuuMFsh0xFsXiH3ge55aE10w5cX4X+eEFvL9pJDmlS3kd657Lv6x
qkJe8+vFFYUcdoXEy2g6de+Ox1bFP9+knFtsORfmK/M7180vlNMMK1qX85+e
Xc9yfn/qAteVaVpOiFJczrMCygQlrirT/XOTMsWfT/unVSUZiYUBJYH8XXbX
K9Ezr23pDWmJjp34NPP9a6eFl4gUa1WiF5ZtjT/8wLw3ciU6ni3RpGlLKks0
vasSGTTEH7754eXZEh3Nl2j6QEs0FL27MynRM69u7qWdBRZn1ouboonmJ8YO
Jisgk6U4hwZZnDne4jz8/Ib4J8aSwXg0+f6lp6k4r/iKY2oj/omd+w+FFWdu
n8XZuuujuDgO+PFPnGNvCf3HdZ0W4/AAirEtqBhmNNyuGObzAsveWaGl2p2U
6smFvlKh+9B3qdJ+V+NSPbHwLU+p0MvCdf0Dv21dKulaSKn+3N4f+LG2KFMG
H2UL+d7uj5NCvlxVyBukkAcPHysU0lCjZSHhSD+6/eXqQm7fkxRydmAhR7SQ
0Z2zV8WWMaG2sBMK3Y5T9vvoC6eDQy08JmbCCv9SZeFn+Av/D1NeiG555PWg
wue5D6O1TM8XPme+H/uL/PhLb3qKjFEerhtnLHNF/viTtMj4ZeA0pMh5DMNY
8Ll7n1pj1waH48m7376xkx8JfYj39x6MH+Kx31Q+xIPLnGXLQyTv1T9BEdum
q5N8mcXHl9Cf6bT4mF3ANaXf4ssodiDFf3TBJl/xtybFv+mhgOKbbnJp8aWL
nS1+MlKJ/dd+b1yT4u/YlxTf9IIGWXzp1w2k+DO9xUc3HUsTbYpPs3ht7fvu
bQOZZByTDD34tn0AMafQ4u9k8V/Y6Cn+z+5aFH87yHVLin/brBXubSO3LD7G
KZninzqVaQ9MONi/hzyG6RziMR7xPsZP70weQ134o0PtH8NUQehjfOPqZ4uP
YWecQLsN7+4Xno35n+rh5/WpvhD/xHg0irv1/g8Px0A9Ze9Q9TCcjZMaiC8s
snEW0T5K5tHMo4wrPAdGxvhAMl2XFBvRERClKMPqvdln22Wf7aHnNniebYo8
G16o/ZOnTgU/24eHjmae7ah7tnj4Hk/uybP1hgoPht4C/mo82D0YGowrf39p
3wNGMfQ1mJCHXZp92N0fVD0sVzn1Yc3PBj8sx43tH3b+knfivybzU1Fs2XxY
PCB6KcZcev+N/T61x/QX6h/6wZKHXp55aEyAm58Nf2g7OuV15FjAQ/+h/c+V
b+5BVy+O35lQWRH8A26HP6B366uF/2Tfw+LZ/KXvxP9KC/fjfM18EtcMvpiv
mSGtGadWx447mXGdvQfmvVFaO3DBbO2cCK8dlB9/MGwIrJ0DtnYw/mLtALgs
Mmvn13PWuluW1s6eA1W1M/XhYu2gZ9Vl7bBr7K2dOa9sjv9gfCKwduA9+MMV
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
tKToSpLAAytxzpVmd+ZKv3pitYIm70oovNeVuCV0QK6EzXo2A7076guxZzBP
/Ot/se8xoNr8WsG9EFz77+0jo3ERX2HvmGYh+oNqDzua87Cd+w629TD6N8Ik
sLsCP/XHOa8z/9/Q68Y7r8NvYjEOM66/fWPnl+1X9NSqlg4o57WrA8rOfOeA
ljcZw9buI20DgyU7wOp90b7HLMqpA4Q7HroGXTqe5HFq6ng4bSDneDYsH96M
qjdQ5HZwncUzP17liqVUu3Za8uwT27qiVkrRFW0y9IwrwpXsDiHnihwBGgvx
uiKND02PJn17+wHXs0MXEb1JJEr7V7ZqJAC4kcvi97VN3t8b4LK7Kl2WwcQ4
nJ4uy45nxmV3NXdZphkzoMy7LDjKWlMnKnFZZI+jy8op1ahcPibyvPBXaNM+
90Rb2HixgbrnrJbuKXn+MHLrk4vWPZmk/c1tB3zuaeSulXuye43dpCXuqTH4
jdxznHuQXpIU2R7dkzgla1BmjXrs5/k8E7WK955c+HYvvxb+8PMbnGdKcExf
nrl9z8dez+xlt7f/if6h2lF50gWyb3XhqHJGnOtvmtqho2qHV5ND2LSn7nYN
nfdKv/PiuNQQ50Wt41AGdV45eDLnvO9kHFA2XjrnlX5TY+ed53FeSQqLzbmt
nJcNDqRiiJGdU8g5dByzHRUc2vQxfQ6dNOSEOFhtg00qgKvUwZlQAjlp+nZw
zv/vHfskHjeigSO/y8f/9e/UOdB6vE2Vo/OcFayA0W4p21iM/5fWejFkRw+K
lxk4JE1T7vLn5l3+RKYRTae21OUliKuByyPeG7+MRYYql99a5fIv+V2eyweT
719Kl9dTI1l1aCcOVpzLv93e5Y9/+gd0b/mVr34OXVkSiKsr45zfOld23WQ2
JBMwGVEtuvKj9lyFp1/Z7HNl00etcmVso9CcxqWuTGMy/d3uXJmwwXaDKNSV
DwW6MgOTMV6jPY4lMxvxL9GV0fODufNq7srsRbDOzVizzJVPfgau/GC5KyMR
wbwGrnz9Z+3KtrDOHQ95XJmjvjpXLiRz7SUzztn7Dse5qnmZPkxfrswEVGjI
gitzSmn63HXOlWVC6taZla7M8mCMhKvUlS9Nsk/ESd07c2V6G8Y8UbArHw5z
Zc1AV+XKSHCjoewBrvztalc2j1Xmyjpz0MCVGb5U58qaX6qKytxSqa58XerK
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
dKoncZOM2jPiMqLaT7B2vDOv8G+X9v/DJJ7lTU6fizqVeJxFi7/hKL+8xN/7
1Joaiad3wAnhNYiCSK1ERd6uCGRFfmF3Is/jLUNEfiS6/fbbo/PPPz+64IIL
4teqVatcKDrF3Ai9C4R57bXXXPAipvvjOy1dOowPmp976600FNPqvhOJ5557
Lh5lIIiRfufTfQ5xVLsx/W1B2PubKo0/UK3x1EU9HoyDC+VDRuA1EqRcbEd0
PaIg8JwWSBt4WEUfQ4mMQW9OV+3U1XQpIVDj3UN9TX8IIyZ+6Uz9g1fyD1dL
/hnWmHB4EKXix4ns97rQfU7CIVlhpe5bicN7qZxRQrFsj8M29MkqWfB6Nyzg
CAQpF3E1YoGm5KhmAR/p7e0H4nlBZIJhlwaX5JinvM3yIEGzDzdCgnkWZq2h
UWMNO46zagEE7eTcP7cMCHoCUwgQ0P6jyVgjfh9WWgYEzsTiUATWGPJZNwMC
J97Mrw0ECHZG5DvXZYCAw9GZssjaPDSvAgh/a28svXXn68uWLYvXb9Fjp8V6
lduTVwLKbVupsXLrPP14qeiCch/oU7k1hq+pcpsWyFie5lyOqpUbW4zZDDnl
PlGq3IyzjPLKzSN/oqhauflAqtzQRj5QXrnnepT7Ho9yG9UtKPce2zL4HJXb
/L2g3DOdcq9oqNzTVLnvaq/ciJ/AX5GDjsrNdYa8cq8PUW6JrbWrbMkuMcxD
RlF6jirPmoHNFdUcAoFpg1TNk1lDUXOYlgvB8Em6BmU2lnSbioz3Atiykm67
1p1Jun/ffbmks+Ew9Y2rStI5p4oGbN/HRzcn0dz5HknHIlFfki4roO4BjLVg
vS23J7NG0v9He+MVK1bEYTjojDMGC5HpvGbNmoWp+0pp96UMgrRb26qU9j2B
0q6ZeyjtooLtpJ27xnzSzj5sqLTrTvqoWto1CLYg7VIhg5H2lSXSjvFvV9KO
fibeQ+RolbTTIrL7z//c/Vd+J5BP0H/TQtAv7lrQJezLCTr6iDZ4voGgYxY8
SdSY/LJM2bj3NDMLpZHifrOIO6c4ENRbKe4ziuJ+sk7cd+TEfU2YuJuqy4k7
Vw0RlYNNITRooilbV+FiXzWhwyNmEBTaXuw1iLso9t/vWOy5pZXzPE7o1+3o
8Z66My6n9FhsxYyNKv1ll10Wh/PgmjNnDvaGViq9L5cllN6eelOp9DRG/Otf
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
IGlS8U4HmDaU3ktNvJjuTudd66hpKqKemlayeJaTO6u6eoDpqPlclpo4fquM
mvjbQKk5TzYDO2qmYxhnRZqytYqa2gYMd+qXmnJ6lSsPT0RHJuECNR/vgpq9
ZDUf82Sr3tzjjsxQYBpIsaE1uUQdMF8OBOZ4BWYcYw35MFrF8mlGMwZ97suB
E1QUcOIYe148Bs8mrq0EJ0OKcDUDp+lGZ3ohEm7tWlMT1/E9PdzYUXNXd9SU
LDjxK52F9VDz1KlOqIl1qzw1OfpkORY2oOb01tRE8IH1y5SaxnS016v+hhkx
q5PuPd0nWEXSVW+GkfS6JiTV2ABWuURyeUh60kNS8Ia1Vk/S/OnCdFPOhKN5
CyRNLMFOrWf2iGZdtxyp9FPj/TpJmT5pFIrUm6uQqtvwidR8dlhmISxDKocV
mEiQq4qmXMXk+U9jzWj6UI6mpjSOpvmIxSCaaiuwZTBtkS33UDyTnq2uJF8/
P1dFU55IrKboo6nmOyJNWT6j5B3RdFgD7rBympdBAhXhVX0BFdNDsEfTt64H
6jtSbVEBqJLw4IlwoEpDxvsg8efvXDe/EqhjWaBig6PLZDkhnprh1QSoswSo
P7pdgJoObI2T+YD68sr3VEVgyDhIi7aqLGUdN+WmKaVk8nL4hOrgXEvax3fT
rK3xq3Lg2RFCMb4gQvUYM5ZhYTp5XUvPuY6eXCGN2tNzfwU9EWZhZyDde5pM
1TeW/V/tez6iruyDqHqPPokKOc8SdUSJGl+Y1spD9fsCVaxbQkuiPFRpmBiD
plDdk4HqqvZQ5dS58Sw+rAKwBVS9s7uqKHxPoOqqQZMtMYePD6xYu5CrCqx8
HAxNcAWClQHXulmfPzlQoB7yABUHFvFzVUDVrOhsTk0XRKBqQC/6MlhDdEC9
9zXCTYAaf/+U+HIoUzX9lOkrhDBVuhTxS5nKVTHEzmcYj9kIu+bj4CLJM9Gr
ZzPrdp46pi4sMhVjwBqmMhu0MdMqpuoy7aiFhDCV6bVwkalYa4iEqU/XMPXS
RkwVauCylKhk6tamTB3OM5X1qrkBv3vD80P2Noam7u08Tc1YpguY4s5VMJWu
xuBgeswDU6yXf9IAprJxwA1FL/eBUxhXB0679j0ocNoVgFJwGq2tBCeix2wG
jSw45aRNV2YzBFf7tm7aEJzJ52x/xPmybOSLyQZ7Mk9PfakLsH1xk5uRZwbV
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
UbrtlL2aLxYZSqXbtH25dO+xZnZGfFDXllS6ne5CV41+04V1LpmWJJnOs7I9
5pHte7OyjckYmgLdX9PQ1sn2qlS2eeYInkRlm0cAq2yL8ccv1DEuhN862Z7W
XLa5n6FEtl/JyTZSLFG2eQuemGYsrVel2Vh9tDP2lZoN0S1q9tpQzdYjAlpo
9nc9mq1xpJonGleAZttFgMaaLXm10jVUT9BNmWaPg2SPl4IUlNqotIYaZZV6
eUGpNYlfU6XGvUOUWpclqdRTapTaWMfAlXpKUalndavU35o0z0WC+JRapxts
ALLLsC2xsWVKzVy+PNoP9EfjGbelUkMXeXHlKqvU2eXlP7AVt6JCpi8SmWau
DXAFk9gq0xIBQTNS7epCpnVD7NNZmb63QqY1I3ydTMOjymSaj6DzAXxUXQ6o
lGn775xM25i1jExb9XC35SAhK9PFWRE8rp1/qZRpbJ1jkGSlTN/Sl0zrzluV
6RvCZPqewcu0JObtOtQlI9jjoKvUGTUyvCDXS9bvcIsakvqTSo21s7zdyWjQ
KTUS/NqdqI2VWrNG+JV6HZX6xo6V+mv28y1VeUqJKmPlP0SV9QBMqrLsU8Gn
qMpq0vZPqSq/mKiy8UCqMjVEbLQTVeZkw0SrygiBg6OPpaq8waPK+p6qsg1u
zKjylQGqLGcJqCoDXfZPTpUXiiqjNzlaoco3qyofz6ryFss5VWWVwipV1qwP
TVXZOJZVQ1dcPWR1nKcoVGVURZAqby6qMr6bV+WL/KqsUfMtVJnHkaZ3z054
nAZV5ne9q4+PuCNnQxWYOWbZZYZglnWZsRSX32mr6w5NhRhZi0OEWGOuKMS6
594nxNOeWfdn9qOatp+3DhViaQ1XHXVCPKc7IWYogwrxtnRVzAmx1EYqxGd4
hZi5bAzBebARp0i7E+ARnwA7WxjzzD77Oo3ahapT4rxT7xMlpr3r8I72hsNr
W8nw40UZ5lkTrG5Mm8Qy/HJTGR7xyXCPoef3pgeqcY3PLYzA2C/KabBuvOY9
53rWCzFxPDFAg3Emb4gG64kOqsFvh2pwmuKzRoO1Z8wkI9Tg9Vv2fc412B5B
wl6wkcqyXjC62IvXuV6w7t2uEl9ZynYKiN6txVWN+KbqSfHV/ck+8Z2eiq+u
rHcqvguK4gvb19W4JuI7OUx8dfNUN+LLsIKm4isnlleLr624KvHVZSB+bvVb
qZdmxPdAd+KLgJG8+MIuveL7TCq+d1J8H14u4nsi/g791Ce+cmSne06NV/eJ
r90g6u3OG1XigYHoo3DiuEp3n5GBK3UX04YTc1Xdle6+sno7dXdNO91libKH
942W6+5Tie7OfGHj51x37eq2cxvIpBywYr9tf94or92M797TrQlt5Ncuj1Ym
ANDOK+VXDhD0yq+RdcovBUdvPSj5FVuKXzDNU2Hy++1A+dUIFcqvCFCw/NI0
00M9u5ZfiZzIyq+cKkD51X4uP6cJb6rkV7cstZFfbgCrkl/kaamTX4ROxfJr
19m4KKryK0E+6VKlbCNtKr/fuPpZyi+KzXhoFlP37/J2czzy69sS6pPfNf3J
rwK1hfxKYszfE/nFjKK5ZbD8crqJ7/EsslGRX03yxTY/mcbqZ8Jz8p+DuIRI
soLwbz339Umy+d1/bT/qk99Tg5LfU6dC5ZebMKrkd2ET+T2RL73L9/RIKr+M
de5SfuF/TeRXx6P8nJ5F3lh+x4ryq1uys/K7Tu6RlV+0wGig/CJBHi5qHlKq
Q/Jn18hvs95v9mBcbr5FmbkzvVJ7PRtRVHtp3JgIs8dQOmvElEdeZy9Me/MI
v0t1Ng30qdJZPQ+4UmcnlOqsUfc0ItUjsqdEZP/UvjcIQY1tk+YPuSuVUfOj
jFT09eurerGnPDKqGVL5OYTUhMioSjBlVBPdtJFRU0SbKdrJqGSOdtVBS9Mj
7yijmsRy1MroyayMMvx+NCejKNJpkFFOqTw4fwNllFmMmsvoroyMrnozK6Ma
r1sno9q/cdHoku5ZZXRPhzIKhDC6vUpGIR+QUbaWnkFwhv0eDmvAxZE70lkg
hvF0yCiswv62e96JHhn1beFWGWVa7aJkZidA+F0NjPz/uXvXYL2qO83vFOci
sNvunp52T3umk/RlMpNKpieZzExn0kmla2qSquTDTNVU5sN8SB2cxLjtrjaU
ARt3N+4yHiOMLO4GbAMt3EYYARIGSUbYCCQECBtdQFIjAZKNzEUXZCQbCSEE
58169l7P2s9ae+21197vPgc5b9XL5T3vZV/W8/zW5b/+/w5++QH7xVz+Ul80
TW8QW4zF7/a1xbmELSIuf+N23xZ13nMIW0TvNccWJf17ti0a2qdsER3r0BY/
FbHF37a3VHLFFE+0VvMdfS2QWVnUAjW2ImmBM15cw2xlgefYP3ONWq3PfGRs
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
Ui2E8j83Jv+ne8rffH+L/Bl13iZ/XdTiJdLglcHlj/aBjanm33X5s8IltSnx
KhhLarw7Hqsf3+uK1KE9Uf6Qn7nPY8sfSdpD+b8358u/viW4v/wff/aVpPx1
urQmf/N/lL9aEuUv8/gYclP+uvM5tmlc5c8dj7pLOSV/ziKkpG4OxZ0y1gNy
pO4vg9flqlK3s4LuN3QHEqWuNqFStyGXTuqSlCUt9eqWOqlrnBOlXg/znFFL
KJ74/iu//cOU1CU16kJKHQugGN2dOv1uIPVFoay5KzQma4PYXFlj55q5jmPL
GtFyGsoMWc8Fso5tlanLekplDWxyg2BXZZ8XUfbtmcqWVWaQ0yn7ynxlMzw3
BXaFZErZmMuaC5QNGnELVmzTklP2prqy785UtoZSppSNIge2ATpla8lRKvsa
UfZ/YV/TICSn4lqc5YyO5IsnxgOBismCYVRcNdZWFU+qiicq0QT65eViyilE
nUw6/bpYdCzhtOmXOUgvLDMnj61fzBjX9Gv/TP3G4kDb9Gt611n6lWBbfrXO
m4T6nRX9avpQ6tdufsnR77lj6FcPm/rVTN+8i1iPsquh7pR1Pp461yAA6lcD
8px+H87TrwYatOnXDgudfrXKjKffVf30K+toVr9bscd7vvSrfcih9cvs9qZx
R/Vr+rht+mUmUGywGEK/cF/dpgn9jgL9xlZT2vT75zdtpH7DEZMZcXTX79o8
/V5cLaCrfj8Z06/0DFW/DFjla+pe1O8h6TZ01u+tdf3WaynG9buiRb//zL6m
gUeVVvfVtKpZlZ1Wv/N0TasayEetfjOq1ZC1Na0yt9lvRb4mpVW9hQuhVVYO
xrJsrlY3VVrFHXFavX4YrWJ9o02rMZeua3Xa0ypc96Z7t7u/iYMHgp1RwRZP
RBwZwXKPVkynmlOTOv2cJMsxQ03qVA3590STXBWiJvXGU5OYHww1uTeiSdzE
UJMaHMrf1UBVpz/xAtWf7XtP/GFCa5oBbAitrQ/6tWj4S+7wtGY3fTit3ZKp
NZ2IcFpbV9caYuqH1Fr1e1Oc28vVGtvsuFrj6TIqw1xGd/et3qrDpOh0MbOv
6DTFN55P7njViQ4pkPRvmPz4xBUPUXQQWCg6zS1H0SGTPL/i+FvvtInupVB0
6+qi0zDPlOhwN+3ysxOdbtrl72pQF6/kXR1EZ8MEneh0QzlFd3Wm6LQX2TQl
NKDo/Pqo5T917WBo0WHMkBKdcXotyEDRla+drXelECCzTn/2hkKAg+lvY4b+
VkVajS0NlNbfykp/CAVCoSSnv53N+kO2vh760wy1x086/emqn+qPnTrqT6dL
qT+7CNyqPwQ+hfo7P6K/2JXUecmU/rDo21d/Gu+d0p9M3RZPiOGrd/yI+sMM
rY0bqvR3f3/96RTf0PrDTo1Qf5KxBI2Odw8TLHg8IPrbJoWn0FIYofDZGzYs
uP5iXaVKf1sa9Xez6C8sSJfiH4oqGmpRf1y/8PS3pq4/TSh/orv+lkX0Z5dh
fP29HNff0Qz9xXoSOqPYpr/jof621/WHAONQfxpgndJfOJa3+uO489aI1nQB
+5dAa4wPbNIaekUcNiPlZ6bWXrVJNmwlqqjWjIzatfZAZFq+q9bC4vYe6475
WtvRrjXdR0+tafSmp7VqbodtHgbNtkytaagdtaa7epNaeyeiNZnQ5O/Ghsq6
sUK1Zid3nNbQSmzyjBat/aimtQcjWtMQAWpNJnWLJ5ZjTbPoqjWNKeMp6dTZ
QvQrbdx18Txy7C0KBrjGgoTVm5ObFNwo5GazjF9ixi8iN4lkaZSbLRLZX26x
9e0Lc+S2qpLb/g5yw166VrlV2qDc1Hreevs0773u/eI8vgYuqAT5ms6FDinB
T0ckGAvsWd5BgnbXopPgxogE0QTCtcM2CfI8rOSK//vv7GtqTb9MuvvZz09O
a8vW+eUpqzwtdYNWyxI5n++uPASfHHrjRFR5iAdqVV4shnRelbevVXl666k8
LZyqylsZUd7ldeVpJ4vKuyWiPC0CQ+UhpULYYjGCt1G/lfKW1pUXi6HX2QZV
3t5QecYT+yoPK4Y5ysOuoaVWeQxTVOf6Bx3VqHUyeW46Mb0QapREt73UyBlk
VKvIUuOkU+Oo2NvqSXFnvhRj27OwUt4mRXNjKykebJbikUCKiFwUKTISvU2K
shMV65q89TdnSlGzo1KKOvEey1c3iBQjy6uxwZAu/v1LkaLdW+mkqJkpKEXc
2psCKarBUooaqc7zQCcilKKuxlGK2i9JSVGvAZsjp8uwUZPnC/jmStH8E3vC
GNVyTlyUXGfAjvNBRGnaNFOrY3JvXkR5R4MotUJwF1Hi5Pk3ZrnNFaW57SlR
apcxLsp3nShX1UWpUSwUh/Yafy3yWYpSd5xTlJrcTFf/3ghEqWz4xwkB6kQo
Bbh6gQSIgaQKUFcsKwFW4/CkAK+aFwHCPy+2y28tAjRW5gSI2FV2on5+/FSr
AKVUTiFAJiMfUoCY/GkVYCy70ZAClPDt4okCjC0CvCUiQIkXUwFqx5MC1C0t
FGAsTFWHlbFU0F0FqEMlCjA2VNKUaSpAu209LUBzG5lqggJcExPgyogAV1YC
1CQ6LOup8f/8LJcfYmJjlNIYYkM/Gh0HJ7aJcnINhzoq4sPLf/KnqDw02ku/
sYmjNYiP88snTr7TSXxou1zf+cuvz4/4UI0jKr5YCsKu4sNsRq74kD33U3Hx
/euI0EzfL1dobMjauLuL6jSPOCqqf8orJHFhuQL6L+1rGibwT1Kikhkziuqm
iKhuLkT1dF1UZc2TpKh0OpcxdLHstZmi+lUnoIeKw6oENOkmssuYzVE10aHS
MQN/Tzr1opsR6dgRM1alRDqXjSMdLJo56Xy7QTo6Vgmlc+1dw0tnjy8d5glp
ks6pSjo6+qJ0tEPzL+XoQ+noKvgQ0vlMTDqb9rpQMkpH0/5QOmpWlA6cjalR
KJ3VudJZVZfO3REe3R6Tjqw6Ujqx7PEdpYPZNPSDVTq8BchcVZMOylFg7DU3
N5chnSouAy2Pk03IkDmUdJ7f/0a7dOo5DScZiT2WdFiiT8d0ZzfJaf/PEKCX
LafTTk7aO4zJ6f+gdF7Okw4iHHOko2MVTzpvDiidTRHp1ArtlXONtkJ5JZ31
EemszZROpKJLpnR+y762r0kmkAgfc7aZp2Ty7Iu+TEhxIGw+ZHJlk0wQJMxy
IF1kgrRh/FsQnOLJRKOFmmSCeC6RCYIXM2Vya6ZMVBJdZaIBECmZYLX/aE0m
VZOjTLTz42Ty7bpMHojIRIofDyKTCyIyiRU+mg+ZjHrIhLaDNdRMmbzWJhND
OLfDljJBGzI9zOLlaf1QXRr+FvWzII6hdIEWalpfri4MoqkLnXI/L6EBTaqW
0oBGmVMD2na6akB7MaoBbmOnBnRcyxo4GKRdE7T3eyLtXZeM5rm9c+xXbkBx
jW86bO/FnmRvD0i9aHes0e8fvNHjD2z0mAzEA0b36aUPRxr99fPY6CV5cvHE
kEcb/UPpRm/Um2r02sBTjR7BsHYWPdnoz480ejRSLh6x0Wujco1+S73RXxlp
9GqEqUaPoKiw0etUHBu9woqNPlY2s2ejP7et0ZvjbG/0kg+maEK8gJiems9G
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
cS/GoRibqLLhyNL0B+xl0m1g5lJofsMcA8P6XNzApkIDOwsOlnIv3R2Zci9O
28XiPTSh3b+33yHphIsnXO537fuxtZir5b8pLmczJ7vbgBX/4+WddZWLc10O
MtwTcTnrYPb8pzXwrXhibyK7H5pAybnd3vl3OySCwiyQHjuO2wa1ObfjFu2e
bqeHTTUcbnA7bfRtbqe1YVrc7vDhw6P33nuPFmH+c3T11VePvvvd7xZu9+d/
/uej559/vjS8c7xPv/7664XRGUMcvf3226MvfvGLo5dffrk0pt6uh2lSTHMU
lS8D17v9fXU93CzES2FzEl0PCzjZrney1fWY2vaSr20Q15PU1GV6RH6MrzEk
HEVWYpmPmMlEEvkU8UlI68B1zVjXzQYEZjpf2XXT3OtohqZv1tX8JCitNL9X
KvNjUj01P81gkWN+WFKImZ+92e5u4LdgbE3mx/fpDPqkfF/NEPf2M0Qk36ch
alLFpCE+nmeIOl2dMkQucOqxxwyRgRvQrBii1vHkV6pJxg47ZYifDg3x+soQ
NTBap7yjhjiplubqKpw6dWr01a9+dXTBBReMdu3aVb487bnfxo0bR3feeWcp
U/M1DzzwwOjBBx8s/u83ejrgZFEym584276PZSMi9jdRpba2eqyS6tP+dA6c
m0okU1ej/QFtan/AIR4IGqH9WUQWzzb7O9FufxRSwv6Q+yzH/uopJxbG/rRY
Zob96dblvvYnyzaN9oeEP5797fftD4VX+9qffY/3Wsz+oEv+bsr+wrg11KGj
/d0ZsT/V+wfk2Playv40lzw/q/kGOQMQs0SsyuKBCRaeD/oatwSWeF7cEv90
Sf0rY5a4JmaJkmSlyRIvVkvcN7YlHjhwoOgMXn755aP77rsvZon333//aO3a
tc4SrUUuuCVqvvGoJWqPkD+ZY4kYXLZZoqihuMUpS8T/f/YGZ4laVYp3jsnn
Ptdsici01GiJyytLrKdJ8C0RKUt9S6yPhSXKL8MSy6hEG9VWPGGJ2KyFaDg2
+lxf/HhHX9TGlOuLXBGkL841+KKNBujsi/DZfr5YRljqseNa3rfhhSrYvjpd
Z437+luj1g7gZzUjGa3xz5bWfYzDMaxhpayR0xyYq+5jjbLPIWWNWNBU3X32
hg1DWOO0tROMmb/0pS+hpzh65513ivHzM888Mx2xSPQSQ4tcvnx5B4vU29zf
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
qBHPZRjxXIMR8+7i8iDAkd+L3hQ74K1GrFsIZwMj1nERL5Bm9Eoa8f66EeuC
lRvYi6udZf+SZc6X180ZF92OYKLmzF615qhya3Zi2JzBQq+BD9Oeczwb0aDq
2VITKuXZmr6yq2ez9iqvVoWXGS93Pes03752p/XsWHoTevHyiBfbVB1xL/7W
UwkvRo7dlBfz106dbvVi02CzvBh5ovXvmJ+75MaNZ1lpL/e9uHgLJvQpwM+I
GevUXt2MtbRlaMbXrajMWMeK/c24mnkw/OpqxkY0TWZ8+/ttxt/NM2OEVJzJ
ZoxgVoQ6OjM2d72DGb+rJ+KZsWZ44wXSdCU0Y+1E/QP7mpa1Z9OTLKbVSlXM
oJe2GzQHd2rQGB6EBg0DsTe1xaCrzR9Jg/7WUymDrrbuVfPKiBUVg74gYtAa
DKchzuz382di63pq2pORI2dkkKKVkmS5EF5Vz8glYTuLCg5r5LQdbDDob+RY
8ca5uVJ4diHoouse5S/WDf3doQ19mxg6zb1MKWoev+Kk5aZkpNpPGGd83Yqt
zsG1T8P3aZ2pJgdHEvyYgxsfTDr4xrqDn7fYc/Arkg5uIxLUwXEKC+jguiLV
zcEPew6OBjs7lINXbchrd9wuAPdAKA6/F30ozquM5eAYR9isSu4CacePBdCx
IGCTKkz8tn0t5uCStzbp4LoFpIuDY7Ir5uD2prrv171xSQe/qu7gV3R3cFiR
OLgWrmtzcLv50DWF2ObmmINfLGVcUw7OpXNeVbglHVyzhmNazkp2QAdn6Xnk
6687+GMtDl7uzZsu3fp659Z2VmK2Ztm0ZWvT7tzs/ze5NhT6+XbX3tbu2prK
P4x9U9dWmfB9t2S4NspxxVx79ePOtSVMJOnan7iiQ7+brr28cm1kHYu4NkK0
uri2dhdTrq0rXV1c+9kX467N70A1z/B72dQuFScHXaxLu7sopHPno4Wzct0d
o+/Q3fflujsas5xwzd3t5Ii7kIofujv0ZXNGOHfXss9Jd7c9TtNndr+hMeZt
7o6OSJu725vvvv9TEXeX3U9Jd2dhg0Z332ndfdpZNtoUHii0w6/OtXgEZNgN
OK49xDLQ1y1+ylkynkZqPPscl9d+uuaS/5xt7pkuv24hXR6LO+hA8/G9J3/s
Lg9fN63duTyzjfDcApc/Fbr8aNTm8vgGVtpJuLymPwxdHkMVys/20Lz36QRv
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
fKfmD2AbDwt5eCAXP6DZhzMq/PWljn4q++By/QGQTJNIYpl+VmkDGGHsxXce
Kf8AwmfBN1X+AEvT0Q/cpj/AwTxNxFs/bEPfvjjH/mI+Tzkzveqqq9JPPjFm
JumkSZPSAwdyA4iFCxem1157bXr11Venzz33nLHG3rp1q7l/9+7d6cGDB/Xq
eWJ6zTXXmO/jtWLFivS6667LnrFo0aKz6su7IVDeiZXy7t27N/3888/Td955
J73++uvHpUeOHFETs+nTp6cbNxpjzuyWu+++O50zZ05WZDzm3XffzUt9ulXq
4eHhrLSqVnhYesMNN6Qffvhh8rW6onNOi53IatEHZNH1tQnptm3brHIODQ2l
jz/+OINgHj16NL3jjjvSiy++GLcxbKss7iuvvJLOnj3b2DDMmzcvff75PHgY
bUi8RcYmv1541RaZs1gUccaMGdlf43Q5d+3ald07bdq09Nlnn3WVc+7cuRAo
U05d7thy7o0uJ5t2+/bt6UMPPZT14+joaHrzzTenq1atYoBESMRNN92Utf6x
Y8cy6Vi3bt2go+ho0nLRZ82aVRR9vCn5pfoWWCLgZN3wWhc41xN0cbplyxaW
22jW/v3706lTp2Z9DhmcP3+++QyywNfx48e1B3DeMzNnzkw3b95cEQxVSksw
lBZbfblnz56s4kW7KUg++mj63nvv6Z71dEzx+p5Vsffffz+98cYb08mTJ2cV
46baFVdckR4+nDuX5ycVZ2YdhB644IILTKH37duXVfzQoUPZ/VA+pa/mVKp7
BWaz4FcUOERpB9P7778/vfDCC9MpU6Zk77Vr15qDRJZKlTihLC1fvtyAEuqB
12uvvTYeN6rHoaf50hUwBW1X+L/renP8rb5zzZo1mTajjNTuDz74IIOmfvJg
44dC7NBm8qEo+q233ppJRqOHsu4Yhe69997sL3YmlPqBBx7AA5P4J3oH0d/d
+bs7T4I7S1dvya8mv/f/8eDeiw==\
\>"],ExpressionUUID->"4af9baf5-f66a-4044-b517-9b73a33f0d9e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Gamma]", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], ",", 
        RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], ",", 
        RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], ",", 
        RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], ",", 
        RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], ",", 
        RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], ",", 
        RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "}"}]}], "}"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.813990473778718*^9, 3.81399053496686*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"05834213-352e-4735-bbab-648a211211f3"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[ScriptCapitalK]", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"kxx", "[", "\[Eta]", "]"}], ",", 
        RowBox[{"kxy", "[", "\[Eta]", "]"}], ",", 
        RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"kxy", "[", "\[Eta]", "]"}], ",", 
        RowBox[{"kyy", "[", "\[Eta]", "]"}], ",", 
        RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"kxz", "[", "\[Eta]", "]"}], ",", 
        RowBox[{"kyz", "[", "\[Eta]", "]"}], ",", 
        RowBox[{"kzz", "[", "\[Eta]", "]"}]}], "}"}]}], "}"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.813990477608938*^9, 3.813990510159409*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"a35262e5-9456-4df4-a394-5d9ca40e4017"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"nu", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       FractionBox["1", 
        RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}]], "}"}], ",", 
      RowBox[{"-", 
       FractionBox["\[Beta]", 
        RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}]]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"nd", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}]}], ",", "0", ",", "0", ",", 
      "0"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", "[", "\[Eta]_", "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nu", "[", "\[Eta]_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           FractionBox["1", 
            RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}]], "}"}], ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[Beta]", "[", "\[Eta]", "]"}], 
            RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}]]}]}], "]"}], 
        "\[IndentingNewLine]", 
        RowBox[{"nd", "[", "\[Eta]_", "]"}]}], ":=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}]}], ",", "0", ",", "0", ",",
          "0"}], "}"}]}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.813989951447146*^9, 3.813990051893906*^9}, {
   3.813990774252919*^9, 3.813990781607525*^9}, 3.8139909250074787`*^9, {
   3.813990973733121*^9, 3.81399099267782*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"6eeaf6f4-dc9e-4c2f-b573-9f14817dc2f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          
          DynamicModuleBox[{
           Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
           TemplateBox[{
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    
                    RowBox[{"1.`16.", ",", 
                    "33.19950000000000045474735088646411895752`16."}], "}"}], 
                    "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    
                    RowBox[{"1.`16.", ",", 
                    "33.19950000000000045474735088646411895752`16."}], "}"}], 
                    "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], 
             ButtonBox[
              DynamicBox[
               ToBoxes[
                If[
                 
                 Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                  "Local"], 
                 Style[
                 "This object cannot be used as input.", "SummaryEmbed"], 
                 BoxForm`EmbedSummaryLabel[InterpolatingFunction, 15457176, 
                  Dynamic[Typeset`embedState$$]]], StandardForm]], 
              ButtonFunction :> 
              BoxForm`EmbedSummaryInterpretation[
               InterpolatingFunction, 
                5760543651430778586319754734492344521437409259410960274960, 
                EvaluationBox[], 
                Dynamic[Typeset`embedState$$], StandardForm], 
              DefaultBaseStyle -> "SummaryEmbedButton", 
              BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
                
                And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
                 "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
              Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
            "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{1.000000000000000, 33.19950000000000}}, <>]"& \
)],
      False,
      BoxID -> 5760543651430778586319754734492344521437409259410960274960,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "[", "\[Eta]", "]"}]], ",", "0", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQB+J+F46rs7PeOPacrPwLoisao7zmAOlC61qXlUBaZnYg
+yogrfP/783VQLpIfeJc9ew3jiG6P0pdgHTCz2xFbyAtLzjT6Q+QXqly1F86
543jy8JFW7Lz3zjqbrJ89whIK++L7noBpOc2FYc4FLxxnDTXvSK75o0jk6Ll
Ff7aN46WtWuqhIH0slnT4ucC6WK59d8XAOkbzBWTp9S9cVzjyd9hWP/GMYh3
h64xkP4mmfzJFEjPmXX7si2Q/pG4XCUOSE9jnRkDomXX8kvGA+mME+/OFQLp
yEPvL/A0vHHcxWl2rhVIX20/Nelt9xvHRzs5e173vnF8YWC7gaXvjaO9m9dR
XiBtsJtHmw9Ia3U/nCIKpFPrf201ANJiX7ymWABpANV8noM=
  "],
 CellLabel->"Out[50]=",ExpressionUUID->"e95aa576-70b9-4c8a-9fb3-fe6a8d1a6b47"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          
          DynamicModuleBox[{
           Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
           TemplateBox[{
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    
                    RowBox[{"1.`16.", ",", 
                    "33.19950000000000045474735088646411895752`16."}], "}"}], 
                    "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    
                    RowBox[{"1.`16.", ",", 
                    "33.19950000000000045474735088646411895752`16."}], "}"}], 
                    "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], 
             ButtonBox[
              DynamicBox[
               ToBoxes[
                If[
                 
                 Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                  "Local"], 
                 Style[
                 "This object cannot be used as input.", "SummaryEmbed"], 
                 BoxForm`EmbedSummaryLabel[InterpolatingFunction, 15457176, 
                  Dynamic[Typeset`embedState$$]]], StandardForm]], 
              ButtonFunction :> 
              BoxForm`EmbedSummaryInterpretation[
               InterpolatingFunction, 
                5760543651430778586319754734492344521437409259410960274960, 
                EvaluationBox[], 
                Dynamic[Typeset`embedState$$], StandardForm], 
              DefaultBaseStyle -> "SummaryEmbedButton", 
              BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
                
                And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
                 "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
              Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
            "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{1.000000000000000, 33.19950000000000}}, <>]"& \
)],
      False,
      BoxID -> 5760543651430778586319754734492344521437409259410960274960,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "[", "\[Eta]", "]"}]}], ",", "0", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQB+J+F46rs7PeOPacrPwLoisao7zmAOlC61qXlUBaZnYg
+yogrfP/783VQLpIfeJc9ew3jiG6P0pdgHTCz2xFbyAtLzjT6Q+QXqly1F86
543jy8JFW7Lz3zjqbrJ89whIK++L7noBpOc2FYc4FLxxnDTXvSK75o0jk6Ll
Ff7aN46WtWuqhIH0slnT4ucC6WK59d8XAOkbzBWTp9S9cVzjyd9hWP/GMYh3
h64xkP4mmfzJFEjPmXX7si2Q/pG4XCUOSE9jnRkDomXX8kvGA+mME+/OFQLp
yEPvL/A0vHHcxWl2rhVIX20/Nelt9xvHRzs5e173vnF8YWC7gaXvjaO9m9dR
XiBtsJtHmw9Ia3U/nCIKpFPrf201ANI3X3lPsQDSANtUnz0=
  "],
 CellLabel->"Out[51]=",ExpressionUUID->"1ab197fe-18e0-413f-b290-14fe0c6b26e9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"X4", "=", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", ",", "x", ",", "y", ",", "z"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V", "=", 
     RowBox[{"{", 
      RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e", "=", 
     RowBox[{"{", 
      RowBox[{"e1", ",", "e2", ",", "e3"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Energy", "=", 
     RowBox[{"{", 
      RowBox[{"energy", ",", " ", "\[Lambda]"}], "}"}]}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.762690861591281*^9, 3.762690873052596*^9}, {
  3.76362137529224*^9, 3.76362137739482*^9}, {3.7640504617005453`*^9, 
  3.764050462972713*^9}, {3.767441589189884*^9, 3.767441590401101*^9}, {
  3.767552984217037*^9, 3.767552988895132*^9}, {3.767553029091053*^9, 
  3.767553061051722*^9}, {3.768812255964336*^9, 3.768812257645239*^9}, {
  3.7746911956968517`*^9, 3.77469119786589*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"4ebf96b0-2b8f-4128-9d72-7b98ca4ff7ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Geodesic", "Section",
 CellChangeTimes->{{3.763118888965314*^9, 3.7631189495052633`*^9}, {
  3.828533368135268*^9, 3.828533373186058*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"db9a123e-5242-4797-9c00-6a7f06e0e255"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Gamma]xx", ",", " ", "\[Gamma]xy", ",", "\[Gamma]yy", ",", "\[Gamma]xz",
     ",", "\[Gamma]yz", ",", "\[Gamma]zz", ",", " ", "kxx", ",", "kxy", ",", 
    "kyy", ",", "kxz", ",", "kyz", ",", "kzz"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.83257431840524*^9, 
  3.832574406657192*^9}},ExpressionUUID->"127901fc-4a3e-42ea-a218-\
00647c7925c2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "GeodesicEquations"}], "\[IndentingNewLine]", 
 RowBox[{"?", "EnergyEquations"}]}], "Input",
 CellChangeTimes->{{3.831534388107891*^9, 3.831534402228058*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"9b47d45b-3140-4cc1-8ff3-fa98ef4d7f08"],

Cell[CellGroupData[{

Cell[BoxData["\<\"GeodesicEquations[\\!\\(\\*SuperscriptBox[\\(X\\), \\(i\\)]\
\\),\\!\\(\\*SuperscriptBox[\\(V\\), \\(i\\)]\\),\\!\\(\\*SubscriptBox[\\(\
\[Gamma]\\), \\(ij\\)]\\), \\!\\(\\*SubscriptBox[\\(K\\), \\(ij\\)]\\), \
\[Alpha], \[Beta], time]. Returns the geodesic equation in 3+1 form. It \
contains the RHS for dx/dt and dV/dt\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.832554888617448*^9},
 CellTags->
  "Info2473832562088-2235383",ExpressionUUID->"2cca4565-a460-45d5-b615-\
138b9ee63bf6"],

Cell[BoxData["\<\"EnergyEquations[\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(ij\
\\)]\\), \\!\\(\\*SubscriptBox[\\(K\\), \\(ij\\)]\\), \[Alpha], \[Beta], {E,\
\[Lambda]},\\!\\(\\*SuperscriptBox[\\(X\\), \
\\(i\\)]\\),\\!\\(\\*SuperscriptBox[\\(V\\), \\(i\\)]\\), time]. Returns the \
equations for d\[Lambda]/dt and dE/dt\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.832554888691465*^9},
 CellTags->
  "Info2483832562088-2235383",ExpressionUUID->"fef22a7a-e1fc-46a7-8571-\
7bf60ae3279d"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"geodBG", "=", 
    RowBox[{"GeodesicEquations", "[", 
     RowBox[{"X", ",", "V", ",", "\[Gamma]", ",", "\[ScriptCapitalK]", ",", 
      RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], ",", "\[Beta]", ",", 
      "\[Eta]"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.763616987745784*^9, 3.763616989254862*^9}, {
   3.763621329663095*^9, 3.7636213420566196`*^9}, {3.764618773487194*^9, 
   3.764618773838332*^9}, {3.813991135932315*^9, 3.8139911426920567`*^9}, {
   3.813991243265329*^9, 3.8139912458806887`*^9}, 3.8140180776211557`*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"8e4319c7-8117-470a-b32a-ec435ac387f5"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"enereqBG", "=", 
    RowBox[{"EnergyEquations", "[", 
     RowBox[{"\[Gamma]", ",", "\[ScriptCapitalK]", ",", 
      RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], ",", "\[Beta]", ",", "Energy",
       ",", "X", ",", "V", ",", "\[Eta]"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7643091868067417`*^9, 3.764309194122142*^9}, {
  3.7643092242907*^9, 3.764309252803145*^9}, {3.764309414943725*^9, 
  3.76430941511348*^9}, {3.764570994678122*^9, 3.764571002467864*^9}, {
  3.764618778295417*^9, 3.764618778524261*^9}, {3.8139914366714897`*^9, 
  3.81399145553734*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"f4d4e55a-5ff2-4c55-824f-c0cb9687c345"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.762503627547968*^9, 
  3.762503629568668*^9}},ExpressionUUID->"19e105db-d36d-4ba3-944d-\
21b1c31df2fe"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Gamma]xx", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "i\[Gamma]xx", "]"}], ",", "prec"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]xy", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "i\[Gamma]xy", "]"}], ",", "prec"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]xz", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "i\[Gamma]xz", "]"}], ",", "prec"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]yy", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "i\[Gamma]yy", "]"}], ",", "prec"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]yz", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "i\[Gamma]yz", "]"}], ",", "prec"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]zz", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "i\[Gamma]zz", "]"}], ",", "prec"}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"kxx", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "ikxx", "]"}], ",", "prec"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kxy", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "ikxy", "]"}], ",", "prec"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kxz", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "ikxz", "]"}], ",", "prec"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kyy", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "ikyy", "]"}], ",", "prec"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kyz", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "ikyz", "]"}], ",", "prec"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kzz", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "ikzz", "]"}], ",", "prec"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.814276349213702*^9, 3.8142763497346287`*^9}, 
   3.824791462601972*^9, {3.832503486994898*^9, 3.832503496878573*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"5ab4324f-76d2-4ace-850b-14dcb29d8ff6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]\[Alpha]", "[", "\[Tau]_", "]"}], ":=", 
  RowBox[{"\[Alpha]", "[", "\[Tau]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]\[Beta]", "[", "\[Tau]_", "]"}], ":=", 
   RowBox[{"\[Beta]", "/.", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Eta]", "\[Rule]", "\[Tau]"}], "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VV", "[", "\[Eta]_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"V", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", "\[Eta]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gg", "[", "\[Tau]_", "]"}], ":=", 
    RowBox[{"\[Gamma]", "/.", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Eta]", "\[Rule]", "\[Tau]"}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"gg4", "[", "\[Tau]_", "]"}], ":=", 
     RowBox[{"g4", "/.", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Eta]", "\[Rule]", "\[Tau]"}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
           RowBox[{
            RowBox[{"X", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nup", "[", "\[Tau]_", "]"}], ":=", 
   RowBox[{"nu", "/.", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Eta]", "\[Rule]", "\[Tau]"}], "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ndown", "[", "\[Tau]_", "]"}], ":=", 
    RowBox[{"nd", "/.", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Eta]", "\[Rule]", "\[Tau]"}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]\[Alpha]", "[", "\[Tau]_", "]"}], ":=", 
     RowBox[{"\[Alpha]", "/.", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Eta]", "\[Rule]", "\[Tau]"}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
           RowBox[{
            RowBox[{"X", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Beta]\[Beta]", "[", "\[Tau]_", "]"}], ":=", 
     RowBox[{"\[Beta]", "/.", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Eta]", "\[Rule]", "\[Tau]"}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
           RowBox[{
            RowBox[{"X", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"VV", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"V", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", "\[Eta]", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gg", "[", "\[Tau]_", "]"}], ":=", 
     RowBox[{"g", "/.", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Eta]", "\[Rule]", "\[Tau]"}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
           RowBox[{
            RowBox[{"X", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gg4", "[", "\[Tau]_", "]"}], ":=", 
     RowBox[{"g4", "/.", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Eta]", "\[Rule]", "\[Tau]"}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
           RowBox[{
            RowBox[{"X", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nup", "[", "\[Tau]_", "]"}], ":=", 
     RowBox[{"nu", "/.", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Eta]", "\[Rule]", "\[Tau]"}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
           RowBox[{
            RowBox[{"X", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ndown", "[", "\[Tau]_", "]"}], ":=", 
     RowBox[{"nd", "/.", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Eta]", "\[Rule]", "\[Tau]"}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
           RowBox[{
            RowBox[{"X", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]lup", "[", "\[Eta]_", "]"}], ":=", 
   RowBox[{"(*", 
    RowBox[{"EBG", "[", "\[Eta]", "]"}], "*)"}], 
   RowBox[{
    RowBox[{"\[Alpha]\[Alpha]", "[", "\[Eta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"nup", "[", "\[Eta]", "]"}], "+", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"VV", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]ldown", "[", "\[Eta]_", "]"}], ":=", 
   RowBox[{"(*", 
    RowBox[{"EBG", "[", "\[Eta]", "]"}], "*)"}], 
   RowBox[{
    RowBox[{"\[Alpha]\[Alpha]", "[", "\[Eta]", "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ndown", "[", "\[Eta]", "]"}], "+", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"gg", "[", "\[Eta]", "]"}], ".", 
          RowBox[{"VV", "[", "\[Eta]", "]"}]}]}], "}"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g4", "[", "\[Eta]_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], ")"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"\[Beta]\[Beta]", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"\[Beta]\[Beta]", "[", "\[Eta]", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"\[Beta]\[Beta]", "[", "\[Eta]", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"\[Beta]\[Beta]", "[", "\[Eta]", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"\[Beta]\[Beta]", "[", "\[Eta]", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Beta]\[Beta]", "[", "\[Eta]", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Beta]\[Beta]", "[", "\[Eta]", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Beta]\[Beta]", "[", "\[Eta]", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"K4", "[", "\[Eta]_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"kxx", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"kxy", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"kxy", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"kyy", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"kxz", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"kyz", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"kzz", "[", "\[Eta]", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.764405253887529*^9, {3.774691207855999*^9, 3.7746912481632566`*^9}, {
   3.7766812542241917`*^9, 3.7766812549028673`*^9}, {3.8019426627259293`*^9, 
   3.801942746074316*^9}, {3.801942781401968*^9, 3.8019428345426817`*^9}, {
   3.809955953332427*^9, 3.809955959303371*^9}, {3.813990637001507*^9, 
   3.813990639931283*^9}, {3.813990675428605*^9, 3.813990737485366*^9}, {
   3.813991006128848*^9, 3.813991064190896*^9}, 3.8140220461269836`*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"f7df74a3-c251-4870-bf42-34815588c538"],

Cell[CellGroupData[{

Cell["Initial conditions ", "Subsection",
 CellChangeTimes->{{3.754082258553898*^9, 3.7540823843869257`*^9}, 
   3.7636165986096582`*^9, {3.828535744198104*^9, 3.828535812485063*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"58256917-6569-4db9-9211-7c26fe395972"],

Cell[TextData[{
 "The initial conditions can be given in two different ways:\n1) directly \
specifying the values or\n2) giving the initial direction ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["v", "2"], " ", "and", " ", 
    SuperscriptBox["v", "3"]}], TraditionalForm]],ExpressionUUID->
  "02aab4f9-00cb-4a2a-8bf5-85c7621e28e9"],
 " and use the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"InitialConditions", "[", "]"}], TraditionalForm]],ExpressionUUID->
  "97c6626b-d3a7-4a95-8e07-bb2e7df77522"],
 " to compute ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["v", "1"], TraditionalForm]],ExpressionUUID->
  "b0fe9e87-4e97-476a-83b6-061af6e8ef30"],
 " such that the geodesic is null.\nHere we set the initial tangent vector as \
 ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ScriptL]", "\[Mu]"], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[ScriptV]", "0"], "(", 
       SubscriptBox["\[PartialD]", "0"], ")"}], "\[Mu]"], "+", 
     RowBox[{"\[CapitalGamma]", " ", 
      SuperscriptBox[
       OverscriptBox["N", "\[RightVector]"], "\[Mu]"]}]}]}], 
   TraditionalForm]],ExpressionUUID->"474b6d6d-29f4-4bc4-8934-ca9c0d4573cf"],
 " which is null with the choice ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ScriptV]", "0"], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "1"}], " ", "and", " ", "\[CapitalGamma]"}], " ", 
    "\[Equal]", "1"}], TraditionalForm]],ExpressionUUID->
  "c45391bb-8817-46d5-be7b-c59431611676"],
 " for any direction ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["N", "\[RightVector]"], "\[Mu]"], TraditionalForm]],
  ExpressionUUID->"bc8419d2-35dd-45f5-95fb-87dc30ae4444"],
 "and we perform the 3+1 splitting with Vsplit[].\n Then we check that is \
actually null by using the InitialConditions[] function"
}], "Text",
 CellChangeTimes->{{3.828535988107201*^9, 3.8285360135890713`*^9}, {
   3.828536080085918*^9, 3.828536224152285*^9}, {3.828536254888063*^9, 
   3.828536351169119*^9}, 3.8285364092873497`*^9, {3.831534461445456*^9, 
   3.83153449566121*^9}, {3.8315345337642517`*^9, 3.831534635277499*^9}, {
   3.8315346936447773`*^9, 3.8315346980661907`*^9}, {3.83153474814338*^9, 
   3.83153479672126*^9}, {3.831535497637744*^9, 
   3.831535600861513*^9}},ExpressionUUID->"e90cca08-d17b-47c1-9d40-\
ac442a8e6a6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Kappa]", "=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{
      RowBox[{"\[ScriptCapitalV]", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1", ",", 
        FractionBox["\[Pi]", "4"], ",", 
        FractionBox["\[Pi]", "4"]}], "]"}], ",", "prec"}], "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.763044340009561*^9, 3.763044342740274*^9}, {
   3.7630444587837877`*^9, 3.763044557248805*^9}, {3.763046240241703*^9, 
   3.763046305247285*^9}, {3.763621485683549*^9, 3.7636214877908154`*^9}, {
   3.764050349195959*^9, 3.764050370380072*^9}, {3.764100449770454*^9, 
   3.764100486828232*^9}, {3.764508025831602*^9, 3.764508040854742*^9}, {
   3.7646150027769823`*^9, 3.764615040392887*^9}, {3.7667641094616537`*^9, 
   3.766764146575808*^9}, {3.766995632146949*^9, 3.766995637237721*^9}, {
   3.766995709314355*^9, 3.7669957302386208`*^9}, {3.767506995087449*^9, 
   3.767507026639196*^9}, {3.767554767059638*^9, 3.767554771045596*^9}, {
   3.767555968113957*^9, 3.7675559736913443`*^9}, {3.7675903359204483`*^9, 
   3.767590338943512*^9}, {3.767590763151663*^9, 3.767590822457131*^9}, {
   3.767591094943434*^9, 3.7675911259500103`*^9}, {3.767591318681787*^9, 
   3.7675913218728743`*^9}, {3.767597499022953*^9, 3.76759750329601*^9}, {
   3.767599212808919*^9, 3.767599226133648*^9}, 3.76985485720363*^9, {
   3.774247885686309*^9, 3.774247886111182*^9}, {3.774676488918809*^9, 
   3.774676490596698*^9}, 3.777857630709949*^9, {3.77785769392976*^9, 
   3.777857696761805*^9}, {3.777891218053335*^9, 3.777891228983781*^9}, {
   3.781431776675385*^9, 3.7814317782504253`*^9}, {3.781438130938097*^9, 
   3.7814381604340982`*^9}, {3.781438238312292*^9, 3.781438272492525*^9}, {
   3.7814383071139193`*^9, 3.7814383329559803`*^9}, {3.782803559075863*^9, 
   3.7828035720238237`*^9}, {3.783077824085938*^9, 3.783077827935833*^9}, {
   3.790677313187933*^9, 3.790677316137725*^9}, {3.793542397648642*^9, 
   3.793542403036581*^9}, {3.793547000004221*^9, 3.793547008658503*^9}, {
   3.793547069342059*^9, 3.7935470758756847`*^9}, {3.793552478072377*^9, 
   3.79355248031686*^9}, {3.793555106354176*^9, 3.793555111604171*^9}, {
   3.7935562722114353`*^9, 3.793556274176045*^9}, {3.79361250419944*^9, 
   3.793612504573682*^9}, 3.796392857063251*^9, {3.814017646709056*^9, 
   3.814017675074121*^9}, {3.814018763122925*^9, 3.8140188239620533`*^9}, {
   3.81401914875307*^9, 3.8140191653329*^9}, {3.814020552886632*^9, 
   3.814020554943163*^9}, {3.814183087362793*^9, 3.8141830926919394`*^9}, {
   3.814183127056765*^9, 3.8141831321718607`*^9}, {3.8141894718410397`*^9, 
   3.814189489942521*^9}, {3.816757249453888*^9, 3.816757286729101*^9}, {
   3.8239560629529667`*^9, 3.8239560882331753`*^9}, {3.823956125709787*^9, 
   3.823956128780031*^9}, {3.824782800316915*^9, 3.824782802809883*^9}, {
   3.8247831523507*^9, 3.824783154129754*^9}, {3.824784711300109*^9, 
   3.824784711511032*^9}, 3.8324842362285233`*^9, 3.832503620552258*^9, {
   3.8326450635270863`*^9, 3.832645064201873*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"c2416447-ec02-45ba-a297-6ab6f70a2832"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.`16."}], ",", "0.5`16.", ",", "0.5`16.", ",", 
   "0.70710678118654752440084436210484070353`16.30102999566398"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.763046411535068*^9, 3.76305424972963*^9, 3.763106001970025*^9, 
   3.763621392654326*^9, 3.763621423436055*^9, 3.763621489191443*^9, 
   3.7636234295044727`*^9, 3.763718644804591*^9, {3.764100469489378*^9, 
   3.764100488302802*^9}, 3.7641007348906307`*^9, 3.764309719635024*^9, 
   3.764324522641214*^9, 3.764325506147052*^9, 3.7644112493698397`*^9, 
   3.7644796288109426`*^9, 3.764492175085897*^9, 3.764494597908695*^9, 
   3.7645051040847178`*^9, 3.764505589418367*^9, 3.7645062572886963`*^9, 
   3.764508046109202*^9, 3.7645084387052383`*^9, 3.764508956745768*^9, 
   3.7645093804348516`*^9, 3.7645697466053333`*^9, 3.764570774708705*^9, 
   3.764580470441987*^9, {3.764615014354117*^9, 3.764615041396419*^9}, 
   3.764615207402149*^9, 3.764618809561602*^9, 3.766483522154448*^9, 
   3.766763703797427*^9, 3.76676414737743*^9, 3.7669956390730124`*^9, {
   3.7669957176296053`*^9, 3.766995731010841*^9}, 3.7670048762879343`*^9, 
   3.7672522515693407`*^9, 3.7672791103459053`*^9, 3.76744098263811*^9, 
   3.767441796455214*^9, {3.767507001452929*^9, 3.767507027766547*^9}, 
   3.767554773036565*^9, 3.767555975180387*^9, {3.767590767139917*^9, 
   3.767590795514429*^9}, {3.767591099306563*^9, 3.7675911271966677`*^9}, 
   3.7675913229164677`*^9, 3.7675975042753468`*^9, 3.7675989304997387`*^9, 
   3.7675992272218943`*^9, 3.768815885360339*^9, 3.7688187074959173`*^9, 
   3.768825362976611*^9, 3.769364730313767*^9, 3.7694263091420803`*^9, 
   3.76950128548495*^9, 3.769502751745038*^9, 3.769575238167734*^9, 
   3.769576568016203*^9, 3.76958927276684*^9, 3.769593732993372*^9, 
   3.769756746843614*^9, 3.7698548581534977`*^9, 3.770110886386539*^9, 
   3.770112237451593*^9, 3.774017776908126*^9, 3.774247785597972*^9, {
   3.7742478813445263`*^9, 3.7742478869209023`*^9}, 3.7746764918671103`*^9, 
   3.776681271228099*^9, 3.776681508818944*^9, 3.7770288163227367`*^9, 
   3.777301050131009*^9, 3.77736525361452*^9, 3.777556583850836*^9, 
   3.7776331493108177`*^9, 3.777640189738309*^9, 3.777719454261813*^9, 
   3.7778178019672537`*^9, 3.777818905765223*^9, 3.777857590322109*^9, 
   3.777857636671933*^9, 3.7778576978067102`*^9, 3.777877747062045*^9, 
   3.777891231426711*^9, 3.77790028784311*^9, 3.7783003637754087`*^9, 
   3.7784124332123747`*^9, 3.77849033177874*^9, 3.778823911668128*^9, 
   3.778845007689804*^9, 3.778851601999998*^9, 3.7789967000599823`*^9, 
   3.77902708255554*^9, 3.7790922523710938`*^9, 3.781438163450851*^9, 
   3.781438274618217*^9, {3.781438308034565*^9, 3.781438333884575*^9}, 
   3.781515024247796*^9, 3.7818692305803757`*^9, 3.781873196133911*^9, 
   3.782028933983486*^9, 3.782037497244083*^9, 3.78222280805614*^9, 
   3.782247507211977*^9, 3.782301662372719*^9, 3.782464598948441*^9, 
   3.782480974983864*^9, 3.7825702010393057`*^9, 3.7826548712969112`*^9, 
   3.7828035753427134`*^9, 3.783007766766218*^9, 3.783077830019164*^9, 
   3.790677251110125*^9, 3.7906773198736773`*^9, 3.793542404254046*^9, 
   3.793547009594379*^9, 3.793547077420278*^9, 3.793552481786628*^9, 
   3.793555113332491*^9, 3.793556275312707*^9, 3.79361250531481*^9, 
   3.793797497908291*^9, 3.7963928589780807`*^9, 3.798613371963889*^9, 
   3.801891363838538*^9, 3.809955998716711*^9, 3.8139914857032022`*^9, 
   3.814018712403399*^9, {3.814018770920187*^9, 3.814018794500073*^9}, 
   3.814018824760964*^9, 3.814019506981593*^9, 3.814020556067878*^9, 
   3.814023372918885*^9, 3.814183133453617*^9, 3.8141894922912827`*^9, 
   3.814712142067593*^9, 3.816513192615757*^9, 3.816757374692894*^9, 
   3.8167686180457983`*^9, 3.816949257749289*^9, 3.8236733395415897`*^9, 
   3.8239560902963867`*^9, 3.823956129897071*^9, 3.8239620585260887`*^9, 
   3.8244615677020073`*^9, {3.824783145142276*^9, 3.824783154760091*^9}, 
   3.824784712297207*^9, 3.824786157358905*^9, 3.824791540458488*^9, 
   3.82480763349384*^9, 3.8248738090537024`*^9, 3.8248742316066017`*^9, 
   3.8248757427047987`*^9, 3.824914083965568*^9, 3.825231522223238*^9, 
   3.825479310487153*^9, 3.831459017080592*^9, 3.832503624757489*^9, 
   3.8325549106902018`*^9, 3.8325734990604258`*^9, 3.832574423204896*^9, 
   3.8325894984503736`*^9, 3.83264506528159*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"2b2e3867-9465-4390-b263-af65ead022e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"g4", "[", "\[Eta]", "]"}], ".", "\[Kappa]", ".", "\[Kappa]"}], 
    ")"}], "/.", 
   RowBox[{"\[Eta]", "\[Rule]", "\[Eta]in"}]}]}]], "Input",
 CellChangeTimes->{{3.766763771753705*^9, 3.766763775586487*^9}, {
   3.766763816378869*^9, 3.7667638232820387`*^9}, {3.7667638650023527`*^9, 
   3.766763882639326*^9}, 3.77785760131987*^9, {3.77785765131359*^9, 
   3.777857664002756*^9}, 3.7814382164567137`*^9, {3.7814382849058447`*^9, 
   3.781438289619093*^9}, {3.7963928711060877`*^9, 3.796392872385914*^9}, {
   3.813991513407847*^9, 3.8139915162975903`*^9}, {3.824873515563401*^9, 
   3.8248735204365797`*^9}, {3.8248735526383266`*^9, 
   3.8248735565151377`*^9}, {3.824873588155385*^9, 3.8248735906897707`*^9}, {
   3.824875756139441*^9, 3.824875756636525*^9}, {3.832503650964287*^9, 
   3.832503652464467*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"b219d184-5b7b-4402-a782-545afac3cc29"],

Cell[BoxData["2.543534410613640869288255775872`3.124860936261346*^-8"], \
"Output",
 CellChangeTimes->{
  3.7667638832825336`*^9, 3.7667641711959476`*^9, 3.7669956419679737`*^9, {
   3.766995720230289*^9, 3.766995732556716*^9}, 3.767004879117888*^9, 
   3.767252255207972*^9, {3.767507005976286*^9, 3.7675070307676287`*^9}, 
   3.767554788224515*^9, 3.7675559780368443`*^9, {3.767590772540228*^9, 
   3.767590797301516*^9}, {3.767591103168818*^9, 3.767591129510405*^9}, 
   3.767591325078492*^9, 3.767597506888982*^9, 3.768815888632492*^9, 
   3.769364733314473*^9, 3.769426311934402*^9, 3.7695012895582952`*^9, 
   3.769502754056312*^9, 3.769575240421118*^9, 3.7695765701543703`*^9, 
   3.769589275450685*^9, 3.769756750028207*^9, 3.769854861497776*^9, 
   3.77401778824841*^9, 3.774247789432653*^9, 3.774247891324441*^9, 
   3.7746765000860243`*^9, 3.776681510789546*^9, 3.777028822567895*^9, 
   3.777556597251725*^9, 3.777633151017325*^9, 3.777817822875156*^9, 
   3.7778189097699633`*^9, 3.7778576041478558`*^9, {3.777857639366467*^9, 
   3.7778576533028517`*^9}, 3.777857699897092*^9, 3.777877748979548*^9, 
   3.777891234805028*^9, 3.777900290969351*^9, 3.778300366367136*^9, 
   3.778412435098749*^9, 3.778823914656126*^9, {3.781438212732905*^9, 
   3.781438216948884*^9}, {3.781438278805648*^9, 3.781438311258172*^9}, 
   3.781438346628776*^9, 3.781515027352676*^9, 3.78186923273463*^9, 
   3.781873198926846*^9, 3.782028936903392*^9, 3.782037499701767*^9, 
   3.782222809972002*^9, 3.782247509626431*^9, 3.782301664698803*^9, 
   3.782464600610712*^9, 3.782480977303591*^9, 3.782570202704821*^9, 
   3.782803581512249*^9, 3.783077833550658*^9, 3.7906773229442377`*^9, 
   3.793542407028191*^9, 3.7935470133300962`*^9, 3.793547082560858*^9, 
   3.793552484299183*^9, 3.793555120473805*^9, 3.793556278796775*^9, 
   3.7936125101712914`*^9, {3.79639286179424*^9, 3.796392873260274*^9}, 
   3.798613374583435*^9, {3.813991508626535*^9, 3.813991517195167*^9}, 
   3.814019507744708*^9, 3.8140207781227627`*^9, 3.814023375975086*^9, 
   3.814183136402039*^9, 3.814189496448069*^9, 3.814712147262657*^9, 
   3.816513196139059*^9, 3.8167573790361557`*^9, 3.8169492586909103`*^9, 
   3.823673339925106*^9, 3.823956095182341*^9, 3.82395613300207*^9, 
   3.824783158657934*^9, 3.824786157726281*^9, 3.824791542771764*^9, 
   3.824807637924582*^9, 3.824873521718639*^9, 3.8248735578480377`*^9, 
   3.8248735921153393`*^9, 3.82487381689048*^9, 3.824874234148559*^9, 
   3.824875745680827*^9, 3.824914087007465*^9, 3.825231525087154*^9, 
   3.825479313861638*^9, {3.8325036355225973`*^9, 3.832503654000317*^9}, 
   3.8325549137197037`*^9, 3.832573501281375*^9, 3.832574426088296*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"b18499b2-f6fe-4963-8d38-0c7e90956085"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Vsplit"}]], "Input",
 CellChangeTimes->{{3.764615018515718*^9, 3.7646150283252087`*^9}, {
  3.831535696313067*^9, 3.83153569779284*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"41e0aba0-f87e-4a66-8b08-24f9295d3a56"],

Cell[BoxData["\<\"Vsplit[\\!\\(\\*SuperscriptBox[\\(\[ScriptCapitalV]\\), \\(\
\[Mu]\\)]\\),\\!\\(\\*SuperscriptBox[\\(n\\), \
\\(\[Mu]\\)]\\),\\!\\(\\*SubscriptBox[\\(n\\), \\(\[Mu]\\)]\\)]. Returns the \
3+1 form of a four-vector as \[ScriptCapitalV]=vecN( \\!\\(\\*SuperscriptBox[\
\\(n\\), \\(\[Mu]\\)]\\) + \\!\\(\\*SuperscriptBox[\\(vecT\\), \
\\(\[Mu]\\)]\\)) given the normal vector \\!\\(\\*SuperscriptBox[\\(n\\), \\(\
\[Mu]\\)]\\) and \\!\\(\\*SubscriptBox[\\(n\\), \\(\[Mu]\\)]\\)]\"\>"], \
"Print", "PrintUsage",
 CellChangeTimes->{3.8325037584870768`*^9},
 CellTags->
  "Info1103832510958-2235383",ExpressionUUID->"8adb320c-e0f9-4d0d-a545-\
c4aa62dae279"]
}, Open  ]],

Cell[TextData[{
 "The vector ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Kappa]", "\[Mu]"], TraditionalForm]],ExpressionUUID->
  "eaadbb29-7b52-4f15-b5f8-6b6bbdd552d7"],
 " must be expressed in 3+1 form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Kappa]", "\[Mu]"], "=", 
    RowBox[{"E", "(", 
     RowBox[{
      SuperscriptBox["n", "\[Mu]"], "+", 
      SuperscriptBox["V", "\[Mu]"]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"90ee2af0-8b15-4618-9fcb-3a11baaf35fa"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "=", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[Kappa]", "\[Mu]"]}], 
     SubscriptBox["n", "\[Mu]"]}]}], TraditionalForm]],ExpressionUUID->
  "145573fe-2290-401d-b4c9-2bb1a671a10c"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["V", "\[Mu]"], "=", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[Kappa]", "\[Mu]"], "E"], "-", 
     SuperscriptBox["n", "\[Mu]"]}]}], TraditionalForm]],ExpressionUUID->
  "ced94989-4b79-4160-8e83-df148d8da2db"]
}], "Text",
 CellChangeTimes->{{3.763047545208661*^9, 3.763047781184064*^9}, {
  3.763047860261002*^9, 3.763047878463889*^9}, {3.769502410713098*^9, 
  3.769502446443782*^9}},ExpressionUUID->"87c7bf41-c412-451a-b4ac-\
3d64938ad762"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[ScriptL]split", "=", 
    RowBox[{"Vsplit", "[", 
     RowBox[{"\[Kappa]", ",", 
      RowBox[{"nup", "[", "\[Eta]in", "]"}], ",", 
      RowBox[{"ndown", "[", "\[Eta]in", "]"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.831295036035841*^9, 3.831295069511106*^9}, {
  3.831295120194954*^9, 3.831295167779415*^9}, {3.831295241397882*^9, 
  3.831295241863907*^9}, {3.8325037684642553`*^9, 3.8325037753233757`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"dcb3124e-e852-43b3-b056-7936152e4634"],

Cell["3+1 Initial conditions", "Text",
 CellChangeTimes->{{3.828535863999639*^9, 
  3.828535969063588*^9}},ExpressionUUID->"7526bcc7-3537-4338-932c-\
8fdd88caa472"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"substitution", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Eta]", "\[Rule]", "\[Eta]in"}], ",", 
      RowBox[{"x", "\[Rule]", "0"}], ",", 
      RowBox[{"y", "\[Rule]", "0"}], ",", 
      RowBox[{"z", "\[Rule]", "0"}], ",", 
      RowBox[{"v2", "\[Rule]", 
       RowBox[{"\[ScriptL]split", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
      RowBox[{"v3", "\[Rule]", 
       RowBox[{"\[ScriptL]split", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.781438437211837*^9, 3.781438471884098*^9}, 
   3.79639289283213*^9, {3.831295184144271*^9, 3.8312951948878517`*^9}, 
   3.832503782147127*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"bdef2af2-6450-42d3-a67c-f9d10a2f4b31"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "InitialConditions"}]], "Input",
 CellChangeTimes->{{3.831535734539209*^9, 3.8315357353495607`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"cd297085-9e6d-4e1d-8cdc-7e6367ed5540"],

Cell[BoxData["\<\"InitialConditions[\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \
\\(ij\\)]\\), {(\\!\\(\\*SuperscriptBox[\\(V\\), \
\\(2\\)]\\)\\!\\(\\*SubscriptBox[\\()\\), \
\\(in\\)]\\),(\\!\\(\\*SuperscriptBox[\\(V\\), \
\\(3\\)]\\)\\!\\(\\*SubscriptBox[\\()\\), \\(in\\)]\\), \
\\!\\(\\*SubscriptBox[SuperscriptBox[\\(X\\), \\(i\\)], \\(in\\)]\\)}, \\!\\(\
\\*SuperscriptBox[\\(V\\), \\(i\\)]\\), param]. Compute the initial value for \
the first spatial component \\!\\(\\*SuperscriptBox[\\(V\\), \\(1\\)]\\) \
using the spatial null condition \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \
\\(ij\\)]\\)\\!\\(\\*SuperscriptBox[\\(V\\), \
\\(i\\)]\\)\\!\\(\\*SuperscriptBox[\\(V\\), \\(j\\)]\\)==1\"\>"], "Print", \
"PrintUsage",
 CellChangeTimes->{3.832503812103443*^9},
 CellTags->
  "Info1133832511012-2235383",ExpressionUUID->"cff3d585-9358-479a-9693-\
395e0e8f7449"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"initialvel1", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{"InitialConditions", "[", 
      RowBox[{"\[Gamma]", ",", "substitution", ",", "V", ",", "param"}], 
      "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"initialBG", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"substitution", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "[", "\[Eta]", "]"}], "/.", 
            RowBox[{"substitution", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "\[Equal]", 
          RowBox[{"substitution", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{"Length", "[", "substitution", "]"}]}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"V", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\[Eta]", "]"}], "/.", 
           RowBox[{"substitution", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "\[Equal]", 
         RowBox[{"initialvel1", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"E0BG", "=", 
    RowBox[{"\[ScriptL]split", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"initialenergy", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Energy", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", "\[Eta]in", "]"}], "\[Equal]", 
       "E0BG"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Energy", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", "\[Eta]in", "]"}], "\[Equal]", 
       "1"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.754060601421406*^9, 3.7540606156157846`*^9}, {
   3.754083069742875*^9, 3.754083077115899*^9}, 3.754089313571577*^9, {
   3.754089394043767*^9, 3.7540893984573717`*^9}, 3.7541721956295147`*^9, 
   3.754174725226383*^9, 3.754175501211713*^9, 3.754176133021085*^9, {
   3.754328813078691*^9, 3.754328831555768*^9}, {3.754328862269754*^9, 
   3.7543289162075787`*^9}, {3.75432895090058*^9, 3.7543289530987988`*^9}, 
   3.7543290389443293`*^9, {3.754334056604539*^9, 3.754334074705987*^9}, {
   3.754334473230981*^9, 3.7543344946147738`*^9}, 3.754334569096313*^9, {
   3.754334942566461*^9, 3.7543349875217123`*^9}, {3.754392801760275*^9, 
   3.754392815103458*^9}, {3.757168887690145*^9, 3.757168900676016*^9}, {
   3.7571689486617002`*^9, 3.757169017243986*^9}, {3.762182355347002*^9, 
   3.762182358893456*^9}, {3.762186005877131*^9, 3.762186014723229*^9}, {
   3.762507647065877*^9, 3.762507667992984*^9}, {3.762521574160432*^9, 
   3.762521578698412*^9}, {3.76269177156446*^9, 3.76269177214685*^9}, {
   3.763104302586323*^9, 3.76310430986147*^9}, {3.7637187682653627`*^9, 
   3.7637188061554823`*^9}, {3.76371885599749*^9, 3.763718857011195*^9}, {
   3.763719066241153*^9, 3.763719105969873*^9}, {3.763719209228808*^9, 
   3.763719211825849*^9}, {3.763719247386509*^9, 3.763719299801862*^9}, {
   3.7637220431356363`*^9, 3.7637220650809107`*^9}, {3.763723624800788*^9, 
   3.763723626712069*^9}, {3.764100803420342*^9, 3.7641008046206417`*^9}, {
   3.764101019581246*^9, 3.764101072008183*^9}, {3.7641011626342487`*^9, 
   3.7641011981829433`*^9}, {3.764101235239758*^9, 3.764101282946225*^9}, {
   3.7641023567277527`*^9, 3.7641023576184397`*^9}, 3.764102424228032*^9, {
   3.764102577914782*^9, 3.764102629804678*^9}, {3.764310683741012*^9, 
   3.764310685388229*^9}, {3.7643140986372557`*^9, 3.7643141015889893`*^9}, {
   3.7643245704948597`*^9, 3.7643245767889*^9}, {3.764479660300684*^9, 
   3.764479671988194*^9}, {3.764508067705785*^9, 3.764508073909336*^9}, {
   3.7646152807287827`*^9, 3.76461528160668*^9}, {3.767252284522938*^9, 
   3.76725230905447*^9}, {3.769426347280072*^9, 3.769426375710144*^9}, {
   3.7695025442148113`*^9, 3.769502545585334*^9}, {3.774676524769909*^9, 
   3.774676536350521*^9}, {3.7746786123684273`*^9, 3.774678668185548*^9}, {
   3.77467880046415*^9, 3.7746788071193123`*^9}, {3.774684097362267*^9, 
   3.7746841411136723`*^9}, {3.774688310663459*^9, 3.77468832280755*^9}, {
   3.7766859790725822`*^9, 3.7766859862026587`*^9}, {3.776688966486494*^9, 
   3.776688975305685*^9}, {3.7766899398580713`*^9, 3.776689941334835*^9}, {
   3.776690256782317*^9, 3.776690274378112*^9}, {3.777301070776931*^9, 
   3.77730107323339*^9}, {3.781869520422123*^9, 3.781869528705573*^9}, {
   3.783148154186743*^9, 3.783148164926326*^9}, {3.783148196249362*^9, 
   3.783148200026107*^9}, {3.79639290383178*^9, 3.796392909142066*^9}, {
   3.831295204092373*^9, 3.8312952166370783`*^9}, {3.832503820139401*^9, 
   3.832503858675179*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"ef86ac4d-2ba3-4ba4-97c7-7511f17e0dcd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"v1", "\[Rule]", 
    RowBox[{
    "-", "0.004989516514398729708550217636532292`14.11918640725625"}]}], ",", 
   
   RowBox[{
   "v1", "\[Rule]", 
    "0.004989516514398729708550217636532292`14.11918640725625"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.832503848291655*^9, 3.832503861399193*^9}, 
   3.832554925679882*^9, 3.832573508902417*^9, 3.832574438340048*^9, 
   3.832589508088694*^9, 3.8326450797607183`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"22f66873-a4a6-4030-9534-72e20dfc6e6f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "10.01050000000000039790393202565610408783`16.", "]"}], 
    "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"y", "[", "10.01050000000000039790393202565610408783`16.", "]"}], 
    "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"z", "[", "10.01050000000000039790393202565610408783`16.", "]"}], 
    "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"v2", "[", "10.01050000000000039790393202565610408783`16.", "]"}],
     "\[Equal]", 
    RowBox[{
    "-", "0.00498951651442400539723598155048640145`15.154901960524944"}]}], 
   ",", 
   RowBox[{
    RowBox[{"v3", "[", "10.01050000000000039790393202565610408783`16.", "]"}],
     "\[Equal]", 
    RowBox[{
    "-", "0.00705624192438296095857817853798539155`15.187086643937821"}]}], 
   ",", 
   RowBox[{
    RowBox[{"v1", "[", "10.01050000000000039790393202565610408783`16.", "]"}],
     "\[Equal]", 
    "0.004989516514398729708550217636532292`14.11918640725625"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.832503848291655*^9, 3.832503861399193*^9}, 
   3.832554925679882*^9, 3.832573508902417*^9, 3.832574438340048*^9, 
   3.832589508088694*^9, 3.832645079762219*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"f0a194f4-0361-4124-8d31-f30a4016599d"],

Cell[BoxData[
 RowBox[{"-", 
  "100.21011024907299713504471583291888237`15.221848750245423"}]], "Output",
 CellChangeTimes->{{3.832503848291655*^9, 3.832503861399193*^9}, 
   3.832554925679882*^9, 3.832573508902417*^9, 3.832574438340048*^9, 
   3.832589508088694*^9, 3.832645079763579*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"248186dd-b472-439b-8840-8bf36b9f3c14"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
    "energy", "[", "10.01050000000000039790393202565610408783`16.", "]"}], 
    "\[Equal]", 
    RowBox[{
    "-", "100.21011024907299713504471583291888237`15.221848750245423"}]}], 
   ",", 
   RowBox[{
    RowBox[{
    "\[Lambda]", "[", "10.01050000000000039790393202565610408783`16.", "]"}], 
    "\[Equal]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.832503848291655*^9, 3.832503861399193*^9}, 
   3.832554925679882*^9, 3.832573508902417*^9, 3.832574438340048*^9, 
   3.832589508088694*^9, 3.832645079764913*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"7205a7db-99a7-43ff-ad92-5b84e017c87b"]
}, Open  ]],

Cell[TextData[{
 "\nThe four-velocity of the observer  in 3+1 decomposition is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["u", "\[Mu]"], "=", 
    RowBox[{"\[CapitalGamma]", "(", 
     RowBox[{
      SuperscriptBox["n", "\[Mu]"], "+", 
      SuperscriptBox["U", "\[Mu]"]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"93403eb5-9847-4be8-b351-f2127a98f52d"],
 ": in this case the homogeneity impose that every observer and source move \
together with the cosmic expansion. This implies that the observer is static \
with respect to the cosmic flow ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"no", " ", "spatial", " ", "velocity", " ", 
      SuperscriptBox["U", "i"]}], "=", "0"}]}], TraditionalForm]],
  ExpressionUUID->"114448fb-b7fd-4a38-84d3-3ab3403cb83f"],
 ") and that the Lorentz factor is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalGamma]", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "326b8410-8951-4678-aae2-5f44b6333019"],
 " (which follows from the normalization ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["u", "\[Mu]"], 
     SubscriptBox["u", "\[Mu]"]}], "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "9fbb94da-f547-4c29-bf18-f99b0c03b34a"],
 ")"
}], "Text",
 CellChangeTimes->{{3.813993631597761*^9, 3.813993952709517*^9}, {
  3.828872016546647*^9, 
  3.8288720534298153`*^9}},ExpressionUUID->"cf80e9d1-5e5b-4441-9638-\
d961fff4d482"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"U", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[CapitalGamma]l", "=", 
    RowBox[{"Sqrt", "[", 
     FractionBox["1", 
      RowBox[{"1", "-", 
       RowBox[{"\[Gamma]", ".", "U", ".", "U"}]}]], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"uu", "=", 
    RowBox[{"\[CapitalGamma]l", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nup", "[", "\[Eta]", "]"}], "+", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", "U"}], "]"}]}], ")"}]}]}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"u", "[", "\[Tau]_", "]"}], ":=", 
     RowBox[{"uu", "/.", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Eta]", "\[Rule]", "\[Tau]"}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
           RowBox[{
            RowBox[{"X", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u", "[", "ETA0", "]"}], "//", "N"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u", "[", "\[Eta]in", "]"}], "//", "N"}]}]}]], "Input",
 CellChangeTimes->{{3.814019214746735*^9, 3.814019229523031*^9}, {
  3.824013637550247*^9, 3.824013642666931*^9}, {3.824022674603503*^9, 
  3.824022674871702*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"0927b213-1400-40f0-91fe-92a9c3705ee0"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.814019507844144*^9, 3.8140205595739193`*^9, 3.8140233783478518`*^9, 
   3.8141831528196583`*^9, 3.814189499319067*^9, 3.81471230620498*^9, 
   3.816513200607477*^9, 3.816757392336471*^9, 3.816768632389318*^9, 
   3.816949258870055*^9, 3.8233282123990707`*^9, 3.823673340026987*^9, {
   3.8239561121543837`*^9, 3.823956137510453*^9}, 3.823962063889941*^9, 
   3.824013653651513*^9, 3.8240226767805653`*^9, 3.824461567760273*^9, 
   3.824783174827413*^9, 3.824784716634219*^9, 3.82478615776749*^9, 
   3.82479154535765*^9, 3.824807701560233*^9, 3.824873826563829*^9, 
   3.8248742471228037`*^9, 3.82487576045492*^9, 3.8249140919586*^9, 
   3.8252315286413927`*^9, 3.825479316658215*^9, 3.831459021949203*^9, 
   3.832503953608832*^9, 3.832554928484054*^9, 3.8325735113440113`*^9, 
   3.8325744423531446`*^9, 3.832589511735489*^9, 3.8326450838718557`*^9, 
   3.83266117354935*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"a648dc07-4a84-4785-bcf9-d29a1e5096b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          
          DynamicModuleBox[{
           Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
           TemplateBox[{
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    
                    RowBox[{"1.`16.", ",", 
                    "33.19950000000000045474735088646411895752`16."}], "}"}], 
                    "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    
                    RowBox[{"1.`16.", ",", 
                    "33.19950000000000045474735088646411895752`16."}], "}"}], 
                    "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], 
             ButtonBox[
              DynamicBox[
               ToBoxes[
                If[
                 
                 Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                  "Local"], 
                 Style[
                 "This object cannot be used as input.", "SummaryEmbed"], 
                 BoxForm`EmbedSummaryLabel[InterpolatingFunction, 15457176, 
                  Dynamic[Typeset`embedState$$]]], StandardForm]], 
              ButtonFunction :> 
              BoxForm`EmbedSummaryInterpretation[
               InterpolatingFunction, 
                5760543651430778586319754734492344521437409259410960274960, 
                EvaluationBox[], 
                Dynamic[Typeset`embedState$$], StandardForm], 
              DefaultBaseStyle -> "SummaryEmbedButton", 
              BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
                
                And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
                 "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
              Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
            "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{1.000000000000000, 33.19950000000000}}, <>]"& \
)],
      False,
      BoxID -> 5760543651430778586319754734492344521437409259410960274960,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "[", "\[Eta]", "]"}]], ",", "0", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814019507844144*^9, 3.8140205595739193`*^9, 3.8140233783478518`*^9, 
   3.8141831528196583`*^9, 3.814189499319067*^9, 3.81471230620498*^9, 
   3.816513200607477*^9, 3.816757392336471*^9, 3.816768632389318*^9, 
   3.816949258870055*^9, 3.8233282123990707`*^9, 3.823673340026987*^9, {
   3.8239561121543837`*^9, 3.823956137510453*^9}, 3.823962063889941*^9, 
   3.824013653651513*^9, 3.8240226767805653`*^9, 3.824461567760273*^9, 
   3.824783174827413*^9, 3.824784716634219*^9, 3.82478615776749*^9, 
   3.82479154535765*^9, 3.824807701560233*^9, 3.824873826563829*^9, 
   3.8248742471228037`*^9, 3.82487576045492*^9, 3.8249140919586*^9, 
   3.8252315286413927`*^9, 3.825479316658215*^9, 3.831459021949203*^9, 
   3.832503953608832*^9, 3.832554928484054*^9, 3.8325735113440113`*^9, 
   3.8325744423531446`*^9, 3.832589511735489*^9, 3.8326450838718557`*^9, 
   3.832661173596785*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"4a0716f2-0193-4a25-bfd1-7a8655564ae1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0009072707588760338`", ",", "0.`", ",", "0.`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.814019507844144*^9, 3.8140205595739193`*^9, 3.8140233783478518`*^9, 
   3.8141831528196583`*^9, 3.814189499319067*^9, 3.81471230620498*^9, 
   3.816513200607477*^9, 3.816757392336471*^9, 3.816768632389318*^9, 
   3.816949258870055*^9, 3.8233282123990707`*^9, 3.823673340026987*^9, {
   3.8239561121543837`*^9, 3.823956137510453*^9}, 3.823962063889941*^9, 
   3.824013653651513*^9, 3.8240226767805653`*^9, 3.824461567760273*^9, 
   3.824783174827413*^9, 3.824784716634219*^9, 3.82478615776749*^9, 
   3.82479154535765*^9, 3.824807701560233*^9, 3.824873826563829*^9, 
   3.8248742471228037`*^9, 3.82487576045492*^9, 3.8249140919586*^9, 
   3.8252315286413927`*^9, 3.825479316658215*^9, 3.831459021949203*^9, 
   3.832503953608832*^9, 3.832554928484054*^9, 3.8325735113440113`*^9, 
   3.8325744423531446`*^9, 3.832589511735489*^9, 3.8326450838718557`*^9, 
   3.83266117362385*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"67ee483f-dea1-4469-8d0d-ae3454b406b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00997903302884801`", ",", "0.`", ",", "0.`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.814019507844144*^9, 3.8140205595739193`*^9, 3.8140233783478518`*^9, 
   3.8141831528196583`*^9, 3.814189499319067*^9, 3.81471230620498*^9, 
   3.816513200607477*^9, 3.816757392336471*^9, 3.816768632389318*^9, 
   3.816949258870055*^9, 3.8233282123990707`*^9, 3.823673340026987*^9, {
   3.8239561121543837`*^9, 3.823956137510453*^9}, 3.823962063889941*^9, 
   3.824013653651513*^9, 3.8240226767805653`*^9, 3.824461567760273*^9, 
   3.824783174827413*^9, 3.824784716634219*^9, 3.82478615776749*^9, 
   3.82479154535765*^9, 3.824807701560233*^9, 3.824873826563829*^9, 
   3.8248742471228037`*^9, 3.82487576045492*^9, 3.8249140919586*^9, 
   3.8252315286413927`*^9, 3.825479316658215*^9, 3.831459021949203*^9, 
   3.832503953608832*^9, 3.832554928484054*^9, 3.8325735113440113`*^9, 
   3.8325744423531446`*^9, 3.832589511735489*^9, 3.8326450838718557`*^9, 
   3.832661173663342*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"4b4af7ef-3cca-488d-8a40-f87fdd42c6e8"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.764615018515718*^9, 
  3.7646150283252087`*^9}},ExpressionUUID->"613e7941-c731-4506-8cb2-\
7ad2d577220a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Solve the equations numerically, given the functions in the metric explicitly\
\
\>", "Subsection",
 CellChangeTimes->{{3.763118974674986*^9, 3.7631190281931133`*^9}, 
   3.828536509686943*^9},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"5faf22dd-539f-46ad-8a8d-86e0aa24db02"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "SolveGeodesic"}], "\[IndentingNewLine]", 
 RowBox[{"?", "SolveEnergy"}]}], "Input",
 CellChangeTimes->{{3.831535802332799*^9, 3.8315358118793383`*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"5313e23a-6cc2-4f49-a34b-43075b243394"],

Cell[CellGroupData[{

Cell[BoxData["\<\"SolveGeodesic[geod_eq, initial_conditions, \
\\!\\(\\*SuperscriptBox[\\(X\\), \\(i\\)]\\),\\!\\(\\*SuperscriptBox[\\(V\\), \
\\(i\\)]\\),param, time, tin,tfin, method, \
workingprecision_,precision_,interpolation_, number_maxsteps]. Solve the ODE \
for the geodesic equations and returns the position and the tangent vectors\"\
\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.832504014636136*^9},
 CellTags->
  "Info1283832511214-2235383",ExpressionUUID->"2aa45ccc-b0d0-4e9a-ba22-\
9d13465c72c9"],

Cell[BoxData["\<\"SolveEnergy[energy_eq, initial_conditions, {E,\[Lambda]}, \
geodesic_solution, param, time, tin,tfin, method, \
workingprecision_,precision_,interpolation_, number_maxsteps]. Solve the ODE \
for the energy\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.832504014710313*^9},
 CellTags->
  "Info1293832511214-2235383",ExpressionUUID->"607e3ad2-d98f-455b-834f-\
fb69acf3b537"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"AbsoluteTiming", "[", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"opts", "=", 
       RowBox[{"SystemOptions", "[", "]"}]}], "}"}], ",", 
     RowBox[{"Internal`WithLocalSettings", "[", 
      RowBox[{
       RowBox[{"SetSystemOptions", "[", 
        RowBox[{"\"\<NDSolveOptions\>\"", "\[Rule]", 
         RowBox[{"\"\<DefaultSolveTimeConstraint\>\"", "\[Rule]", "40.`"}]}], 
        "]"}], ",", 
       RowBox[{
        RowBox[{"solgeodesic", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"SolveGeodesic", "[", 
           RowBox[{
           "geodBG", ",", "initialBG", ",", "X", ",", "V", ",", "param", ",", 
            "\[Eta]", ",", "\[Eta]in", ",", "ETA0", ",", "\"\<SS\>\"", ",", 
            "40", ",", "prec", ",", "10", ",", "15"}], "]"}], "]"}]}], ";"}], 
       ",", 
       RowBox[{"SetSystemOptions", "[", "opts", "]"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.76371892442699*^9, 3.763718954413937*^9}, {
   3.763722092366746*^9, 3.763722093636146*^9}, {3.764479840806929*^9, 
   3.764479853722013*^9}, {3.764505662934044*^9, 3.764505683818824*^9}, {
   3.7645805418501663`*^9, 3.7645805494957247`*^9}, {3.76458061730269*^9, 
   3.764580645972641*^9}, {3.764615376676187*^9, 3.764615388464945*^9}, {
   3.764615801453038*^9, 3.76461581145158*^9}, {3.764618872599441*^9, 
   3.764618873755761*^9}, {3.7672523298401213`*^9, 3.767252339285553*^9}, {
   3.774247822588682*^9, 3.774247825494513*^9}, {3.774249081273717*^9, 
   3.774249082438322*^9}, {3.774249449325238*^9, 3.774249455843471*^9}, {
   3.774674627351758*^9, 3.77467462752989*^9}, {3.7746884148409653`*^9, 
   3.774688415024538*^9}, {3.77668142627005*^9, 3.776681443426858*^9}, {
   3.776681563867732*^9, 3.776681570467658*^9}, {3.776689932967918*^9, 
   3.776689933539662*^9}, {3.777029084960837*^9, 3.777029085128442*^9}, {
   3.7773010832775517`*^9, 3.777301083437196*^9}, {3.7773652690163403`*^9, 
   3.7773652691507683`*^9}, {3.777556619058949*^9, 3.777556619151752*^9}, {
   3.7776331642271557`*^9, 3.777633195684018*^9}, {3.777640211245924*^9, 
   3.7776402114092083`*^9}, {3.777719469079072*^9, 3.777719477847217*^9}, {
   3.7778178592072287`*^9, 3.777817860146696*^9}, {3.7778179162002277`*^9, 
   3.77781791634726*^9}, {3.7778181575800962`*^9, 3.77781815770121*^9}, {
   3.7778189215212173`*^9, 3.777818921608848*^9}, 3.77781901207014*^9, {
   3.783007785923088*^9, 3.783007787783044*^9}, {3.793608343313713*^9, 
   3.7936083434552107`*^9}, {3.793609201562985*^9, 3.793609206464373*^9}, {
   3.7936124366915903`*^9, 3.793612440764887*^9}, {3.796392920815716*^9, 
   3.796392930094741*^9}, {3.79647339429694*^9, 3.796473397186521*^9}, 
   3.809956045410503*^9, {3.813991582719645*^9, 3.8139915918201933`*^9}, {
   3.8139918127249403`*^9, 3.813991880811288*^9}, {3.813991948297155*^9, 
   3.8139919504619913`*^9}, {3.8140209287700357`*^9, 3.814020931084323*^9}, {
   3.814021002555292*^9, 3.8140210051659317`*^9}, {3.814022129965464*^9, 
   3.8140221333421793`*^9}, {3.8140235232883263`*^9, 3.814023532324939*^9}, {
   3.814023622528304*^9, 3.8140236232453213`*^9}, {3.814023741767757*^9, 
   3.814023744895144*^9}, {3.814025322307529*^9, 3.814025331339484*^9}, {
   3.814195509190742*^9, 3.814195512651032*^9}, {3.8147123547761803`*^9, 
   3.814712376278858*^9}, 3.814713467473716*^9, {3.8147135073346786`*^9, 
   3.8147135075318737`*^9}, 3.824784044003284*^9, {3.824785221334702*^9, 
   3.824785251973282*^9}, {3.824786179147142*^9, 3.824786192617124*^9}, {
   3.82478686672968*^9, 3.824786868713483*^9}, {3.824820288639673*^9, 
   3.824820305845523*^9}, {3.824820340362938*^9, 3.824820342987302*^9}, {
   3.824873848129334*^9, 3.8248738628648977`*^9}, {3.824874986809915*^9, 
   3.8248749896304626`*^9}, {3.824875778729281*^9, 3.824875778882481*^9}, {
   3.825039153335207*^9, 3.82503915349102*^9}, {3.8325058803100233`*^9, 
   3.832505882316391*^9}, 3.832532363124723*^9, {3.832554942823897*^9, 
   3.832554942975862*^9}, {3.83256101319656*^9, 3.832561015602355*^9}, {
   3.832562862887184*^9, 3.832562864660799*^9}, 3.832563991079289*^9, {
   3.832564914666847*^9, 3.832564922180461*^9}, {3.8325744500416822`*^9, 
   3.832574451272234*^9}, {3.832645098176265*^9, 3.8326451064623413`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"6e301f91-4ed4-4c24-8198-251294853cc0"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","precw",
   "\"The precision of the differential equation (\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \
\\\"}\\\"}]\\)) is less than WorkingPrecision \
(\\!\\(\\*RowBox[{\\\"40.`\\\"}]\\)).\"",2,102,1,16928609967472609154,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.82523158673273*^9, 3.8325043123923893`*^9, 
  3.832505918909573*^9, 3.832532400242012*^9, 3.832554946566407*^9, 
  3.8325610263181753`*^9, 3.832562868208755*^9, 3.832563995021988*^9, 
  3.832564925618011*^9, 3.832573549847329*^9, 3.832574492453043*^9, 
  3.832645159380415*^9},
 CellLabel->
  "During evaluation of \
In[102]:=",ExpressionUUID->"e6b2ad5d-1926-481e-be67-2308c3f33cb6"],

Cell[BoxData[
 TemplateBox[{
  "SystemOptions","noset",
   "\"The value of SystemOption \
\\!\\(\\*RowBox[{\\\"\\\\\\\"PreemptiveCheckUseThreads\\\\\\\"\\\"}]\\) \
cannot be modified.\"",2,102,2,16928609967472609154,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.82523158673273*^9, 3.8325043123923893`*^9, 
  3.832505918909573*^9, 3.832532400242012*^9, 3.832554946566407*^9, 
  3.8325610263181753`*^9, 3.832562868208755*^9, 3.832563995021988*^9, 
  3.832564925618011*^9, 3.832573549847329*^9, 3.832574492453043*^9, 
  3.832645281055952*^9},
 CellLabel->
  "During evaluation of \
In[102]:=",ExpressionUUID->"fff9b7e8-3890-4d9d-a7e9-1e19a80ccb2e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"155.231346`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.814712424701055*^9, 3.814713476546067*^9, 
  3.81471351932335*^9, 3.816513280522159*^9, 3.8167575802793293`*^9, 
  3.8169516393362017`*^9, 3.8236905189186583`*^9, 3.823956428807424*^9, 
  3.824022684514629*^9, 3.8244618491376963`*^9, 3.824783336493531*^9, 
  3.824784117880075*^9, 3.824784802571434*^9, 3.824785272397531*^9, 
  3.824786860129614*^9, 3.824786949423067*^9, 3.824791608170947*^9, 
  3.824807765000325*^9, 3.824820336363719*^9, 3.824820417899529*^9, 
  3.824875041075533*^9, 3.8248758353055143`*^9, 3.82491418317587*^9, 
  3.825231548603427*^9, 3.825231842596904*^9, 3.832504415089869*^9, 
  3.8325074018803453`*^9, 3.832532931202231*^9, 3.8325550624003983`*^9, 
  3.832561070142632*^9, 3.832563023111319*^9, 3.832563997234302*^9, 
  3.832565190537215*^9, 3.8325735727720613`*^9, 3.832574958899048*^9, 
  3.832645281057695*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"9660a995-9dd1-495a-88e2-16596cb985ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"AbsoluteTiming", "[", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"opts", "=", 
        RowBox[{"SystemOptions", "[", "]"}]}], "}"}], ",", 
      RowBox[{"Internal`WithLocalSettings", "[", 
       RowBox[{
        RowBox[{"SetSystemOptions", "[", 
         RowBox[{"\"\<NDSolveOptions\>\"", "\[Rule]", 
          RowBox[{"\"\<DefaultSolveTimeConstraint\>\"", "\[Rule]", "40.`"}]}],
          "]"}], ",", 
        RowBox[{
         RowBox[{"solenergy", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"SolveEnergy", "[", 
            RowBox[{
            "enereqBG", ",", "initialenergy", ",", "Energy", ",", 
             "solgeodesic", ",", "param", ",", "\[Eta]", ",", "\[Eta]in", ",",
              "ETA0", ",", "\"\<SS\>\"", ",", "40", ",", "prec", ",", "10", 
             ",", "15"}], "]"}], "]"}]}], ";"}], ",", 
        RowBox[{"SetSystemOptions", "[", "opts", "]"}]}], "]"}]}], "]"}], 
    "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7766814287050533`*^9, 3.776681429288889*^9}, {
   3.776681575521386*^9, 3.7766815766766577`*^9}, {3.7766903973785763`*^9, 
   3.7766903978989563`*^9}, {3.776690445518849*^9, 3.776690472081419*^9}, {
   3.7770292200766773`*^9, 3.777029220891447*^9}, {3.777301089542259*^9, 
   3.777301089712685*^9}, {3.777365279668275*^9, 3.777365279975569*^9}, {
   3.7776332063610163`*^9, 3.777633221549472*^9}, {3.777640303001704*^9, 
   3.777640307630866*^9}, {3.777641273721468*^9, 3.777641273853119*^9}, {
   3.7777194929880447`*^9, 3.777719496462398*^9}, {3.777817875317622*^9, 
   3.777817875466077*^9}, {3.777817925866531*^9, 3.777817926022211*^9}, {
   3.7778181792169313`*^9, 3.777818179434053*^9}, 3.77781825496129*^9, {
   3.777818929979312*^9, 3.77781893013634*^9}, 3.7778190200785007`*^9, {
   3.777878638164239*^9, 3.777878725001746*^9}, {3.777878799881075*^9, 
   3.777878885153693*^9}, {3.7779017546396847`*^9, 3.77790176324475*^9}, {
   3.778490634098775*^9, 3.778490634606901*^9}, {3.779028400455138*^9, 
   3.779028400611511*^9}, {3.781438542926674*^9, 3.7814385518321457`*^9}, 
   3.781869300526091*^9, 3.781869390117505*^9, {3.78186955332355*^9, 
   3.781869582350049*^9}, 3.781873274937641*^9, {3.7827487366262608`*^9, 
   3.782748740150651*^9}, {3.782748878441347*^9, 3.782748883819584*^9}, 
   3.782749968104707*^9, {3.783007837032131*^9, 3.7830078391190853`*^9}, {
   3.783077992382422*^9, 3.783077992599379*^9}, {3.783148111979987*^9, 
   3.78314813694205*^9}, {3.7831481714126787`*^9, 3.7831481739205513`*^9}, {
   3.783148208763623*^9, 3.7831482584993896`*^9}, {3.793555185818071*^9, 
   3.7935551881978207`*^9}, {3.793555510007248*^9, 3.793555514199222*^9}, {
   3.793557415313055*^9, 3.79355741865099*^9}, 3.793607055454872*^9, {
   3.7936083382770844`*^9, 3.793608338428793*^9}, {3.7936092118505363`*^9, 
   3.793609216562358*^9}, {3.796392944818873*^9, 3.796392950586523*^9}, {
   3.796473414980427*^9, 3.79647341759021*^9}, {3.8099560270365887`*^9, 
   3.809956038516172*^9}, {3.813992086587268*^9, 3.813992183302847*^9}, {
   3.8140209509764442`*^9, 3.814020953849504*^9}, {3.814021008924177*^9, 
   3.8140210125170813`*^9}, {3.814022143340632*^9, 3.814022147129292*^9}, 
   3.814023536202969*^9, {3.814023629253447*^9, 3.814023629848819*^9}, {
   3.814023750012591*^9, 3.814023752170246*^9}, {3.814025337624304*^9, 
   3.8140253446564198`*^9}, 3.814713470438312*^9, {3.814713513508678*^9, 
   3.8147135136884737`*^9}, {3.824820323446108*^9, 3.82482035086451*^9}, {
   3.8250391566461887`*^9, 3.8250391569140863`*^9}, {3.832504497906596*^9, 
   3.83250450032446*^9}, {3.8325058888843613`*^9, 3.832505890303603*^9}, 
   3.832561021352129*^9, {3.832562871394272*^9, 3.832562872548131*^9}, {
   3.832564928800631*^9, 3.832564930037014*^9}, {3.832574456678184*^9, 
   3.8325744579466553`*^9}, 3.8326451228769693`*^9},
 CellLabel->
  "In[103]:=",ExpressionUUID->"0a7ed9f9-d64e-46e1-984f-ec59fb83b082"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","precw",
   "\"The precision of the differential equation (\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"energy\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"\[Eta]\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", RowBox[{RowBox[{\\\"energy\\\", \\\"[\\\", \\\"\[Eta]\\\", \
\\\"]\\\"}], \\\" \\\", RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"[\\\", \\\"\[Eta]\\\", \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"InterpolatingFunction\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"13\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"64400\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"[\\\", \
\\\"\[Eta]\\\", \\\"]\\\"}], \\\" \\\", \
SuperscriptBox[RowBox[{RowBox[{\\\"InterpolatingFunction\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"5\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"2\\\"]}], \\\"+\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\"+\\\", \
RowBox[{RowBox[{RowBox[{\\\"InterpolatingFunction\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"13\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"64400\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"[\\\", \
\\\"\[Eta]\\\", \\\"]\\\"}], \\\" \\\", \
SuperscriptBox[RowBox[{RowBox[{\\\"InterpolatingFunction\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"5\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"2\\\"]}]}], \\\")\\\"}]}]}], \\\",\\\
\", RowBox[{RowBox[{SuperscriptBox[\\\"\[Lambda]\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"\[Eta]\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", FractionBox[RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"[\\\", \\\"\[Eta]\\\", \\\"]\\\"}], \
RowBox[{\\\"energy\\\", \\\"[\\\", \\\"\[Eta]\\\", \\\"]\\\"}]]}], \\\",\\\", \
RowBox[{RowBox[{\\\"energy\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"45\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"-\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"58\\\", \\\"\
\[RightSkeleton]\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{\\\"\[Lambda]\\\", \
\\\"[\\\", \\\"10.01050000000000039790393202565610408783`16.\\\", \
\\\"]\\\"}], \\\"\[Equal]\\\", \\\"1\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"}\\\"}]}], \\\"}\\\"}]\\)) is less than WorkingPrecision \
(\\!\\(\\*RowBox[{\\\"40.`\\\"}]\\)).\"",2,103,3,16928609967472609154,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.823956740401198*^9, 3.824462157320966*^9, 
  3.824783354136574*^9, 3.8247841322245073`*^9, 3.824784816152587*^9, 
  3.82478528631352*^9, 3.824786960616581*^9, 3.824791619371058*^9, 
  3.824807776169105*^9, 3.8248204228401823`*^9, 3.8248758399300947`*^9, 
  3.824914205506669*^9, 3.825232031056703*^9, 3.83250450496644*^9, 
  3.832507416309401*^9, 3.832532997868569*^9, 3.832555063902142*^9, 
  3.832561070801909*^9, 3.8325630247454863`*^9, 3.832563997624633*^9, 
  3.832565193151614*^9, 3.8325749633253813`*^9, 3.832645283270443*^9},
 CellLabel->
  "During evaluation of \
In[103]:=",ExpressionUUID->"23c1523d-9987-4e0b-8eaf-10e57b858d69"],

Cell[BoxData[
 TemplateBox[{
  "SystemOptions","noset",
   "\"The value of SystemOption \
\\!\\(\\*RowBox[{\\\"\\\\\\\"PreemptiveCheckUseThreads\\\\\\\"\\\"}]\\) \
cannot be modified.\"",2,103,4,16928609967472609154,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.823956740401198*^9, 3.824462157320966*^9, 
  3.824783354136574*^9, 3.8247841322245073`*^9, 3.824784816152587*^9, 
  3.82478528631352*^9, 3.824786960616581*^9, 3.824791619371058*^9, 
  3.824807776169105*^9, 3.8248204228401823`*^9, 3.8248758399300947`*^9, 
  3.824914205506669*^9, 3.825232031056703*^9, 3.83250450496644*^9, 
  3.832507416309401*^9, 3.832532997868569*^9, 3.832555063902142*^9, 
  3.832561070801909*^9, 3.8325630247454863`*^9, 3.832563997624633*^9, 
  3.832565193151614*^9, 3.8325749633253813`*^9, 3.832645351504677*^9},
 CellLabel->
  "During evaluation of \
In[103]:=",ExpressionUUID->"5d57caa9-4533-45f1-9c5a-d0016a1ec40e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"70.398434`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.76371897145651*^9, {3.763719234923517*^9, 3.763719305634983*^9}, 
   3.763722101886738*^9, 3.7637236367036867`*^9, 3.764100844816217*^9, {
   3.7641010389441233`*^9, 3.7641010553325157`*^9}, 3.764101086281755*^9, {
   3.764101156876964*^9, 3.764101206076919*^9}, {3.76410124615355*^9, 
   3.764101288565671*^9}, 3.764102366968223*^9, 3.764102435741137*^9, 
   3.764102645422649*^9, 3.7643107132465973`*^9, 3.7643141200701933`*^9, 
   3.764318081454*^9, 3.764320764688628*^9, 3.764320830838665*^9, 
   3.764321360276607*^9, 3.764321722569565*^9, {3.764322696041892*^9, 
   3.764322718397462*^9}, 3.7643227550556192`*^9, {3.764322798422702*^9, 
   3.764322846195113*^9}, 3.764322956370307*^9, 3.764325531588908*^9, 
   3.764411261965157*^9, 3.7644798601054153`*^9, 3.764492192628666*^9, 
   3.7644946166154213`*^9, 3.764505618901692*^9, {3.764505669382761*^9, 
   3.764505688700747*^9}, 3.764506327774509*^9, 3.764509525273835*^9, 
   3.764569823928591*^9, 3.7645805522271442`*^9, {3.7645806258238688`*^9, 
   3.764580648319098*^9}, 3.764615392305032*^9, 3.76461889277942*^9, 
   3.766483549202168*^9, 3.766764789928156*^9, 3.766995775772521*^9, 
   3.767004905019603*^9, 3.767252350676763*^9, 3.767279163778816*^9, 
   3.767441005819416*^9, 3.767441817160981*^9, 3.767507141703824*^9, 
   3.767554825593038*^9, 3.7675561150098763`*^9, 3.7675913614333153`*^9, 
   3.767597529805512*^9, 3.768815906736001*^9, 3.768818724069668*^9, 
   3.769364776628233*^9, 3.769426391890191*^9, 3.7695028386990347`*^9, 
   3.7695752610397367`*^9, 3.7695765872050667`*^9, 3.769589361528872*^9, 
   3.769593829074142*^9, 3.769756794163639*^9, 3.769854893162168*^9, 
   3.774017814399201*^9, 3.774247831160474*^9, 3.774248045668064*^9, 
   3.774249217282917*^9, 3.7742496920484962`*^9, 3.7746746366394453`*^9, 
   3.774676549493849*^9, 3.774678698698669*^9, 3.7746840591487713`*^9, 
   3.774688296119985*^9, 3.774688335732687*^9, 3.7746884931538677`*^9, 
   3.776681293097065*^9, 3.776681345437667*^9, 3.776681644634083*^9, 
   3.7766817580525637`*^9, 3.77668616412024*^9, 3.776689640942438*^9, 
   3.776690049100555*^9, 3.776690362899445*^9, 3.776690412174458*^9, 
   3.7766904506738377`*^9, 3.776690694996805*^9, 3.77703068827761*^9, 
   3.777301150161541*^9, 3.777365399612876*^9, 3.777557012594873*^9, {
   3.777633214416901*^9, 3.7776332236829433`*^9}, 3.777641270388194*^9, 
   3.7776418861660748`*^9, 3.777719504001759*^9, 3.7778178802073708`*^9, 
   3.777817929530623*^9, 3.777818229910962*^9, 3.777818466915362*^9, 
   3.777818933525238*^9, {3.777819001406212*^9, 3.777819026391532*^9}, 
   3.777857733824191*^9, 3.7778777686046467`*^9, {3.777878868604598*^9, 
   3.777878892014427*^9}, 3.777891258673081*^9, 3.777901774912285*^9, 
   3.778300410645606*^9, 3.778412461263648*^9, 3.778490640742873*^9, 
   3.778823941152411*^9, 3.7788450489837027`*^9, 3.778851635440186*^9, 
   3.7789967223555202`*^9, 3.779027162834166*^9, 3.7790284046853933`*^9, 
   3.779092274681521*^9, 3.78143855721731*^9, 3.7815151476640453`*^9, {
   3.781869283612424*^9, 3.781869308330776*^9}, 3.7818693972192497`*^9, {
   3.781869564838255*^9, 3.781869586823204*^9}, 3.781873831142655*^9, 
   3.7820292096410646`*^9, 3.7820377608137617`*^9, 3.782223077028471*^9, 
   3.782248067375554*^9, 3.782301892519989*^9, 3.782465088755105*^9, 
   3.7824813677393713`*^9, 3.78257061109298*^9, 3.782655384455289*^9, 
   3.7827488616707907`*^9, 3.782749434398741*^9, 3.782804378457819*^9, 
   3.78300794098981*^9, 3.783077938122115*^9, 3.7830781736664333`*^9, {
   3.78314813141264*^9, 3.783148142354123*^9}, 3.783148183533206*^9, 
   3.783149169084524*^9, 3.7906783956640987`*^9, 3.7935433021901283`*^9, 
   3.793552469135646*^9, 3.793554976647695*^9, 3.793555179591741*^9, 
   3.793555317129508*^9, 3.7935560320835*^9, 3.793557164391923*^9, 
   3.793560669068533*^9, 3.793607534932824*^9, 3.793612355734942*^9, 
   3.7936172625318527`*^9, 3.793801139844224*^9, 3.796395453201365*^9, 
   3.796484079508369*^9, 3.79862226994963*^9, 3.8099715548564796`*^9, 
   3.8139921865523167`*^9, 3.814021101654984*^9, 3.8140234952038107`*^9, 
   3.8140236021172113`*^9, 3.81402371633642*^9, 3.814026263810905*^9, 
   3.814191021614835*^9, 3.814192554246736*^9, 3.814712487193612*^9, 
   3.814713477200762*^9, 3.814713524426207*^9, 3.816513305470881*^9, 
   3.816757926700945*^9, 3.816952607596861*^9, 3.823690854595409*^9, 
   3.8239567404043407`*^9, 3.824462157331107*^9, 3.824783354145873*^9, 
   3.824784132233694*^9, 3.824784816161601*^9, 3.824785286323469*^9, 
   3.824786960624992*^9, 3.824791619379283*^9, 3.824807776175366*^9, 
   3.8248204228463583`*^9, 3.824875839936755*^9, 3.8249142055136223`*^9, 
   3.825232031069553*^9, 3.832505436601285*^9, 3.832511610708165*^9, 
   3.832537220280361*^9, 3.832555192565215*^9, 3.832561119012569*^9, 
   3.832563223386417*^9, 3.8325648969229507`*^9, 3.832565759240816*^9, 
   3.832575565106234*^9, 3.832645351505875*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"e407ea94-8641-46cb-9037-3d14a1053688"]
}, Open  ]],

Cell["\<\
Test that the constraint conditions are satisfied for all the evolution\
\>", "Text",
 CellChangeTimes->{{3.754061179501211*^9, 3.754061186803686*^9}, {
  3.7540824167130213`*^9, 3.754082495836673*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"11e99ea9-1e82-4cae-80df-8b174a6c03a0"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"geodesic", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"solgeodesic", ",", "solenergy"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8099560750648317`*^9, 3.809956084707155*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"2dba5fd1-05ee-4a33-8e6b-cace80e918d9"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{"solgeodesic", ",", "solenergy"}], "]"}], ">>", 
    "\"\<FLRWSolver_StoO_geodesic_bisect_0p05.m\>\""}], ";"}]}]], "Input",
 CellChangeTimes->{{3.796392978709506*^9, 3.796393007623055*^9}, {
   3.796393049051498*^9, 3.796393070643718*^9}, {3.809956057970276*^9, 
   3.809956065755035*^9}, {3.8100048559259863`*^9, 3.8100048613950787`*^9}, {
   3.813992201200094*^9, 3.8139922046158257`*^9}, {3.814021179384224*^9, 
   3.814021183498226*^9}, {3.8167616705914087`*^9, 3.8167616768098392`*^9}, {
   3.8169512962745132`*^9, 3.816951301219926*^9}, {3.816952952974451*^9, 
   3.816952954360464*^9}, {3.8239562515843353`*^9, 3.8239562554764233`*^9}, {
   3.824783425274621*^9, 3.8247834278769293`*^9}, {3.832588123827907*^9, 
   3.832588130827917*^9}, 3.8325882222660418`*^9, 3.83258954919348*^9},
 CellLabel->
  "In[114]:=",ExpressionUUID->"4226a5c1-ff62-4792-9e43-b4c013c5464a"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"geodesic", "=", 
    RowBox[{"<<", "\"\<FLRWSolver_StoO_geodesic_bisect_0p05.m\>\""}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.801891896007044*^9, 3.8018919270583153`*^9}, {
   3.80995620949933*^9, 3.8099562103242292`*^9}, 3.813992221018531*^9, {
   3.8167686644251337`*^9, 3.816768704284824*^9}, 3.823328230182084*^9, 
   3.8239620796587*^9, {3.825479331574005*^9, 3.825479332005904*^9}, {
   3.832589534737821*^9, 3.832589535826325*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"650fc979-7060-4ed1-8342-8ca2980ca07a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"EBG", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{
      RowBox[{"energy", "[", "\[Eta]", "]"}], "/.", "geodesic"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"lup", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{
      RowBox[{"EBG", "[", "\[Eta]", "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nup", "[", "\[Eta]", "]"}], "+", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"VV", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ldown", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{
      RowBox[{"EBG", "[", "\[Eta]", "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ndown", "[", "\[Eta]", "]"}], "+", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"gg", "[", "\[Eta]", "]"}], ".", 
            RowBox[{"VV", "[", "\[Eta]", "]"}]}]}], "}"}], "]"}]}], ")"}]}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"titolo", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"gg", "[", "\[Eta]", "]"}], ".", 
            RowBox[{"VV", "[", "\[Eta]", "]"}], ".", 
            RowBox[{"VV", "[", "\[Eta]", "]"}]}], "-", "1"}], "}"}], "/.", 
         "geodesic"}], "/.", "param"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Eta]", ",", " ", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"WorkingPrecision", "\[Rule]", "60"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "0.7"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"StandardPlotStyle", "[", 
        RowBox[{
        "16", ",", "24", ",", "\"\<Violation\>\"", ",", 
         "\"\<\!\(\*FractionBox[\(\[Eta]\), \(L\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \(ij\)]\)\!\(\*SuperscriptBox[\
\(V\), \(i\)]\)\!\(\*SuperscriptBox[\(V\), \(j\)]\)-1\>\"", ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
           RowBox[{"lup", "[", "\[Eta]", "]"}], ".", 
           RowBox[{"lup", "[", "\[Eta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"lup", "[", "\[Eta]", "]"}], ".", 
           RowBox[{"ldown", "[", "\[Eta]", "]"}]}]}], "}"}], "/.", 
        "geodesic"}], "/.", "param"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", ",", " ", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "60"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.7"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"StandardPlotStyle", "[", 
       RowBox[{
       "16", ",", "24", ",", "\"\<Violation\>\"", ",", 
        "\"\<\!\(\*FractionBox[\(\[Eta]\), \(L\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(g\), \(\[Mu]\[Nu]\)]\)\!\(\*SuperscriptBox[\
\(\[ScriptL]\), \(\[Mu]\)]\)\!\(\*SuperscriptBox[\(\[ScriptL]\), \(\[Nu]\)]\)\
\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<up-up\>\"", ",", "\"\<up-down\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.6", ",", "0.6"}], "}"}]}], "]"}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.763719434972233*^9, 3.763719435483898*^9}, {
   3.763721543701651*^9, 3.763721546262236*^9}, {3.7637217811182632`*^9, 
   3.763721909416477*^9}, {3.7637219832849483`*^9, 3.763722006259466*^9}, {
   3.763722243956156*^9, 3.763722257763195*^9}, {3.763723362761815*^9, 
   3.7637233715083523`*^9}, {3.7641013467961283`*^9, 3.764101371673562*^9}, {
   3.764101454278249*^9, 3.764101464319109*^9}, {3.764101955643136*^9, 
   3.764101980236724*^9}, 3.764102387798958*^9, {3.764102454278974*^9, 
   3.7641024568257113`*^9}, {3.764102491080119*^9, 3.764102492506068*^9}, {
   3.7641025267395773`*^9, 3.7641025402970037`*^9}, {3.764102673550685*^9, 
   3.764102676383593*^9}, {3.76410270927052*^9, 3.764102710277761*^9}, 
   3.764313624810568*^9, {3.764313662749694*^9, 3.7643137005369043`*^9}, {
   3.7643142379826*^9, 3.7643142952255983`*^9}, 3.764314330604854*^9, {
   3.764315943063479*^9, 3.7643159968074427`*^9}, {3.764316043293726*^9, 
   3.764316055152411*^9}, {3.764316622969741*^9, 3.764316623204605*^9}, {
   3.764321748620449*^9, 3.764321757409371*^9}, {3.764480192220785*^9, 
   3.7644802103918867`*^9}, {3.7644802557988997`*^9, 3.764480283742496*^9}, {
   3.764491030084688*^9, 3.7644910374854517`*^9}, {3.764497433491476*^9, 
   3.7644975043814993`*^9}, 3.764497578009921*^9, {3.76450985586812*^9, 
   3.764509902856977*^9}, {3.764509946225103*^9, 3.7645099502828836`*^9}, {
   3.7645699613668747`*^9, 3.764569966309663*^9}, {3.764570002415554*^9, 
   3.764570038132008*^9}, {3.764615521237197*^9, 3.764615559775125*^9}, {
   3.764615863869206*^9, 3.7646158698526897`*^9}, 3.766995829976804*^9, {
   3.767252390217844*^9, 3.7672523907293453`*^9}, {3.76751379236558*^9, 
   3.7675137999195747`*^9}, {3.76751383875298*^9, 3.767513838877573*^9}, {
   3.769503248079969*^9, 3.769503275141227*^9}, {3.774678577933098*^9, 
   3.774678581378001*^9}, {3.776681385942874*^9, 3.776681386507709*^9}, {
   3.776681792760906*^9, 3.776681826223493*^9}, {3.7766818569272833`*^9, 
   3.7766819045686483`*^9}, {3.776686211778651*^9, 3.776686222590562*^9}, {
   3.776686257004992*^9, 3.7766862984003267`*^9}, {3.777032623991035*^9, 
   3.777032632459632*^9}, {3.777032668445517*^9, 3.7770326707706337`*^9}, {
   3.77703278949632*^9, 3.7770327912309713`*^9}, 3.777301228137959*^9, {
   3.777365448431951*^9, 3.77736545288533*^9}, {3.777365550784769*^9, 
   3.777365555400477*^9}, {3.777557027437902*^9, 3.7775570297912083`*^9}, {
   3.7776441942945633`*^9, 3.777644198786882*^9}, {3.77771951231291*^9, 
   3.777719514334148*^9}, {3.7778789070389833`*^9, 3.777879045051299*^9}, {
   3.7778912918179693`*^9, 3.777891292314701*^9}, {3.7814385703491707`*^9, 
   3.78143857642424*^9}, {3.78186965193995*^9, 3.781869654438428*^9}, {
   3.782750495032322*^9, 3.782750504250551*^9}, {3.782803339954884*^9, 
   3.782803386480481*^9}, {3.7830078774087276`*^9, 3.78300787771766*^9}, {
   3.7937975421280203`*^9, 3.793797559069969*^9}, {3.793803359022931*^9, 
   3.7938033618340273`*^9}, {3.793803641843972*^9, 3.793803898881201*^9}, 
   3.793803938547357*^9, {3.7938046393611813`*^9, 3.793804665461956*^9}, {
   3.793804700244523*^9, 3.793804732886063*^9}, {3.793805382033675*^9, 
   3.793805382404553*^9}, {3.793806615638439*^9, 3.7938066183779373`*^9}, {
   3.793806685722521*^9, 3.793806756654562*^9}, {3.7938068902778883`*^9, 
   3.793806941380974*^9}, 3.793806980671104*^9, {3.793807069214363*^9, 
   3.793807180754139*^9}, {3.7938072138839273`*^9, 3.793807274494968*^9}, {
   3.793807305715425*^9, 3.793807310133664*^9}, {3.7938075315886383`*^9, 
   3.7938076059100533`*^9}, {3.793807643435184*^9, 3.793807676536365*^9}, {
   3.7938078435854683`*^9, 3.793807868115765*^9}, {3.793808465857482*^9, 
   3.793808492629897*^9}, {3.793808650243978*^9, 3.793808689471798*^9}, {
   3.793809050087244*^9, 3.793809074691642*^9}, {3.793809109927245*^9, 
   3.793809131011176*^9}, {3.7950983487357893`*^9, 3.795098467884663*^9}, {
   3.7950985581561823`*^9, 3.7950986794241323`*^9}, {3.795098743751432*^9, 
   3.795098746431548*^9}, {3.7950987783741493`*^9, 3.7950988915523767`*^9}, {
   3.795098922337212*^9, 3.795098971888425*^9}, {3.795099104816133*^9, 
   3.795099169572506*^9}, {3.795099233698803*^9, 3.7950992485034943`*^9}, {
   3.79509936784308*^9, 3.795099381815846*^9}, {3.795099701560132*^9, 
   3.795099716682247*^9}, {3.795099754441259*^9, 3.7950997570203037`*^9}, {
   3.8018919492697077`*^9, 3.8018919565936403`*^9}, 3.814021281234577*^9, {
   3.8141940322191553`*^9, 3.814194071572752*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"e804d931-c200-41ca-b38f-c3ef7bf35c9a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
iwL3vgPTbq85OGR7bvuBORRMvkjbZ1rFQTWv+4p+cynoWxn9zZZ+3vno+89e
YhScn563uOwNB5Ni/pbvmU9Bbmdos+Y/DjamLo3eJUlBmQIp49jOwb8FW2x2
SFNw4YRfyogsF9c8OqxsL0NBjLpW47wmDh5ovsrfvpAC4D3fyxriYC6zttJK
joLFN1VDRej+u4cHz1goUPCNHRO7RpGLC6Yl7DYo0vbY6co2NS5ullynaqpM
gYd2mMOqJVyMUHMbNlalYOPsmKkYOS5WGpx5tHYJBfFq/bentbg4uuFurIEG
ra+u7OmowUVNh077FcsoqBmx+eciz0U3n19q2svpeFXtpvyFXLwSrDa6VJuO
fz3rz0oRLraetaxW06XA69O145mGXBS5GnBOaQUF89nqPwlbLprcSXGUX0nB
O+VjZdGbuRhU/URd1oACsffPfJ0oLha28sYkDSk47is64bOCi+yeeSi2loJg
6Wjjiy5clBsziJ+zngJbHW5s60kubhfauUPEmAKdwqyNEvpcjJWOWPrPhIIu
XVWizJOLqF7w5TdJwar2TZuygrk4YdhW88OUgnbpttqxw1zUNf+e8BUoGFYw
ULG14qKnk9LO0Q0UeP5Mt7U052LGXjNN/kYKQp7XrM/eyMXXJ/Z9G7Cg4Dmj
0sbQg4ui8cm1nE0UfB5486BuGxchsyqxx4qCyxtbldnHuXi8qM/l41YKzK5I
9Ouf42IxztZ6t50C4Z5kvdcXuTjQtuJ7hw0FRwbMdlfGclGJ7fCs1Y6CjHNl
4QpXuOjw5WRSkwM9r82uCh9pf4JwrmuDEwUMmdebG8K5+EymWbvWmYJN5rW7
Ai9z8ffSLz+qXShY7/gyw/kxFw3WyTdUulJwJ4icOpLPRT9LRvLD3RQsuePz
98UJLl539t19353e33UpSnk5XHzvn6h715OCZ+nnbhxDLkqcLPuZ703n870S
KVLLRfPzzOc5vhT4lFS5fs/m4pkF5bYpfnS+x4Ko0wV0PekXes7uo+e9I/dO
TgMXhVT9/EMPUOAgeUFKpZWLprf++34ggIKHcuP1Rz5x8ZSuYuSeQNo/0zkp
toqL1Q8mxO0OU7Bfoy5621e6n/Vt6RuPUtAf/VT6cycXjWoKlq4PpkDKfkfF
JVo/eGNkifYJut4C+7l1/Vwsb3YhlUIp+Le2/EK5FA8nbNY0SZyi4FDhj1Xr
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
tdVLHMXY0/aGcVcBbHsrlRPo/P8DRcve+w==
       "]]},
     Annotation[#, "Charting`Private`Tag$7455#1"]& ]}, {}, {}},
  AspectRatio->0.7,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10.010500473244898`, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Violation\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
     "\"\\!\\(\\*FractionBox[\\(\[Eta]\\), \\(L\\)]\\)\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[FontSize -> 16],
  FrameTicks->{{True, True}, {True, True}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Opacity[0.2`16.], 
    Dashing[{Small, Small}]],
  ImagePadding->All,
  ImageSize->700,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \
\\(ij\\)]\\)\\!\\(\\*SuperscriptBox[\\(V\\), \
\\(i\\)]\\)\\!\\(\\*SuperscriptBox[\\(V\\), \\(j\\)]\\)-1\"", Bold, FontSize -> 
     16, StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.795098910580497*^9, 3.79509897355871*^9}, {
   3.795099137443042*^9, 3.795099171548579*^9}, 3.795099250079646*^9, 
   3.795099382847651*^9, {3.795099708966515*^9, 3.795099717891239*^9}, 
   3.795099758278062*^9, 3.796395467184165*^9, 3.7965410778043623`*^9, 
   3.7986222706420517`*^9, 3.801891960173587*^9, 3.810004844331047*^9, 
   3.8139922301371717`*^9, 3.814021234231444*^9, 3.814021284257633*^9, 
   3.814023509296721*^9, 3.814023604424999*^9, 3.814023718754924*^9, 
   3.8140264176844387`*^9, 3.814191026749206*^9, 3.814191525205409*^9, 
   3.814192559279036*^9, {3.8141940499652147`*^9, 3.814194074747751*^9}, 
   3.814712488139124*^9, 3.814713485717371*^9, 3.8147135247671947`*^9, 
   3.816513318202018*^9, 3.816757929885841*^9, 3.816768697374707*^9, 
   3.816952671302196*^9, 3.823328281430341*^9, 3.8236908721632338`*^9, 
   3.8239567533047657`*^9, 3.823962091410905*^9, 3.824463109355844*^9, 
   3.824783441447425*^9, 3.824783743923517*^9, 3.824784134147954*^9, 
   3.824784818064601*^9, 3.824785288048469*^9, 3.824786980631534*^9, 
   3.824791621306777*^9, 3.824807778044421*^9, 3.824820434354739*^9, 
   3.824873926750145*^9, 3.8248742831340427`*^9, 3.824875179481819*^9, 
   3.824875903393299*^9, 3.824914210960745*^9, 3.8252335222847757`*^9, 
   3.825479343206541*^9, 3.831459078090399*^9, 3.832505439123815*^9, 
   3.832511624940411*^9, 3.832537277106069*^9, 3.832555195543098*^9, 
   3.832561121282868*^9, 3.832563226741658*^9, 3.832566307231071*^9, 
   3.832575570441883*^9, 3.832589568092889*^9, 3.832645375494*^9, 
   3.832661188867917*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"7fa4a2dc-1ba9-4057-9089-9b954cb1df08"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
7g2/C9ATcOuoAuL7f1mP0mI=
         "]]},
       Annotation[#, "Charting`Private`Tag$7587#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
7g2/C9ATcOuoAuL7f1mP0mI=
         "]]},
       Annotation[#, "Charting`Private`Tag$7587#2"]& ]}, {}, {}}, InsetBox[
     TemplateBox[{
      StyleBox["\"up-up\"", FontSize -> 24, StripOnInput -> False],StyleBox[
       "\"up-down\"", FontSize -> 24, StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "5"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.6, 0.6}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->0.7,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{10.0105, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox["\"Violation\"", TraditionalForm], 
      FormBox["\"\"", TraditionalForm]}, {
      FormBox[
      "\"\\!\\(\\*FractionBox[\\(\[Eta]\\), \\(L\\)]\\)\"", TraditionalForm], 
      
      FormBox["\"\"", TraditionalForm]}},
   FrameStyle->Directive[FontSize -> 16],
   FrameTicks->{{True, True}, {True, True}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5], 
     Opacity[0.2`16.], 
     Dashing[{Small, Small}]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox[
     StyleBox[
     "\"\\!\\(\\*SubscriptBox[\\(g\\), \
\\(\[Mu]\[Nu]\\)]\\)\\!\\(\\*SuperscriptBox[\\(\[ScriptL]\\), \\(\[Mu]\\)]\\)\
\\!\\(\\*SuperscriptBox[\\(\[ScriptL]\\), \\(\[Nu]\\)]\\)\"", Bold, FontSize -> 
      16, StripOnInput -> False], TraditionalForm],
   PlotRange->{{10.0105, 33.1995}, {-2.0014098286712094`*^-8, 
    5.938928533471607*^-9}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
7g2/C9ATcOuoAuL7f1mP0mI=
           "]]}, "Charting`Private`Tag$7587#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
7g2/C9ATcOuoAuL7f1mP0mI=
           "]]}, 
         "Charting`Private`Tag$7587#2"]}}, {}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {10.01050000000000039790393202565610408783`16., 0}, 
      FrameTicks -> {{True, True}, {True, True}}, 
      GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> 0.7`16., 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {10.0105, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"Violation", ""}, {
        "\!\(\*FractionBox[\(\[Eta]\), \(L\)]\)", ""}}, FrameStyle -> 
      Directive[FontSize -> 16], FrameTicks -> {{True, True}, {True, True}}, 
      GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
        GrayLevel[0.5], 
        Opacity[0.2`16.], 
        Dashing[{Small, Small}]], ImageSize -> Large, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotLabel -> 
      Style["\!\(\*SubscriptBox[\(g\), \(\[Mu]\[Nu]\)]\)\!\(\*SuperscriptBox[\
\(\[ScriptL]\), \(\[Mu]\)]\)\!\(\*SuperscriptBox[\(\[ScriptL]\), \
\(\[Nu]\)]\)", Bold, FontSize -> 16], 
      PlotRange -> {{
        10.01050000000000039790393202565610408783`16., 
         33.19950000000000045474735088646411895752`16.}, \
{-2.0014098286712094`*^-8, 5.938928533471607*^-9}}, PlotRangeClipping -> True,
       PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Style["up-up", FontSize -> 24], 
        Style["up-down", FontSize -> 24]}, LegendMarkers -> None, 
       LabelStyle -> {}, LegendLayout -> {"Column", {Automatic, 5}}]], {
     0.6`16., 0.6`16.}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.795098910580497*^9, 3.79509897355871*^9}, {
   3.795099137443042*^9, 3.795099171548579*^9}, 3.795099250079646*^9, 
   3.795099382847651*^9, {3.795099708966515*^9, 3.795099717891239*^9}, 
   3.795099758278062*^9, 3.796395467184165*^9, 3.7965410778043623`*^9, 
   3.7986222706420517`*^9, 3.801891960173587*^9, 3.810004844331047*^9, 
   3.8139922301371717`*^9, 3.814021234231444*^9, 3.814021284257633*^9, 
   3.814023509296721*^9, 3.814023604424999*^9, 3.814023718754924*^9, 
   3.8140264176844387`*^9, 3.814191026749206*^9, 3.814191525205409*^9, 
   3.814192559279036*^9, {3.8141940499652147`*^9, 3.814194074747751*^9}, 
   3.814712488139124*^9, 3.814713485717371*^9, 3.8147135247671947`*^9, 
   3.816513318202018*^9, 3.816757929885841*^9, 3.816768697374707*^9, 
   3.816952671302196*^9, 3.823328281430341*^9, 3.8236908721632338`*^9, 
   3.8239567533047657`*^9, 3.823962091410905*^9, 3.824463109355844*^9, 
   3.824783441447425*^9, 3.824783743923517*^9, 3.824784134147954*^9, 
   3.824784818064601*^9, 3.824785288048469*^9, 3.824786980631534*^9, 
   3.824791621306777*^9, 3.824807778044421*^9, 3.824820434354739*^9, 
   3.824873926750145*^9, 3.8248742831340427`*^9, 3.824875179481819*^9, 
   3.824875903393299*^9, 3.824914210960745*^9, 3.8252335222847757`*^9, 
   3.825479343206541*^9, 3.831459078090399*^9, 3.832505439123815*^9, 
   3.832511624940411*^9, 3.832537277106069*^9, 3.832555195543098*^9, 
   3.832561121282868*^9, 3.832563226741658*^9, 3.832566307231071*^9, 
   3.832575570441883*^9, 3.832589568092889*^9, 3.832645375494*^9, 
   3.832661195581214*^9},
 CellLabel->"Out[90]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnQm8XdO9+HfvnIgkhlJ99X86arWGVolW8VqeoUqrFK+0ilKqSimv+jxU
y0M8qsbeczMRQZAYklQSIQm5NzejJDInkpuIGCLEPHb/1/e31m+ddc7ZZ7rD
uTeenc85uWftvdf+/X7rN6/fWvuIk39/xmlnn/z7M089eadDzjv53DPOPPX8
nQ4+5zzTVP2JKKr6tyj6xLidIv6Oo0i/0sf3+Apbyms4WP6ujv/5z3/G5557
bnz66adHtfJdHf/617+O33//fbni1eCeQ9w9119/fXz22WfH06ZNM/fwXR2/
/fbb+pjolYR7Ro8eTe/xpk2borcTzj/11FNy3vyfeN7cJ+dNPxnnD3Xn//M/
/1Pg4tdbCedvvfVWwdPgm3j+kUcekf6ff/75xPNLliyR8y0tLYnnwf9Xv/pV
PGLEiIzzh7nzl156aXzllVfKrzcTzg8dOlTpnnG+HUP7UWpQNn3ooYeE/DBo
nWNTQ2q9JYPl9J7Vq1fHU6ZM4WPu4bs6Xr58eeI93YTeDwL0zjrrrPiDDz6I
Xks4v2DBAkHfoJR4/vXXX5fzjz32WMZ5lZ5x48bFZ555pnBXtWv7r//6r3jQ
oEHya1PCPYsWLZI+V65c6e9pamqS+/Ld8+abb4oUAIfeM2nSJOnHwJhxj0rO
f//3f3s4qlzbM888I/fMmzcv8R6u577wHjQWEvTAAw8k3vPoo496DaSwIZHX
XXed/Ho14R6Du9xjxsff09jYGJ9//vl57mmI33vvvfiMM86If/vb34rWMxpF
8LnwwgvjSy65JATNCn99/Oc//zm+++67AT3+4x//KGigMBYvXpyBSg7/bBYN
llTV8QsvvCDEnDFjRlQjbXXCMMOGDYt/97vfiUm59tprIdaR7pZwnKsdsT78
8EP4K77ssstEZi644IL4rrvuoqtItelLL73k1YW1ar3kej2wesjERRddJMTm
3PTp06Pvu/uffPLJnPsDdSNjetttt8W///3vBYarrroKGY0Od2i9+OKL8d//
/nd//n/+53/iuXPnKtYYu8svv1wejeGCTYzo/yQ/vSzyDQI4NDrnnHNEt9HT
NddcI8xmgDoiL90a4vvuu09kk/8NYwkNIfsVV1wBTZV0/IR9H374YTNKRmii
3pDGo46qopv7778/fvrpp2X0gLK1tVW7wFb/5je/AXtDPdvF0qVL5faXX35Z
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
Lsop1Ja694JbgAa4O4qxt+4/HAKeFJi2y7+plclnQhidzjA+nUHQpuooxkCp
mVCnOIIsU+9JCCrbgABTivzSGHb8+PHFI+odHWLuDXTsfG1jtB6CGNqZScAQ
MQrpiPtKROyAHoVYVmFzNpizJzZaMP8hl/cWB/Soo46Kt91227i+vj7+8pe/
LI4VmgtZ5RFDhgypcpcH0ApEp556arzddtvFvXv3jnfbbTepXHj99dc/6S5n
5pGp569+9atxr1694k9+8pPxz372M5kwP/roo6UrP03aIPNb2MwvfvGLcUND
Q9y/f//4m9/8pux3abqqc8PEgz/xiU/I3VdeeaUW4hg3SJr69OkD+GGaSwlc
Z6ljfpoTVGcp9aQcLvRPOiMBn5f48lbTaIt43LhxcU1NjdxZVVUV77jjjnHf
vn3l94ABA+ITTzxRB8D5DVt4dLbeeuv405/+tPz9pS99Kd5jjz3i6moLxde+
9rW4ra3NFcJsITVmu+yyi3/O7rvvHu+8887ye4cddoi/9a1v6VBEOumPtw0l
aa+rq4u//vWvS7/cT9vnPve5eN68eboFKZUkNPM58MADdUy+8IUv+OYxY8aU
NSa/zc/lnTHJoKPDFlEcsybeljk6UJS7vvKVr4gR52DciWbhTKVEenRqPWJ8
YPapU6emXwJquHvvvfeWc/vuu6/k1rdy5+j3O9/5jpyD0qTn/NLilpb4U5/6
lO+XUdJzS5YsEdmj/dhjj2Vi3Z/DfdaR3WmnncQZ06mHww8/XNpra2tF0t5+
++0MOPVZfH75y19GnTVw7ZpmSY/UflaOJtxqR6rR3fHuhoXx2tu/zifqL9/V
8fNj/FS33yeX+hbFysieMimemDZ7XVeTMZbGHujVlFox/DQ/8MADW7lm6oJU
+xhTqVcTrAYDp33//Oc/l6Y999yTEhq9mtIZ1CmnLr/8cp2Kw0IxSltuuaWo
T05PmjRJX4xJhQpNhx12mDDl9ttvD0Np9qWjY1bqPNFOcl3hjeXDrXC7c2lE
NkvNmnBLeebbbyy0qS1+6bFz+BjW47s6fmXmtVnX1Ui8rnwQsAfVf4xsBuul
h+wzn/mMR/u0006TthNOOMFvA3fSSSdJm2EKd12DKGbHbQICpNlmm22kzVgy
7Y6EP01GQ0TKZ6NHj5a2I444QiYK+NvYO+Wz448/XprQuvvss4/8PW3atLL4
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\
\>"],ExpressionUUID->"a695b3d0-5b7f-430d-9911-30778d5c46cf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute the redshift", "Subsection",
 CellChangeTimes->{{3.828536990164358*^9, 
  3.828537024565321*^9}},ExpressionUUID->"1c860e32-457f-40ae-9963-\
4951f0ee7022"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
     "The", "  ", "redshift", " ", "is", " ", "defined", " ", "as", " ", 
      "z"}], "+", "1"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{
          SubscriptBox["g", "\[Mu]\[Nu]"], 
          SuperscriptBox["u", "\[Mu]"], 
          SuperscriptBox["\[ScriptL]", "\[Nu]"]}], 
         SubscriptBox["|", "\[ScriptCapitalS]"]}], 
        RowBox[{
         RowBox[{
          SubscriptBox["g", "\[Mu]\[Nu]"], 
          SuperscriptBox["u", "\[Mu]"], 
          SuperscriptBox["\[ScriptL]", "\[Nu]"]}], 
         SubscriptBox["|", "\[ScriptCapitalO]"]}]], ".", " ", 
       "\[IndentingNewLine]", "In"}], " ", "3"}], "+", "1"}]}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"decomposing", " ", 
      SuperscriptBox["u", "\[Mu]"]}], "\[Equal]", 
     RowBox[{"\[CapitalGamma]", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["n", "\[Mu]"], "+", 
        SuperscriptBox[
         StyleBox["U",
          FontVariations->{"Underline"->True}], "\[Mu]"]}], ")"}], " ", "and",
       " ", 
      SuperscriptBox["\[ScriptL]", "\[Mu]"]}]}], "=", 
    RowBox[{"\[ScriptCapitalE]", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["n", "\[Mu]"], "+", 
       SuperscriptBox[
        StyleBox["V",
         FontVariations->{"Underline"->True}], "\[Mu]"]}], ")"}]}]}], ",", 
   " ", 
   RowBox[{"the", " ", "redshift", " ", 
    RowBox[{"becomes", ":", 
     StyleBox[" ", "CodeText"], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         StyleBox[
          RowBox[{
           RowBox[{"z", "+", "1"}], "\[Equal]", 
           RowBox[{
            FractionBox[
             SubscriptBox["\[ScriptCapitalE]", "\[ScriptCapitalS]"], 
             SubscriptBox["\[ScriptCapitalE]", "\[ScriptCapitalO]"]], 
            FractionBox[
             RowBox[{
              RowBox[{"1", "-", 
               RowBox[{
                SubscriptBox["\[Gamma]", "ij"], 
                SuperscriptBox["V", "i"], 
                SuperscriptBox["U", "j"]}]}], 
              SubscriptBox["|", "\[ScriptCapitalS]"]}], 
             RowBox[{
              RowBox[{"1", "-", 
               RowBox[{
                SubscriptBox["\[Gamma]", "ij"], 
                SuperscriptBox["V", "i"], 
                SuperscriptBox["U", "j"]}]}], 
              SubscriptBox["|", "\[ScriptCapitalO]"]}]], 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                RowBox[{"1", "-", 
                 RowBox[{
                  SubscriptBox["\[Gamma]", "ij"], 
                  SuperscriptBox["U", "i"], 
                  SuperscriptBox["U", "j"]}]}], 
                SubscriptBox["|", "\[ScriptCapitalS]"]}], 
               RowBox[{
                RowBox[{"1", "-", 
                 RowBox[{
                  SubscriptBox["\[Gamma]", "ij"], 
                  SuperscriptBox["U", "i"], 
                  SuperscriptBox["U", "j"]}]}], 
                SubscriptBox["|", "\[ScriptCapitalO]"]}]], ")"}], 
             FractionBox["1", "2"]]}]}], "CodeText"], ".", " ", "In"}], " ", 
        "synchronous"}], "-", 
       RowBox[{"comoving", " ", "coordinates", " ", 
        StyleBox[
         SuperscriptBox["U", "i"], "CodeText"]}]}], 
      StyleBox["\[Equal]", "CodeText"], 
      RowBox[{
       StyleBox["0", "CodeText"], " ", "and", " ", "the", " ", "redshift", 
       " ", "simplifies", " ", "to", " ", 
       StyleBox[
        RowBox[{"z", "+", "1"}], "CodeText"]}], 
      StyleBox["\[Equal]", "CodeText"], 
      StyleBox[
       FractionBox[
        SubscriptBox["\[ScriptCapitalE]", "\[ScriptCapitalS]"], 
        SubscriptBox["\[ScriptCapitalE]", "\[ScriptCapitalO]"]], 
       "CodeText"]}]}]}]}]], "Text",
  CellChangeTimes->{{3.828537032714176*^9, 3.8285370409890413`*^9}, {
   3.8285370778499193`*^9, 3.828537411489101*^9}, {3.828537478252757*^9, 
   3.828537619633428*^9}, {3.828537653800344*^9, 3.828537725623044*^9}},
  ExpressionUUID->"a58ed884-e1f9-4fd5-a5a7-a53698a6abd1"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.828537823647746*^9, 
  3.828537832416539*^9}},ExpressionUUID->"1ee689e7-f7e5-43e6-8cbc-\
3d239f9a0099"],

Cell[BoxData[
 RowBox[{
  RowBox[{"redshift", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"EBG", "[", "\[Eta]", "]"}], 
    RowBox[{"EBG", "[", "ETA0", "]"}]], "-", "1", 
   RowBox[{"(*", 
    RowBox[{
     FractionBox[
      RowBox[{"A", "[", "ETA0", "]"}], 
      RowBox[{"A", "[", "\[Eta]", "]"}]], "-", "1"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{
  3.793823091269554*^9, {3.793823152817279*^9, 3.793823197238367*^9}, 
   3.796395500310832*^9, {3.796541145869059*^9, 3.796541183710066*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"540f819c-a78b-4be8-9002-6fc32982a01f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"redshift", "[", "\[Eta]", "]"}], ",", " ", 
      RowBox[{"(", " ", 
       RowBox[{
        FractionBox[
         RowBox[{"redshift", "[", "\[Eta]", "]"}], 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"A", "[", "ETA0", "]"}], 
            RowBox[{"A", "[", "\[Eta]", "]"}]], "-", "1"}], ")"}]], "-", 
        "1"}], ")"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"WorkingPrecision", "\[Rule]", "40"}], ","}], "*)"}], 
    RowBox[{"ImageSize", "\[Rule]", "900"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"StandardPlotStyle", "[", 
      RowBox[{
      "18", ",", "24", ",", "\"\<\[CapitalDelta]z(BGO, ET)\>\"", ",", 
       "\"\<z\>\"", ",", "\"\< \>\"", ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}]}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.816513372822723*^9, 3.8165133820748167`*^9}, {
  3.816513623164712*^9, 3.816513627668623*^9}, {3.816513705658445*^9, 
  3.816513712022592*^9}, {3.823328951990643*^9, 3.823328969984582*^9}, {
  3.831459133451569*^9, 3.831459139164554*^9}, {3.832556511385188*^9, 
  3.832556513012802*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"38f5669c-c17d-42f0-aa90-7cc3282cfd6f"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJwl0nkwnHcYwPFFXNUgFqWqiEo1JE2F2nRSR1sSbVNXkoqjxDkRQ4I6K44d
QUzQkHVfCUuzW6aGiOhT6kpJSISIiGskFdvou5fdukJ/nv1j593PfJ/nt+/s
+5oERnmEyNNotB/IZ+c63+gbGb9t6kC+0pJyKVBdGw8omZOZlkcB69FS8FaX
zDkFFDRRtdmsdJlrrlMQ5+H54YKyzNPVFCRYWhY5G+9Fp7dSYNn/KV1NXubA
dgr6pvUv0V+aoO3vUvAqeJFabpT5rW4KhlX8erk2MufdpyB7PDASvI3RCi8o
mGDbZsaNGKIpDT4oWh2rCzxugFb/nA/yOh/La0/poUOi+FCSEdp7aVwXfbua
D0yj/5xbZrXR8U/4wPnOd6LFjL7jNJqSAErG3h4NaNmDfclIAPrc0M2nTpro
hqMCUP+iI2fFRB2t4SWA5YJidvCqGvpqjACaPLaYoWOq6CPXBDDuzam331JG
X24WgOLtrJB0CyX04kMBXGwzPqietQt/30kggNSZ1VgTQwW0poYQdNg/Nx1s
kUNrfyIEd4ZRRVoCDe3iLgRR0LRxftKW/Y47YoVwg2V7YODo5o5peiVCaO19
nvnu1+vYSzvI/Byjvtd9FXv1rBDe9zHZrVImRU/LieCDzm6LRkUJzu82EwGj
RzRwLlyMfewbEZz0fO3sLi/C/scFEdSxZ/+FQgH2qlIRTCR6mE8xKfTNHhFE
T+Z0ylktowt4Imh0tfGreMzD/SFtMYQrnT4d0/kK+x47Mfh+dG41Y+hv7Iww
Mawv2ejqPXiBPbFIDKFl+x1VVBfQnC4xXNHy0rh2ZB7n/flicJi5n+RiN4Nm
vrcC5q0+ozUOUzh/3mUFWvMGRlUtnqKtklfg5bPjhZqR4+ihWytwqGXk4Tvl
o7ivNbcCdxwPP1EVDGN3o0ugsfKEZbvdILrmKwl4KStO3gjqQ1snSaD77HY5
R6MbncclnrkV0rPdjr4zKwHafqUx3t5mPL9cVwrzk1/mrzc0YQ/Xk0Ka828K
NgfQaeP6UjDW4w7uY/yK3dBQCgGnwn/fcOVg55qSfTpP6J3VgL32EOl2a1Fb
6jIXWkmB5u+YMsRio72tpeCwwN58zq7H/QJbMh9rX7jw1010qp0UamZZwZHa
NTiv/C2Z3zjT3WVSjeadIPd3+MqbXQZVOK/qRs53DL/cpl6BfdKTdFdJ6i/r
xdhHfKTQzbY9WSploVP8SPeJ/4cnuo7zXH/ixrta5fwi7AlnyXyKWSV3uRC7
ShA5/3HEQMhgPlruPHGanuGxe1fRwxFk37p0a7E/F/dzI0lPmOcF9GehzaNJ
jzJgfDaQKXufY0lfppc9usfE/bY44rCiFtOhdOxGCcTZji6hZanoZzvOTeiT
r0qR/R/JxE7L+97UJqOXknbuL+XMKXYi2v0n4mgdJzVOPLoyhdjN4HV+Wwwa
Uomtyv/UZkbh+ZNpxBempsWVYegNJvGD5uj4eH+0Sgax5Y8bEcXfy55PFrFX
QD3noivaNptYcz52INIez/fLI6b1VjBM1+zw/a2TwP8EM2E9
      "]]},
    Annotation[#, "Charting`Private`Tag$8052#1"]& ]},
  AspectRatio->0.8,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -3.282345506505635*^-10},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[CapitalDelta]z(BGO, ET)\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox["\"z\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[FontSize -> 18],
  FrameTicks->{{True, True}, {True, True}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Opacity[0.2`16.], 
    Dashing[{Small, Small}]],
  ImageSize->900,
  Method->{"ScalingFunctions" -> None},
  PlotLabel->FormBox[
    StyleBox["\" \"", Bold, FontSize -> 18, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.798623436273312*^9, 3.8018919720440187`*^9, 3.8100048915579033`*^9, 
   3.813992402050332*^9, {3.8139924392447157`*^9, 3.813992454875259*^9}, {
   3.814026521114616*^9, 3.814026533867385*^9}, 3.8141945639322777`*^9, {
   3.814712583901618*^9, 3.814712607868692*^9}, {3.814712643023211*^9, 
   3.814712654397043*^9}, 3.814713499290393*^9, 3.814713533819068*^9, {
   3.816513356254038*^9, 3.816513383484825*^9}, 3.816513628455415*^9, 
   3.816513716250999*^9, 3.8167609562957287`*^9, 3.816952986396812*^9, {
   3.823328953531742*^9, 3.823328970927096*^9}, 3.823956884107395*^9, 
   3.8239621285578623`*^9, 3.824463192126298*^9, 3.824966863919353*^9, 
   3.8252335742707253`*^9, 3.825479367472602*^9, 3.83145914563481*^9, 
   3.832532267978735*^9, 3.832537553857377*^9, 3.832556515301345*^9, 
   3.8325611258884687`*^9, 3.832563238826683*^9, 3.8325663312329063`*^9, 
   3.832575633007387*^9, 3.832589598735907*^9, 3.8326453910589333`*^9, 
   3.832661200071958*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"19ad6c7d-d305-4aec-8b02-a579d2251706"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Comparison analytic geodesic\
\>", "Subsubsection",
 CellChangeTimes->{{3.77703149323573*^9, 3.777031626743906*^9}, {
  3.777877558145009*^9, 
  3.777877568271658*^9}},ExpressionUUID->"6a3c2279-463f-4644-8776-\
89ac697140d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lup", "[", "ETA0", "]"}], "/.", "geodesic"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lup", "[", "\[Eta]in", "]"}], "/.", "geodesic"}]}]}]], "Input",
 CellChangeTimes->{{3.793546924552243*^9, 3.793546949988203*^9}, {
  3.823353062041339*^9, 3.8233530685601473`*^9}},
 CellLabel->
  "In[369]:=",ExpressionUUID->"481a711e-7dbe-486c-90e0-509d4597fcba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "-", "0.99999999999999999999764456641817782796`14.958593661468823"}], ",", 
   "0.50000000000439181610813104439407871419`14.920753025684595", ",", 
   "0.49999999999999999999857054446608089433`14.920753025684593", ",", 
   "0.70710678118654752439882280670197137304`14.920753025684593"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.793546936509612*^9, 3.793546950698884*^9}, 
   3.793555094275601*^9, 3.793555417123312*^9, 3.823353069560453*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"bc33bb36-a574-4de8-823a-7019ac98331d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.2148598302755493286100204`14.769346726166614*^6"}], ",", 
   "607429.91514182562628157740875989966013951186`15.39793985740852", ",", 
   "607429.91513649018530812659885337570857072771`15.39793985740852", ",", 
   "859035.62417716259497410023086301995329855163`15.39793985740852"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.793546936509612*^9, 3.793546950698884*^9}, 
   3.793555094275601*^9, 3.793555417123312*^9, 3.8233530696003733`*^9},
 CellLabel->
  "Out[370]=",ExpressionUUID->"307aad52-4f50-4b68-bfcd-54374c13dce0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[ScriptK]an", "[", "\[Eta]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"A", "[", "ETA0", "]"}], "2"], 
        SuperscriptBox[
         RowBox[{"A", "[", "\[Eta]", "]"}], "2"]], 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"lup", "[", "ETA0", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "*)"}], ",", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"A", "[", "ETA0", "]"}], "2"], 
        SuperscriptBox[
         RowBox[{"A", "[", "\[Eta]", "]"}], "2"]], 
       RowBox[{
        RowBox[{"lup", "[", "ETA0", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"A", "[", "ETA0", "]"}], "2"], 
        SuperscriptBox[
         RowBox[{"A", "[", "\[Eta]", "]"}], "2"]], 
       RowBox[{
        RowBox[{"lup", "[", "ETA0", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"A", "[", "ETA0", "]"}], "2"], 
        SuperscriptBox[
         RowBox[{"A", "[", "\[Eta]", "]"}], "2"]], 
       RowBox[{
        RowBox[{"lup", "[", "ETA0", "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], "/.", 
    "geodesic"}]}]}]], "Input",
 CellChangeTimes->{{3.777877681429394*^9, 3.7778777110066357`*^9}, {
   3.7778777985277443`*^9, 3.777877815150626*^9}, {3.777901808357115*^9, 
   3.777901816760654*^9}, {3.781438626735077*^9, 3.781438648954136*^9}, 
   3.823353183054489*^9, {3.8233532263463917`*^9, 3.823353227559208*^9}, {
   3.8233535796891947`*^9, 3.8233536492651367`*^9}, {3.8233537518698587`*^9, 
   3.8233537884286613`*^9}},
 CellLabel->
  "In[385]:=",ExpressionUUID->"fedc1bde-0fe1-4d1f-a055-3ca51683cd26"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"lup", "[", "\[Eta]", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", 
          RowBox[{
           RowBox[{"\[ScriptK]an", "[", "\[Eta]", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], 
         RowBox[{
          RowBox[{"\[ScriptK]an", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]], ")"}], "/.", "geodesic"}], ",", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"lup", "[", "\[Eta]", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", 
          RowBox[{
           RowBox[{"\[ScriptK]an", "[", "\[Eta]", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], 
         RowBox[{
          RowBox[{"\[ScriptK]an", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]], ")"}], "/.", "geodesic"}], ",", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"lup", "[", "\[Eta]", "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "-", 
          RowBox[{
           RowBox[{"\[ScriptK]an", "[", "\[Eta]", "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], 
         RowBox[{
          RowBox[{"\[ScriptK]an", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]], ")"}], "/.", "geodesic"}], ",", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"lup", "[", "\[Eta]", "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], "-", 
          RowBox[{
           RowBox[{"\[ScriptK]an", "[", "\[Eta]", "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], 
         RowBox[{
          RowBox[{"\[ScriptK]an", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}]], ")"}], "/.", "geodesic"}]}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*FractionBox[\(\[Eta]\), \(L\)]\)\>\"", ",", 
       "\"\<Violation\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", 
       RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
       RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
       RowBox[{"Opacity", "[", "0.5", "]"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.777877571216823*^9, 3.777877646646789*^9, {3.7778778291538973`*^9, 
   3.777878004159485*^9}, {3.777879409239644*^9, 3.777879417420443*^9}, {
   3.7814386852659407`*^9, 3.7814387662084513`*^9}, {3.823353107490922*^9, 
   3.823353113925498*^9}, {3.823353702176052*^9, 3.823353702327567*^9}, {
   3.823353764432538*^9, 3.823353764596403*^9}},
 CellLabel->
  "In[386]:=",ExpressionUUID->"0b23bf88-a1f6-433f-9990-311e0f3102ec"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwUV3c81f8XNrP33vterkIhI9yTJCEadkVDZJdRVoOWVRqolKJBUSHKN3lH
yqpooBBS5K6GJCPkd35/3df79fnc8z7neZ7znPPR2hG1cRcPFxdXgBAX1/9/
h1/vquDiGqPbNGzjyfPjkINxh5kx+mP0692MxF2HOERR5ZImY/0Y/dlT9rGb
yzjkfsMDH7+EMfrlG0Ij43Yc4hr05nR70Rj9wguVxqtWHDIqwmmFF2P0w9xv
H9o4csjhSn7u6vExuiZXfv0Ldw5R9ta0oqr8oos4FHzViuKQ6jnrvfmrftGP
uN8u2+vBIW7XPG+Lhf+ia3vZRaxYyiHMNXs+H875RY9rW6/6zIRDUr9nKE3U
4dmV/2oS5qt27uaG4K+/6LMTFn3vNnLIf5YN6X1i4/Ql0FlfnswhGwf7nq5b
Pk73v3At6Yw5h3w78memwX+cfqih7HyjF4ccN5BcZnZinL401vO2eQqHaL6m
hZaUj9NrpG9p7/bhkNrY1deUe8bpB2Ivr4325BAP5W19J7l+059K3r9uv4FD
ftYnSnMb/KZ/yKXK/LTlkIxduc6xG37TiwXe34oL5RBdkYpURsJv+lo25XH8
Yg55UvGi1u/ab7pUj/Ux0xAO8fH6Ot7+4jd91po78s1+DhmfXaCt/P2bPsS2
O3UE88kqUt5ZrTJBlzgTL9mD91HWmF+iOkzQvd2nEs8Gc8jTb+6d+eET9NHP
TSI6azlky9lQEfHcCbrsjGhULOI5aXFsVQqZoMc/+tcogHydHriaNPF1gi52
yXLnaW8OoR2prQoW/0Nn3F06V7yKQ57rd3P6lv+hl85EVuYj3/4dP3XcAv7Q
I5cL7Yqz5pDpGOEtT0/8oVeES6zhMuSQc0p6OWYVf+gCp6XbPREvo3r6q5Ie
fL+kYqYM820N9ONT4Z6k093aJv9bwyE7hONsThlM0t2vCGZ/D+eQufLsWO6N
k3QuxesnGldzSJ5n6Z3YxEn66pWCHz4c4xCT2ecjjGuTdBfe8nX1WO+Lwk+q
m19O0qfH1tjGIr+7HP96dPyepC/01px8SuMQrm+yJ1eqTtFZ/4wbtCM5JP+M
cVO1wxT97dQiroDlHGJm4TxPjZiiS29fdavbgkM6+gPNL+VO0UmH73vGFg7Z
nXooQvwJPucOz5PD+3j082+mjE7R07U82xdjP1xurx6YEJ+my+Z76W5w4BCL
mNdyuy2m6VHCMSe26nPIO0X2uo8B0/Sryhc+t7hySPgTvuNuadP0rvcXfi/G
+hcFajx5WjFN/5Tc370H9VQoZD1p1jtNlxGal92+jUOsyz2MbnHP0Js5yVuF
kK8uj6ggFdoMvdTpm4z+bg6J/Jt+5dTGGbrmz6mNqhhPqPDGe+6kGfqFHlZb
XQyH3FhdLx53fYY+/7dfRh3vt+P0OjJfztDzo1dI5gdySM/piYObJ2boqb9+
poX4ckj0comaDtW/9N6sYLss7J8bLWf+3HL6S48w3OZmHsQh3T6yZkdi/9Jb
5S7GKMVj/uy86K2Ff+mfFm0T4UG9WSYpVVq8+ktXGbut2I/9GCJ6+afU9F96
o+XAKQl/xL9A3eibziz9n9e5xJm9HPLKqCi82X2WzlolXnkH852v1ykrTJql
Mz+nFEmiHo02FLMSS2bpnSWai/t3cci2L/r6np2z9CbnJ/FKNhxyJqYsyHhh
ls5QS5fmiuaQRj6jm0KGc/THpmOXOsw4ZCK3YnjYa44u5CwS8wPr16Oaaj9J
naM/9DITPuPMIV7/Pdh24d4c/U2CXOiHWA5JW2t5Nbpvju6T/SQmHPGt7asd
cF00T7cTKjgalMAhnDBbVeqyeXpc/VEJI8RLdb7ej9t/nn5kKLx3HfqZ2yn7
ix/T5+kvbu8uu7KEQw5pNH148GCefvZjZyYf6quiYo386c/z9KI7BqOhWP+X
lS88QsX+0a32f0hZifzLdLqec7D6R79NlfIRxPodAl+/Vd/1jz7df8j1kSqH
7PuzQXLm9D/6bE7DY44Ch5Qc73LrrPtHrz/tImMdgHwqeJ+8y/xHr1pCr1BB
/Qnf7n15QnaBfuGVT40x+t0K6y3CO2CBzs69EOOG/Rb+ctDJJnyBXiu5+WoK
+tOVLdtPyF9YoH95wxTZgf3/5vtw09izBfobzZBHqzBf7kNBfC9/LtDj3K9q
aodxiFJabNE7MS64+8o1ukcZ58GbBw31OlywR/uebzPi6aw09emOFRds3W8Z
eArvH95uuXDRnQu0hFa+uor9l1yaoH5iFxccehqTsgz9T/Z3rW1sEhesZ9WO
TmD+d1fMbdl+hgsEv2vni8VxiONR22S3Ei5QvXT76mL0z8FXBy+tIFxw4VuV
6insx/1yDbX6nVyQe7F/wQD7VdKfu0+OxQUvDpwKXYF+eqvYfoZngQv8WQoS
S7dyyMqfRxTHZLnBPcbI9Sz6TZ9Fk8UAjRvWb9JuKP5/Pya/XurYxw13p+bh
J/bDrqe9huXpPLD02GuaBfJTql003anID27G7nyL0C9+HNndNF0iAHsOR/36
iOcBATdVkToBqBMLid1hj3rPNI1ReyMAfQJL2CnrOeSxhNIL4xEBuHJiv6kd
YLxz/zTtpwUgZ8UDzXuKHHJRYWS/h6ggSNc//TiL8yntUltHkKYgnFuV7jqC
frBfo1wvwUwQlE3SD2zT5ZCg6znJmU6CYJWkau2JevGkJnYWbBGE1wr5x5eu
RD2VBdAq9ghCR4vKWh/E39R4dUrjUUEwvvlsogXx1q6i9XRdEITQ7qoQGfR7
KQtJY8YdQRhfK/Oy3gn99PGfYzMNglC5lZe5F/39p93HfpFuQdiZNLb8M54H
GxtM1VmCcFLCbPMZ9Pu6F5mf7aWEgFwR9DDEevPfeWUHWwlBrYXUhzTsx3Qv
m9GEdUJwUtPn6QEtDonv07LN2i4Ekx9bmxrw/8H+AjlX4oSA/ntgcI0G9uuX
b+yKdCHI4N3WNYf+vjro3cpnBUJgTfgcOzC+GbvmQnelEHieHDzYi/2oE1nw
k9EkBE8t14weMOYQ6fFUx7+9QsDzoNP2oybqed/uAtEfQmDjaHKWC/kdm1k3
oc4jDId5zz5VxPcHD5i6LJUXhiZN805fCoe0cytdW0UThs6gRbnViF/dsX/T
nnbC8MrTYYZKRf6ERtx3bxSGq/onF9hiyN/JtuLEIGHwe5227P/zOk2qfD4r
URisLjj9lsX4+3NzPK6eEoZTIkeFHuN+E6SUWFZ5TRimErQ3msojfwUBPM8f
CkPc+eVa5kbIn9Zq3/cvhMEkaWuZEdZrepNWwRwUhj69BuDlQ/4MJAVmx4Xh
aWCiULgO8nf3z1YxARFoCrmxdBjz51r6sVpDRQSuip05NYZ4/6xuEFlmLAKr
xs6bmOL9g5bFOxxWicDAwoxGvxrWW5f5yMtbBE5sCNERx3h1sFcyJEwEErqe
TFyX5ZCy517BSYdEIEI+Xpgf8cx3snly8pwIiMe8+RSJ+Ke/0pIrLBEBBV+b
BF7UT/x6gfD7j0WAzskznkG/CO761vj8tQj8bphiUnF+evm8U/owLAK1+uk2
Aujvq/tr9rCmRICaWsqrgPebbStomRURhdsy99XcFyG/I6nq4pqiYHEpROYv
7h/Su3fHaZqJgvRX6pet2H/c39a9WuYkCmJn9GTP4TwYizLVWb1FFD5eu2t/
B/fRT78VE733iMKVUCu7CEuc//v/vQk5KgpchimdQ7gvkdlhavIFUfixkPW8
RopD7hxqO3jqjijsHVI0v4P3Bc188fFoFIUk74sBhxA/rZi5Zco9ovCoqrO+
H/np/yYnNvRdFK4NRa29NMcmeUHGjJu8YmCd9f52jTqHrB9yehqmJAa3g9fP
pON9In47Li01FoP367qHF2E/NXcmxU05iMFa4XX3zJVwf16X6078xMD9BV+L
K9Zj3XLP4MgeMTizziN5zIVD/kAr79rjYnCvJ/yulgjOm9rPA+KXxWDqmU6O
HPZ3qNlsTVelGJjUKMXMYL2692TP5reIwZf6VTofxREPqlH4tgExKJzlT5Tc
jnwWrXGk/BaDlRG+IhTctz1Utmt+ExQHRtZJ353oj+K5iX8r1cVhxeK6w1eR
7zbxnK79ZuLQadznvxT3gaNpd+/ZOotDddlyswT8HrDjaUnj3SYOawyFlmbr
4f6YNLSjLU4cTFKFYwown6o/MzbZmeLwveQjRU0I95soGQXPInEoyd6fL418
67MW/1KuEYeFB+Eb+7C/vuxwfDn0Shw23o41XI36KugPuFn8RRz4vMtvb3L4
/z6dcCh8WhzcW35EB2F/Sr8567tMXAL2Wp33VpJDfa+9YzqtIwFRD1LaMrF/
0p41iT2xkgAGUyiLG/m2t/3EOOIuAT7VFQE/0W/mH04/XbtLAmLcXEt6UY//
mUhflkiSAPWXJ+wL8L7oUsN93aclwOju/i+DmN8S3dXrLxVLwFpJuW/H3PD7
pcCftr1OAmbnq39+XGCTawrxfNR3EvD5aEeQJH4vbD1zZvAbQwKuai3Z74r9
pyhS9t/9eQnwzvLKDkL+Q+x3rK0TkgT/CHd+nTE2cVyIXH5VVhLsieSHLIyn
W5ekk6ohCUeW1+kmmKL+E9Ikd9EkoeaNjub0PJsMmufOrzHH85HZXQq4Pzwe
L2LTQBIUirXjh3H+XCi/90HMRRISBr2tdfC+feGPn495SkLj92QZV6xnk0Fr
Zec2SeC7xlXkiHyZjHZdeRgmCdcTFzgcnFfi1z9nXtwnCa9W3um5hnhzAn7E
J6dIQssx519huE+0qs7uCsjCfFM/tj5HP7rZK7DJ/rwk/Dqt77MB/T01Txb0
rknC5Al6pCzuT9s2aS0RvCsJWwJ0e1/h/baSRsqcGklo/SkiLoz3KbdbC3Q0
SkLICeEhawnUU/qaiYp2SfCtHE1t4sF91dHj87keSViXsqqj5v/7Ce/2jn3D
+P+qS8Jn0b+zGyIe+/6QhMW0fo0Y5D/8QOItmxlJEC95NR45zSbO1idyNfik
IMcou0AZ8aBOnUvlkZCCRbFfap5i/rZLTGMMlaTA4Mnxh/yY/6ad73Z66EhB
JrF2CMf9JOTiXo8DS6Rg4J9Tsy7md+i15OpiCykYCvTf3on85vJXmL9eKQWj
Ek5i51DvZSvcKdMuUnBA4DTcU8Hvub0/5LW8pOD+JYn8jik2+VByUsB5mxTs
auxLHxPgkO8Di6ejQ6VgzosSqYb7Ja/sK+alWClI28bKnOLC/cw5rPf5Qbx/
5HzBJczX+LDwi+9pUvBr1vJkJepj9cPbtfLnpCDB7ntB3iybbP7mVEYvkAKa
LKM4Av18rzbz0u4SfN7t6mKHejnhcyLrTKUUBOiUzduif30y4XM375OCk5Xe
0IH1WwilSPXySEOB8Zh4pTaHrKNr8vCISYPCgtUqDvbTzrj6cZqCNExrh7Iy
kN+EMv/hTVrS8KuS2eTxk02yP893JhtKQ+Ta5kAa4n1ToeD5TXNp0LM3XnwU
4z1eZ/Oggy4NEc5Rb9dgPm+PfLw5tVYauN4tZh/4xSaMR4l5mh7ScDRPrfzt
JJvM/1Q6sdZfGti7EwUEvrOJDOXR/ujd0jC1sOFXB+JjsMVn96VoachoEt/H
Qb+kn53yeZ4sDS9e3JaNwXierXlrvx+XhpHUs+Oq6Bdh/8yt5c9Iwy2TDhV1
QQ5JMeum0S9Jw1h0y48zv9nkfGisyu6b0uC5zZTzY4ZN7hbKiJ4pl4ZNC8W6
tHE2efb+/tyjR9Iw5PMzSw3v6xXd+P3LM2nIvzvrMy+J89j+14BIhzQ4XTym
YYvx+BNOd5j1SEOc4qXXy/C5Srlx/dYv0qB2tplbFflf+rWj/Pg3abgo9kLE
9gubrFGJLCyfRHykL39az2KTrRvEzvRwyYBRe+Xs1n42iTlxJ4VbRAYoiVyV
x3E/TCcu0TQ5GVD7OM5/CvO9+pu9Y5MGnulB578NsMkDg4xNyQYyMHYxl7IV
8XgZYOBw01QGLm06f91siE0+57aaddjKwN+0frG1qO+pl8F6U2tkoFLAff0W
rE+MR0Bec6MM/JepkFKN+elYFi9au0UGTrkca275wyZWkaun9gbJwM1mG848
zkf3GyOM/D0yIPvwXbz9ezbZ1Xek51miDJQ/bmgRGWaTJEmdtm9HZWBllYdu
Ai9+/zk2PpLLlgHFA4HmQf/YpCR5e6ndRRkQO3I7ThTny7W7+VtW3sD6Na8z
2TL4fTPYKe5QLgNtdo1bH6Of5EuIPXWslYEMrlfcVxg4n8ExZm2TDLyr4z/w
HvE6u/eQnusbGci3uyj36iWbnLr23we3jzKgcMy1rBHvy+j8lb5hVAa89dz4
fyDex/kMbTx+yYBUpYGaFPpTqnngD685Gagxefy5UZpDDgYVFPoKyMKb2mRd
VcQn8fz7jVukZeFWW6Gs4BM2iWuV4A9QkwV2be7sul422TPjVLNdXxZ2bLkW
Uf2GTcJpqSGBprIwO5G6KRjx2735sUqwnSxUfzrrO4nxArMm2kPWykK3mmW+
DpNNtpElh8M9ZCH8w3BazQc22fIjaFlUgCyk7k2Y6nnBJj4ahSN7Q2VhT29H
oZ8w+tf63rzYOFmw39eCH7b4PZsivXb/YVn479+Rbc/RH5zvu8wmZMrCzH4J
mekWnD/DR+8mo2ffv10zYNzOJvayTwIOFclCqctxh6xONrFbPSWVekcWGGZf
3ctxn7XeZ/L8aI0sSMzX+TxDf11eErLvRKMsfO1IbPoP+3lpzzX9jHZZkD+4
P2F7G5ssFurvy+qRhb8Zyuc5yJe+tdzJ7GFZMH2ztd79Lc67MDf62R+yoMm+
PGY5yiaal0/8ypmRhcdr9qmpYL2q7Q3Xz/PJwaHSba7t2D+K/2Y88yXkgD3T
IG+P9ckamwoWKMuBUl9Dl3Udm0hsC6+9qicHPr6PueXwLHzmZvg1EzlgFqV+
ikS9LWocVL+5Qg62Z9D+Bn9iE57fCm9LHOXAdzRathL95Z/OhiOlG+Sg2XHE
fgb5+uuRYX53ixz8il+3fxzrnTz2jFEeLAcbtVoODn5jk/GHcxfvR8uBXakI
tQ795DvD3PXBATlwt1jO9RrrYypG/atJk4M/R7S6/bHfR9beqqg9JwcCRh+r
FP5jk6HEzzvIFTkICDwc/Qfr7S9Tlmu4LYd6WZZmUsUmPf2bWhqr5cDG2160
EfunS+xkQlO9HMRE3xFhIp9v7JoNW1/IQSTbNNd4BPs7amHgRbccRPx0iRFE
fTUXWp5uH5KDwB/TrNJaNml8u9f+DUcO4ptWTNXg8yc8ZRPvJuUg+Yz3kRrM
r9Z0pLibWx4c1d6/dEV8Hgaq+faIysOTMCqHg/5wP9dL5KOCPEiKv5b5h/nf
a84mA9r4flWkpCP6XelUa9TQEnlgstLWhCF+xfo82sOW8tBaErDEogf3Jd8V
XV9XyQOvVm+RHsa/khF7nOkmD580Qq47IH4XH9+15PjKQ3qCTMbEczbZF3S1
PT1KHkI+T3b5ol43Sp3ZoX9MHmi8QYOez9ikYVTo7lS2PKjf2VH0Fusxqkud
as6XB4+bBYLaOB8un5ldmXdTHhqO8eRP4PwVDo7N2lUhD7Opp5aNF7NJvM33
92aP8b5bmxs3N7HJqFSQFl+zPLwetTh2o5xNPBiDYZ1v5KHL96a7Avrpszrv
h9c+yoNLXduJXRhv2dk3XNGj8uCbGlb0FPVbGLzWZeUvefj801vyK/qluG1j
ruScPPDX18rao/8mS68Y+rRIAUy+uOlwX2cTNqOKVi6lAM/Oze6zmMB+Jovj
DqoqAPuDO8ML9dt89mb9OqoCfKL16HVUs4n5bnVhtWUKUCt5g+d1GZvcsD3v
8c1GAT4nvv3Cg34jLSN59fEaBSjyOFN6+CObHGamsTI2KsC+FMmlG7rZ5Afh
NvPbqgA+l/j2cb1GPzmXeNBgtwIkmcWTFZj/i92/W6ejFQC+ho6fR/+xtAuX
aT2gALqi/evjEZ9ima9bz6cpQF57e6Il+oMsa+utoHMKMGQx+KQN/5/65P24
+RUFuCY5kpiL/j92zt2W/7YCHGj+fcy6gE0CQlpPdFUpgJVdpIso6rHDbuW7
608U4Gpg/CoV1LuNbK1qTJsCrLqZl/kD6y1lLQu271KAafU80fl7bKJYX1Yp
9UkBaCuq9yqcQr/O0Z0bYikAV3XMBco7NpkIKXCsmFCAqb/GCttxH9lBlz9z
aEEBwia2v4nnYL/IZn90E1YEK42rYkWIlx1bgKIupwjlPUGsQ0Vscqf+8J7v
GvjcJk2Oq5FNlHNnautoimAWvCFXHPFOD43mzzJXhJZtqj45OF+m6Rz3zaAI
bnzW83dQH0Fygfk0F0Xw1lC1CEC8u9j9IzOeirDqS9H5e8infYOncds2RYhz
fOqkgfEqcjsSLoQpQgoc83lSyibqYWueB+9ThIdODN0IxDsLGsQtUhSBWrv4
3BXU/6ycle+iLEUQErbQ96hhk1BO5fXuPEWQe+j/17kZ/aKB9uNGkSL0Nk2n
7D2N/p533TL2jiKs1HrYU/iATarDVI+sqlEEgY67DSZH2UR7ZW67dKMi/Df4
tY0P+/m0vLjil1eKoPzSPKAR5+U/zvEdlR8UIVb3VtoU9lv404U7h78oQlmq
1OhKwiZ9efFT7t8VYSy05WAY5u8U/mulxrQihHo+OZ5Uif6xMjTrB48S/Ciy
eZvYwSZ6CsPviZgSXDkVn/QgkU1e7fqh26mgBFeb9FO3XGKT6OqZaKaWEnhU
fFmddZxNlHj5n84bKsF2J4l+ftRbwwZJCZnlSnCr6+d31ytsElyoslUflMBH
WHCo8jz2209Kma2zEqzwljv+rgT3H9tlMxs9lODQAXlLjVuo9yzbNbv9leDI
wz3m6ogH70en3AO7laBs7eYV3jj/Sg08hs9GK8E1yoqlH1vZZEN8wNJbyUpw
c33vA5WHyHdz6CFyXAn4Rb5+b4/GfUtuX/u700pQb1YUVYTxHQNTVJj5SjBK
Gy08e4dNvt/PCpm/oQQ/zyfmOKK+c7gv1EiXK8FlKWulWtTbivXX+fUfKcHJ
o5ky8WfY5MuVe5tsnylBa5/A88M3UG/fHxVtbFcC/5PewcvPsYmJTdPP4A9K
+D2+MeQd7hsfMt7YHvisBE3tjZpVl9nkYO/HzLMcJXjU/a4yHPtNV5/RW/JH
CQoWT0y8f4rzYd84lSwowafU/RV96D/RTfNx74SUISTmeGbIbewvWaHnDBll
8OUNe6OXxSb1O2Sl59WUQax5Xe8A+mVQpcY2aX1lEOR65bDxLpuIcRneoy5T
hlufR7vUkL9qt+VzNjbKkNH8dTriGn6PFKx03uioDKrirx7F5eC8/eZ6IXi9
MoiHKi61Qn3ctvYZTfZThvGo5hs9qL/16TvNzgYqQ8I5a1FGMJtMfYhMLYnE
93Ve9/bgPnGFkvimLl4ZVvwpq4pLY5Nvz06HM7KUgat/wqA/hU2st5cIShcp
w6u2WTXWEdxvy+97UcuUofH1MCsT8Un7R27YPFCGq04v7ypjvsbr2sY31CtD
9CLTfy0X2eT9pS4IblOGZbniY9zoLwfYn04ldyqDbq0FJzEb8bTi9J8ZUAa3
ewIRksfQL09M0koYyiApNPzj+z422fueO6HulzIs36r77Azip6gn1vJ2VhkG
7n88HRGP8zZGUY7BrwKTYSZ+EYjfrkadnXMSKnBnjsfVM49NRKWMK6WUVYAq
9Z+p8wk2qQqwXqDoqsBZy+XbxRLYxO/e6nU2RirAfTHX97o/m3DPr7+0wVIF
nDY0dO7C57dctrCC7FXAaPht+vM9uI/nB1sku6rAIU6TAx/WP8mMPnbGSwVq
7ZJ22OxkkwKLg53F21Qg0J+rbyXi7XA8XasuVAVugu8ODuLH6cqJehurAma3
1MSXxOA+rVNIRg+qwDfPAJPj+NwqukxkLk0FGp6bmtdivUMND32lzqnAhj0b
PwujniOEt4RwXVEB9cPb+GcP4j61iTvh5y0VMEyCKTvE/3hBcdpglQq4VFBO
FyMeMgyXC+1PVMBhmN9XfSvOU5NfJXVtKpCa+CL3RDjuk4l5NWVdKlC2NOzK
A8T/0bMVLfmfVGB+TLiLgvPEUezz+3Q24rfYcrdTJJu88zo+Gv9HBRQpkyE1
ETh/Cg0ng7lUYbHN19WbUS/fWG/4vUVUwc0k4OJXzD/edJ+co7wq3Hu6O3ov
+iP/ARU9cy1VqG0uW9zw//qbG8x0F6vC5QxlYeU49GvJIAcZC1Ww9hKtMUH+
ynxFPHjsVeG46p/eQNTL82+eMUPeqqD2lZcifpZNBg8Vnn0SoQoL2q4bS9Cf
Q9tWX7sbrwo3Zs4v79yOepfmVF4+ogqHI+n8iV5scnTL6aeZp1Rhi4LMziS8
X7LY/G3iRVVY8SXA0Gol8vezbyjkhir0cIw2lmK9NKvDYz7lquD/NaOV6oj+
m6rH5VSrCsp96+54R7HJqlcvJCyaVOH91ns8Wdg/b+T2aFDeIB45Ht3au9Af
A+SM5T6qAuezn7OBJ5uwbtXa8Y2qwl9jr1U/Mf6+8QC332Oq8DrcuTkF9cxr
w+//ZVYVrip/Kt53COfHsdKIt4vUoI+nP/Z5Pu7vr90PNEipQTtvQenBUOx3
xT9Z5apq0OIRL3AN9bF8R/7lK1Q1sFnS8u0Z1tdYRr9zcpkayC19cDYC+XX/
M/I42VYNHi7wmpZjvf12GS/DnNTA/OgRxqATm4SkGX/026QGn2/uv+qEfE6+
7WKv9VeDw4da62jIZ6pK4l/LEDWQ5tVIdUF8JXZpCOvHqoGC/6bpncvZ5PK9
50oKh9Qg4OzxF1zWbKI/HWKwKEMNVl81WnVlM86PlRJWf3LUgJVRwHqWjvM7
s9pp5KoaZL5VIc8R39ddvj6dpWrwqqquOWwv4qe+ENz4QA2W/7vVkoLxmME3
9lc2qIHGiMzgQV/8Pqxce6LwpRosSuT8V5yBfjj7Iy/7PeYrk1B8cA1+nzrk
FB/8rAZWApQJN282UTll9TDimxqouXwaOWeH/f1hsGnLlBrIuge7emxkEzOt
o90uPOqwVKo0m4b98jTU4Ku1mDrIKe/7EYX+4VbdMWGgqA7/wqdzA01wXs/H
8CnpqIP+rzCuh9j/wWuUZAWN1CFJ1avlhgvuT6ef6ExZqoOd/YN5xTDcH/t2
mo6uUgdagkIeD/qLmK7Qqm43deg96R2wczH21yh4Cfuqw5tTdFEBnIcXbseH
0Heqg2B5GLM3gE22hlckx0aoA3f4bsl9OO+1jZnZt/erA1lZqf31//j80rg+
mKIOjhJ/5S6iPu5Wez+UyVKHt53fw5t24Hzan93mlKcOVwKtfUfpuI9at/Qf
KFSHbfs+8VViPv/m/v28X6oOdeccww744H5ev5yXWa0Oi71HD8vj+2mpkfJq
9epQk8mtfyUW8VhdbLCxDfO3jl6hvwT3V8FBmxOd6vDQX+F3J+bb+0Jufd2A
OrCDZ8QDPHDenFy38xdDHZbplfPlS7JJ4Ppj+yjj6tD3X0CBszP2mwxJ3zyn
DkY7XSgz+mzys3vi8ulFGtA5+rg1xwjn4YXFFU2SGmC5X2f7AawncXPgs7/K
GvCIPFVfLc4mdPXL7431NECPXzA2D/Hg+9zJCjTWgP59lgO5q3G+XBeZv2il
AZX/+St9DGKT7KBVkq9XaUDrvb7wkWW4n367v9zKRwNSxJrWLOB9N/Zqb70e
rgG1vCM3mUvRX8z89vTs0wB5hs/9KBmcd1NnjoilaMDD6WaePC3k+1Fbnn2m
BjinXlghhPXUJnOX7s/VgNnbzq8LJZB/uhW5c1UDWB2jxmH4/mqevW8+39aA
8MVrXXvwPuGmW8Py1RqweX30ki7E682JoUmXJxpQUG9ddtySTXKdFYVTWjVg
3PM7j2sgzi+x9WoP32lANNzfeRP7R/PNCRNOvwbq9UsMxYxNvp6tX6XJ0IDh
27MpyxRxH/Oc8vL8pQHmHK2ZZjk22aNoHJoxqwEtEnJh9ylskh9R9eQTjyac
qsxSEsB4827uTn8FNOHS/CVDfWM22WbCeSsrpgnPtlIa92M+jVInNhtLa8Lh
sFq1SvQ3vd/aX9cqaELxtT+O+shfWteTyEBVTYha+kfVE/mW8TPK7TDRhObZ
oz0XkK8rnwoeW67WhJQ74QVH8Dn3U6vVm5w14dBEd+t9KurjWndHhLsmXBsx
fGWI5+Yje33SPDRhuPfmHYYgmxjsEvtyzVcTYvMPDvpz4X7veDuM+GvCfy0S
bz+K4PcZdfWfDzs1ga/it6QW4rFB6PPB8d2a0HZFffmEIeqJnSwoFqkJB8Ov
VT7Tw33piuWgWIwmjMt/FHmAfvhtw0SVeLwm7GQvayjjxXr4K9IlDmji/rdJ
9A/qT/dRWIBkqias5AyubHbDfTqcai51QhPmYNf8d8Rri+awsHSWJqzRMHsi
hX4z3XllSPqMJqjmHugQlML99YTfQ5k8TVgXwvNhrQPuoyvks2QvaULO7KbV
4Qq4z/94u12uUBN2VLzOfybNJruvnbSQv6kJlh8XV9mKor691ooplGL8qtZW
RQuc70L8wwrlmlB/88jjQRaL2JCG/xSrNaFleeiRQ8r4PbMn+ZTSI03Q9Rf7
cwXxitG1DFR+ogkVrsb/lZvivt/z20rlmSYErsigXFyEesksl1Bt1YSqhIf3
1yI/jvSwr6rtmlD494udghXu1+OUx2rvNMHl8wMeM+z/g8VfTqt/0AQNz8SZ
fT9YRNnvSpBGvyb4qjVvXKaD81PMz0bzsyYk/0uLUJtkkY1P5aS1RjVhdWGZ
7zrU24/YtwwtjiYs9rHhHUS8MvRPEu0xTfhwy/PV+j4WofQ7ndP5owk/Siv3
b8f8G7P5QnT/4v8f50UlYD/6r2qw01vQhCPaZLEx6uvvZJIshU8LnB9E9Wz/
zSJ5pRZsipAWtLzlhthZFlnm/7ueKq4FffVSTw4gPh1S5bn6MlpgcG/RSR7s
x9Cm0DADRS248nVw3WfEY1ECZSVNTQtcWnovzg+yyLXFX+QNtbXgwVLz5Tt+
sYjdUME3Q6oWKA1/Gsuj4Xw459u4eLEWDDTFrj+F/bVvjdyFJUu14JCNgkIJ
xpOafRNhtFwLGLzOr9do4PfyvaxVxiu0YOil7dQU6ttph5OSCWhBtoJsc9sA
i4zI8f00WY35rjwv/GOGRQ631T9f6qwF588JNlejv6geSMpf5q4FGSvW3l31
lUX+M7HYY+qhBZfP77d6xc8mHiPjq818tYAe8ra5no9Nxs7fUzH3x3jybasq
3rBIlkvoL/OdWrB/nQ+3J+Kjv6DXsny3Fiy9M039hHp9fv/zZYsILeDREeM7
PcEi24IKoi2jtUBv7Mi3lp8sMqfk62S1XwskwnT4ZTH/C+2y6tbJWiCSI1EW
9plFzFLe/LZO0QK35iLDu90s8sYsq23FcS0o0dywx+gviwhe5o2zPa0Fdpsj
7CanWAR4kzTp+VrwyGX3gffIX//D5ZP0q1oge0jozDIe3C9Dx1/CDS1YG/fJ
dXsPi8iq3ytaeRvxjSZPwxDf8rch++3vaUEZ43aL/VMWeZI6vqSiSgv7319p
AvX4yjRpRO2RFuSX5RvkfGKRjyO8lzKfaEENSykhmM0i7NysDTPPtKC2tSMi
Bv1kxlFOMLhNC3TGWaGa/ZjvdMGTrg4teL+y+EPlHxZRuE2Js+/Sghu3glN/
4f0Uv3LDil4t2MNX9C8a6zEXsfyi9kkLBPf5LR55zCIOdQ0XMke0QNtP8PI9
zG9jxFr3GRbin57Y/xPjb1d/xx/8UwuyipxFjpWxyJ7XfnVdE1qw6pTinnf/
scjBw8PR9n+1QN9L/i8N9XFyabhBxYIWXP21zv5TE4tc/jLxSY1fG2i21UJd
HBYpO3cgL1NYGwpDEj4dRb3WOixaNyOhDWER7EDSxSKtf07xBstpQ+aLH/t+
Yv0fihVqu5S14aAL5e6jtywy6l24x15TGxx9XzQeaWCRCUEDaoWeNtwwCtlF
fcIivLWVA2qG2kBGnSuKxllEOsw6J9NEG0xkba+dqWcRLdVnzjPm2nBX2dnP
7CGLmLS7cAev0Ab1GvOa3ehX9INdNV2gDZultB/unWcRN+OtkfaO2pAmkDn3
FO/bOvRVt8JFG6LDbxx+g/eFn4n8qLZBG66c5fl3Fv0k0X7qTKaXNuQrm8of
Q32l/z7kNLNZG+R0QxNFEP8LNwQXgrZrw6kXCbX1mE+x55kHXUHaUFPzIz2r
jkUeLFIOtw/Xhhnl3IZ9hEWe11zTrtirDVdPnq2quMMinbsNe9X2a0Pw8Qap
d89Z5ItSdXZmsjZY1p45PtvLIr9e2DjOpGjDtoSZIYkbLMKV3DQXdALxvn+x
rAH1JbHEraorSxuKJqp0OKhX9cH3IfZntSEvwYDPC/NZnB2gWXFeG5bv3w3Z
eF4BzPdqBdrgYXR5sucVizj/2nMy85o2cLsppdxHvfhcm1k1U6INz11ipsRe
sEjwptS/QXcRX8WM9buqWGQfn0hl131teLMmTNkZ9Xbswblg+/+QX80gf1nU
T06QqnoF0YbGvP7tWSfQzxRudqk9Q72c6ynWec0ila1LMjNbtWGvli/V8CqL
NCQ8XDnTrg1i+V9f6+PzDhp9OqhTG46elhqIvM0iAx9b7nX1aAOPLp/AH/SD
b1nrd9kPakPkTL+I6hkWmbXtVakYxvqEGG1OhSwi/HP7OzWWNph/Hxi4dZ1F
lArZaZk/tMHhAnhKYz36G2LoM7+1oU8iQ/B5K4tY8Mz9CZrRhqiivYeDz7OI
Y9XRO13/tKH/XnPxHsTDI1Bspz2fDigp/CeoVcIiO+XylCqEdMBuIt4zE/kS
52W+bRDXAYquVqwc3lc7ZpXxVkYHLicWXNc8ySK7BjPtvyjqgPbald+lb7GI
5KuBv+Nq+HyJc/uKZyzy+JFxFa+ODqQfSb0en8MiQSUpYbL6OtCm99R/x2UW
kcrt1NFbogOHt/FpXK5lkbpUvX7zZTrwSjVCovwC8rNnf46jhQ74Jew41dCO
/eHf5uptowOuPX+cfpWjP7mo8O9eqQOHCjjyoYhXiFUEiXfUgfqCQvHyB+hv
1Pq4dBd8Pqy46wu+3yArZZS/XgdyF/14+eUSi4Tx7Bwt9dQBe+8q0dZTLCI/
Vn3lsZ8O5NXn/Ro5yyJPBxZ5vwrQAVGfkuHl6A/hL30kBgJ1oOXhGan919C/
HpW2fA/Rgbo8l3y9aBZpLJ479C9SB8RixEotY1kkIsfNUiJWB2IvlCZ/ymAR
xdTCMY0EHbg1+fp+fg32S9T4LZODOjC55HbR9eMsErXVYfvKIzpAS3cqDkvH
fcAlT2ljmg5YPFXe8zeKRZotmW93nNSB8IJbBhJ4316KdUbMWR1oL7Ix3pvK
IqqyWfZHz+tAcfsJuJ3JIi3cg39zLuvA9sjxo1vyWST6p3HVzSIdWNMaKe53
kUXUBlLCHhbrQMO3TPGMnehnLzp1Wsow3320t3LbWSTmP73+DxU6YEsTE3uM
fKkX789hPtAB8UC1th2I94tzba4ztTpQ4PBhOhbvj0tR4Rdu0AGzwOU2+wJZ
RDMqgig36YBEsd/5VtTXqy31cYYv8Pw+5utcAIvsd5YysnmtA0P3i8JzD7GI
tuXOUdcuHdgwZBW5J55F2vUeXNnaqwMiQWabfiB/8TIC3pGDWO/dVgU31IcO
t6/EoWEdaI7uPJCE/tHxo7Qlm6kDzk21GVJpLJLQP3eo8Dvi5T/om5XIIrov
3Cwrx3WgdmiR/5otOE9rCseeTqHe2gQK72L9STfHb72bQ72OlFwuQvwp5xy2
D3PrwpIFuajubSzy7nCe0sQiXTj9boL4hLLIgUjmWz5RXfB449dk6ov9t8U6
Q05KFxbzZRV/wXo612bZU+R1IeWGnPbEDpw/FoN/l6voQntdspoEvm+gZ1K1
RlMXBi7/vt53kEW6pFPDfPR0If2ysvnsBhZJaWtzvWSlC96rOG4i+L7RYSmj
wXW6MHL6NPdZLxZxDTNp2bxJF2bSt6nM7mGRUC/3bb0+usC5f9ybbw2LpK2M
nPHy1wWjUdWTh1APxYtPnu3aqQsVOXD1VjbqT+GO4cYQzH/PyXHedejPPC+f
v47UhXlSlx5siX78g7V1XSw+P+ClvIeO/PcKTr1I0IUa4WH7S+txX35OPe10
SBeGewysz4WxiF+5o0HzUV3oKR667or/j8/f1bgqQxeqnVNUN6fgPnns6Oan
2bqQH/XsQuxmFqnec33CLlcXygaO/9VGPb/b3HiyLl8XkuU7rixyZpExx88U
60Jd2C9h5LXNBefBMq6GmpuIL+36IitAPNQ0fM3LdOHwh+2eyd6Ih6Dd+P0K
XRhjTdLbzRCP31syTR7qgtDBV99nIxCPwSTde48xX68Q5ahgxKMtnxg+1YXl
bzWUvZCf59WPvG4360J9kE1LtD7icbXnJ+WVLphVcXsm7UY8MqfSbrzVBfH1
By5YKCIe++S1tT/oQuOic51jKxCP7eaPr/brgmczW+WZB+Lh6uGh9gXvlzk3
VWWDeFjEfM9n6EKomsRdO+yXPO2zxxW/60KYm1LI4BLEQ6xSI28c9TV2LYGK
/L6bfv2fzLQu8PSJHdBCfsaGf2w4M68LncM11Vme6M+vxTjivHrQ3hd6QT8J
52Ht4qNZgnqgds76wToHnH83XdSExfVghmx4O4D17j4d+vCEDJ4zz3b02bHI
8aR0d34lPVhaI72s3YlFbgTdYqaq68GGBI3rJpHoZxtaUrh09SDh8GSvOOb/
2WZU+aABnrvLjVYg/1z6/NWzRnogu9zLOcAe8ZDRXZdgpgePk24v1aUhHv/s
Ryet9OBUxwlKDvLpx9p+KJauB4snsvcm4/3xXYcVxx30wLTZfMljvD+v/mpl
lLMe0D77e3fYIh6lT5y/u+vBCrkRV3EVxCN3YDjUUw96bareh+ghHofnkpl+
epB7S6hiTgjxCFeRD9qmBzay7kkK+P5ib+vy4V16UFjitK9dHPGw93XaHqYH
2Sqn7DdhfruXxH8e3KMHJQ4vsriwvuOK5xO37NODA6Z3XPM2Ih68D2X6kvTg
z4fwdHPkt/FH1x3vFD3I54obPWvBIkO9v1d3H9eD+JGmv0uQv3/PpT9tzNKD
hiaNihrMR7ViafybM1hvffNmAxkWsb60XsrtvB64n3pWNP+XSXyOR5W+vKwH
y+gSqaXauH/sPbVq7TU98DWjRa3+xyQ5W+72N5foQbWKmYO3DotUrXkV53BX
D/avbUxcYo77AL/I5lv39SBv26WikcUssqNxLYj+h3r4xO+sa8gijw6l6e0h
eqBeK9aZpYnz2bZFuKtRDxwpnRUn55hk91/+MYtWPZiPXvpozSiT1Nc4dF9q
14Oo4ZsVSaY4D+OO1C6804MFh/iT2l+YJHJZ49WdPXow1T6j3CHFIk0/uY61
DOiBxCaxA0uFsd679FDDYT04+OVB7F4tFokNPeiezdQDoy/9y/QpLPKSSsx+
f9cDQdtvyx3HmET766yS9289SA++viOIwySJ16wXaqexnjZW3dBPJnkbkDCi
/g/18MDdPRLz11f7ry2VlwK2q0Q3OwqwyKG+yXujghTYFRITL9/HJO/Pm+c4
i1PgnPNzmgjeb+QZm3BPhgLmR0tj1n9gkmPSVf7SShSYWGTUU/+HSfpf/1q1
T50C08OsgDg5/N46aWLQp0MBrgfuhxn4/0znKHE7AwrMPRFjzDQyyReBe7+L
jCiw2+/PZrV3TGLV9K2H34wCmyQkTF58ZJLTqYZPQqwocOFMonw9vs+kh15v
t6OAvKOkv4Eu7uvzt9KWOlDgxdqezlF+1HstIyJ3LQU4//13ZyMXi/zYT9k0
40aBwLKj6T7zTLLafJflVg8KfLyYnDw7wySXx6+rPfWlgP6ZoO5dyN/v8i88
egH4/7rUB1slUd8RWsy0QAqExZ/ot8f7rtG2tX8LoYC0S4VHJB+LzDCu3F8f
RQGNlK3tA4jf+psD56tjKVDd452qv4hFbu1QPaCYSAHT9ysq9T8zyYLG5h3J
hygQx+6Tcn7NJF4DF9cMHaWATfoFnReTTHI3v2exQwYF3mtUHHfrYBI+HwXp
W9kUcE/au+Io6mGLnNeUSC4FstpO7tiE8are5fRH5VNAm6f8xhDiL3y682nn
VQrwFInJTmP9O9ZJl1jcpMDmvaMpO54yySPhDVmXSilQFO7GHka8JVuz9y6U
U2DP5Fe/hRYmCT7W4bXzAQX+aLg9lK9lkif2YjYttRRIt3U8rfWJSeS5XLUM
Gyjg2Ppx/xDyH0EyFmU3USBnS3nImwkmeZ7Yxhl/QYGSQrFzNv8xiaql4Fuv
NxS4XOLNcellkpg/jg9ruynQfTHe5ME3Jnlx/9gl9Y8USLHT6LGaZRKtPc8P
pw5RINLpdbIQ4hm/hDdo9Cvqo1IukxQyyRv2ShdnDtZjE3+7b4FJqLcOm9wb
w3w3GfWkIZ8Hd9XLSU9SoLy1jjo4gPrV/vc3bpYCn/hkK069Z5IlQzZDvVxU
2JWRIMBVyiRHC5KabBdRISDnW9FFxDP+/JE7DiJU6BIMEHiZySRhZzLPuUhS
YcOlvFI5rNc/81ziRjkqCKvfu8l9nUk2Hru03VeZCoH8RWf9mUzieOi60zYN
KqSsXiJTw2YS64Qy42BdKmzJ5uf3Qz8wiqmSjzSgQovjSg+xLqw34vF8rBEV
+N8f+Jp2j0lkg5+NJJlSQTbbzp6K9wtuf/ky1ZIKk7/e+jnfZJI5v8776bZU
kDhydHquiknGPD5ePG1PBTkqh/vRYyYZcRs+fH4NFV5G6x35c45JPjhxgq+4
UsHX79b1Q+mIt/1vt5sbqJBT+3PVyfPIr82s+R0vKqwM/Gn4+wGT3F/Oq1a1
mQqu6Q5+1xGvmyYifLXbqLD2b+ljHeTzAk2G07CLCsrFMpfrUb9ZuirvWkKp
4HKgttw4jUkOq+s86oiiQuZnN69bqK9YRcPC7lgqPBW+/cbvNPqjtOmJ/gQq
eFPNHxg/YZLNoisihw9SwWZ1pPjd50zitmiVJ/sInm1noKyGSey5XGx+pVHh
6Mkzq3NuMMnyvxt1pk9SQahHwN4R76NN+AkvnEW83JSCbiN+6j92/OK/QAXJ
y6tGrFDvUszQHtECKmT91d28NRf76Ut0vcw1KvSkb4CeOiaZ/phYrFxChe/L
fvOuLGaSb92pJ7XuUGF/vs/in6iPT68zYvUrqVCm59L34xaTvGs7u9n4IRUM
ta7obz7DJM3P8u2XP6bC88ZH91QOMUktuWZg20AFk0zLBO+rTHKvplTSoQmf
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$66265#1"]& ], 
       TagBox[{
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Opacity[0.5]], 
         LineBox[CompressedData["
1:eJwVknk41Akchyeh0eaYFSKJsGZMyVEyJs1XSI2cG0utijErtaXRYZPcOYqk
2ZFxrHJuakwtT2R8K52TZShJCk1Fmvm1HTKxobb94/O8z/vn+zwfi8jYIK4a
iUQK/bb/+bKLe5FEes963zHrHLWaQNv0loZoHRUrS10+8+WbxznrNslMP7NW
NPhz3CoJzN7gUh73ZJqls3/Lq/NnCPzj54gsw6KvrJiP0onmUgK5bf10cY4a
yLvMF9wWEEiOczvlfn82fOV4K0V8AuuWnJ3sWaABZsNb1gyfJHDq8wN6WasG
vPAyfN55gsCNPerbftmuCe2GswWduQS+Td9xe7J2Dtge9/G+m03g0I3rTmYK
MvjkR/wwlkFg5yzjCg/buRBOJwajUgn0tPAKe9Q+F1Kf1G9UJBHYCjy9mF3f
wTPNtVReIoEXku8lnbgwD1TR2zAsnsAUX4E/btaG1JY9AZz9BG5aGGH+hqwD
Y2Vi+xQegTOXJ9s2cHXBueB317RdBNpM8NPUdClQp8FabrOVwL7avDns7RS4
aUdLu7mZwKzQrNyCSxRgrJfWOvxE4OiVhELzTd+DIHNvVXQAgbWJEXVrhPow
9+VkFd2dQKFE5EKEGQLnQ46mlimB1kYvH6G2MSRQm901x5Qov345jMJfCOci
PclZt5SobaXl0etnBm/LL3Wr5yuxUZlI1t5jDv2HpN17Q5Uovh8Tv7beAj7a
nllvs0iJHINC44talkChFX9MeKRAuxSK3ZCvFYwsCsr2yVdgg3fHAU+RNZDK
FhoErlZgRtnh226aNkCdNblt3shr3G2SkDXhTQWGVWaKU95r1B1vSlRU0cAz
VP3eCZvXKB33HC5R2oJyqEPf/8YoMoMoyZk+S6HwWLdJoN8ofnZ7YKFeswyo
/BJFdO8rvB/wwnmtwg4kMdXSnK2v0F5exBqwtIdL+r/tcOobwQz669L4u/YQ
q8cxqAkawS/okDQQ7QDb88oZIe3D2PvF5NCggSOo+zDcLiwfRpceumhNsyPc
HzksWSR8iRPBA5+ZO5xgJDy9xOLdCxxcnNWhZrAC5ntx5avdX6DfkbA+2uUV
316R660vfI6mOX9PvYlaCSsCPwxsH5DjQSo3TI/sDHlzstPrrOX4Sedf15la
Zzjm/yVjsH8IeyqXOmcGr4LhjS7NXcxBZHZk7YydWAUaGRvCUkRPkVSZ1jxe
4wJjFxcVR3zox0DtatYTNgMe6E/VN6x7jNKrbewcggHeizXSooWPsNQsKfah
0BXmd1m11Lc8xClKZGfyaiY4mhTOLn7/AJsaRjzvvmFCSev4PfLHbiwu5cBj
4WoQFprVmQ53ItlY68AGphscLTVZdkWvHXs8/G6GKN3A5lrTysHu20hTk7Bv
5a2BG8foypM32rBmzpKQqWUsMBzfvUeXK8EUCfWw7CkLwuOYyecj/8J9qeff
kFgAyesYceLTlShTXdPeBQCO7zdGubArkbrzoV2vO0B6V11v9XQFDgXN7D3n
CdBvnxtiF1GBbCt/VSAbQBas8l1PP4vmd8dmKoIBYp7SnhUdKkPZPFddr18B
SAezTV0b+UhL9bMX7wYYcDfrjzPiY4YqMtA4FqBGnlvddugUug4d5//DA6CU
Fm8WQQFWiweNCuMBWisv/jl9Og8Tg1LNR9MAnCLVDfqupWPfHYF7YAaAilcU
L8hMQ0dmXaTkKECxsUww7ZOKo5Y9VfnZAO0c65TjlUcwSGVFcznxLfDMyU2S
W/tQFMNgV+QDROUkfOIF8JA85LtrXgHAM/OltSTRbrx656BIzgfgGXH5ig4O
GjOPy9gCAKlExyj/UjjuF5e/aywE0KoSDCfd+RFllo16i4sArD1Ohnpd8UBa
kdQhRwiQ63qk9+tXcet/alG54g==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$66265#2"]& ], 
       TagBox[{
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Opacity[0.5]], 
         LineBox[CompressedData["
1:eJwVkmk41AkcgCXHKGIqWSVGyC0p52B+E11TziI8beUqJUSHrexgWMxGpXlG
RmxlHBtNCovop5DQMpErwkqE+WsdERG2/fA+7/N+f9V9Qlz9xcXExDx+8L8/
vvF/LCY2QfvcKf5AJ5tAvZjyolNrZmjDWpGFiz86zEy+VKgyT1OtdPa14ROY
sN/iblj3d1rUeJLRo3sE/nHUO35D6jJNcalhtiydQP+qLv0CtjjwdL6ya7gE
ksJsbtFbVgKr12GqgENg3pb7c60/SULyXMDEwE0CF+bf6mc8kwRpZ6UPTdcJ
PNgqcfzkCSnopkhwmxIJ/DcmoHYuVxoS19s71ScQ2Ff9YofqKAn2yTR/mIgl
sGmFcqad3ipYYTrW6xdNoL36bs+O16ugK+Bo2jCTwGcQqnA6cDUYSpZInI8g
8GFkA/P6Q1kQKe3r9gonMMqB64RectCyLkbJ5wKBhzd5U8ZIa8DiTHkXM5TA
xZK5qv3+8iCZxrViBRKoPcthicuTYU4OtmkfI7AzN0macYIMU2Z6rBovAuM9
4hOTn5Bht3ND7vYjBA4/vZJCObwWDptMUk47E5gb4Z1ny1sHdNG3LH06gbwK
gQXhuQF2zv4uJaNCoJbSxw6UU4a/DJ7SpaZE2P+ixJPM2QQG/rtJ8S9FKKcp
Y9fuqApn7xU2S9wQYbEogiQXTAGP/LNDwR4iLGg5Hb7rkTps1b6/T3uzCH0V
U5Qfy2hA2pY7X650jKJRFNmoz0ETKtcfSjhwYxSL9jZetBdowZclF7ar9SjG
ZlyttZHSBu7k3HHZoREM2nglfnavDriT46N2JI2g/HRpxGiWLkhrJpre1B7B
+mn7wTsiPeA1UIXO1cNIdSVHxh0wgLzAlo0ujsM4b/NWXSLHEOzcZ/gn2z9h
i/OA2a5RI6il59Szj31C4/5UWo+GMSxkrDUx7RzCWP2R9PA6Y3Aw1VyV7TqE
S7id2XNqO6gc1Jdwez2I7UsbL/cqmkAt83O2YNsgWrTqC2zLTECJH1GxmfcR
Z9165qkBO6Bqfewd9fEB7FWLbxRX3AnsGHMhlT6Ajr96duqW7ISdve7ktbwP
qML+e2HMzxTKZdRsfXr68ZKOv6cCyQwi+QkxeVr9+HXNN6vFXDM4yc+R7e7q
w1a+gVmcmzlYnLIse0PtRWpj/JmQWXMIdhI8iRW8RzE+q2w6xwLifqzvN9mF
LnLZtG6GJexZWnhUtOcd1ldWMdiEJXSe3MD243VguiozpI1nBesqrKUKy9tw
gezTFGlNBZWWlJVpE2+xtGjIvm6MCgdPzDSQvjRjWrovvONZw95StTyVwSYk
Kctc3E+1AXrqJsOnCq+x1c6xxl1kA++Sy0x7m2tRV7yC8TLJFvaZGYhuVldh
jvQW9wVDGvz5PThY3r8Coyp0rgrf02BMwzoy36cQz0fnj4nRAHhvKMLG23wU
zjyXCwQAZp6DnwWDjzpn2oza6QBeK1fvqfmeiX2ui+ce2AOYV4e8P+CdiQxN
pxkXBkC24dhdPf37SKmbWsx0A/h2pKe/7XIGCmWt5HefBXjcHhsUXsxB3WhH
44IgANt51a4wJQ7Gzvi4KIcAMM61UZYv30Krvmucz6EAFEs7MQKSMbugVykl
HGBW3Kso6nYSRrhGU4ZZAOMUScXO5zHY+YpLd4kF+EeTF86NY6EJNc+n4jeA
PAWfaeaBaBzWaM26kQAgw9oadY3/K7rOaOpaXAewPk7PKKs9j4LTlozMGwA1
BtuOXHAKRVKfQ6BsMgC3zrhCIj8IK19dEvRzAB52+HNGG31RmXpNyOACTDbk
GHAEP+OFgrvjxSkAUr4pg8xXh1CoUayglgrwS9byIK3BDnVT67ezeQCpIcz2
5eWCZ/8Bh+a67A==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$66265#3"]& ], 
       TagBox[{
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], 
          Opacity[0.5]], 
         LineBox[CompressedData["
1:eJwVk3k41Akch6XDVK6plaQyrgzKKpIM5iskYx2jKNlaR1aSFYpEGGGyosND
ZpeUCUtNFCs1vq6iMqKMyJk0jvFLOljXaNf+8Xne5/3r/euj7hPs6ictJSV1
aHH/80OrX6mU1Ge6am63hJpPoN6Fx2X+8lN0wfEN5IVFDzVReNiycY4+/IMg
2JJL4EV709zQbgl9ML57C+8mgTd+9mavy/qXXnzNP/xRNoF+dV36JcnS4BRQ
0lGfQSAp1OKa1eulALV9sqXpBBZr3JoRrl8O/KjqJNEVAufn2vRzqpaD5Jbj
TGsagT8Jl/3yq9cKqIlLS2u5ROCnC8cbZgplwGXWTtx4kcD++lqjzWISJB9x
0v+SQODLJSp51nqr4I5szEsfFoE26rYeHU2rIE4k3zsaQ2AVhCgGBK6Gau6n
rWHRBN6NfRGTdlcWmgYFlp4RBMY5ZjjjYTkY/7L9ifdpAg+oelM+kuSB9peG
dWwIgQsVM3X2fgrATG1zYAUSqDOdHi+tQIY9GvFnthwlsLMwVYbhRQb+WRKv
/jCB7EPsS1fvk0HWs1W44yCBI4/OZVIOrIFGauWT4y4EFkZ7F1ty1kKedaJY
z4pADp9nSnisA+PJECRtJFBb+UMHyqmAtKBs1fKvYzhQW+FBTlcF7wnpqsSn
YyintdL6jdNm8J1S5Sy7PIblY9Ekud8o4KFTsPrUoTEseR0QseeeOqTMKUl0
No2hr1KmSulKTajdJXKN6hCjQRzZoN9RCxTiNW86XBZjmV3zGRueNlg3PnjM
NBdjQk5Ug8UKHaiMdGmWHRrFoA3n2NN2VNhLXl1jnDqKCpMPo8W3dcFmWOJ2
RWcUn0/aiP4c04OjOnZpzvUjSHMlxyY5bAVG6ZAd02kE5yza1JcVbIPrh09o
+78ZxtcugyZ7xAZAfRD2IvnoMBoOZNF7NQ1h32x0pVHnECboj2ZHPDMESVDh
zXzXIfyO22N6/bdD7EiS+cEmEb75viGyT2kHRJqRi3k/itBUqM+zrNwBqoKB
z5s5H3DarXeOdtwIjMdLf9eYGMQ+NXaztJIxPN3dE2RuNYhO5z06dSuMwYti
uGYt5z1uTBbMfzy2E+7pt5/07h3AcKqfhyLJBHTZOQVF2gP4j/ys2UKhCTg+
etbY3dWPQu5WkyS3XaBM9GW30vqQ1sw+ETy9C2rOGtsm8HpQihtfOVlgClrs
8iNeX7qQKZdP72bshi0OVkv/3vsWn1fXMZKJ3fCNM65+jNOB2Ztjgts5ZmC7
Jcu+/HE7zpN9Xsaa06CoqvRS1uc2fFg2ZPPsIw2iSjyVZb69wj+yfeEtxxxU
d4rUNoleIkll5Rl7mgVQEkX3qhWbUGjt9MR9zAKiljl+73nVgLrSfMbTVEt4
p5ROJNfXYYGMhvv8NjpYUFjZ8n58jONTo1p66KDTryMu8HmAYaw7H6XoAJ6q
rWoPr3OxZapGLhAAGq6tn9VncJF6ot3gjRXA+4XDewskedjvunCqyAbAnNVZ
ZOCdhwwt5ykmAyCYb6ZooH8LKc++LuS5AcSGCSMbInOwRdZMwfYkgFZ2Srt7
eTrqspwMS4IAFshWuZHK6Zgw5cNUCQbIzH03suTcNTTrT0kfDwEo6rnvWwRX
Mb+kTzkzAsCmU+usQlYqRruyKCPxANThEFFqzQXsbMywYiYA5Gz0FIUnxeMO
WrEPPxFAYHy6rN2BhSOawtuXLwLYSbqWaHLPo+uUlq5p2mLfXsznNoQhL2A3
I+8ygFAvN9fZZfGT/Y6BslcBmAJX9Zm7QVjdGM4bSAfYn2tUsb/ZF1VoKS2M
DAAZNffYTt4RPF2SO1GeCXCew9x2sGk/tmiWK6plAahPUEO1a61RN+v59mQO
gEPLqX03blZU/QdeGcE6
          "]]}, 
        Annotation[#, "Charting`Private`Tag$66265#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {1.000000657132653, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(\[Eta]\\), \\(L\\)]\\)\"", TraditionalForm], 
       FormBox["\"Violation\"", TraditionalForm]}, 
     AxesOrigin -> {1.000000657132653, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         FractionBox[
          RowBox[{
            RowBox[{
              RowBox[{"lup", "(", "\[Eta]", ")"}], "\[LeftDoubleBracket]", 
              "1", "\[RightDoubleBracket]"}], "-", 
            RowBox[{
              RowBox[{"\[ScriptK]an", "(", "\[Eta]", ")"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          RowBox[{
            RowBox[{"\[ScriptK]an", "(", "\[Eta]", ")"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]], "/.", 
         "\[VeryThinSpace]", "geodesic"}], 
       RowBox[{
         FractionBox[
          RowBox[{
            RowBox[{
              RowBox[{"lup", "(", "\[Eta]", ")"}], "\[LeftDoubleBracket]", 
              "2", "\[RightDoubleBracket]"}], "-", 
            RowBox[{
              RowBox[{"\[ScriptK]an", "(", "\[Eta]", ")"}], 
              "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          RowBox[{
            RowBox[{"\[ScriptK]an", "(", "\[Eta]", ")"}], 
            "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]], "/.", 
         "\[VeryThinSpace]", "geodesic"}], 
       RowBox[{
         FractionBox[
          RowBox[{
            RowBox[{
              RowBox[{"lup", "(", "\[Eta]", ")"}], "\[LeftDoubleBracket]", 
              "3", "\[RightDoubleBracket]"}], "-", 
            RowBox[{
              RowBox[{"\[ScriptK]an", "(", "\[Eta]", ")"}], 
              "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
          RowBox[{
            RowBox[{"\[ScriptK]an", "(", "\[Eta]", ")"}], 
            "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]], "/.", 
         "\[VeryThinSpace]", "geodesic"}], 
       RowBox[{
         FractionBox[
          RowBox[{
            RowBox[{
              RowBox[{"lup", "(", "\[Eta]", ")"}], "\[LeftDoubleBracket]", 
              "4", "\[RightDoubleBracket]"}], "-", 
            RowBox[{
              RowBox[{"\[ScriptK]an", "(", "\[Eta]", ")"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
          RowBox[{
            RowBox[{"\[ScriptK]an", "(", "\[Eta]", ")"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]], "/.", 
         "\[VeryThinSpace]", "geodesic"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.5`16.", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.5`16.", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.5`16.", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.777877919341496*^9, 3.777877958405051*^9}, 
   3.7778780050500402`*^9, 3.777879858231996*^9, 3.7779018204857407`*^9, 
   3.781438655079891*^9, 3.781438700211409*^9, {3.781438748644453*^9, 
   3.7814387675376577`*^9}, 3.7815151648491096`*^9, 3.781869608767468*^9, 
   3.7818696837173643`*^9, 3.781874045007609*^9, 3.793545342959391*^9, 
   3.823353123692565*^9, 3.823353196153178*^9, 3.823353237961562*^9, 
   3.823353590219709*^9, 3.823353658395133*^9, 3.823353709693306*^9, {
   3.823353771879723*^9, 3.823353800255597*^9}},
 CellLabel->
  "Out[386]=",ExpressionUUID->"8b377022-6c9b-4f33-8f8c-f372b19d8cd0"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"trajectoryBG", "[", "\[Eta]_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "\[Eta]", "]"}], " ", ",", 
        RowBox[{"y", "[", "\[Eta]", "]"}], " ", ",", 
        RowBox[{"z", "[", "\[Eta]", "]"}]}], " ", "}"}], "/.", "geodesic"}], "/.",
      "param"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptX]in", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], "/.", "substitution"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptX]an", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"\[Kappa]", ",", 
      RowBox[{"-", "3"}]}], "]"}], 
    RowBox[{"(", 
     RowBox[{"\[Eta]", "-", "\[Eta]in"}], ")"}]}], "+", 
   "\[ScriptX]in"}]}]}], "Input",
 CellChangeTimes->{{3.777878268875865*^9, 3.777878357392457*^9}, {
  3.777879480798183*^9, 3.777879481654992*^9}, {3.7814388992510757`*^9, 
  3.781438966008396*^9}, {3.8233539204155273`*^9, 
  3.823353921789785*^9}},ExpressionUUID->"8a15387d-e24b-4666-aaee-\
b9017a85283c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptX]an", "[", "\[Eta]in", "]"}]], "Input",
 CellChangeTimes->{{3.7778783770008087`*^9, 3.777878393859888*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"c115b936-f166-4364-9251-96a23f39f72a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0``52.30102999566398", ",", "0``52.30102999566398", ",", 
   "0``52.15051499783199"}], "}"}]], "Output",
 CellChangeTimes->{{3.777878382874909*^9, 3.777878394925528*^9}, 
   3.777879487809964*^9, 3.777901920551949*^9, 3.781438848729166*^9, 
   3.781438935302433*^9, 3.7815151786447773`*^9, 3.781869699858061*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"8d8e0601-8a18-45bf-8ca0-cae56e6f99d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"\[ScriptX]an", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"\[ScriptX]an", "[", "\[Eta]", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"\[ScriptX]an", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"\[ScriptX]an", "[", "\[Eta]", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"\[ScriptX]an", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"\[ScriptX]an", "[", "\[Eta]", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*FractionBox[\(\[Eta]\), \(L\)]\)\>\"", ",", 
       "\"\<Violation\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Opacity", "[", ".5", "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.777879489107382*^9, 3.777879533631398*^9}, {
  3.777880521624158*^9, 3.777880523597115*^9}, {3.781438975889904*^9, 
  3.781439068082621*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"85d7ec7b-439b-45e2-83a9-f030c2f8835a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
Von4L4x504g=
          "]]}, Annotation[#, "Charting`Private`Tag$13716#1"]& ], 
       TagBox[{
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Opacity[0.5]], 
         LineBox[CompressedData["
1:eJxF0gs01GkfB/AJTSpFLq2QlCIpkttUz/jJGxXRdtGmtEputS411WSwUcug
tmV6XcpIfwyRcYmaUrRN5DLEGMwoDGbG/W5rLbls7znvmXnOec5zPuf7Pc/z
nOc8Gz2DjnnL4XC4u9/n/9ZyZfG8OCQSGr3wOtfsmOXdji+S1bWi4OWyqSqR
UwVSoEab2ZdGAe7/w5DtVnf9FBXU6RGJdIUG5Dhn7J09TYWYLN2BKnUuCrBe
WOAnRUv78STug2VWMUD/NlNva/gMleRn7CK0xkhz/sC1er9rseD47Eh37+tc
NKN/wOeh2h14xq6l47tYSMdjHY5TfEfa92wtNzeevAt+5VWKBwzT0RgbTx8N
+EOaq863WeiuipPakpDX4MKU2UZguOTU9XgolQwH3k1klHG/qLhMVMbDhrS6
c49SMtF51dmUGHUaDPWI9MJZGWjKVNyv50WDmGrFGau+dBTpXG9RWkIDYlOB
geP381X2aKSG7kyQ7p/x08KAWoTM5tf7LZmNCdDIvbqcYp2DThaVNnYEJkrz
VIOf5W3yk+B95KX8e4kMZKT25BJu20NpbjdC2B2lnwYnclUMpr6/j+stwY1G
Shp4D9K+7HbOLfNbS2at46ZJ+yF56l8vGDyGw05D9j5hOeiebYl5QdhjoLaZ
JX3RzCnDWo+S/uE9lvbdLINPpatj8PG64SDxzBMkCq++UQWYNPfnrE0eviQz
S5dGU69Ml9qxOorqQ2ZAzKzIK6YQQ1c1gy6vaM+V5pW187i8v59B6/ih9ylp
WJntpg2q0X0ssLt/O0dinFtWP5Vsc3tfmbTfKfibEY69g9dKjDSnAqzMneT8
6qNrhTQ/ntI0Tl74IHUooXLteUqN1Hn3Pes+G9VJrXQhKCiR+RFsy5QdjRQz
0NXuFrrrGi7g02sLJ5KLUDYzoo+5lgs3jiQqW9zH0Ofg7WYKOlwwrbnpHfo7
huzWRFYVG3BhvPawWOMWhlTtzCeVERcobSEvKJcw5LC6a6/vPi4w6cUnOrww
FPL5DvWtAxe6TDpq7Tww1EMSaQcc5UrvU5RJc+D4yCwJItI2+nMh5qzr+hAC
hjTRYHvwFS7Y/h7CWtiFofAW2yuGYVw4eHbdoupWDLksnaBH0riQQo2/5auK
oREfl0mbMtl+euaze5PYMp9YzKKOVsn8JnleO7VJ5js1TIeZPi7U7LjR2Bta
iLZuW5lasqZJmnuNVjts9ZU5MumY2mZ/mRnQ2bXhiswS2lTwD6Eye1utz8PH
NUFCcthZ4/8UIJ9wknIvS5ZfXLO+LR3PA1pOdP0sKR8FWpIuamfzoNnzQuCu
QCYKOzN1jL/YDKuyD/kGk54ih4OxDTbHW6F7+gsj8l0OMrosYFfH8SFLg4/W
f/+/KuRvoZr9AthixfHxl2Mh5Zf8/FjDT5CU9ORpqeg5UuVHZ7+//RlsnAvj
HhWWI96bI2a5gnYgMYQtXrz36GlHg3mRRidwop+8mgyvQtR2/fmbgULQeXvI
/nJ1LQrR2GkTWNQFP+YKPG611yONu7kxS8ndAA/nyAGvGlHQbFar9cYecH6h
rOO+vBmdXHbz59l3PZA16Tb3DM9HIM/m6AWKQK3GeQmnrA2Jdvl5b6gQQcnM
vsYdFe2I6qmM09UUQxQh9NuOAiGirGixfKAlhs34d1qbngqRf/GDX1TXi4FG
03X6IVuIjsttEuA3ieH+MUqnQpoQ6WVYFIwbi6HQXyGIt7Udvelxc2eDGE6f
PrR8PECIJs4xXnn5iuGCvkcFVtmN3Dx2X8ljiUE9EUVqRHSj/a2/aTOUJJDZ
dlDgI+hBJk4NH1I9JbCl2cNyj74YnVilUq/rLYF04Xsjvp4YURqP8jBfCWjx
FlgkXTGqPN4qZPhLgJWpQ89fJ0an3TummWQJ1MQ9/22bihhRA4aMyu9IoHSv
gGE7L0LCOPwfncUSGLHOwzoEIhTXYnNSV74XCH01j/K1JGiMM3ebc7QX+uQ/
dpJde5EL+3UhGeuF1QZmXVnLBpCJqUlDy9de6G9qNffTH0TKj9JHdjn1gWmG
6M09qyHE+iRn9CmlD1LZ8Q6qr0bQ2bVe3uFDfRAxwbYYMRxHUZyQ/wps+8Fo
UM58aOUEyr9JY5sm94Ocd4Kz385JRF+StIrb3w8LDwcNfsycRLGRKW6XCQNw
U/uiB+3tFDIo3bwiLHoAKOKi3D+b/0IVowWvo/kDYDJvVTLV8wX1PBxzt98+
CCRqzSqq+CtatDdZlLs9CPHdOLwwYhqJ3535U5E3CL/m+/m7B/+DqvfGhq/e
NAT77bFjHRdn0HYTf7Oq4CE4u7eugDw8i2h6R8S/Ng7BU7NsisWFOZRV+XIG
2zwMhR0HdKyb51Gpn55KJWUY5PVzc85lLqCEdvJ+09phyLqbfvHJERwx0OVj
cIrmCOTXNewMfY4jcgif0l4GjkBp8Yg2i7GEuEW/t7KlcgQWE9yL7OLkiA4d
QsU9GqNQ5Kq1cWGnPNEvse3wY+9RONAf7BaToUAk4E59DXo+CkxytKYDWkpc
/ovgka38GHwwDmU285YSTzsrESpOjUG8SrjSi0E8kWm6j2dfMAYP6vm3rs4u
I7bTqHbtzuOgyBFZj6utIE4L+fTR7HGoKv98fO7oSqLadsOvi4vjcN41b1op
Von4L4x504g=
          "]]}, Annotation[#, "Charting`Private`Tag$13716#2"]& ], 
       TagBox[{
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Opacity[0.5]], 
         LineBox[CompressedData["
1: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
qU1hZrLEfwFU+RG3
          "]]}, 
        Annotation[#, "Charting`Private`Tag$13716#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(\[Eta]\\), \\(L\\)]\\)\"", TraditionalForm], 
       FormBox["\"Violation\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FractionBox[
        RowBox[{
          RowBox[{
            RowBox[{"trajectoryBG", "(", "\[Eta]", ")"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
            RowBox[{"\[ScriptX]an", "(", "\[Eta]", ")"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        RowBox[{
          RowBox[{"\[ScriptX]an", "(", "\[Eta]", ")"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]], 
       FractionBox[
        RowBox[{
          RowBox[{
            RowBox[{"trajectoryBG", "(", "\[Eta]", ")"}], 
            "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
            RowBox[{"\[ScriptX]an", "(", "\[Eta]", ")"}], 
            "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        RowBox[{
          RowBox[{"\[ScriptX]an", "(", "\[Eta]", ")"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]], 
       FractionBox[
        RowBox[{
          RowBox[{
            RowBox[{"trajectoryBG", "(", "\[Eta]", ")"}], 
            "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
            RowBox[{"\[ScriptX]an", "(", "\[Eta]", ")"}], 
            "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
        RowBox[{
          RowBox[{"\[ScriptX]an", "(", "\[Eta]", ")"}], 
          "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.5`50.", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.5`50.", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.777879535034911*^9, 3.777880524748702*^9, 3.777901922930176*^9, {
   3.7814389387870073`*^9, 3.7814389700327253`*^9}, {3.7814390003397923`*^9, 
   3.781439068629759*^9}, 3.781515180761301*^9, 3.781869702187271*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"3aa3d0df-1609-4e27-bf97-0763186ca699"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"\[ScriptX]an", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"\[ScriptX]an", "[", "\[Eta]", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"\[ScriptX]an", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"\[ScriptX]an", "[", "\[Eta]", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"\[ScriptX]an", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"\[ScriptX]an", "[", "\[Eta]", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Eta]in", ",", "0.012"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1.5"}], " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "11"}]]}], ",", "0"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*FractionBox[\(\[Eta]\), \(L\)]\)\>\"", ",", 
       "\"\<Violation\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Opacity", "[", ".5", "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.777878517427288*^9, 3.7778785349811783`*^9}, {
  3.777879086933199*^9, 3.777879223757092*^9}, {3.777879450591816*^9, 
  3.777879451023458*^9}, {3.777879568644017*^9, 3.777879582490787*^9}, {
  3.777901984970179*^9, 3.7779020448807697`*^9}, {3.7779021720812407`*^9, 
  3.777902191435361*^9}, {3.781439106805151*^9, 3.78143918977999*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"5bbd035e-8551-4d6d-a37f-8dc0a4ef763d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[{{0.010000020204081634`, -1.2850971047532754`*^-11}, {
          0.010303638087623261`, 0.}}], 
         LineBox[{{0.05049927351460406, 0.}, {
          0.07017010473445057, -1.1532128678403887`*^-16}, {
          0.08945507233068728, -1.7466207506622017`*^-16}, {
          0.1103745844665795, 0.}, {
          0.12989802889722926`, -1.157465884590131*^-16}, {
          0.15105601786753453`, 0.}, {0.17182814321422998`, 0.}, {
          0.191204200855683, 0.}, {0.2122148030367915, 0.}}], 
         LineBox[{{0.26670541990884766`, 0.}, {0.2719212237568256, 0.}, {
          0.2722253979394298, 0.}, {0.272529572122034, 0.}, {
          0.2731379204872424, 0.}}], 
         LineBox[{{0.019716197396798363`, 0.}, {0.020019827934070762`, 0.}}], 
         
         LineBox[{{0.26148961606086973`, 0.}, {0.26181560380136837`, 0.}, {
          0.262141591541867, 0.}, {0.2627935670228642, 0.}}], 
         LineBox[{{0.014858108800439997`, 0.}, {0.015161739337712397`, 0.}, {
          0.015465369874984794`, 0.}, {
          0.01607263094952959, -1.4283129424415172`*^-16}, {
          0.016228149017576896`, 0.}}], 
         LineBox[{{0.0317365666594467, 0.}, {0.03206573695515122, 0.}, {
          0.03469909932078734, 0.}}], 
         LineBox[{{0.030585786581125485`, 0.}, {
          0.030749055772333157`, -1.672098716212322*^-16}, {
          0.031078226068037673`, 0.}}], 
         LineBox[{{0.2549698612508973, 0.}, {0.2562738122128918, 0.}}], 
         LineBox[{{0.02959834200641605, 0.}, {
          0.02976154488521961, -1.7556557304123228`*^-16}, {
          0.030090715180924127`, 0.}}]}, 
        Annotation[#, "Charting`Private`Tag$13959#1"]& ], 
       TagBox[{
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Opacity[0.5]], 
         LineBox[{{0.010000020204081634`, -1.2850971047532754`*^-11}, {
          0.010303638087623261`, 0.}}], 
         LineBox[{{0.05049927351460406, 0.}, {
          0.07017010473445057, -1.1532128678403887`*^-16}, {
          0.08945507233068728, -1.7466207506622017`*^-16}, {
          0.1103745844665795, 0.}, {
          0.12989802889722926`, -1.157465884590131*^-16}, {
          0.15105601786753453`, 0.}, {0.17182814321422998`, 0.}, {
          0.191204200855683, 0.}, {0.2122148030367915, 0.}}], 
         LineBox[{{0.26670541990884766`, 0.}, {0.2719212237568256, 0.}, {
          0.2722253979394298, 0.}, {0.272529572122034, 0.}, {
          0.2731379204872424, 0.}}], 
         LineBox[{{0.019716197396798363`, 0.}, {0.020019827934070762`, 0.}}], 
         
         LineBox[{{0.26148961606086973`, 0.}, {0.26181560380136837`, 0.}, {
          0.262141591541867, 0.}, {0.2627935670228642, 0.}}], 
         LineBox[{{0.014858108800439997`, 0.}, {0.015161739337712397`, 0.}, {
          0.015465369874984794`, 0.}, {
          0.01607263094952959, -1.4283129424415172`*^-16}, {
          0.016228149017576896`, 0.}}], 
         LineBox[{{0.0317365666594467, 0.}, {0.03206573695515122, 0.}, {
          0.03469909932078734, 0.}}], 
         LineBox[{{0.030585786581125485`, 0.}, {
          0.030749055772333157`, -1.672098716212322*^-16}, {
          0.031078226068037673`, 0.}}], 
         LineBox[{{0.2549698612508973, 0.}, {0.2562738122128918, 0.}}], 
         LineBox[{{0.02959834200641605, 0.}, {
          0.02976154488521961, -1.7556557304123228`*^-16}, {
          0.030090715180924127`, 0.}}]}, 
        Annotation[#, "Charting`Private`Tag$13959#2"]& ], 
       TagBox[{
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Opacity[0.5]], 
         LineBox[{{0.010000020204081634`, -1.285095174765095*^-11}, {
          0.010303638811255901`, 0.}}], 
         LineBox[{{0.03667412109501443, 0.}, {0.03733246168642346, 0.}, {
          0.039965824052059576`, 0.}, {0.05049927351460406, 0.}, {
          0.07017010473445057, -1.6308892780030492`*^-16}, {
          0.08945507233068728, -1.235047376954381*^-16}, {
          0.1103745844665795, -1.9552913556600445`*^-16}, {
          0.12989802889722926`, 0.}, {
          0.15105601786753453`, -1.3913731601283453`*^-16}, {
          0.17182814321422998`, -1.2127776630030201`*^-16}, {
          0.191204200855683, 0.}, {0.2122148030367915, 0.}, {
          0.23182933751265755`, 0.}}], 
         LineBox[{{0.2592077018773794, 0.}, {0.25953368961787804`, 0.}, {
          0.26018566509887525`, 0.}, {0.26148961606086973`, 0.}, {
          0.26181560380136837`, 0.}, {0.262141591541867, 0.}, {
          0.2627935670228642, 0.}, {0.2640975179848587, 0.}, {
          0.26670541990884766`, 0.}, {
          0.2719212237568256, -1.498630424220117*^-16}, {
          0.2722253979394298, -1.496892054527879*^-16}, {0.272529572122034, 
          0.}, {0.2731379204872424, 0.}, {0.2734420946698466, 0.}}], 
         LineBox[{{0.019716197396798363`, 0.}, {0.020019827934070762`, 0.}}], 
         
         LineBox[{{0.2755713139480761, 0.}, {
          0.2758754881306803, -1.476341867506097*^-16}, {
          0.2761796623132845, -1.4746547924046777`*^-16}, {
          0.2767880106784929, -1.4712921831557665`*^-16}, {
          0.28165479760016027`, 0.}, {0.2819589717827645, 0.}, {
          0.2822631459653687, 0.}, {0.2828714943305771, 0.}}], 
         LineBox[{{0.013750267621416205`, 0.}, {
          0.013947217188622804`, -3.10759371661197*^-16}, {
          0.014250847725895202`, -1.4428118959358602`*^-16}, {
          0.0145544782631676, 0.}, {0.014858108800439997`, 0.}, {
          0.015161739337712397`, 0.}, {
          0.015465369874984794`, -1.1221882154408734`*^-16}, {
          0.01607263094952959, -2.0199395345138154`*^-16}, {
          0.016228149017576896`, 0.}}], 
         LineBox[{{0.03288984617425382, 0.}, {
          0.033053247842264766`, -2.128350402927337*^-16}, {
          0.03338241813796928, 0.}, {
          0.03469909932078734, -1.9865254476131196`*^-16}, {
          0.03502826961649185, 0.}, {0.035357439912196365`, 0.}}], 
         LineBox[{{0.2552958489913959, 0.}, {0.25562183673189454`, 0.}, {
          0.25594782447239317`, 0.}, {
          0.2562738122128918, -1.593848372037326*^-16}, {0.2564369138876617, 
          0.}}], 
         LineBox[{{0.020627089008615554`, 0.}, {
          0.020930719545887953`, -1.12219028966684*^-16}, {
          0.022145241694977544`, -2.019942894761745*^-16}, {
          0.024574285993156728`, -1.6832862123367942`*^-16}, {
          0.024877916530429124`, -1.6489334791439637`*^-16}, {
          0.025181547067701524`, 0.}, {
          0.025485177604973923`, -1.584269505507896*^-16}, {
          0.02563846680635265, 0.}}], 
         LineBox[{{0.011985296674390064`, 0.}, {
          0.012125433964988419`, -1.4428050383505834`*^-16}, {
          0.012429064502260816`, -1.2624559086481925`*^-16}, {
          0.012589810010907022`, 0.}}], 
         LineBox[{{0.03157323722706402, 0.}, {
          0.0317365666594467, -1.1286370589842942`*^-16}, {
          0.03206573695515122, -1.1118003770640825`*^-16}, {
          0.03239490725085573, 0.}}], 
         LineBox[{{0.29402608297178556`, 0.}, {0.2966637945000762, 0.}}], 
         LineBox[{{0.027003330291335913`, 0.}, {0.027306960828608312`, 0.}, {
          0.027610591365880708`, -1.3930647845514357`*^-16}, {
          0.027763704199439573`, 0.}}], 
         LineBox[{{0.029543330154373364`, 0.}, {
          0.02976154488521961, -2.482872144807149*^-16}, {
          0.030090715180924127`, 0.}, {0.03041988547662864, 0.}, {
          0.030749055772333157`, -1.1823523410470534`*^-16}, {
          0.031078226068037673`, 0.}}], 
         LineBox[{{0.012841134465589842`, 0.}, {
          0.013036325576805612`, -2.0199328140514977`*^-16}, {
          0.01333995611407801, -1.8363036690458285`*^-16}, {
          0.013498372008375207`, 0.}}], 
         LineBox[{{0.02609243867951872, 0.}, {
          0.026396069216791117`, -1.4962546414362654`*^-16}, {
          0.02654927728435647, 0.}}], 
         LineBox[{{0.2513839961054124, 0.}, {0.25170998384591103`, 0.}}]}, 
        Annotation[#, "Charting`Private`Tag$13959#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.01, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(\[Eta]\\), \\(L\\)]\\)\"", TraditionalForm], 
       FormBox["\"Violation\"", TraditionalForm]}, AxesOrigin -> {0.01, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0.01, 0.012}, {-1.5*^-11, 0}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FractionBox[
        RowBox[{
          RowBox[{
            RowBox[{"trajectoryBG", "(", "\[Eta]", ")"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
            RowBox[{"\[ScriptX]an", "(", "\[Eta]", ")"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        RowBox[{
          RowBox[{"\[ScriptX]an", "(", "\[Eta]", ")"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]], 
       FractionBox[
        RowBox[{
          RowBox[{
            RowBox[{"trajectoryBG", "(", "\[Eta]", ")"}], 
            "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
            RowBox[{"\[ScriptX]an", "(", "\[Eta]", ")"}], 
            "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        RowBox[{
          RowBox[{"\[ScriptX]an", "(", "\[Eta]", ")"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]], 
       FractionBox[
        RowBox[{
          RowBox[{
            RowBox[{"trajectoryBG", "(", "\[Eta]", ")"}], 
            "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
            RowBox[{"\[ScriptX]an", "(", "\[Eta]", ")"}], 
            "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
        RowBox[{
          RowBox[{"\[ScriptX]an", "(", "\[Eta]", ")"}], 
          "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.5`50.", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.5`50.", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7778785355714006`*^9, 3.7778790901254587`*^9, {3.777879192039253*^9, 
   3.7778792257716837`*^9}, 3.777879453952936*^9, 3.777879583914956*^9, {
   3.777902025603929*^9, 3.7779020465856857`*^9}, {3.777902182192132*^9, 
   3.7779021926273108`*^9}, {3.7814391549607*^9, 3.781439190362702*^9}, 
   3.781515189811805*^9, 3.781869705840899*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"c5646a27-74f9-48dd-b348-31d2068da072"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\

Compute the null geodesic\
\>", "Subsubsection",
 CellChangeTimes->{{3.754082534748171*^9, 3.754082554097117*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"24b70deb-d431-4767-82de-5db65c955692"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"trajectoryBG", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "\[Eta]", "]"}], " ", ",", 
          RowBox[{"y", "[", "\[Eta]", "]"}], " ", ",", 
          RowBox[{"z", "[", "\[Eta]", "]"}]}], " ", "}"}], "/.", "geodesic"}],
        "/.", "param"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{"A", "[", "\[Eta]", "]"}]], 
          RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}]}], ",", 
         RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", "700"}], ",", " ", 
       RowBox[{"ViewPoint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "Infinity"}], "}"}]}], ",", " ", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*FractionBox[\(X\), \(L\)]\)\>\"", ",", 
          "\"\<\!\(\*FractionBox[\(Y\), \(L\)]\)\>\"", ",", 
          "\"\<\!\(\*FractionBox[\(Z\), \(L\)]\)\>\""}], "}"}]}]}], "]"}], "/.", 
     RowBox[{
      RowBox[{"Line", "[", "x_", "]"}], "\[RuleDelayed]", 
      RowBox[{"Sequence", "[", 
       RowBox[{
        RowBox[{"Arrowheads", "[", 
         RowBox[{"Table", "[", 
          RowBox[{".02", ",", 
           RowBox[{"{", 
            FractionBox["100", "10"], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"Arrow", "@", 
         RowBox[{"Line", "[", "x", "]"}]}]}], "]"}]}]}], " ", "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.75405837239607*^9, 3.754058455519836*^9}, {
   3.754058507843292*^9, 3.7540585091399384`*^9}, {3.754058659864997*^9, 
   3.754058717587652*^9}, {3.7540587634100113`*^9, 3.754058861943016*^9}, {
   3.754059133839587*^9, 3.754059204275671*^9}, {3.754063216975363*^9, 
   3.754063251325008*^9}, {3.757170036610854*^9, 3.75717004140732*^9}, {
   3.757170549109874*^9, 3.757170573545023*^9}, {3.757170875317058*^9, 
   3.757170883336376*^9}, 3.757184808414733*^9, {3.757253064530334*^9, 
   3.757253096004531*^9}, {3.7572532393044157`*^9, 3.757253307661224*^9}, {
   3.759846919304276*^9, 3.759846926932495*^9}, {3.759914043002965*^9, 
   3.7599140483093348`*^9}, {3.759914626204378*^9, 3.759914645373255*^9}, {
   3.7599146807562017`*^9, 3.75991488937985*^9}, {3.7625091369830027`*^9, 
   3.762509181477426*^9}, {3.762509245364053*^9, 3.762509264900402*^9}, {
   3.762509316852109*^9, 3.7625093327984324`*^9}, {3.762530141176111*^9, 
   3.762530144499564*^9}, {3.7626929783536158`*^9, 3.762693110737978*^9}, {
   3.762703766177964*^9, 3.762703795338166*^9}, {3.763621899721203*^9, 
   3.763621921063925*^9}, {3.763621961308117*^9, 3.763622048800996*^9}, {
   3.7636233655060863`*^9, 3.763623370513995*^9}, {3.764102081050967*^9, 
   3.764102178517293*^9}, {3.764615880593359*^9, 3.764615966049658*^9}, {
   3.7669958706406116`*^9, 3.7669958799935093`*^9}, {3.7670049369781113`*^9, 
   3.767004945299756*^9}, {3.7672524429054937`*^9, 3.767252462734213*^9}, {
   3.767554959099173*^9, 3.7675550010391693`*^9}, {3.76755563750681*^9, 
   3.767555658826786*^9}, {3.767556176813026*^9, 3.7675561863687487`*^9}, {
   3.767556219601589*^9, 3.767556220254074*^9}, {3.7688160192780037`*^9, 
   3.768816030960763*^9}, {3.7695029820138817`*^9, 3.7695029824021606`*^9}, {
   3.769503084638166*^9, 3.769503123648263*^9}, {3.769503180473363*^9, 
   3.769503192844585*^9}, {3.769756924278029*^9, 3.769756925647828*^9}, {
   3.7779022139138603`*^9, 3.777902223556411*^9}, 3.801891988709098*^9, {
   3.813992471706459*^9, 3.8139924720892897`*^9}, {3.832575717386813*^9, 
   3.832575731644253*^9}, {3.83257580872889*^9, 3.832575812054714*^9}, {
   3.832575892173402*^9, 3.832575900586603*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"11b307f3-b883-42d2-8632-ad2a563be195"],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
     Arrowheads[{0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02}],
      Arrow3DBox[Line3DBox[CompressedData["
1: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
s/A3QwT1SA==
      "]]]},
    Annotation[#, "Charting`Private`Tag$12104#1"]& ], 
   TagBox[
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
     Arrowheads[{0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02}],
      Arrow3DBox[Line3DBox[CompressedData["
1:eJwdxWlUU2caAOCIshRQSiRsRUgC3BsR5CLMQIklryIa0hIWQShEFBrLUKTg
YIttZROXcaWiwKTB2gWsbBXKYk3R+5YJS44Kwuk4wAh0BmWAFoO4p1Wm3/3x
nEeUnhO3y4zH40X9YekfeLBoH9lVFsab577Gi+kcN+2tvHagpjXaJMqW9Wxu
I7OdB973r9TsZYcOi67rRAUyh9ViMqsz7IvI1BxkJ/OHrbSikzIv1xEyS88V
3IrTnGXfm2+lj4vOyRrK28jseCGvcoumhvWsFwWXippk77wlJrO/dv/4bIOm
ja07MhxWJLoqm109QmZ/zRT7yDR6dvpR68YC0U2ZT1UbmR3VDXW9ofmJTbGM
LBSmjMtym7nZDa0frF+Wf481ps5H3ToxJTt6h5v9qzbo5otJI2u97VPKpndO
NvUbN1ufuVuuXPGYXfX7khW2Awuyn9VmZLb8l0ko0ZjYlKf3nD/LfyIr2jtF
ZpUdQfEvuxfZE72B606/b5J1JweRWUGeoOhSsxmm12Y1m299KZMrd5PZznGD
MHKPOWbcfncCTDx4GpRBxoz7swNHzKxwg/5GduCCGfT53STjmuZURch1a2R7
tujr+pZBaaicjDqBbOikejleGQi+OV5hAYeiQsj4t/7hCzfm7VDRpdouP2YF
JsV2MsZXp38dlmyPWYbK9j9tt4ZwVRUZpZ52H2fW8DHqinlFYqItSBItyBho
tuvPUdYOaPx2hgqRrwBN4iwZNx9z0tRmCrBAtQf6bV6FsXZuFKiLD8S0OGJh
glWLq6U9JLRxY0ZFeWybgzPWDNeZ1z2wh6r19WTc6ZzyzXs7XXDnwL1zg0Y+
jIZMkVGxcOO/I72uWCZXlb09sxLyL3Njx16t/qrEDY1vjqk9hxzgfyw33pYL
/R7tWYVhXc8KjvQLoE36nIy8POUnk7fdsbHL/RM/nSNs2uBBRnW+y0U+X4hH
I4oG133pBJSBGw++oruX3S7EnNCPs4a0zlD8D2602OxfWfuuCD+/UjTTesgF
erYUkzGvYfGoha0YVfUeDf6lrmAVJiTjnK5mPpwV47Cbqdt6/2sw186N3u77
6qU5nljuMqGn1W7Qdpkbw+svfKNa6YULh1MtJ3asgjKfHWTsmahzSu72Qk3h
tN+wwh3i6BkyBoVZXS/O8kbes8YmJsADOmubyKiePzuYtoLCnPlD358WCMFc
cZiMnm8+UXiwFLrVh9r6HhOC1EJKxof931laqGnkaztLzliJYOE5N7aYwoMN
jhKMGAyf0RaKoGPdJjIWRDP17VclaC//y4utCyKwbOTGi08Vuaq01bjv8duB
IzliWK1KJqNhc2jdBN8HN07HpCzeFUNxbCwZA9iD3ie+90Ebe0HtwjueYFvA
jS1jXzsIdq/B/3z0obbiZ0+omuZGg/LBtiQ3XwTJWOlIvBcUarhRNaO5o0df
vGxjf2p2yAtai7hRL3H65/I8P+wKUhyrlnuDsoEb208bXy12WYv3zwkDX/7g
DS8cRWRMjnpyvrFzLW6U6l/4vk6B9WVuLGkc/LI92x/T3LN1vzdR0FrNjazr
wYd5rzBoNfVZjEUzBRlqLRlfS+jT37VmsKWpb8ruOwpcfQ1k3FdmW5lgy+Di
eq+Vnh0UFP3Ajf7LKkKC7RisTvl3VuQ1ChSj3PjFXG2ByYHB3r9Hrqrsp2DA
SUHGPOy1LBEyaORTxf5GChrLufG3XTZup4IZ/HR0q+PrDyhISo4nY9wX0XMv
Qxhkvipp3PiQgmXiA2S8OHrmWk4og7kBY8MJTylIaeHGxGi3tNg3GPwl+mzA
/kUKlt7ixm9D/C44hDM4esJsss+OBuXypWRMsolmtEoG8+OZj4bsaXjyEzc2
RZxZYhvDoMAt1e7OShrOV3OjWfG/hvbHMhjVcEVqdKLh/hodGese7fggNZ7B
q4bcswIhDccVe8hoGsvViZIZTDr9uY+HmIYA/nkyvuXcfrw8hcGFpBso8aLh
9gg3no97rlq6nUFqmp6TSmgQZ0rIuKm3ZPHuDgZ/vJRQGuFDQx+zjYxVS3pu
JaQxqMovdYn2pSHnGTfOSq2/6kln8HFYy6WktTTwkRvXf6jMC1YzeNJiIiKd
oaHjCDeeai7fdHEXg/8HZf9eYw==
      "]]]},
    Annotation[#, "Charting`Private`Tag$12104#2"]& ]},
  Axes->True,
  AxesLabel->{
    FormBox["\"\\!\\(\\*FractionBox[\\(X\\), \\(L\\)]\\)\"", TraditionalForm], 
    FormBox["\"\\!\\(\\*FractionBox[\\(Y\\), \\(L\\)]\\)\"", TraditionalForm], 
    FormBox["\"\\!\\(\\*FractionBox[\\(Z\\), \\(L\\)]\\)\"", TraditionalForm]},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->700,
  Method->{},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0, 0, 
    DirectedInfinity[1]},
  ViewProjection->"Orthographic",
  ViewVertical->{-0.02781253378135355, 0.19848997514705863`, 
   0.9899061048227726}]], "Output",
 CellChangeTimes->{
  3.754058779433185*^9, 3.754058825382079*^9, 3.7540588674715137`*^9, 
   3.7540589159535637`*^9, {3.754059188682835*^9, 3.7540592059516277`*^9}, 
   3.7540632571012287`*^9, 3.7540825185800457`*^9, 3.754084474539611*^9, 
   3.754084621566238*^9, 3.754087225731567*^9, 3.754088449772562*^9, 
   3.754392875717289*^9, 3.754401657038822*^9, 3.754404048073989*^9, 
   3.7571700845573797`*^9, {3.7571705554401693`*^9, 3.757170575126655*^9}, 
   3.7571708865731564`*^9, 3.7571848150940657`*^9, 3.757253097206409*^9, {
   3.757253279045958*^9, 3.757253308566669*^9}, 3.75984693047161*^9, {
   3.759914023650921*^9, 3.759914049394013*^9}, {3.7599146175979137`*^9, 
   3.759914631004621*^9}, {3.759914704043355*^9, 3.759914785538001*^9}, {
   3.75991482007612*^9, 3.759914835366269*^9}, {3.7599148675578117`*^9, 
   3.759914890262032*^9}, 3.762509100985087*^9, 3.762509195103672*^9, 
   3.762509277984708*^9, 3.7625093336356173`*^9, {3.762530129641075*^9, 
   3.762530145859627*^9}, 3.7626928419544764`*^9, 3.76269299316607*^9, 
   3.762693030300997*^9, {3.762693078461526*^9, 3.762693111753276*^9}, {
   3.762703781295656*^9, 3.76270379825491*^9}, 3.76276175913533*^9, 
   3.763106778661161*^9, {3.763621902634165*^9, 3.763621921743353*^9}, {
   3.763621986181946*^9, 3.7636219984247093`*^9}, {3.763622030085661*^9, 
   3.763622049372602*^9}, 3.763623456597927*^9, 3.7641020652013187`*^9, {
   3.764102146956972*^9, 3.7641021726247168`*^9}, 3.764102204680594*^9, {
   3.764615892662265*^9, 3.764615931758711*^9}, 3.764618940437519*^9, 
   3.766483581898243*^9, 3.76676486959606*^9, 3.766995881602027*^9, 
   3.76700476427045*^9, {3.767004922995953*^9, 3.7670049459875317`*^9}, 
   3.767252464481645*^9, 3.767279206084486*^9, 3.7674410432549133`*^9, 
   3.767441851745771*^9, 3.767507387913559*^9, 3.767513851397297*^9, 
   3.767554932938047*^9, {3.7675549789301453`*^9, 3.7675550017195597`*^9}, {
   3.767555650801441*^9, 3.767555659501182*^9}, {3.767556171742811*^9, 
   3.7675561900332823`*^9}, 3.767556221650669*^9, 3.7675914656696987`*^9, 
   3.76759758347075*^9, 3.768815996416888*^9, 3.768816031881681*^9, 
   3.768818779727016*^9, 3.7693648534309673`*^9, {3.769502976669663*^9, 
   3.769502983331374*^9}, {3.769503094658712*^9, 3.769503124529027*^9}, 
   3.769503194666937*^9, 3.7695753401930428`*^9, 3.7695852321353292`*^9, 
   3.7695894260526752`*^9, 3.769593895816868*^9, 3.769756928307412*^9, 
   3.769854977363688*^9, 3.774017872110273*^9, 3.774250147015687*^9, 
   3.774689069539794*^9, 3.776681980159829*^9, 3.776691114342432*^9, 
   3.777032719890606*^9, 3.7773013396872597`*^9, 3.77736548736845*^9, 
   3.777562403885262*^9, 3.777633242868723*^9, 3.777644179471702*^9, 
   3.7777195433176317`*^9, 3.77785778051997*^9, 3.777879374583582*^9, {
   3.777902209590354*^9, 3.777902224740882*^9}, 3.778300429219973*^9, 
   3.778412471710113*^9, 3.778490654453813*^9, 3.778823953620543*^9, 
   3.778845076777533*^9, 3.778851657372855*^9, 3.778996733039885*^9, 
   3.7790271890029993`*^9, 3.779092285224622*^9, 3.7814392189794188`*^9, 
   3.781515195156917*^9, 3.78186970926639*^9, 3.781874084758919*^9, 
   3.782029229241254*^9, 3.782037790744741*^9, 3.7822231197712317`*^9, 
   3.782248081340173*^9, 3.782302777105053*^9, 3.782465094291885*^9, 
   3.782481437035204*^9, 3.782570632515954*^9, 3.782655388978516*^9, 
   3.7828075150065928`*^9, 3.783008026158045*^9, 3.7830782445736856`*^9, 
   3.790678958673568*^9, 3.7935632366537*^9, 3.7936173629526443`*^9, 
   3.79382306718636*^9, 3.793823216976715*^9, 3.7955149582448597`*^9, 
   3.796395512326069*^9, 3.796541209144218*^9, 3.798623443626917*^9, 
   3.801891990225371*^9, 3.810004892153945*^9, {3.813992465647434*^9, 
   3.813992472955085*^9}, 3.814026537832158*^9, 3.814712682461207*^9, 
   3.8147135462156076`*^9, 3.8165137946819563`*^9, 3.816760994601542*^9, 
   3.8167687367040567`*^9, 3.8169529916669064`*^9, 3.8233290376838007`*^9, 
   3.823691125453334*^9, 3.8239568914889317`*^9, 3.823962132136561*^9, 
   3.8244631961502647`*^9, 3.824966867934189*^9, 3.825233579376855*^9, 
   3.825479371041183*^9, 3.8314593121300163`*^9, 3.832575676531774*^9, 
   3.8325757340759277`*^9, 3.832575813296096*^9, 3.832575901307953*^9, 
   3.8325896144752483`*^9, 3.832645394593688*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"eff61550-c1df-483f-b5d4-bd5cb23bcbcd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parallel transport of a frame", "Section",
 CellChangeTimes->{{3.760944483465919*^9, 3.760944503115386*^9}, {
  3.760949494459117*^9, 3.760949506213969*^9}, {3.828537890912314*^9, 
  3.8285379007207537`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"9ae26f6a-1da7-44c8-b137-d56b4f7e039b"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Clear", "[", 
   RowBox[{
   "transport2", ",", "vecbcframe", ",", "soltrans2", ",", "soldeviation", 
    ",", "solGDE", ",", "tot1", ",", "tot2", ",", "totl", ",", "totu", ",", 
    "Cu", ",", "Cl", ",", "Cf1", ",", "Cf2", ",", "Pu", ",", "Pl", ",", "P1", 
    ",", "P2", ",", "F", ",", "F0", ",", "EE", ",", "EE0", ",", "OPT", ",", 
    "\[Xi]", ",", "\[Xi]A", ",", "\[Xi]bc", ",", "\[CapitalXi]", ",", 
    "\[Xi]4", ",", "DA", ",", "DAbc", ",", "DAsolGDE", ",", "JMAP", ",", 
    "frame", ",", "frame0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7609502423790197`*^9, 3.760950428271905*^9}, {
   3.760950506585801*^9, 3.7609505116222*^9}, 3.7740197100808783`*^9},
 CellLabel->
  "In[280]:=",ExpressionUUID->"68af4210-8669-433a-bfc6-6e792f331862"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.769936144925029*^9, 3.769936159436512*^9}, 
   3.769936196964279*^9, 
   3.7818700600222597`*^9},ExpressionUUID->"e4f5e03a-2303-47d7-9cb4-\
339b52d620e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"frame0", "=", 
   RowBox[{"{", 
    RowBox[{"fu0", ",", "f10", ",", "f20", ",", "fl0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frame", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fu1", ",", "fu2", ",", "fu3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"f11", ",", "f12", ",", "f13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"f21", ",", "f22", ",", "f23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"fl1", ",", "fl2", ",", "fl3"}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7609505009886103`*^9, 3.760950501644994*^9}, 
   3.769936200770286*^9, 3.774019729870771*^9},
 CellLabel->"In[93]:=",ExpressionUUID->"d9b38cbe-b595-4f96-9633-755cde4d12e5"],

Cell[CellGroupData[{

Cell["set-up the initial conditions for the SNF", "Subsection",
 CellChangeTimes->{{3.7700536884412727`*^9, 3.770053701177127*^9}, {
  3.828537949889044*^9, 3.8285379630972147`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"9c499421-dde9-4742-aaf8-e930a7ebf283"],

Cell[TextData[{
 "\nLet us start setting the four-velocity of the observer that in 3+1 \
decomposition is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["u", "\[Mu]"], "=", 
    RowBox[{"\[CapitalGamma]", "(", 
     RowBox[{
      SuperscriptBox["n", "\[Mu]"], "+", 
      SuperscriptBox["U", "\[Mu]"]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"dc78f149-5573-4837-b8ec-cec3283aa446"],
 ": in this case the homogeneity impose that every observer and source move \
together with the cosmic expansion. This implies that the observer is static \
with respect to the cosmic flow ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"no", " ", "spatial", " ", "velocity", " ", 
      SuperscriptBox["U", "i"]}], "=", "0"}]}], TraditionalForm]],
  ExpressionUUID->"e8deb691-b0d9-48d3-848f-2a3f97628ad6"],
 ") and that the Lorentz factor is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalGamma]", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "886b71aa-21a0-488b-bd95-e53e2ee50459"],
 " (which follows from the normalization ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["u", "\[Mu]"], 
     SubscriptBox["u", "\[Mu]"]}], "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "0d1b76cb-e8f1-45b2-964d-5dca7a8d0c66"],
 ")"
}], "Text",
 CellChangeTimes->{{3.813993631597761*^9, 3.813993952709517*^9}, {
  3.828872016546647*^9, 
  3.828872017932445*^9}},ExpressionUUID->"4eb11986-07c1-4d46-9c70-\
713bd2e962ed"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g4", "[", "\[Eta]in", "]"}], ".", 
   RowBox[{"u", "[", "\[Eta]in", "]"}], ".", 
   RowBox[{"lup", "[", "\[Eta]in", "]"}]}], "/.", 
  RowBox[{"Join", "[", 
   RowBox[{"geodesic", ",", "param"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
   RowBox[{"u", "[", "\[Eta]", "]"}], ".", 
   RowBox[{"u", "[", "\[Eta]", "]"}]}], "/.", 
  RowBox[{"\[Eta]", "\[Rule]", "\[Eta]in"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
   RowBox[{"u", "[", "\[Eta]", "]"}], ".", 
   RowBox[{"u", "[", "\[Eta]", "]"}]}], "/.", 
  RowBox[{"\[Eta]", "\[Rule]", "ETA0"}]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  FractionBox["1", 
   SuperscriptBox[
    RowBox[{"A", "[", "\[Eta]in", "]"}], "2"]]}]}], "Input",
 CellChangeTimes->{{3.774020003059629*^9, 3.774020003750986*^9}, {
   3.774020220553218*^9, 3.77402023184317*^9}, {3.774020329968233*^9, 
   3.774020386751699*^9}, {3.774250420222148*^9, 3.774250429035873*^9}, {
   3.774250679559437*^9, 3.774250697708747*^9}, {3.77468912441628*^9, 
   3.774689135644685*^9}, {3.777365509835441*^9, 3.777365525520255*^9}, {
   3.77756690186096*^9, 3.777566910404359*^9}, {3.777644226866884*^9, 
   3.777644242852045*^9}, {3.778300521228568*^9, 3.778300541595595*^9}, {
   3.778300572850358*^9, 3.778300573413992*^9}, {3.778412494250474*^9, 
   3.778412497781769*^9}, {3.77884513912591*^9, 3.77884515071129*^9}, {
   3.779027212063438*^9, 3.779027212557172*^9}, 3.781439405137198*^9, {
   3.7818741169504137`*^9, 3.7818741413603497`*^9}, {3.796395528373165*^9, 
   3.796395541063738*^9}, 3.8018919993480043`*^9, {3.813994302467731*^9, 
   3.813994304235304*^9}, {3.814712750826303*^9, 3.81471275132113*^9}, {
   3.824013714439364*^9, 3.824013726508828*^9}, {3.832575963312484*^9, 
   3.832575999131589*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"6fa015e0-3d19-46f9-ae96-ae58fa4d8b77"],

Cell[BoxData["100.21011024907299713554764163558435959401`14.585026649702533"],\
 "Output",
 CellChangeTimes->{
  3.77756691116955*^9, 3.7776332579459343`*^9, {3.7776442219078693`*^9, 
   3.7776442438585863`*^9}, 3.77771955945499*^9, 3.7778578290931597`*^9, 
   3.777902247667192*^9, 3.777902598361333*^9, 3.7779028691255713`*^9, {
   3.777903093127439*^9, 3.777903107263193*^9}, {3.777903206071404*^9, 
   3.777903242282878*^9}, 3.777903300868846*^9, {3.7779033370069857`*^9, 
   3.7779033796883497`*^9}, 3.777906034961447*^9, 3.7779061646418056`*^9, 
   3.7779069781988287`*^9, {3.7783005072267838`*^9, 3.7783005424173594`*^9}, 
   3.778300574072466*^9, 3.778300677517901*^9, {3.778300833945834*^9, 
   3.778300859052737*^9}, {3.778412486129087*^9, 3.77841249861272*^9}, {
   3.778491592399284*^9, 3.77849162089913*^9}, 3.778823984732161*^9, {
   3.778845133575952*^9, 3.778845151630291*^9}, 3.778851674393281*^9, 
   3.778996743993534*^9, {3.779027205356894*^9, 3.7790272132784367`*^9}, {
   3.779092300000258*^9, 3.779092320038576*^9}, {3.781439393099812*^9, 
   3.7814394372837467`*^9}, 3.781515209085154*^9, 3.781869737029399*^9, {
   3.78187410901511*^9, 3.781874142515863*^9}, 3.782029243523087*^9, 
   3.7820378042579517`*^9, 3.782223131542941*^9, 3.782248093414353*^9, 
   3.782302791336259*^9, 3.7824814470635633`*^9, 3.782570723785063*^9, 
   3.782807527591671*^9, 3.7906789756416388`*^9, 3.7935632466183147`*^9, 
   3.793617376368639*^9, 3.793617424612492*^9, 3.796395541840391*^9, 
   3.796541226591054*^9, 3.798623451746516*^9, 3.801892000524497*^9, 
   3.810004892285273*^9, 3.813994306691511*^9, 3.8140265518571987`*^9, 
   3.814712752379122*^9, 3.814713557522963*^9, 3.816513922847199*^9, 
   3.8167610332201777`*^9, 3.816768748350749*^9, 3.81695300165555*^9, 
   3.823691142585889*^9, 3.823956933565194*^9, {3.824013705739972*^9, 
   3.824013727265349*^9}, 3.8240227010399446`*^9, 3.824443636379223*^9, 
   3.824463202551703*^9, 3.824966874760191*^9, 3.825233585088663*^9, 
   3.8254793768320503`*^9, {3.8325759590534077`*^9, 3.832575999713673*^9}, 
   3.832589619582713*^9, 3.832645426326033*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"b57c3cb0-3402-4cf1-9739-a2e508ba6dcb"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{
  3.77756691116955*^9, 3.7776332579459343`*^9, {3.7776442219078693`*^9, 
   3.7776442438585863`*^9}, 3.77771955945499*^9, 3.7778578290931597`*^9, 
   3.777902247667192*^9, 3.777902598361333*^9, 3.7779028691255713`*^9, {
   3.777903093127439*^9, 3.777903107263193*^9}, {3.777903206071404*^9, 
   3.777903242282878*^9}, 3.777903300868846*^9, {3.7779033370069857`*^9, 
   3.7779033796883497`*^9}, 3.777906034961447*^9, 3.7779061646418056`*^9, 
   3.7779069781988287`*^9, {3.7783005072267838`*^9, 3.7783005424173594`*^9}, 
   3.778300574072466*^9, 3.778300677517901*^9, {3.778300833945834*^9, 
   3.778300859052737*^9}, {3.778412486129087*^9, 3.77841249861272*^9}, {
   3.778491592399284*^9, 3.77849162089913*^9}, 3.778823984732161*^9, {
   3.778845133575952*^9, 3.778845151630291*^9}, 3.778851674393281*^9, 
   3.778996743993534*^9, {3.779027205356894*^9, 3.7790272132784367`*^9}, {
   3.779092300000258*^9, 3.779092320038576*^9}, {3.781439393099812*^9, 
   3.7814394372837467`*^9}, 3.781515209085154*^9, 3.781869737029399*^9, {
   3.78187410901511*^9, 3.781874142515863*^9}, 3.782029243523087*^9, 
   3.7820378042579517`*^9, 3.782223131542941*^9, 3.782248093414353*^9, 
   3.782302791336259*^9, 3.7824814470635633`*^9, 3.782570723785063*^9, 
   3.782807527591671*^9, 3.7906789756416388`*^9, 3.7935632466183147`*^9, 
   3.793617376368639*^9, 3.793617424612492*^9, 3.796395541840391*^9, 
   3.796541226591054*^9, 3.798623451746516*^9, 3.801892000524497*^9, 
   3.810004892285273*^9, 3.813994306691511*^9, 3.8140265518571987`*^9, 
   3.814712752379122*^9, 3.814713557522963*^9, 3.816513922847199*^9, 
   3.8167610332201777`*^9, 3.816768748350749*^9, 3.81695300165555*^9, 
   3.823691142585889*^9, 3.823956933565194*^9, {3.824013705739972*^9, 
   3.824013727265349*^9}, 3.8240227010399446`*^9, 3.824443636379223*^9, 
   3.824463202551703*^9, 3.824966874760191*^9, 3.825233585088663*^9, 
   3.8254793768320503`*^9, {3.8325759590534077`*^9, 3.832575999713673*^9}, 
   3.832589619582713*^9, 3.8326454264080553`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"d9e92780-dbed-4c52-92c5-fcae522da81a"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{
  3.77756691116955*^9, 3.7776332579459343`*^9, {3.7776442219078693`*^9, 
   3.7776442438585863`*^9}, 3.77771955945499*^9, 3.7778578290931597`*^9, 
   3.777902247667192*^9, 3.777902598361333*^9, 3.7779028691255713`*^9, {
   3.777903093127439*^9, 3.777903107263193*^9}, {3.777903206071404*^9, 
   3.777903242282878*^9}, 3.777903300868846*^9, {3.7779033370069857`*^9, 
   3.7779033796883497`*^9}, 3.777906034961447*^9, 3.7779061646418056`*^9, 
   3.7779069781988287`*^9, {3.7783005072267838`*^9, 3.7783005424173594`*^9}, 
   3.778300574072466*^9, 3.778300677517901*^9, {3.778300833945834*^9, 
   3.778300859052737*^9}, {3.778412486129087*^9, 3.77841249861272*^9}, {
   3.778491592399284*^9, 3.77849162089913*^9}, 3.778823984732161*^9, {
   3.778845133575952*^9, 3.778845151630291*^9}, 3.778851674393281*^9, 
   3.778996743993534*^9, {3.779027205356894*^9, 3.7790272132784367`*^9}, {
   3.779092300000258*^9, 3.779092320038576*^9}, {3.781439393099812*^9, 
   3.7814394372837467`*^9}, 3.781515209085154*^9, 3.781869737029399*^9, {
   3.78187410901511*^9, 3.781874142515863*^9}, 3.782029243523087*^9, 
   3.7820378042579517`*^9, 3.782223131542941*^9, 3.782248093414353*^9, 
   3.782302791336259*^9, 3.7824814470635633`*^9, 3.782570723785063*^9, 
   3.782807527591671*^9, 3.7906789756416388`*^9, 3.7935632466183147`*^9, 
   3.793617376368639*^9, 3.793617424612492*^9, 3.796395541840391*^9, 
   3.796541226591054*^9, 3.798623451746516*^9, 3.801892000524497*^9, 
   3.810004892285273*^9, 3.813994306691511*^9, 3.8140265518571987`*^9, 
   3.814712752379122*^9, 3.814713557522963*^9, 3.816513922847199*^9, 
   3.8167610332201777`*^9, 3.816768748350749*^9, 3.81695300165555*^9, 
   3.823691142585889*^9, 3.823956933565194*^9, {3.824013705739972*^9, 
   3.824013727265349*^9}, 3.8240227010399446`*^9, 3.824443636379223*^9, 
   3.824463202551703*^9, 3.824966874760191*^9, 3.825233585088663*^9, 
   3.8254793768320503`*^9, {3.8325759590534077`*^9, 3.832575999713673*^9}, 
   3.832589619582713*^9, 3.832645426488411*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"4cd84897-4a13-46f5-92d4-cee7aaee4907"],

Cell[BoxData[
 RowBox[{"-", 
  "0.00009958110018899712010533249487963806`15.397940008672037"}]], "Output",
 CellChangeTimes->{
  3.77756691116955*^9, 3.7776332579459343`*^9, {3.7776442219078693`*^9, 
   3.7776442438585863`*^9}, 3.77771955945499*^9, 3.7778578290931597`*^9, 
   3.777902247667192*^9, 3.777902598361333*^9, 3.7779028691255713`*^9, {
   3.777903093127439*^9, 3.777903107263193*^9}, {3.777903206071404*^9, 
   3.777903242282878*^9}, 3.777903300868846*^9, {3.7779033370069857`*^9, 
   3.7779033796883497`*^9}, 3.777906034961447*^9, 3.7779061646418056`*^9, 
   3.7779069781988287`*^9, {3.7783005072267838`*^9, 3.7783005424173594`*^9}, 
   3.778300574072466*^9, 3.778300677517901*^9, {3.778300833945834*^9, 
   3.778300859052737*^9}, {3.778412486129087*^9, 3.77841249861272*^9}, {
   3.778491592399284*^9, 3.77849162089913*^9}, 3.778823984732161*^9, {
   3.778845133575952*^9, 3.778845151630291*^9}, 3.778851674393281*^9, 
   3.778996743993534*^9, {3.779027205356894*^9, 3.7790272132784367`*^9}, {
   3.779092300000258*^9, 3.779092320038576*^9}, {3.781439393099812*^9, 
   3.7814394372837467`*^9}, 3.781515209085154*^9, 3.781869737029399*^9, {
   3.78187410901511*^9, 3.781874142515863*^9}, 3.782029243523087*^9, 
   3.7820378042579517`*^9, 3.782223131542941*^9, 3.782248093414353*^9, 
   3.782302791336259*^9, 3.7824814470635633`*^9, 3.782570723785063*^9, 
   3.782807527591671*^9, 3.7906789756416388`*^9, 3.7935632466183147`*^9, 
   3.793617376368639*^9, 3.793617424612492*^9, 3.796395541840391*^9, 
   3.796541226591054*^9, 3.798623451746516*^9, 3.801892000524497*^9, 
   3.810004892285273*^9, 3.813994306691511*^9, 3.8140265518571987`*^9, 
   3.814712752379122*^9, 3.814713557522963*^9, 3.816513922847199*^9, 
   3.8167610332201777`*^9, 3.816768748350749*^9, 3.81695300165555*^9, 
   3.823691142585889*^9, 3.823956933565194*^9, {3.824013705739972*^9, 
   3.824013727265349*^9}, 3.8240227010399446`*^9, 3.824443636379223*^9, 
   3.824463202551703*^9, 3.824966874760191*^9, 3.825233585088663*^9, 
   3.8254793768320503`*^9, {3.8325759590534077`*^9, 3.832575999713673*^9}, 
   3.832589619582713*^9, 3.832645426489924*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"cb52421e-8d5e-469d-9a86-3037e2dab902"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"?", "SNF"}]}]], "Input",
 CellChangeTimes->{{3.831533997444785*^9, 3.831534021251753*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"eb021b1a-f966-4794-a1c5-f0b0a68042e8"],

Cell[BoxData["\<\"SNF[\\!\\(\\*SubscriptBox[\\(g\\), \\(\[Mu]\[Nu]\\)]\\),\\!\
\\(\\*SuperscriptBox[\\(u\\), \\(\[Mu]\\)]\\),\\!\\(\\*SuperscriptBox[\\(\
\[ScriptL]\\), \\(\[Mu]\\)]\\),\\!\\(\\*SubsuperscriptBox[\\(p\\), \\(1\\), \
\\(\[Mu]\\)]\\),\\!\\(\\*SubsuperscriptBox[\\(p\\), \\(2\\), \\(\[Mu]\\)]\\),\
\\!\\(\\*SuperscriptBox[\\(n\\), \
\\(\[Mu]\\)]\\),\\!\\(\\*SubscriptBox[\\(n\\), \\(\[Mu]\\)]\\)]. Returns the \
initial conditions for the SNF in 3+1 given initial values for: the four \
dimensional metric \\!\\(\\*SubscriptBox[\\(g\\), \\(\[Mu]\[Nu]\\)]\\) \
four-velocity \\!\\(\\*SuperscriptBox[\\(u\\), \\(\[Mu]\\)]\\), the tangent \
vector \\!\\(\\*SuperscriptBox[\\(\[ScriptL]\\), \\(\[Mu]\\)]\\), two versors \
\\!\\(\\*SubsuperscriptBox[\\(p\\), \\(1\\), \\(\[Mu]\\)]\\) and \
\\!\\(\\*SubsuperscriptBox[\\(p\\), \\(2\\), \\(\[Mu]\\)]\\) and the normal \
\\!\\(\\*SuperscriptBox[\\(n\\), \\(\[Mu]\\)]\\) and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(\[Mu]\\)]\\). The procedure is to write \\!\
\\(\\*FormBox[\\(\\*SuperscriptBox[SubscriptBox[\\(f\\), \\(1\\)], \
\\(\[Mu]\\)] = \\*SuperscriptBox[SubscriptBox[\\(p\\), \\(1\\)], \\(\[Mu]\\)] \
+ A\\\\ \\*SuperscriptBox[\\(u\\), \\(\[Mu]\\)] + B\\\\ \\*SuperscriptBox[\\(\
\[ScriptL]\\), \\(\[Mu]\\)]\\),\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[\\(\\*SuperscriptBox[SubscriptBox[\\(f\\), \\(2\\)], \
\\(\[Mu]\\)] = \\*SuperscriptBox[SubscriptBox[\\(p\\), \\(2\\)], \\(\[Mu]\\)] \
+ C\\\\ \\*SuperscriptBox[\\(u\\), \\(\[Mu]\\)] + D\\\\ \\*SuperscriptBox[\\(\
\[ScriptL]\\), \\(\[Mu]\\)] + E\\\\ \\*SuperscriptBox[SubscriptBox[\\(f\\), \
\\(1\\)], \\(\[Mu]\\)]\\),\\nTraditionalForm]\\), and use the relations of \
the SNF to determine A, B, C, D and E.\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.8325760411216373`*^9},
 CellTags->
  "Info1483832583241-9208266",ExpressionUUID->"546aa5a0-f1e0-4241-956f-\
4fc8d3c4d4d2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7814406002398033`*^9, 3.781440600684868*^9}, {
  3.8240140234789753`*^9, 3.824014037521853*^9}, {3.824022636970043*^9, 
  3.824022639221965*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"d48eb203-c3ad-497b-967d-475ad01d4afe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"snfSplit", "=", 
   RowBox[{"SNF", "[", 
    RowBox[{
     RowBox[{"g4", "[", "\[Eta]in", "]"}], ",", 
     RowBox[{"u", "[", "\[Eta]in", "]"}], ",", 
     RowBox[{
      RowBox[{"lup", "[", "\[Eta]in", "]"}], "/.", "geodesic"}], ",", "p1", 
     ",", "p2", ",", 
     RowBox[{"nup", "[", "\[Eta]in", "]"}], ",", 
     RowBox[{"ndown", "[", "\[Eta]in", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.831534041888888*^9, 3.8315341384612427`*^9}, {
   3.8315342011573973`*^9, 3.831534248118791*^9}, 3.832576077392219*^9, {
   3.8325761208426867`*^9, 3.8325761401648607`*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"c474e067-07a0-4d30-b309-3c509ce6e91d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.00000000000000000000000000000000000011`15.000000000754879", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0``14.105021715646265", ",", 
     RowBox[{"{", 
      RowBox[{
      "0.00288069870271905416265682845006947966`13.87942606519592", ",", 
       "0.00864209610817175541348665764658643461`14.123012812026925", ",", 
       RowBox[{
       "-", "0.00407392317451650460910832235018606212`13.87942606519592"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0``13.653476722148643", ",", 
     RowBox[{"{", 
      RowBox[{
      "0.00814784634902269046154701045317491825`13.505149974749772", ",", 
       "0``15.73484872676703", ",", 
       "0.00576139740543081186221679673964290427`13.352128231112612"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "-", "100.21011024907299713554764163558435958349`14.795880013091468"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "-", "0.49999999999746712045595525803933621644`14.920818746588603"}], 
       ",", "0.50000000000000000000577690682635288073`14.920818746588603", 
       ",", "0.70710678118654752440901414208723466227`14.920818746588603"}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8325761442931757`*^9, 3.832589624720097*^9, 
  3.832645437357684*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"58c09ecd-8518-4646-adb9-840bf48d97e1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parallel transport the SNF", "Subsection",
 CellChangeTimes->{{3.770053711439167*^9, 3.7700537336958942`*^9}, {
  3.82853803247683*^9, 3.828538033143536*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"d04d3f28-0202-43a8-abf1-03892eae4ad9"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"initialframeBG", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"frame0", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", "\[Eta]in", "]"}], "==", 
          RowBox[{"snfSplit", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"frame", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]in", "]"}], 
            "==", 
            RowBox[{
             RowBox[{"snfSplit", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "}"}], "]"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.769936224234211*^9, 3.769936264296534*^9}, {
   3.7699419100379887`*^9, 3.7699419131419153`*^9}, {3.7699420988937817`*^9, 
   3.769942121755672*^9}, {3.769942180483844*^9, 3.769942256906578*^9}, 
   3.769942590402258*^9, {3.769943786223206*^9, 3.7699437865582523`*^9}, {
   3.769943821647723*^9, 3.769943834635809*^9}, {3.769951324102086*^9, 
   3.7699513533503933`*^9}, {3.769951531836821*^9, 3.769951636548448*^9}, {
   3.769952002645316*^9, 3.769952106670936*^9}, {3.77005230955175*^9, 
   3.770052372698696*^9}, {3.770053649588529*^9, 3.770053654831706*^9}, {
   3.7700542428928537`*^9, 3.770054369926857*^9}, 3.770054455143433*^9, {
   3.774020816405889*^9, 3.774020853324512*^9}, {3.7742507902771072`*^9, 
   3.774250857165142*^9}, {3.776682123849835*^9, 3.776682155657064*^9}, {
   3.776685268513199*^9, 3.7766852790051517`*^9}, {3.776685634073866*^9, 
   3.776685636475346*^9}, {3.77668589214888*^9, 3.776685904432222*^9}, 
   3.7766859611771107`*^9, {3.796395625875821*^9, 3.796395677236761*^9}, {
   3.8312975953186493`*^9, 3.831297600014717*^9}, {3.8312980261092577`*^9, 
   3.831298029376423*^9}, {3.8325762578955812`*^9, 3.8325762594732227`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"e22ec248-4ef6-4331-a193-9fab3c7ca546"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "PTransportedFrame"}]], "Input",
 CellChangeTimes->{{3.831536099414234*^9, 3.831536100693223*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"3a3596b1-8e40-4822-a0a8-2b8fca9f3acd"],

Cell[BoxData["\<\"PTransportedFrame[\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \
\\(ij\\)]\\), \\!\\(\\*SubscriptBox[\\(K\\), \\(ij\\)]\\), \[Alpha], \
\\!\\(\\*SuperscriptBox[\\(\[Beta]\\), \\(i\\)]\\), geod_sol, \
frame_initialCond, \\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Phi]\\), \
\\(i\\)], \\((a)\\)]\\), \\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Phi]\\), \
\\(0\\)], \\((a)\\)]\\), param, time, tin,tfin, method, \
workingprecision_,precision_,interpolation_, number_maxsteps]. Compute and \
solve the parallel transport equation for the semi-null frame \
\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Phi]\\), \\(\[Mu]\\)], \
\\((a)\\)]\\)={\\!\\(\\*SuperscriptBox[\\(u\\), \
\\(\[Mu]\\)]\\),\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Phi]\\), \
\\(\[Mu]\\)], \
\\((1)\\)]\\),\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Phi]\\), \
\\(\[Mu]\\)], \\((2)\\)]\\),\\!\\(\\*SuperscriptBox[\\(k\\), \\(\[Mu]\\)]\\)} \
in 3+1 form.\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.832576267209467*^9},
 CellTags->
  "Info1553832583467-9208266",ExpressionUUID->"cb52e772-9e08-4d91-a55f-\
32a9c88fec00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"AbsoluteTiming", "[", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"opts", "=", 
       RowBox[{"SystemOptions", "[", "]"}]}], "}"}], ",", 
     RowBox[{"Internal`WithLocalSettings", "[", 
      RowBox[{
       RowBox[{"SetSystemOptions", "[", 
        RowBox[{"\"\<NDSolveOptions\>\"", "\[Rule]", 
         RowBox[{"\"\<DefaultSolveTimeConstraint\>\"", "\[Rule]", "40.`"}]}], 
        "]"}], ",", 
       RowBox[{
        RowBox[{"soltransBG", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"PTransportedFrame", "[", 
           RowBox[{"\[Gamma]", ",", "\[ScriptCapitalK]", ",", 
            RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], ",", "\[Beta]", ",", 
            "geodesic", ",", "initialframeBG", ",", "frame", ",", "frame0", 
            ",", "param", ",", "\[Eta]", ",", "\[Eta]in", ",", "ETA0", ",", 
            "\"\<SS\>\"", ",", "40", ",", "prec", ",", "10", ",", "15"}], 
           "]"}], "]"}]}], ";"}], ",", 
       RowBox[{"SetSystemOptions", "[", "opts", "]"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.813994801668819*^9, 3.8139948291713467`*^9}, {
  3.814026738140469*^9, 3.814026743495573*^9}, {3.814106792223876*^9, 
  3.814106792986075*^9}, {3.814713575774654*^9, 3.814713575970963*^9}, {
  3.824454126374454*^9, 3.824454126753092*^9}, {3.832576301573441*^9, 
  3.832576310773527*^9}, {3.8326454528997993`*^9, 3.83264545480374*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"d921d83f-04d0-4a56-8ac0-6a84f46f3917"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","precw",
   "\"The precision of the differential equation (\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"fu0\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"\[Eta]\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", RowBox[{RowBox[{RowBox[{\\\"InterpolatingFunction\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`16.\\\
\", \\\",\\\", \\\"33.19950000000000045474735088646411895752`16.\\\"}], \\\"}\
\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\
\", \\\"3\\\", \\\",\\\", \\\"0\\\", \\\",\\\", RowBox[{\\\"{\\\", \
\\\"64400\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"4\\\", \
\\\"}\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"Automatic\\\", \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\
\",\\\", \\\"False\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"}\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"1.`16.\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"1.00100024999914993806271468201884999871`16.\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \
\\\"1.00200100000062009009127450553933158517`16.\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"46\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \
\\\"1.04960025000032008968275931692915037274`16.\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"64350\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"Automatic\\\", \\\"}\\\"}]}], \
\\\"]\\\"}], \\\"[\\\", \\\"\[Eta]\\\", \\\"]\\\"}], \\\" \\\", RowBox[{\\\"(\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
\\\")\\\"}]}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}]\\)) is less than \
WorkingPrecision (\\!\\(\\*RowBox[{\\\"40.`\\\"}]\\)).\"",2,125,5,
   16928609967472609154,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.813995103232918*^9, 3.81402729830438*^9, 
  3.814107336604014*^9, 3.814712820535358*^9, 3.814713592853863*^9, 
  3.816514037896084*^9, 3.8167613013934517`*^9, 3.816954332026751*^9, 
  3.8239578275649843`*^9, 3.824446094091907*^9, 3.824455083712021*^9, 
  3.8244641651449347`*^9, 3.8249690620803947`*^9, 3.8252347000324383`*^9, 
  3.8325768751925907`*^9, 3.832645968468741*^9},
 CellLabel->
  "During evaluation of \
In[125]:=",ExpressionUUID->"d69f49c6-5a12-4ad2-af36-d3eb8ecbbfd9"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","precw",
   "\"The precision of the differential equation (\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"f10\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"\[Eta]\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", RowBox[{RowBox[{RowBox[{\\\"InterpolatingFunction\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`16.\\\
\", \\\",\\\", \\\"33.19950000000000045474735088646411895752`16.\\\"}], \\\"}\
\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\
\", \\\"3\\\", \\\",\\\", \\\"0\\\", \\\",\\\", RowBox[{\\\"{\\\", \
\\\"64400\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"4\\\", \
\\\"}\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"Automatic\\\", \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\
\",\\\", \\\"False\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"}\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"1.`16.\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"1.00100024999914993806271468201884999871`16.\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \
\\\"1.00200100000062009009127450553933158517`16.\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"46\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \
\\\"1.04960025000032008968275931692915037274`16.\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"64350\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"Automatic\\\", \\\"}\\\"}]}], \
\\\"]\\\"}], \\\"[\\\", \\\"\[Eta]\\\", \\\"]\\\"}], \\\" \\\", RowBox[{\\\"(\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
\\\")\\\"}]}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}]\\)) is less than \
WorkingPrecision (\\!\\(\\*RowBox[{\\\"40.`\\\"}]\\)).\"",2,125,6,
   16928609967472609154,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.813995103232918*^9, 3.81402729830438*^9, 
  3.814107336604014*^9, 3.814712820535358*^9, 3.814713592853863*^9, 
  3.816514037896084*^9, 3.8167613013934517`*^9, 3.816954332026751*^9, 
  3.8239578275649843`*^9, 3.824446094091907*^9, 3.824455083712021*^9, 
  3.8244641651449347`*^9, 3.8249690620803947`*^9, 3.8252347000324383`*^9, 
  3.8325768751925907`*^9, 3.832646722360978*^9},
 CellLabel->
  "During evaluation of \
In[125]:=",ExpressionUUID->"f44638bf-4edf-4339-a0fe-b7589c206db5"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","precw",
   "\"The precision of the differential equation (\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"f20\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"\[Eta]\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", RowBox[{RowBox[{RowBox[{\\\"InterpolatingFunction\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`16.\\\
\", \\\",\\\", \\\"33.19950000000000045474735088646411895752`16.\\\"}], \\\"}\
\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\
\", \\\"3\\\", \\\",\\\", \\\"0\\\", \\\",\\\", RowBox[{\\\"{\\\", \
\\\"64400\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"4\\\", \
\\\"}\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"Automatic\\\", \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\
\",\\\", \\\"False\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"}\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"1.`16.\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"1.00100024999914993806271468201884999871`16.\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \
\\\"1.00200100000062009009127450553933158517`16.\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"46\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \
\\\"1.04960025000032008968275931692915037274`16.\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"64350\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"Automatic\\\", \\\"}\\\"}]}], \
\\\"]\\\"}], \\\"[\\\", \\\"\[Eta]\\\", \\\"]\\\"}], \\\" \\\", RowBox[{\\\"(\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
\\\")\\\"}]}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}]\\)) is less than \
WorkingPrecision (\\!\\(\\*RowBox[{\\\"40.`\\\"}]\\)).\"",2,125,7,
   16928609967472609154,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.813995103232918*^9, 3.81402729830438*^9, 
  3.814107336604014*^9, 3.814712820535358*^9, 3.814713592853863*^9, 
  3.816514037896084*^9, 3.8167613013934517`*^9, 3.816954332026751*^9, 
  3.8239578275649843`*^9, 3.824446094091907*^9, 3.824455083712021*^9, 
  3.8244641651449347`*^9, 3.8249690620803947`*^9, 3.8252347000324383`*^9, 
  3.8325768751925907`*^9, 3.832647481591881*^9},
 CellLabel->
  "During evaluation of \
In[125]:=",ExpressionUUID->"c4198df9-3563-470a-89c8-a635c09ed53d"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \
\\\"::\\\", \\\"precw\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,125,8,16928609967472609154,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.813995103232918*^9, 3.81402729830438*^9, 
  3.814107336604014*^9, 3.814712820535358*^9, 3.814713592853863*^9, 
  3.816514037896084*^9, 3.8167613013934517`*^9, 3.816954332026751*^9, 
  3.8239578275649843`*^9, 3.824446094091907*^9, 3.824455083712021*^9, 
  3.8244641651449347`*^9, 3.8249690620803947`*^9, 3.8252347000324383`*^9, 
  3.8325768751925907`*^9, 3.83264748259216*^9},
 CellLabel->
  "During evaluation of \
In[125]:=",ExpressionUUID->"c129d0c6-ad43-4ad1-93f6-526f87b5d84c"],

Cell[BoxData[
 TemplateBox[{
  "SystemOptions","noset",
   "\"The value of SystemOption \
\\!\\(\\*RowBox[{\\\"\\\\\\\"PreemptiveCheckUseThreads\\\\\\\"\\\"}]\\) \
cannot be modified.\"",2,125,9,16928609967472609154,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.813995103232918*^9, 3.81402729830438*^9, 
  3.814107336604014*^9, 3.814712820535358*^9, 3.814713592853863*^9, 
  3.816514037896084*^9, 3.8167613013934517`*^9, 3.816954332026751*^9, 
  3.8239578275649843`*^9, 3.824446094091907*^9, 3.824455083712021*^9, 
  3.8244641651449347`*^9, 3.8249690620803947`*^9, 3.8252347000324383`*^9, 
  3.8325768751925907`*^9, 3.832648456976309*^9},
 CellLabel->
  "During evaluation of \
In[125]:=",ExpressionUUID->"cabe2f12-b6bb-40da-9cf4-21b82c941624"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2997.115962`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.813995103237545*^9, 3.8140297661650867`*^9, 
  3.814110926176126*^9, 3.814713129024452*^9, 3.814713689959118*^9, 
  3.816514469735558*^9, 3.816764475251066*^9, 3.8169607856482477`*^9, 
  3.8239612631403093`*^9, 3.824453806902883*^9, 3.824458903954577*^9, 
  3.824467671074973*^9, 3.824969062087214*^9, 3.825241244871728*^9, 
  3.832580390297502*^9, 3.8326484569774237`*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"157c0b2f-5621-4589-a0f4-a2fd7967c380"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"totBG", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "soltransBG", "]"}], ",", "geodesic"}], "]"}], 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.801892059491221*^9, 3.801892060011742*^9}, {
  3.810004947911503*^9, 3.810004949700287*^9}, {3.816768789142848*^9, 
  3.816768790686221*^9}, {3.824460594045743*^9, 3.824460594630393*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"b4968e0e-64bd-46fe-9b7c-f71b069938de"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Cu", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{"fu0", "[", "\[Eta]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Cf1", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{"f10", "[", "\[Eta]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Cf2", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{"f20", "[", "\[Eta]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Cl", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{"fl0", "[", "\[Eta]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Pu", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fu1", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"fu2", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"P1", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f11", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"f12", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"f13", "[", "\[Eta]", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"P2", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f21", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"f22", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"f23", "[", "\[Eta]", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Pl", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fl1", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"fl2", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"fl3", "[", "\[Eta]", "]"}]}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7701127306911497`*^9, 3.7701127356571198`*^9}, {
   3.770113483355237*^9, 3.770113483837181*^9}, {3.7740210500269537`*^9, 
   3.7740211341532497`*^9}, {3.77426481547087*^9, 3.774264832600956*^9}, 
   3.80189205746097*^9},
 CellLabel->"In[95]:=",ExpressionUUID->"b79ec68d-fef2-4f02-905e-39a4dc02492a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "/.", 
     RowBox[{
      RowBox[{"Line", "[", "x_", "]"}], "\[RuleDelayed]", 
      RowBox[{"Sequence", "[", 
       RowBox[{
        RowBox[{"Arrowheads", "[", 
         RowBox[{"Table", "[", 
          RowBox[{".02", ",", 
           RowBox[{"{", 
            FractionBox["100", "10"], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"Arrow", "@", 
         RowBox[{"Line", "[", "x", "]"}]}]}], "]"}]}]}], " ", ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Arrowheads", "[", "0.02", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}], ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}], "+", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Pu", "[", "\[Eta]", "]"}], "/.", "totBG"}], 
                  ")"}]}], ")"}]}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0", ",", "0.05"}], 
             "}"}]}], "]"}]}], "}"}], ","}], "*)"}], 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"Arrowheads", "[", "0.02", "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}], "+", 
                RowBox[{
                 RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"P1", "[", "\[Eta]", "]"}], "/.", "totBG"}], 
                  ")"}]}]}], ")"}]}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0", ",", "1"}], 
            "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Arrowheads", "[", "0.02", "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}], "+", 
                RowBox[{
                 RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"P2", "[", "\[Eta]", "]"}], "/.", "totBG"}], 
                  ")"}]}]}], ")"}]}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0", ",", "1"}], 
            "}"}]}], "]"}]}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Arrowheads", "[", "0.02", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}], ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"trajectoryBG", "[", "\[Eta]", "]"}], "+", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Pl", "[", "\[Eta]", "]"}], "/.", "totBG"}], 
                  ")"}]}], ")"}]}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0", ",", "0.05"}], 
             "}"}]}], "]"}]}], "}"}]}], "*)"}], "}"}], "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Sphere", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "0.05"}], "]"}], "]"}],
     " ", ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "100", ",", "10"}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Red", ",", "12"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7699416007408752`*^9, 3.7699417659054537`*^9}, {
  3.769952206960586*^9, 3.76995227659039*^9}, {3.774021183936653*^9, 
  3.774021219279872*^9}, {3.774264958540416*^9, 3.774264991390814*^9}, {
  3.777857932782832*^9, 3.777858023385427*^9}, {3.813995330390997*^9, 
  3.8139953307656517`*^9}, {3.8139953833491993`*^9, 3.813995484934257*^9}, {
  3.814713151041675*^9, 3.8147132355797*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"3b1f59de-eff6-45e3-b21f-e85a5fe81981"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Arrowheads[{0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 
       0.02}], Arrow3DBox[Line3DBox[CompressedData["
1:eJwdxWlUU2caAOCIshRQSiRsRUgC3BsR5CLMQIklryIa0hIWQShEFBrLUKTg
YIttZROXcaWiwKTB2gWsbBXKYk3R+5YJS44Kwuk4wAh0BmWAFoO4p1Wm3/3x
nEeUnhO3y4zH40X9YekfeLBoH9lVFsab577Gi+kcN+2tvHagpjXaJMqW9Wxu
I7OdB973r9TsZYcOi67rRAUyh9ViMqsz7IvI1BxkJ/OHrbSikzIv1xEyS88V
3IrTnGXfm2+lj4vOyRrK28jseCGvcoumhvWsFwWXippk77wlJrO/dv/4bIOm
ja07MhxWJLoqm109QmZ/zRT7yDR6dvpR68YC0U2ZT1UbmR3VDXW9ofmJTbGM
LBSmjMtym7nZDa0frF+Wf481ps5H3ToxJTt6h5v9qzbo5otJI2u97VPKpndO
NvUbN1ufuVuuXPGYXfX7khW2Awuyn9VmZLb8l0ko0ZjYlKf3nD/LfyIr2jtF
ZpUdQfEvuxfZE72B606/b5J1JweRWUGeoOhSsxmm12Y1m299KZMrd5PZznGD
MHKPOWbcfncCTDx4GpRBxoz7swNHzKxwg/5GduCCGfT53STjmuZURch1a2R7
tujr+pZBaaicjDqBbOikejleGQi+OV5hAYeiQsj4t/7hCzfm7VDRpdouP2YF
JsV2MsZXp38dlmyPWYbK9j9tt4ZwVRUZpZ52H2fW8DHqinlFYqItSBItyBho
tuvPUdYOaPx2hgqRrwBN4iwZNx9z0tRmCrBAtQf6bV6FsXZuFKiLD8S0OGJh
glWLq6U9JLRxY0ZFeWybgzPWDNeZ1z2wh6r19WTc6ZzyzXs7XXDnwL1zg0Y+
jIZMkVGxcOO/I72uWCZXlb09sxLyL3Njx16t/qrEDY1vjqk9hxzgfyw33pYL
/R7tWYVhXc8KjvQLoE36nIy8POUnk7fdsbHL/RM/nSNs2uBBRnW+y0U+X4hH
I4oG133pBJSBGw++oruX3S7EnNCPs4a0zlD8D2602OxfWfuuCD+/UjTTesgF
erYUkzGvYfGoha0YVfUeDf6lrmAVJiTjnK5mPpwV47Cbqdt6/2sw186N3u77
6qU5nljuMqGn1W7Qdpkbw+svfKNa6YULh1MtJ3asgjKfHWTsmahzSu72Qk3h
tN+wwh3i6BkyBoVZXS/O8kbes8YmJsADOmubyKiePzuYtoLCnPlD358WCMFc
cZiMnm8+UXiwFLrVh9r6HhOC1EJKxof931laqGnkaztLzliJYOE5N7aYwoMN
jhKMGAyf0RaKoGPdJjIWRDP17VclaC//y4utCyKwbOTGi08Vuaq01bjv8duB
IzliWK1KJqNhc2jdBN8HN07HpCzeFUNxbCwZA9iD3ie+90Ebe0HtwjueYFvA
jS1jXzsIdq/B/3z0obbiZ0+omuZGg/LBtiQ3XwTJWOlIvBcUarhRNaO5o0df
vGxjf2p2yAtai7hRL3H65/I8P+wKUhyrlnuDsoEb208bXy12WYv3zwkDX/7g
DS8cRWRMjnpyvrFzLW6U6l/4vk6B9WVuLGkc/LI92x/T3LN1vzdR0FrNjazr
wYd5rzBoNfVZjEUzBRlqLRlfS+jT37VmsKWpb8ruOwpcfQ1k3FdmW5lgy+Di
eq+Vnh0UFP3Ajf7LKkKC7RisTvl3VuQ1ChSj3PjFXG2ByYHB3r9Hrqrsp2DA
SUHGPOy1LBEyaORTxf5GChrLufG3XTZup4IZ/HR0q+PrDyhISo4nY9wX0XMv
Qxhkvipp3PiQgmXiA2S8OHrmWk4og7kBY8MJTylIaeHGxGi3tNg3GPwl+mzA
/kUKlt7ixm9D/C44hDM4esJsss+OBuXypWRMsolmtEoG8+OZj4bsaXjyEzc2
RZxZYhvDoMAt1e7OShrOV3OjWfG/hvbHMhjVcEVqdKLh/hodGese7fggNZ7B
q4bcswIhDccVe8hoGsvViZIZTDr9uY+HmIYA/nkyvuXcfrw8hcGFpBso8aLh
9gg3no97rlq6nUFqmp6TSmgQZ0rIuKm3ZPHuDgZ/vJRQGuFDQx+zjYxVS3pu
JaQxqMovdYn2pSHnGTfOSq2/6kln8HFYy6WktTTwkRvXf6jMC1YzeNJiIiKd
oaHjCDeeai7fdHEXg/8HZf9eYw==
       "]]]},
     Annotation[#, "Charting`Private`Tag$14321#1"]& ]}, {
    {RGBColor[0, 1, 0], Arrowheads[0.02], 
     Arrow3DBox[{{0., 0., 0.}, {0.288675134593838, 
      0.8660254037829763, -0.40824829046455235`}}], 
     Arrow3DBox[{{
      0.4999999999981561, -0.5000000000006889, -0.7071067811875218}, {
      0.7886751345922115, 0.3660254037829398, -1.115355071652382}}], 
     Arrow3DBox[{{
      0.9999999999961955, -1.0000000000012612`, -1.4142135623748786`}, {
      1.2886751345905358`, -0.13397459621677787`, -1.8224618528401415`}}], 
     Arrow3DBox[{{
      1.4999999999939815`, -1.50000000000158, -2.121320343561877}, {
      1.788675134588695, -0.6339745962159766, -2.529568634027668}}], 
     Arrow3DBox[{{
      1.9999999999914568`, -2.0000000000015885`, -2.8284271247484365`}, {
      2.2886751345853056`, -1.133974596218579, -3.2366754152130044`}}], 
     Arrow3DBox[{{
      2.4999999999885056`, -2.50000000000117, -3.5355339059343924`}, {
      2.788675134582687, -1.6339745962171641`, -3.94378219639943}}], 
     Arrow3DBox[{{
      2.9999999999849947`, -3.000000000000192, -4.2426406871195566`}, {
      3.2886751345797047`, -2.1339745962145993`, -4.650888977585343}}], 
     Arrow3DBox[{{
      3.4999999999807843`, -3.4999999999985145`, -4.949747468303732}, {
      3.7886751345751786`, -2.633974596213869, -5.357995758769071}}], 
     Arrow3DBox[{{
      3.9999999999756684`, -3.9999999999959317`, -5.656854249486627}, {
      4.288675134569862, -3.133974596211887, -6.065102539951683}}], 
     Arrow3DBox[{{4.499999999969478, -4.499999999992274, -6.363961030668}, {
      4.788675134563731, -3.6339745962080503`, -6.772209321133141}}], 
     Arrow3DBox[{{4.99999999996201, -4.999999999987339, -7.07106781184757}, {
      5.288675134556427, -4.133974596202625, -7.479316102312941}}], 
     Arrow3DBox[{{
      5.499999999953074, -5.499999999980935, -7.778174593025062}, {
      5.788675134547576, -4.6339745961959675`, -8.186422883490554}}], 
     Arrow3DBox[{{5.999999999942406, -5.9999999999728, -8.485281374200104}, {
      6.288675134536345, -5.133974596189519, -8.8935296646648}}], 
     Arrow3DBox[{{6.49999999992975, -6.499999999962678, -9.192388155372337}, {
      6.788675134524198, -5.633974596177873, -9.60063644583775}}], 
     Arrow3DBox[{{6.999999999914847, -6.999999999950307, -9.89949493654139}, {
      7.288675134508942, -6.133974596166556, -10.307743227006306`}}], 
     Arrow3DBox[{{
      7.499999999897414, -7.499999999935406, -10.606601717706864`}, {
      7.788675134491521, -6.633974596151623, -11.014850008171797`}}], 
     Arrow3DBox[{{
      7.999999999877097, -7.999999999917623, -11.313708498868262`}, {
      8.288675134470989, -7.133974596134489, -11.72195678933289}}], 
     Arrow3DBox[{{8.499999999853557, -8.499999999896616, -12.0208152800251}, {
      8.788675134447898, -7.633974596112131, -12.429063570490364`}}], 
     Arrow3DBox[{{
      8.999999999826413, -8.999999999872005, -12.727922061176843`}, {
      9.288675134420362, -8.133974596088693, -13.136170351641553`}}], 
     Arrow3DBox[{{
      9.499999999795266, -9.49999999984339, -13.435028842322923`}, {
      9.788675134389111, -8.633974596060392, -13.843277132787486`}}], 
     Arrow3DBox[{{
      9.999999999759646, -9.999999999810305, -14.14213562346268}, {
      10.28867513435343, -9.133974596027493, -14.550383913927154`}}], 
     Arrow3DBox[{{
      10.499999999719083`, -10.499999999772275`, -14.849242404595445`}, {
      10.788675134313133`, -9.633974595988667, -15.257490695060294`}}], 
     Arrow3DBox[{{
      10.999999999673022`, -10.999999999728747`, -15.556349185720435`}, {
      11.288675134267462`, -10.133974595943966`, -15.964597476185837`}}], 
     Arrow3DBox[{{
      11.499999999620922`, -11.499999999679178`, -16.263455966836883`}, {
      11.788675134214731`, -10.633974595896285`, -16.671704257301396`}}]}, 
    {RGBColor[0, 0, 1], Arrowheads[0.02], 
     Arrow3DBox[{{0., 0., 0.}, {0.8164965809280708, 0., 0.5773502691869448}}],
      Arrow3DBox[{{
      0.4999999999981561, -0.5000000000006889, -0.7071067811875218}, {
      1.316496580926842, -0.5000000000006889, -0.129756512000142}}], 
     Arrow3DBox[{{
      0.9999999999961955, -1.0000000000012612`, -1.4142135623748786`}, {
      1.8164965809256874`, -1.0000000000012612`, -0.836863293186929}}], 
     Arrow3DBox[{{
      1.4999999999939815`, -1.50000000000158, -2.121320343561877}, {
      2.316496580924529, -1.50000000000158, -1.543970074373181}}], 
     Arrow3DBox[{{
      1.9999999999914568`, -2.0000000000015885`, -2.8284271247484365`}, {
      2.816496580919558, -2.0000000000015885`, -2.2510768555614695`}}], 
     Arrow3DBox[{{
      2.4999999999885056`, -2.50000000000117, -3.5355339059343924`}, {
      3.316496580917547, -2.50000000000117, -2.958183636746761}}], 
     Arrow3DBox[{{
      2.9999999999849947`, -3.000000000000192, -4.2426406871195566`}, {
      3.816496580915532, -3.000000000000192, -3.665290417930868}}], 
     Arrow3DBox[{{
      3.4999999999807843`, -3.4999999999985145`, -4.949747468303732}, {
      4.316496580910428, -3.4999999999985145`, -4.3723971991156745`}}], 
     Arrow3DBox[{{
      3.9999999999756684`, -3.9999999999959317`, -5.656854249486627}, {
      4.816496580904746, -3.9999999999959317`, -5.07950398029897}}], 
     Arrow3DBox[{{4.499999999969478, -4.499999999992274, -6.363961030668}, {
      5.316496580898723, -4.499999999992274, -5.786610761480225}}], 
     Arrow3DBox[{{4.99999999996201, -4.999999999987339, -7.07106781184757}, {
      5.816496580891718, -4.999999999987339, -6.493717542659467}}], 
     Arrow3DBox[{{
      5.499999999953074, -5.499999999980935, -7.778174593025062}, {
      6.3164965808830225`, -5.499999999980935, -7.200824323836789}}], 
     Arrow3DBox[{{5.999999999942406, -5.9999999999728, -8.485281374200104}, {
      6.816496580870763, -5.9999999999728, -7.907931105012957}}], 
     Arrow3DBox[{{6.49999999992975, -6.499999999962678, -9.192388155372337}, {
      7.316496580859544, -6.499999999962678, -8.615037886184172}}], 
     Arrow3DBox[{{6.999999999914847, -6.999999999950307, -9.89949493654139}, {
      7.816496580843647, -6.999999999950307, -9.322144667353928}}], 
     Arrow3DBox[{{
      7.499999999897414, -7.499999999935406, -10.606601717706864`}, {
      8.316496580826245, -7.499999999935406, -10.029251448519382`}}], 
     Arrow3DBox[{{
      7.999999999877097, -7.999999999917623, -11.313708498868262`}, {
      8.816496580805318, -7.999999999917623, -10.736358229681212`}}], 
     Arrow3DBox[{{8.499999999853557, -8.499999999896616, -12.0208152800251}, {
      9.316496580783049, -8.499999999896616, -11.44346501083715}}], 
     Arrow3DBox[{{
      8.999999999826413, -8.999999999872005, -12.727922061176843`}, {
      9.8164965807548, -8.999999999872005, -12.150571791989675`}}], 
     Arrow3DBox[{{
      9.499999999795266, -9.49999999984339, -13.435028842322923`}, {
      10.316496580723356`, -9.49999999984339, -12.857678573135965`}}], 
     Arrow3DBox[{{
      9.999999999759646, -9.999999999810305, -14.14213562346268}, {
      10.816496580687561`, -9.999999999810305, -13.564785354275847`}}], 
     Arrow3DBox[{{
      10.499999999719083`, -10.499999999772275`, -14.849242404595445`}, {
      11.31649658064775, -10.499999999772275`, -14.27189213540808}}], 
     Arrow3DBox[{{
      10.999999999673022`, -10.999999999728747`, -15.556349185720435`}, {
      11.816496580602793`, -10.999999999728747`, -14.978998916532289`}}], 
     Arrow3DBox[{{
      11.499999999620922`, -11.499999999679178`, -16.263455966836883`}, {
      12.316496580548913`, -11.499999999679178`, -15.686105697649994`}}]}}, 
   SphereBox[{0, 0, 0}, 0.05]},
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm], 
    FormBox["z", TraditionalForm]},
  AxesStyle->Directive[
    RGBColor[1, 0, 0], 12],
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->700,
  Method->{},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0, 100, 10},
  ViewVertical->{-0.038855574148467235`, 1.371281065460396, 
   0.07265209214906376}]], "Output",
 CellChangeTimes->{
  3.760879319196604*^9, 3.760883609703311*^9, 3.7608848630251303`*^9, 
   3.76088490533738*^9, 3.760885367664054*^9, 3.760885550151588*^9, 
   3.760944517314015*^9, 3.760944730400728*^9, 3.760947353659343*^9, 
   3.760949512703535*^9, 3.760950822661639*^9, 3.760951196286663*^9, 
   3.7609544614597387`*^9, 3.760954856717519*^9, 3.760956445084825*^9, 
   3.760958929894484*^9, 3.7609593249959717`*^9, 3.760959640076235*^9, 
   3.7609605559175453`*^9, 3.76096107388901*^9, 3.76096117598638*^9, 
   3.760961223827161*^9, 3.7609618526770353`*^9, 3.760961887339217*^9, 
   3.760962253827941*^9, 3.7699415784427557`*^9, 3.7699419621491957`*^9, 
   3.769952148484357*^9, {3.769952243732072*^9, 3.7699522772511177`*^9}, 
   3.770051026026989*^9, 3.770052394769741*^9, 3.770054490403153*^9, 
   3.770113510732559*^9, 3.774021223414094*^9, 3.7742649956170397`*^9, 
   3.774639680392769*^9, 3.774644736697996*^9, 3.774657458350346*^9, 
   3.77469131768233*^9, 3.77668472731426*^9, 3.776685423150877*^9, 
   3.7766857725103607`*^9, 3.7766913270167723`*^9, 3.776755692311798*^9, 
   3.776755862351857*^9, 3.777036196167185*^9, 3.777301619457115*^9, 
   3.777365659312086*^9, 3.7773662121919193`*^9, 3.777566616701273*^9, 
   3.777633364103874*^9, 3.777645206461112*^9, 3.777719620755694*^9, 
   3.777857920163406*^9, 3.77785795166654*^9, 3.777858034577446*^9, 
   3.777902348586574*^9, 3.7779031650622263`*^9, 3.777907013493093*^9, 
   3.778300740216305*^9, 3.778300909344092*^9, 3.7783210130119267`*^9, 
   3.778321967436709*^9, 3.778322073046544*^9, 3.778412770118599*^9, 
   3.778491697293068*^9, 3.7788240513182983`*^9, 3.778845239527109*^9, 
   3.778851806746292*^9, 3.778996799451717*^9, 3.779092488361574*^9, 
   3.7814401024296837`*^9, 3.781440799101542*^9, 3.781515270636449*^9, 
   3.781869873139501*^9, 3.781875662658134*^9, 3.782035964335215*^9, 
   3.782038887844995*^9, 3.782225712448357*^9, 3.782255586134931*^9, 
   3.7823036786403112`*^9, 3.782467001027521*^9, 3.782483014830735*^9, 
   3.782579991057599*^9, 3.783008135872211*^9, 3.7830784416706257`*^9, 
   3.790679053346542*^9, 3.793563312603525*^9, 3.7936429994182043`*^9, 
   3.793828484175619*^9, 3.796400933003549*^9, 3.796589422012568*^9, 
   3.798670007934401*^9, 3.801892153827044*^9, 3.8100539764813747`*^9, 
   3.813995293759766*^9, 3.81399533209581*^9, {3.813995393105584*^9, 
   3.813995486627153*^9}, 3.814029766577524*^9, {3.8147131435455647`*^9, 
   3.8147132366670027`*^9}, 3.814713690123839*^9, 3.816514571156794*^9, 
   3.816768363230835*^9, 3.816960785995812*^9, 3.8239612634842854`*^9, 
   3.824460608481884*^9, 3.8244687641989193`*^9, 3.824977527058753*^9, 
   3.8252412451714087`*^9, 3.8254794515231*^9, 3.832588097661422*^9, 
   3.832657858004273*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"107a2ad7-8661-4ffe-a35f-bf4dbbc52b89"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Subsubsection",
 CellChangeTimes->{{3.770125458008946*^9, 
  3.770125469011694*^9}},ExpressionUUID->"b9b12da5-c7f0-4659-823b-\
53dce16f696d"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"totBG", "=", 
    RowBox[{"<<", "\"\<FLRWSolver_StoO_ptSNFN_bisect_0p05.m\>\""}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.816768841754754*^9, 3.8167688604993467`*^9}, {
   3.816953199366808*^9, 3.816953212654519*^9}, 3.823329084804656*^9, 
   3.823962166601141*^9, {3.825479399278471*^9, 3.825479399861122*^9}, {
   3.832589645782154*^9, 3.832589658906336*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"367a72b1-8c54-4677-891c-57a1a04958d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Define  the induced metric of the SNF \[OpenCurlyDoubleQuote]h\
\[CloseCurlyDoubleQuote]\
\>", "Subsection",
 CellChangeTimes->{{3.760947409023449*^9, 3.7609474114511633`*^9}, {
  3.7609479553804083`*^9, 3.760948106536047*^9}, {3.760948152499262*^9, 
  3.76094822921316*^9}, {3.828538122804737*^9, 3.828538170673085*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"a3455c46-fe3d-4c7b-8d5e-6b12b187d299"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Clear", "[", 
   RowBox[{"F", ",", "F0", ",", "EE", ",", "EE0", ",", "Q", ",", "h"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.760951397101861*^9, 3.760951422808682*^9}, {
  3.770142627733138*^9, 3.7701426328440647`*^9}},
 CellLabel->
  "In[467]:=",ExpressionUUID->"869e9ce0-16e4-4d9c-bc1e-97a89f288141"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Q", "=", 
     RowBox[{"Re", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g4", "[", "ETA0", "]"}], ".", 
           RowBox[{"(", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Cu", "[", "ETA0", "]"}], 
               RowBox[{"nup", "[", "ETA0", "]"}]}], "+", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"Pu", "[", "ETA0", "]"}]}], "}"}], "]"}]}], "]"}], 
            ")"}], ".", 
           RowBox[{"(", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Cl", "[", "ETA0", "]"}], 
               RowBox[{"nup", "[", "ETA0", "]"}]}], "+", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"Pl", "[", "ETA0", "]"}]}], "}"}], "]"}]}], "]"}], 
            ")"}]}], ")"}], "/.", "totBG"}], "/.", "param"}], ")"}], "]"}]}], 
    ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Q", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ldown", "[", "\[Eta]in", "]"}], ".", 
       RowBox[{"u", "[", "\[Eta]in", "]"}]}], "/.", "geodesic"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "Q"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Q", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ih", "=", 
     RowBox[{"Inverse", "[", "h", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7701312179205103`*^9, 3.770131271010048*^9}, {
   3.770131316101125*^9, 3.7701313352845*^9}, {3.770134227323345*^9, 
   3.770134227520626*^9}, 3.770136374213625*^9, 3.770136752326724*^9, 
   3.7701368115406103`*^9, 3.770139176159758*^9, {3.774021315518652*^9, 
   3.774021341448326*^9}, {3.774265103598915*^9, 3.774265132576497*^9}, {
   3.776684996486287*^9, 3.7766850161484423`*^9}, {3.778301970721136*^9, 
   3.778301979170116*^9}, {3.778313344931888*^9, 3.778313352751564*^9}, 
   3.778412786513398*^9, {3.778491709382662*^9, 3.778491714749117*^9}, {
   3.79639583603403*^9, 3.7963958527912607`*^9}, 3.81399530645823*^9, {
   3.83258834031539*^9, 3.832588369530652*^9}, {3.832588936884294*^9, 
   3.832588985238309*^9}, {3.8325890519995117`*^9, 3.83258908341673*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"15df7bb4-e36b-4a26-ab2a-31cc5db5a155"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"F", "[", "t_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Pu", "[", "t", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"P1", "[", "t", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"P2", "[", "t", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Pl", "[", "t", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Pu", "[", "t", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"P1", "[", "t", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"P2", "[", "t", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Pl", "[", "t", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Pu", "[", "t", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"P1", "[", "t", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"P2", "[", "t", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Pl", "[", "t", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"F0", "[", "t_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cu", "[", "t", "]"}], ",", 
       RowBox[{"Cf1", "[", "t", "]"}], ",", 
       RowBox[{"Cf2", "[", "t", "]"}], ",", 
       RowBox[{"Cl", "[", "t", "]"}]}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7824830363432283`*^9, 3.782483037006548*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"0ac21cc1-7309-455e-b1cf-db463a637340"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
  "totBG", ">>", "\"\<FLRWSolver_StoO_ptSNFN_bisect_0p05.m\>\""}]}]], "Input",\

 CellChangeTimes->{{3.793643410897211*^9, 3.793643442329948*^9}, {
   3.793823261787344*^9, 3.793823270265271*^9}, {3.796395809532297*^9, 
   3.7963958168642483`*^9}, 3.801892173812995*^9, {3.8100049702098083`*^9, 
   3.8100049799911547`*^9}, {3.813995314386263*^9, 3.813995317861589*^9}, {
   3.814026983672266*^9, 3.8140269892448874`*^9}, {3.816768385156636*^9, 
   3.8167683873083076`*^9}, {3.816953216378648*^9, 3.816953220772696*^9}, 
   3.8239570434557743`*^9, {3.8249776364187727`*^9, 3.8249776370291862`*^9}, {
   3.832588277652582*^9, 3.832588282407452*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"db88f736-c5b2-4e14-9ce1-7fa5a461f4db"],

Cell[CellGroupData[{

Cell["Check SNF", "Subsubsection",
 CellChangeTimes->{{3.774007003443747*^9, 
  3.7740070263699512`*^9}},ExpressionUUID->"439e846b-4d73-457c-a186-\
f895a887de33"],

Cell[BoxData[Cell[TextData[{
  "\nCheck of the relations: ",
  Cell[BoxData[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["u", "\[Mu]"], 
      SubscriptBox["u", "\[Mu]"]}], "=", 
     RowBox[{"-", "1"}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["f1", "\[Mu]"], 
      SubscriptBox["f1", "\[Mu]"]}], "=", "1"}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["f2", "\[Mu]"], 
      SubscriptBox["f2", "\[Mu]"]}], "=", "1"}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["k", "\[Mu]"], 
      SubscriptBox["k", "\[Mu]"]}], "=", "0"}]}]], "Input",
   CellChangeTimes->{{3.77005112124842*^9, 3.770051138377446*^9}, {
     3.77005116851504*^9, 3.770051185934346*^9}, {3.7700514038237543`*^9, 
     3.770051494544813*^9}, 3.770053619200368*^9, {3.770113992533697*^9, 
     3.770114094584392*^9}, {3.770114156861938*^9, 3.770114291349051*^9}},
   ExpressionUUID->"66b290a0-8b4a-45f1-b627-ae26e47b08c7"]
 }], "Text",
  CellGroupingRules->{"GroupTogetherGrouping", 10000.},
  CellChangeTimes->{{3.7701141401160507`*^9, 3.7701141496352873`*^9}, {
    3.770114301361188*^9, 3.770114411687973*^9}, 3.770557030902051*^9},
  ExpressionUUID->"3f443813-d41b-4d57-9342-e2c824daf33d"]], "Input",
 CellChangeTimes->{{3.774007163154935*^9, 3.774007163908072*^9}, 
   3.774021586248035*^9},ExpressionUUID->"252b1a44-6652-46fa-b066-\
f012f816a4df"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
           RowBox[{"(", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Cu", "[", "\[Eta]", "]"}], 
               RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"Pu", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
            ")"}], ".", 
           RowBox[{"(", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Cu", "[", "\[Eta]", "]"}], 
               RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"Pu", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
            ")"}]}], "+", "1"}], ")"}], "/.", "totBG"}], "/.", "param"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
           RowBox[{"(", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Cf1", "[", "\[Eta]", "]"}], 
               RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"P1", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
            ")"}], ".", 
           RowBox[{"(", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Cf1", "[", "\[Eta]", "]"}], 
               RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"P1", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
            ")"}]}], "-", "1"}], ")"}], "/.", "totBG"}], "/.", "param"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
           RowBox[{"(", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Cf2", "[", "\[Eta]", "]"}], 
               RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"P2", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
            ")"}], ".", 
           RowBox[{"(", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Cf2", "[", "\[Eta]", "]"}], 
               RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"P2", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
            ")"}]}], "-", "1"}], ")"}], "/.", "totBG"}], "/.", "param"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
          RowBox[{"(", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cl", "[", "\[Eta]", "]"}], 
              RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"Pl", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
           ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cl", "[", "\[Eta]", "]"}], 
              RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"Pl", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
           ")"}]}], ")"}], "/.", "totBG"}], "/.", "param"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*FractionBox[\(\[Eta]\), \(L\)]\)\>\"", ",", 
       "\"\<Violation\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[\(u\), \(\[Mu]\)]\)\!\(\*SubscriptBox[\(u\), \
\(\[Mu]\)]\)+1\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(f1\), \
\(\[Mu]\)]\)\!\(\*SubscriptBox[\(f1\), \(\[Mu]\)]\)-1\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(f2\), \
\(\[Mu]\)]\)\!\(\*SubscriptBox[\(f2\), \(\[Mu]\)]\)-1\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(k\), \(\[Mu]\)]\)\!\(\*SubscriptBox[\(k\), \
\(\[Mu]\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], "}"}], "*)"}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770567205911765*^9, 3.770567206418882*^9}, {
  3.770567465595022*^9, 3.770567561024004*^9}, {3.770568449624693*^9, 
  3.770568500013171*^9}, {3.7705701124825974`*^9, 3.770570121003614*^9}, {
  3.770619537015932*^9, 3.770619568769745*^9}, {3.770637861255946*^9, 
  3.7706379050912447`*^9}, {3.7707308616372223`*^9, 3.770730869140911*^9}, {
  3.770747562673089*^9, 3.770747563932518*^9}, {3.774021597743387*^9, 
  3.774021688081912*^9}, {3.774265253482736*^9, 3.774265265080102*^9}, {
  3.8141014684045687`*^9, 3.814101514749126*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"329edbca-c103-4502-aed5-5186a2358f42"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxEd3c41+/3P5KsZETI5rW3EcqTo6yQrBCyQrJH9h4pMxQpSTslpZ1ytERW
KZWS0ZAGIQ3t9+/1va7f9en1z+s61/N+nvtxHudxHvf91AyIcg4SEhAQIEkK
CPzf/2OvUCe/+Tog8P9/faz+LGGxf3HPfyua6iX/xbcOL1z0Se5f3DTR1JOt
9S8uTJ2zPmz2LzatyTMdT/4XG0d8jChM/xfrm7nVsrP/xYzXlN8J2//F5Itl
jKXF/2KtbT88r+/4F6uuDyjcuPNfrMjobl6wWwd+bxaVWnv1tYncH733DXv/
PZe6v0/Rcf+/WPzgfJsvB//F8+MiE6uP/osFLAeOmZz4F/9WgCcvTv2LZ6/K
GNAu/Is/FqcE9l7Wgdv6voqpE79a3vm83hlzTQca451EerjfWsa49rflr/9b
Pyp0cbb5lg7MDZ7fqHXnc8vgI1Utn3YdcO8PG4gd+NTy5Fi+k1DXv/UPkqaz
jvXqgLq7x/Ksq19Nemw9mmwf6ICQ4q2TsgxB7FC5OTr1SAdKCi22H/H/ZXJr
irZo51MdqJc0/HrpxC+T1hsVpoZDOvA+6mX8ULMg0VzxK+L56L/8FwIDazNf
64BuhfzXB3W/WpqW9fZov9WBmifKPzxWfWhpEF32u+ODDvRm+5hGuArhscH9
jPApHXh9d23g+wtfW5IVFNp8ZnVAtuhWfqivINo7l3g7ffuXX6NU+Ouqn//i
z52pJcv+6oCcf0C40CZBbJ//mUQTIv3v+V7z0NalIiR4pBZ1ZmmCJEakv3ST
EieBT1/PRfvXQgQ0e0wLSP1bL/f1/rbPMiQY9X/yQuH9XMs411pjXP7f8+bw
1itPlUgwsXJp9FXbBVhcb+DUrUqCj4elyq9Y/2rxHTv1HjVJ0Lb4evoXx08m
uho6OU0kEoTMO/M5WH8+injXKB+mkaDzvtb9j+dk8Nlu2fOVLBJUe9kG5r4T
w1P9BXbbef/2y1okOJZiQIIFe01Ml3XJo4tdUlqE8b/n5G3Ti/2If/GPW8GN
zuYkcKwNqS5fL0r0/B22tLQkwa9Gn6Yzlt9b6pavGzFc/W99bEJPAn3Nv9jy
3KpFqk4kkPuusDZY72OL4tTV44vW/Xs+SdMFofUkoMjOSp/1FiKuB514+sWb
BFJdVKUbAX9NKg5qxLz1+7c+eHi32GAgCZaQ7osQ/n9MjJUWHeoJIYFa8LTL
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
On5VuPB4BUrbvdXPXEyFSNd5UydKbPGzcMC1UEUquGkbuIu18fBJ65C5mwoV
qhqn59W95eDVJPe75hpUONBl03pzoxTW6j50YOlQoVFBkDMiQSKyJu0fK1Kp
8FvKxqX8yDIMPNbhJcykgghJcmHnEVO09lv5appDhVaF3PwibybSlTHkuR4V
KiyctL+8NEapR4bT7YZUkHz8IDavV5v4VHIu/twKKrwwazdq9VlJPLJm/a41
o0K9U9qFzAo7vCJYn1OwigoXM5u2dWu7Ys01LbF4ayrcoKicvLrECDPia3f4
2VGhXH3Vi+FQPQzgKCrYr+Wvn/dmQGWKTli+r9hn6EKFScvPjMRwW6QeXqit
7U6FUp1Ft9+NG6Lkhu0npLyosIAVs/ryGQucVpjH/elDhdevLLSqwszxYV/6
pTcBVCByYhZNetvjpcLvJg+CqaDQ8L6A9HIZ7rGIu90SSoX/vB1UJ77rYdrf
j6vrI6mwrahhWPmCNvpdCenbGUuFZ2bTY6FNVrgq9rVbZgIVZpSCBC4cliPI
TJ/h0BQqvJLtZEcnW6LY+NONbhlUeJB96MBebWOcrHP5YJ5DhSB30c2T+3hE
3/p70ax8fvzDMvLcPj3ivNzqOcVCKph0XX5tIOWEVb2304VLqSA6/9TOu08s
iJRtpsIz5VSY/33z1k/vVuIG8+bC55X89W+1/lBmbRF+6cl07KGCAbOVdeKt
BepcPL37XC0VLufZvP22V4dYEEVT23+QCpn3c0Z2BTrhB+qRIwVHqfC4iGam
c9sC771SY8SfoEJHX0J9jZcdnt2356xfIxWwNz8mqtYed7ktNrI/y+f7nIGl
kixBJEnvaDW8yNeLnT/nRqYN4dUlZqndTIXOiLYnz36aEiGnF/d3t1Ch9lLJ
1O5LBphQoe6/5QYV7FdtjE1vtsbcBPq0ShsVvkzYb5ZZuwTLPA3S73RQ4aC0
cysvcRlRawoSkd1UkPfxef/mhBWe1LLbo3Cfr6fPXvGte5nEZRE3yvWHVEj1
+rsv320F0fbB7+KmJ1TovhdGfTfuhg/uha2SHqTCcx/lvW9iTYiRcwkPrgxT
Ifvz7LVLG+yIiapsX/+XVEiMH6p/LGmO31OKP4q9oUJhoqFu0KeVON93d+q5
d3w+DDz9fx1cjbKrDol5TfLn9VyGxP1+bUKd0rh73gxf/9s3DlYa2CBT4grp
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
vlGFQ64bK4elAiQKXV033hWN/geruWrq
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14999#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
vEUn1Sqm0aC7MuuG9kIRrjHUvZ4gR4Olqivr9t/kofeSenBToEHF5YFJZ30E
yDMOeG46gwaa5jHaJ47wsHyp3oFJSjQ4EGo7K9ybj73Lnv1tUaZB5F2lsIpl
fJxODUzOVqHB3HZdr/CdfKTRFyw4OZsG33JP06ZW89GF2VC6XpUGET4bX7ty
BRjFPrVRbR4NOnrE98VKBM8r9Ls+qZH79erd38qK8MWqRr9KDRo877/56atU
Ko6vDpqSpEmDMqqDMNMtGQ0sFqbs1qYBrWO2/7HVItxs2WRspkt+/7chbbKc
GAOtTldJL6BBvN0C2/gdIry4YdG25/o0GCxYnpsDfKzZ2Pzh8iIahHss2JAj
4OGgTfDpAEMa/Da6quV2NAXV7Q2UrJeQfh+9Nib8x0eLLS2Z6sY0mNaRpSx1
Q4g+W0MYn01oENJ+7X2GJRcFjoa1aEqDd0/DpMPMRVi5o9U12YwGu/8zHDbs
5eG7naE/3Kk06LR+ZVQyR4QzXBZHUeg0mPzvVJ91vggZbs/nyTBpsPHEsg9n
fonRzT0sv41FAwuD6zK6IqIHe5ZAznIanI2+sYYzxsEb+9paA1fSwOWZ3mzd
ySn4an+410ZzGjhOUftx+Z8ApQ4a/dUAGqSvfWhoRfhg6PMi6csaGshIqdz1
MefilsNn9O6tpcG+q3lJGeVCDDpqXMpZR4Pl0cnt9BYJZvq9tN6zngYrIttK
O+9JsPZ4xBuqNQ1Yf7p/nPoswiF/E78pm0j9YcdXTWJycX7gK5mXNjSobrjf
eu2pGC2Dzkpy7Wigu10jOs9OiIeClxoHbabB1GZJLp28Vxjafm+TAw3WCyMb
3oQk4t3wyK2a22hgcHaxR+b8FOyLMP3w1ZEGxrNvn13RJETFqNdBVTto4O9F
mzXeKkRmTJQibycNqvadpj1Zy0f3uGWZe3fR4OSqty+2nRZhbHwHne5KA7/z
GnP2kXxcmBhdM3U3DV5eDlozfYYI25PNXF+5E7xs2Vz9lC1EaV7n96t7aJCq
1WW9eEKISwQxkaf30cDXpmzx7kAeOogo82z3k99LdjQp3RLhacmba1oHCP5m
jHPmjQkxOzV29feDNHh7oy3o4QEx1p+ntt73oUEjo6909DMX37Z6ppUfpoHG
dOsNih5i/CUv2Vt8lPRjwHVj6EYeylvUGuX7kc9TfP8NGQhQ69S/oezjNDB/
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
Y6TPrPhHocO1LTFrtNX5iMtzRydpdDjduHH9pIgQfxg0lv1k0GHPMP2v1Dc+
am8aj/8OdBibe0mq25iF+52W7BwypcOzwjSh1kgiph000/i6kQ6ftt0z6I9O
wObgw2Pd5qQ/tutuiaxno3gcu+KTJR1G/rUWxG9NQEgvSfxgRebzcuPygHoO
nrjZsavdhvTfvSvBkPTjNs7WfGVLh/UnWtaGX+Nhd+Oa8SY7Otw1npg9XM3B
JZ0OVQ32dDCzevfpCuFDh9FTybUOdJgJeqUT59kYL5qz+4kTHU4u6xqsncXC
Ktm61RXOdFh0sTdO+JaNkytGfz7aRYeW0Pu9x+QFqL9e4cn93XTYlbt3/Nwv
Dh6yYLLv7aHDJcblEWezWLzo7Lnnzj46TP/L8JSgsbHNK1H7xn460Hkrn2f8
4OKCU4W/rrrT4XEnfiq8zMVNCe+qsz3psCzO2VpYlYhRMkXb+IfosNn+2Z6Y
q0lYlZL04dxhOjzKLJi5cycHRVQPeYV402GgI1sx8xoHGVc2jHv70sFOPHDt
cwc+hmorR+z1o8O+p3Wfzgwn4qO7P+bbB5D7358nf2bxcdKoMWVjEB1eW+1Q
NSf53rgsd4XRcTqUxabPqjZIxOMbI/JXB5PzREl3vfzHxqK6XbQlIXSoueGp
RPkowB92/9UuCKVDc42I538kL617LekwI4wO46cPHq3O4aKfa2/HWDgd4sVx
+PFQAt75XHGkJ4IO4Q+4QeM3EnHIK23izVk6ONTkxgVYxqPOSODZ+mg6MM+c
rtxuwMbDx7dIlZ2jQ4PUfxLLdPh4bUojPT+WDoXxLelbzrGxL1JkVU48Ha7P
mrWOMy5EDYm3BfxEOpRHhihPzhege/I9xvlkOsi5jKy3IPyZsyixLoRNh/qz
vZM9YQLsSvd08uHSIbRmR5GPqADVlkPXXj7BU5t0rg/J13vyFH3thXRY0JX+
9aAECy/ojv3emEqH3bV8GTPCv+8LG6KN0unwZzhVR66OjUrUq9JaF+igeurF
7ssRhK8qwy8suUgHapLBc4YvC4UWO1dLXaKD7i5L3XOaLGx7vq5oRg4d6kT/
mzj5hYdyDvM3/LhMh0bT9DVHfQifv+1u6LlKh3m22psTi9jI3lfu3J5HhyYl
Q8l3D5KwqSflS/11OvQ1XKkZm8nGBT4BfmU36XAw7eixzCkO2oxZT+XfpsPV
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
/g9+IaMi
          "]]}, Annotation[#, "Charting`Private`Tag$14999#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Kv9N8l6agcGLlOkjvkyYE9isZkRPxNd+lY8e+ZN5KD0LUPhPgPrP91uyAwie
paqvaZ2pmKg58+WeICaoZUbrLgrn4Zeo/J06IUz4azzifj6HnK/T6t2fUDL/
j9PuFu5IwUyjAbcnp5iQc/lGbJR2Mv5hc/p4p5lQtdGR+0pKiPbf1/keiCTX
sdNjI0mfKzJvH9M7w4R89UzTpMNCnHMx7PS/s0zYI3Jd3m8tRPe/qhL1MYRv
wrPlp1WEWOXwKFF0jgmVUatoIcpcXFrkPs89nrz/0Nu228d4GCQllWaYyAT2
qljLbqYQX7tdV5uWzAQN+/ergoqEqHffLu95Cnm/3UlNuyfYGL/ot24Gmwk2
bG7pQ+I/n/2EJUe45HknZ7fRSF/b+JxCNeIzQcL3/Ow6r0Q8r/nu4QwhExTS
2LF2R1k4FhW5uUnEBOFc+4d67Ry071R/cSGNCbMe5xzvtGVjkVGtg1cGE4a3
cz+LSH+Zwzn2lpLJhC3G8n4F31jo/l3moGQWE/bF+CjETgqwyrz4W/NFJsy/
12l1ZAsfVS46+GRnM4HjxH3MrRBi8N+xEZ/LTChX6CjTncHG1w4Zpxh5TDhy
81VobgiZXxFzhvQVop/w7P+SJ7mYKPUxvv0qE17ZBcyzlBDiF7cY+bwCJpSW
qYx7NSfhxvtaIv9C4rfJ958tPc7GzEXPVDYWMUGqTWuVbQsbx/18LssWMyHb
Ts/E8AAHHZ7P0+m8xQRuXdXnLcUcLNK8U3z1NtHL68G3XVkslD6z2yToDhNq
AhbMyd1E/Ljz332zMiYMSEv1vyP9osroovm8ciY8vzaycOJFGqpwTJ+9r2CC
+OHPVY3E74K/f9lRWEn2Qd2ehWokjz4IVZDNfkD0rFxZzyf9W3IO/amwigkC
i9/uSjYCtE07HJ1YzQTde2eVjS7wUKDFgcgaJswz3eO3qEWE7+5W/D1Zy4Rl
jR/dr9XwUWPzl9KjT5kwcczqTYO8AD1b5X33NjBh+eUTiQM3+VjiTtO1f072
2ebY7yanSD8ddv+6uZH42V/lhYvtUnBTNDub3sSE1925m9qviDBesWLP2teE
j/5zqw3ruNiU/XnRqhaCZ8hsib3nST8ylG9WbiPnT62scdDk4P4qKkuug/h9
t5unnkYa5m9zt5r5lgklq24WvS4S4c/3LInxToLPBYVjDbfS0Nin/OGPLiYk
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
S7OaBfMYH2NO7TCMSwUoEPc6o/mEg/8DA+9aqg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14999#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
1ufrLnM1W5dS0MgRdlEF9aFqRWLb3DIK2gJPqBGYT8EM4msdOwVcLuZaRqgP
zlTPTOIKChpKVWKiEJ/lnZeWu3BRYK4aXmyIeOQ9JylIrqIg4niTIi/O6w6r
qzfx8lAg9FrtzmnEY3HuUdU+Xgqk/Ty3fExBPuix7ypYTUGkyNRfJdb3Ffvv
mwQKUNBp+N/c5X+oZxf3OJgIUhB6a/aUAOv8mOiI+yZhCkbflvuRGL9FUUTg
zFoKRKc0zui/Rf3avy26RpSCWtp0kSHm9+9IY1q8GAUH6tVfHEf+G4e4FRyX
oOBglEIcG9YzU0qgUnMDBY//tZaKop7/qihs4pKi4PqVLMoT/baBpXlf10YK
mq4wh/uQr6nTP8dzN1PwaqX9nT7s/1NRCQt+0hSckRwr3I543i1H4zWSwfiv
/unZhvVMqOmW2CBHweqY+NpxxPPo4YvbJuUpSN/07drvX9hP/q4nq7ZhPLS1
43XoF2NuVRrGKFFwJclN3R/18quKg81RZQpkeMaSMpB/mo3LXHaoUvD54UD8
C8zPtRP3LrCrUXDtiJRdPdanb7leRLs6Bft79ay+4fymkjaUmKVJwYof1DwL
TyFEeM55GtZXUcb3LfKxs13+mT6dAoeAa9nbFhCvHu/q1lEU8Jknv5JAPQng
OdM5yqCg3LhrszDu97/s1cMVOynwaqOXjuG19O4nc5G78HndPMpl2O99+0w5
7XUwXyJKfeao5+98Z9du16PA6JPZZkC+SQrf2rpEn4IEk0Kpg1gPz8eaGq0G
FMy2pG1jQ/18bdilm2FIgcQFd71YrMe6oQsWnkYUbN+uLXsX5znXyxJOOsYU
UNSm6kHEW9X6F+eETSjYETTVtBP9tOCzw8GDphRoJ9UcGED/62y+NK7UnIK9
R6Sf+6JelE9mZIYdpEDc6OBjXcTbn8qGoUArCv4OKCVLoZ7RomcVfK0pqNP4
mR2L+PE5st7dw5aC0ts61ipY/1JlveKT9hTUaNm1qaMfmFvi9tvhCAX16d1f
WL+voNGaQFofpSBuF/eKMpxHvNKrAk2PUfDIfxvHaXx+icdIzd7jFKwfD3nv
h/ub1V6zcvcJjL9BzMcL+bljDd2IfooCpaVx6dPYzzwHHGN2nKZgn5dBj+aM
KbOwMLJd4QwF/+JUJg7hvP3jcsm6Le4UDEu4bghDv6Fi1mcncZaCro0iUqeR
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
fu5pntl7zMdFU9Ww2wCu+SVSaci3/wFP3tT+
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14999#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {10.010500473244898`, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(\[Eta]\\), \\(L\\)]\\)\"", TraditionalForm], 
       FormBox["\"Violation\"", TraditionalForm]}, 
     AxesOrigin -> {10.010500473244898`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SuperscriptBox[\\(u\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(u\\), \\(\[Mu]\\)]\\)+1\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(f1\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(f1\\), \\(\[Mu]\\)]\\)-1\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(f2\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(f2\\), \\(\[Mu]\\)]\\)-1\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(k\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(k\\), \\(\[Mu]\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7700512046362658`*^9, 3.770051515757578*^9, 3.770113966360035*^9, 
   3.770114153492338*^9, 3.7701146036380177`*^9, 3.770224941456543*^9, 
   3.7702250370619993`*^9, 3.7704600469690332`*^9, {3.770467000752151*^9, 
   3.770467010633305*^9}, {3.7704740094719563`*^9, 3.7704740679847116`*^9}, {
   3.7705154762161837`*^9, 3.77051548698298*^9}, 3.7705155204037533`*^9, 
   3.770539826203364*^9, 3.770557030903178*^9, {3.770567084587282*^9, 
   3.7705671162135677`*^9}, {3.7705671498125257`*^9, 3.770567160996728*^9}, 
   3.7705673439065*^9, 3.770567413789983*^9, 3.770567563203146*^9, 
   3.770568533201129*^9, 3.770570239127426*^9, 3.770570874168391*^9, {
   3.77061955035358*^9, 3.770619571189476*^9}, 3.7706199670038*^9, 
   3.77062965900769*^9, {3.770637850575494*^9, 3.770637908850986*^9}, 
   3.77073071621467*^9, 3.770730795488675*^9, {3.7707308590326977`*^9, 
   3.770730873803398*^9}, 3.77073138640615*^9, 3.770746785390616*^9, 
   3.770747368176749*^9, 3.7707475360740137`*^9, 3.77074757549126*^9, 
   3.770747989447441*^9, 3.7707482490294313`*^9, 3.770755763355937*^9, 
   3.77081937556008*^9, 3.771056895227614*^9, 3.771075491903111*^9, {
   3.771078030602503*^9, 3.771078040035577*^9}, 3.771078247675211*^9, 
   3.771078432287574*^9, 3.771078554944499*^9, 3.771078853326264*^9, 
   3.771127625026988*^9, 3.771176063040226*^9, 3.7711796550811663`*^9, 
   3.771241452980116*^9, 3.773061044839574*^9, 3.77314824682969*^9, 
   3.773563893412381*^9, 3.773573555570931*^9, 3.7735748013155193`*^9, 
   3.773865591995675*^9, {3.774006793351325*^9, 3.774006820162257*^9}, 
   3.7740086267617693`*^9, 3.7740221432967377`*^9, 3.774022289925796*^9, 
   3.774025007098333*^9, 3.774265458233267*^9, 3.7746400087518377`*^9, 
   3.7746448503692493`*^9, 3.774657576760643*^9, 3.7746914147971087`*^9, 
   3.7766849259219837`*^9, 3.7766850992239237`*^9, 3.776685484173683*^9, 
   3.776685850903678*^9, 3.776755821100937*^9, 3.7767559951079473`*^9, 
   3.777036906683736*^9, 3.7773017477625017`*^9, 3.777365738538641*^9, 
   3.777366285219018*^9, 3.77756677156155*^9, 3.777633454015739*^9, 
   3.777645310547086*^9, 3.77785814060435*^9, 3.777902404791513*^9, 
   3.777907037019403*^9, 3.778300788037599*^9, 3.778300931937974*^9, 
   3.778302017106987*^9, 3.778313420962805*^9, 3.77832103343994*^9, 
   3.7783220248036013`*^9, 3.778322092546541*^9, 3.7784128076610928`*^9, 
   3.7784917416980963`*^9, 3.778824088996526*^9, 3.7788452677660923`*^9, 
   3.77885184382824*^9, 3.7790273092565813`*^9, 3.78144084996071*^9, 
   3.781515331398522*^9, 3.814101495513356*^9, 3.814101525643661*^9, 
   3.814110959547956*^9, 3.814713402559022*^9, 3.8147137345341377`*^9, 
   3.825039046014906*^9, 3.825246844282567*^9, 3.832588761126184*^9, 
   3.832657886778966*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"4de0ed09-e9bd-4f1d-95b8-a6f11b962e14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Cu", "[", "\[Eta]", "]"}], 
             RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"Pu", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
          ")"}], ".", 
         RowBox[{"(", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Cu", "[", "\[Eta]", "]"}], 
             RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"Pu", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
          ")"}]}], "+", "1"}], ")"}], "/.", "totBG"}], "/.", "param"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*FractionBox[\(\[Eta]\), \(L\)]\)\>\"", ",", 
       "\"\<Violation\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[\(u\), \(\[Mu]\)]\)\!\(\*SubscriptBox[\(u\), \
\(\[Mu]\)]\)+1\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(f1\), \
\(\[Mu]\)]\)\!\(\*SubscriptBox[\(f1\), \(\[Mu]\)]\)-1\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(f2\), \
\(\[Mu]\)]\)\!\(\*SubscriptBox[\(f2\), \(\[Mu]\)]\)-1\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(k\), \(\[Mu]\)]\)\!\(\*SubscriptBox[\(k\), \
\(\[Mu]\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "30"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.777366305235579*^9, 3.7773664100616503`*^9}, {
  3.777366442986064*^9, 3.777366487729871*^9}, {3.814101549211172*^9, 
  3.8141015803507023`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"21948cd9-c3e8-4cee-9d49-dafbb8154540"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
GfI0HCtfG2jnuVIhWflp8L+4VGzSD8vJcqdCk5hk1FXpfGx/dPNzmicVVhpI
OOyQDMOh5ox/kd6kHicG5a5xZeLHUh9+P18qHJV5IabyNRuXkszFnfzJft6t
82uXSUfBwIOK5wOpcGtrWGKaYTTuurRrv1EwFQS36vldXkhGZZPVupqhVIjO
zal1W0pAHfUZU5VwKiwXVnog0p6PFozei3uuUmGF5ZrPjpuT8MrOOl+JKDI/
/87zPElBGC6QHLM5hgpabl1kO6Mw669bzpo4KhTyKbru8kjF2ulT1X/jqVDN
rF8nH5uC7c+J1i+JZL0f1loHc6bh8/Ztj98mU0Fkct/5VUWhOH19+chgKhUU
k755M9ojcCln4lNXOhVe914O/KWfjYJRXX9bMqkwk3ht87P94SjpUbW2Npvk
86DqY07BMGRZxYoW5pL+tOL0cgFBT0LrhJN8Sj4VXlzWifvRfxXNQZ+IKKRC
Xz63oWl0NF6RZ2l7F1PBMURlwdsoCcOFRc5cKqVC1gWeTxuMnDCTe8nBspzU
x8/3nDUfU7F6fsxbv5IKsm9olrX9UXjvzf2oo9eokPI28uZQ+jkcfFyStbeG
CgI5xz9bOp8hpm9HVClcp4KyTJjizZoQXCpzaNl+gwoT48JXj3XE47oU3Z4N
DVTQaNHLvJOegBJBlGHum6R+5Mt24LYgZDlunFloosJFt+881LBQ1Drz68+n
ZiqY/thXpHEjC800XvG8aaFCWlHy+jDSD5yYrSJPW8n8xl23XCjNwlCJfNn/
2qhQTJG6XRcWhhnrgvc236OCvmbxUmexD1YvWWlea6fCcGu50G9pd7z3Uf10
XgcVxCjdifpfXfHZkJx9Yie5VnjziWtfEk494PcK7aaCTW9n9v7SZFys+3bV
o4fUA0Gp04mJQ4G8ZxkOj0l/MCwLdBdOQYnopgqzJ1QIsFa+PceXgizPzGa9
firIb7cKbv7rgZrWvt2Hn1Jh1ZUqE7pPOpqetHjJGqSCU2tQm3sK6f8HDk3L
DpF84fa2bksg9aUgtSD2kpxvCuEX4kfSMF1kzRrBYdK/KRXj0bfjsGrVpy0r
R6iQdE9T0sc4Atu+98r8GiX7992VY3l8Nj4dr2N/fEOF3TUfcrK+xONUb7L6
yFuSL6LZjdcVMnGxxd247z3JJ0Pbnz8f5CB/xWnb9kmy3iNyLg7MZNyRquJx
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
3nFs6CoLCtBmpGDHuRxO9QQ21BY9HOluLMJVs9k3NiaxoVDAhfbGKovQcMs+
N57MBmLNJxcHuQqM5MjeWJPKhitpeSdHpsOwJyKrwyudDaJyQWcjk1yQb32W
29FMNmx4uqd6nWoZ7uvbcWZfNht465IPJ9cUom1suapSLhsK+NwO3TuRQqRo
K0lL5LPhw9hWo+pzp4l2nptrhQpJ/gTZOHJ2FhDfuog5nmI2XKpcv9JkOg3F
w9uH/pWwYVNj+WvDBAfUUtNsnSsj9dT4RnIrVqDniv7CyQqS/2cu5a4SqMWy
e0YRr6rY8OhTnMxu7VR85j96sbea3L/53+w6aily7rc6eb+WDSGNVC4tn0pU
+jvDvlnHBouWaoGdS0WE6W1n8cp6cj5c+LUi2j6PiPRYWJHbyIYzB+SPRyfq
Ek3MgOmEJjb0xLxqUvGLJya+cz8JbSb9Nnbda/81RbihPqbBs4XEe3+2T4Oy
Px5w2ph5sZUN07ZsNl9jGnFRKcvfso0NDK/VSZusKzBrdoeVwT02PP48ZJB3
vxa7q8o1NdrZYGwhbP7oXwb+tFPao9LBhrcbYvY7fq4kJGRubqJ0ssH/DbvU
cCkc9SaJRclucr/XjK1H/iajf3H7my09bBjaLWn8xq4Yr53V/G/tYzYcbfiY
ZiftT7zc3l+17AkbaiiuteEXMohVY0YJ3/vYoNLp0EjeNQhGzqjbhwH2/84z
Z02szrx+xoYvaRNNTqGpRJzwJ9W+52zQtVnu8udgKNE65Cz94AUb3Gl+4u5H
CnAmZWHtrVds8PP1ESdUYnGLfsBc1Ws2/HZ0e3FKMxvV1q96kTdKzjPN4unn
/FV4pS+mNekNid98g2jbbDoWxG4sCn/LhkiejfvO85Rjr3ZWhPd7Nji8bDZe
pl6Fizw7LzlOkn74KsZfcYK873aXnzz3gQ0KE+anJeKd0ChcSdnoI5l/bkei
6oFCDFG7Ka71iQ3rrnmbBNhHEXUrVFbCZzZUWdVGWKunEWP32qepX9mQ2uDI
c1itEvkCNJ9IzbFB2vLmn7lQb9y7v79B5Dsb2n2ZAnMHowmbv0aZ/D/ZMBP0
d3khRzGm3B71X/6bnFfFQ/YTlm5Eu4eV1c8FNmw7vip/++8i/Mr8pPlxkeTL
x/8r4kzjqfy+v1+SKEMhkTFlVsi3cM7Z56wMJTQoGgwlISKZEjLLPM/zkHl2
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
botsJPp/nICDcw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$22677#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {10.0105, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(\[Eta]\\), \\(L\\)]\\)\"", TraditionalForm], 
       FormBox["\"Violation\"", TraditionalForm]}, AxesOrigin -> {10.0105, 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 700, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{10.0105, 33.1995}, {-4.863268809971273*^-11, 
      3.737717462340636*^-11}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SuperscriptBox[\\(u\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(u\\), \\(\[Mu]\\)]\\)+1\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(f1\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(f1\\), \\(\[Mu]\\)]\\)-1\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(f2\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(f2\\), \\(\[Mu]\\)]\\)-1\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(k\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(k\\), \\(\[Mu]\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.777366371398978*^9, 3.777366411740732*^9, {3.7773664492534657`*^9, 
   3.777366473665185*^9}, 3.777366507874816*^9, 3.777566804126073*^9, 
   3.77785815143083*^9, 3.777902422432398*^9, 3.777907042023835*^9, 
   3.7783221034233437`*^9, 3.7784128122015944`*^9, 3.778491746482658*^9, 
   3.7788241149806557`*^9, 3.7814408600513477`*^9, 3.781515340545148*^9, {
   3.81410155277719*^9, 3.8141015823956223`*^9}, 3.814713437212967*^9, 
   3.8147137395695*^9, 3.825039060783733*^9, 3.825246862057282*^9, 
   3.8325887843886833`*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"f46ae931-6ca8-4854-bd42-17836b4dd254"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
           RowBox[{"(", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Cf1", "[", "\[Eta]", "]"}], 
               RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"P1", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
            ")"}], ".", 
           RowBox[{"(", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Cf1", "[", "\[Eta]", "]"}], 
               RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"P1", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
            ")"}]}], "-", "1"}], ")"}], "/.", "totBG"}], "/.", "param"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
           RowBox[{"(", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Cf2", "[", "\[Eta]", "]"}], 
               RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"P2", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
            ")"}], ".", 
           RowBox[{"(", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Cf2", "[", "\[Eta]", "]"}], 
               RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"P2", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
            ")"}]}], "-", "1"}], ")"}], "/.", "totBG"}], "/.", "param"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*FractionBox[\(\[Eta]\), \(L\)]\)\>\"", ",", 
       "\"\<Violation\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[\(f1\), \
\(\[Mu]\)]\)\!\(\*SubscriptBox[\(f1\), \(\[Mu]\)]\)-1\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(f2\), \
\(\[Mu]\)]\)\!\(\*SubscriptBox[\(f2\), \(\[Mu]\)]\)-1\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], "}"}], "*)"}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8141016037342043`*^9, 3.814101626123898*^9}, {
  3.814101669107679*^9, 3.81410167529132*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"4966e525-66ee-412c-a86d-eb6a86945e37"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
E6semi9eiu8Fh/8+mYdTmNi57MuQ84E+ELfp8Fk+wsQ368OGT6zog4qP8xle
Y0xcZ+D1KpuvD65MyA9wqUzc76D82w/6YN0OA4FLDCZ+kPQe/DzZC1Uertu6
WUz85dj2lkXE18rfWh6dIO4vXVv2CgT3gvTS2ielXCYu/BZOjYjphbqjE9ma
P5l4ds/YWKtNL9wKWkuJnWLi+4623ndXemFjFyyXmGVi5VkJ1107e6FJ2l7r
2R8mWh+bllte1gu3rQOtFuYJvxrr7bji2gubEvP9ry8Sfq0pSD1m1Qst45S8
UR4W9ptSFARe94LHtmUjJnwsPH/bTk1auBcU3DWFGvlZGPjuP8bqyF5oLzXb
vU+QhUF1T1epc3rAa4m3TcYKFr5wd2dmnukFFf2kF3LCLJyrMn9QndQDnS/a
C8NWsZC13n+tsEkveHf8HhMUYyHOXBRTWd4L6lKyq7zEWXh3yw3j5ewe6L1w
VIcrwUIlQVeLlsEeeBx/085GioX20kErVCN7QIP1JrhrPQtH276bnVzRC/2a
VSX6G1mYzntUaWBzL/jdZtFKNrHwWXjqkzfvemB7iZiYpjwLlb/Lyn962wMU
nr0Qq8jCRnFJ1KzsAX+9Sw5rVVi4RzPA0Op5D+wKeB7yVJWFC6tMa9NO9cDo
15zyeXUWrnYJP3zdrQcC1w0yr2myUL+YK9X9ogd0zi9dO7qNhYWqXL7cjB6g
xarrmmixcMv5EKvGiB54yTB2bthF8BPJ/f4iswf2adwL37uHhSvq0/epv+oB
hktCZfpeFk5/MjXLvdgDoUWtbFkSgf/9l5+Gfg/o/pteF6bLwmpJEU0FmR7w
GVos2XeQhZygCI2z/d3Q8HmZ9ffDRH1gaDY/7gGhGNGlAfosPDfys/X4kR4w
9JZK2nGchTzkITOHKz3wylrOYOAEC92Gvk5653RDt67a5KNTLNSxK5Uf/doN
0rJaoapnWLixI/ptZHs3XOAF7W8mLPS+N2LDbOqG2JHDg3fOstB5wj/AW4zo
t/Kkt6wFC2uOLYy+9+4G1VgzhcbzLKwTat6pWNgNVx9ZN9ywZmGA4bDaTbdu
yLRxvCJ5iYWRScq+r593w9SBW6IVdoT/mu9ahXzqBm35u7mXHVi40vjR8J2b
3eDF53N2lTMLYYtkFGtfN1SMBSzkX2Uhe/BWx0HPblhaExZz4QYLL0vG84Sa
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
ryg2PznZZwIjUVbT//4R+/D/v/8BszSaDA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$16696#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
P/3ff1zk+f+f/wH90o6y
          "]]}, 
        Annotation[#, "Charting`Private`Tag$16696#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.030120955349708673`, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(\[Eta]\\), \\(L\\)]\\)\"", TraditionalForm], 
       FormBox["\"Violation\"", TraditionalForm]}, 
     AxesOrigin -> {0.030120955349708673`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SuperscriptBox[\\(f1\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(f1\\), \\(\[Mu]\\)]\\)-1\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(f2\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(f2\\), \\(\[Mu]\\)]\\)-1\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8141016344188347`*^9, 3.814713755067082*^9, 
  3.825246882142399*^9},
 CellLabel->
  "Out[216]=",ExpressionUUID->"64d2c227-b944-481f-99bf-23ad306b80e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Cl", "[", "\[Eta]", "]"}], 
            RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"Pl", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
         ")"}], ".", 
        RowBox[{"(", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Cl", "[", "\[Eta]", "]"}], 
            RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"Pl", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
         ")"}]}], ")"}], "/.", "totBG"}], "/.", "param"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*FractionBox[\(\[Eta]\), \(L\)]\)\>\"", ",", 
       "\"\<Violation\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{
     "{", "\"\<\!\(\*SuperscriptBox[\(k\), \(\[Mu]\)]\)\!\(\*SubscriptBox[\(k\
\), \(\[Mu]\)]\)\>\"", "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "30"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.814101629186822*^9, 3.814101682235014*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"3b2a9dbf-1fd0-4ff0-bf04-324e2a828218"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUV3c41e8bRpKQisqISKmQvUfPY4/I3isykr2ikJkiI4SQZJNsQvbeex6+
SJK0JLQk/c7vr3Pd130/636vz3ue9/Q1N107MhISEqqDJCT//516n8Z4gJCB
+Tqb/aGHTyO58IwC6blnSMJ956y+FTuKBNK7/fF6hplzb0k04tnQtk8r7Xvb
M1yKNDYKNTuFl6m6l38eyMT5U5WeRR9ZcJnf9tc2XyYeYT2t7cXJgn4GZLSb
BpmY8h9LZ9YwM9L5Z575GpCJF1i9i28IMGNRJkh+zslE8oUksVlpJpTvntf8
0J+JDmECf1fDGHHuk5/t6rdM7FWhEqvkYUDPo0x+bxmzsPzzV7zncgKpxGsf
LmEWEqq44hfPnsBsc4O8Bfss1Ph0rVJR9DhKhW7Vz8Vk4Vm3yywX3I/heEH8
6Ex1FnqPHVZwLKXHG0P8q5P/ZaED1ezU5TY6JNka+jNGlo3Rl644FibRYQqj
89ERrmwc1Pz0Qq7sKAoA1flBbSJvyVNtK3wUe20KZfp8s7Hu78f8GZcjaBWp
rNudkY0pb1cyAniP4K/SlesdXURefu7q6hItXthhf9REn4OZ16IOPf9Cg61s
LYX1UjlYGMznn0pPg8ZKFs211jl4wZdEufYvFW44/pmojsjBiI795hR3qTAi
LvVDRVkO1tmlix6tPYjvz9HJ5qvnYrAbmfRENwUGapQb5Hjm4pEIm3I6AQo8
4anplJmaiwLH/x5nc9qPpY8/Bz9tzcWIlVSLl7PkqNz0IDntfS7KxtNLilOT
4+LyheLHtHlIYKpkiQ/Yhz6UPW2JonlY/v7ni4tS+5CWz24m3jwPBS5JZMzE
k2G+3r4vsWF5aEVRUmYkRoZwO4ssuigPHZJZW4suk+J0BjJGjuVha+O7fz6U
pOjaucB77xcx/pvzhdkkEqT46K8QxpaPEWzf/+gqkGDGYWaTYOV83PA+4k3v
9Q/EROtc77jkYxxhRfX60z0YNjW865dI5I+ysDot/AX74O1U34Z8lLWTWadv
24W9vIQy7+V8PKITXbcruQvJAwJdHgcLcKlzSoMz4Q90n3DZcDIqQFlXTQ55
7h2wlKGmuBFYgO5njwzx0v2GH9bPT9rnFWA5OVut2tAviL2vImgzWIAkojnL
vwR+AWfJO2WrLaJ+nl7XWOwnNI6HmVswF2L53UYF7q8/QP/XaU9TuUJsdUqb
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
6wfVTOY3+2V7sOEZ6VbxJT8YmzPsFFXvwXsrL3bZmPxg/YkOfZZBD/qWKHFd
kvMDKguNazRWPdjhdPM9/fZtOH9KpcLXsQeTqwlDl9/fBsXXciRvvXtQXDuB
WkP3NlhlymhpBvWgdxz7xzrT2xBgLZ7xKrIHeYQ3aoo5b0Mqh9CXs4k9OLy9
1yStchtq3l6UicvoQfaoCQGHvVswnns+6k9hDzJGcry6Un4LFJ/T9RSO9+Bu
zeeKdbJbYOV46MSxhR6EdrWHUSdvwR0eSrug9z3ovtrw5uuQL6R9Jqv++K0H
/0v+sklS5As1JX/JDHd78NIojYO1uy9MuP7SaaPoxd/f2J4dV/CFDf6tzItH
e1FsU5kh/bIv0Hz78vXxyV7s8v/x+FSrD3BVrsG+c734dq3ggHSqD3SbVak1
8PfiUl9i1OysD9juD9T3kuzFRdf95HvyPkBapnqVR6EXGcpz704+9IEMY3rH
txq9+FXyuE6Nuw9Iky16PzHsxT7DjdSXJD5AeFEYpGfVi/dbLt0WLbwJNw28
HlA79mJNhgMXZ89NoPt3KanDqxfzudfvf6+4CWWFlJn+d3px4D9jSv7um8T3
wUSR8P1e1PpWJZBrcxM+/nn68lNcL95Q5a1hVbgJ9/McWnPSerE/uf97yv6b
cFZLeMAstxdz5OSTPm17Q/uvv1P0pb34l+PHlU8vveFqdu/SQG0vHjIlC+Ub
9IZd9Uefwtp60bF9l+FCrDekfrf4IT3QiwdIW9+H+3mD2LMLpNuTvdjzebxR
7JE3TKpuURcv9uLVW35f9jF5g8dm0wnbtV702dcn7XPGG2jTI06zbPZi0N0s
nHznBcVKehcn//TiycbfKYQBL1D7yioevb8Pz59pNVvt84LVlDU5xcN9yPLH
spDN3AvC5Ks0dhn7UG5zwQo8vID98x2jao4+HPQ/5Zjg7AXNSarXnC/2IVV6
M5+wiheYIb3LWbE+NKPJ9FQX84Jfawu+89iH0+p5Vz+e9YLkhMLQRLU+5M20
ZP7O6gXCMl4xGnpEvYrexr9DXjD67lIKuUUfFonv/yHp5gkuDylzGu37sG4y
yF8+zROoJCdKvN37MEyxgMYwzhMKl5/WXfTrw6g1TfhzxROUoh06VsL6UCqt
nd7M2ROWRYWH02P6kG/t85UnLJ4Q/PovQf9xH47t2yPlP+kJrJG9b2my+tCF
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
+981jnu7Dz7F2w6Oj7P9///7H/AsfOk=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$16931#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.030120935556258378`, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(\[Eta]\\), \\(L\\)]\\)\"", TraditionalForm], 
       FormBox["\"Violation\"", TraditionalForm]}, 
     AxesOrigin -> {0.030120935556258378`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 700, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.030120935556258378`, 1.}, {-1.3920593603083812`*^-13, 
      0.00013016196814831272`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SuperscriptBox[\\(k\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(k\\), \\(\[Mu]\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8141016628939867`*^9, 3.814101686836871*^9}, 
   3.814713760220982*^9, 3.825246892914794*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"924d69e1-9d02-4191-8e71-30d4c6f54e5f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", Cell[TextData[{
   "\nCheck of the relations: ",
   Cell[BoxData[
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["u", "\[Mu]"], 
       SubscriptBox["f1", "\[Mu]"]}], "=", "0"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["u", "\[Mu]"], 
       SubscriptBox["f2", "\[Mu]"]}], "=", "0"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["k", "\[Mu]"], 
       SubscriptBox["f1", "\[Mu]"]}], "=", "0"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["k", "\[Mu]"], 
       SubscriptBox["f2", "\[Mu]"]}], "=", "0"}]}]], "Input",
    CellChangeTimes->{{3.77005112124842*^9, 3.770051138377446*^9}, {
      3.77005116851504*^9, 3.770051185934346*^9}, {3.7700514038237543`*^9, 
      3.770051494544813*^9}, 3.770053619200368*^9, {3.770113992533697*^9, 
      3.770114094584392*^9}, {3.770114156861938*^9, 3.770114291349051*^9}},
    ExpressionUUID->"5466de0f-6cbb-4554-8dd9-acccdd17dec6"]
  }], "Text",
   CellChangeTimes->{{3.7701141401160507`*^9, 3.7701141496352873`*^9}, {
    3.770114301361188*^9, 3.770114411687973*^9}},ExpressionUUID->
   "094aab39-042b-4404-8ba4-beea59be1f07"]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.770124819454832*^9, 3.770124860686722*^9}, 
   3.770557030903549*^9},ExpressionUUID->"7bfb9d16-faab-418b-8f3e-\
df56f03d2aca"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
          RowBox[{"(", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cu", "[", "\[Eta]", "]"}], 
              RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"Pu", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
           ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cf1", "[", "\[Eta]", "]"}], 
              RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"P1", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
           ")"}]}], ")"}], "/.", "totBG"}], "/.", "param"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
          RowBox[{"(", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cu", "[", "\[Eta]", "]"}], 
              RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"Pu", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
           ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cf2", "[", "\[Eta]", "]"}], 
              RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"P2", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
           ")"}]}], ")"}], "/.", "totBG"}], "/.", "param"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
          RowBox[{"(", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cl", "[", "\[Eta]", "]"}], 
              RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"Pl", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
           ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cf1", "[", "\[Eta]", "]"}], 
              RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"P1", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
           ")"}]}], ")"}], "/.", "totBG"}], "/.", "param"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
          RowBox[{"(", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cl", "[", "\[Eta]", "]"}], 
              RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"Pl", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
           ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cf2", "[", "\[Eta]", "]"}], 
              RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"P2", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
           ")"}]}], ")"}], "/.", "totBG"}], "/.", "param"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
          RowBox[{"(", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cf1", "[", "\[Eta]", "]"}], 
              RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"P1", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
           ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cf2", "[", "\[Eta]", "]"}], 
              RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"P2", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
           ")"}]}], ")"}], "/.", "totBG"}], "/.", "param"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*FractionBox[\(\[Eta]\), \(L\)]\)\>\"", ",", 
       "\"\<Violation\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[\(u\), \(\[Mu]\)]\)\!\(\*SubscriptBox[\(f1\), \
\(\[Mu]\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(u\), \
\(\[Mu]\)]\)\!\(\*SubscriptBox[\(f2\), \(\[Mu]\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(k\), \
\(\[Mu]\)]\)\!\(\*SubscriptBox[\(f1\), \(\[Mu]\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(k\), \
\(\[Mu]\)]\)\!\(\*SubscriptBox[\(f2\), \(\[Mu]\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(f1\), \
\(\[Mu]\)]\)\!\(\*SubscriptBox[\(f2\), \(\[Mu]\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tin", ",", "t0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["10", 
           RowBox[{"-", "8"}]]}], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "8"}]]}], "}"}]}], "}"}], "*)"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", "Thick", ",", "Thick", ",", 
       "Thick"}], "}"}]}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770568577227626*^9, 3.770568642701528*^9}, {
  3.770637934795329*^9, 3.770637945496014*^9}, {3.774021714006709*^9, 
  3.774021794343894*^9}, {3.77426584200168*^9, 3.7742658537151957`*^9}, {
  3.781440889360044*^9, 3.781440921487691*^9}, {3.7814409719867697`*^9, 
  3.781440972401428*^9}, {3.781441004350511*^9, 3.781441085478743*^9}, {
  3.8141016976638412`*^9, 3.8141017184828777`*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"bfd52aa7-2211-4651-a5a9-c9da15e44e1b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Opacity[0.5]], 
         LineBox[CompressedData["
1:eJxNzwssFAAYB/ALiUTLLSxU0hXn0eM8rpy7Q0fXySNH6W4lzZv0EN1F53S0
k1N6cV6Vu8wm570ystyQPJaYJrWurYfE0CIVem3t+3zbt2+/fdv332cVnngg
QotAIOz/2//mEC82MGz5Zibhf/U7DKbr6KN7f7vVVKxCqxWGq78Q0TXjNb3i
Tejs83M+CgaaXiShfxSgy0dK7eIn0aeeJbCNx0ngKj8fzs8XW8CXAnnlHq1b
wbxufZZ1kw34Tp/6ibfCFqzxNsnVuUsGP/JSVlkV2oENemi16Rn2YG5X4nfB
BQewYUCVdWOMIziCR6rwD9iG+ZPmVE/SdjAtiZy7KEevc9bVzTLbAe5yFZFb
b6BVokVmvt5OcJ4WW+Cehb7fLVdI5tHtfQ+mCoQU3Buf+cSfQ/cWUwbb4pzA
Y8faNF/H0PR47pvOo87g4w8lUvYgOpORESIPcAFrDDLXZnegXYjB33z2uIL5
fPXFxsfo5s9O2u1OVLBpQ5Lydh26Ut3kamGzC2xELE7ZW4Q+Ucp56WG2G7wi
keDwOgddIswo8zJwA8f16K/0FaP1jjiu15lFl9lt5EpP08Bn6aap1aNoVs6r
jrJId/B7c/cW1jt087RCKT1IB18lDKsKh9AlwWsqfTkMsGBiNEjViiZrWFcm
LZng+tjChJBD6F9+tVReKHofpUs77DD67fysPIaPNpIFdqaGoaOr9TYootEW
M8n9U+fQUcOyohkBuq5FGflDiGZnDixopaGTTRxtTcTo59QPYpp0yX3LBV+P
7CX5y4hm3peX/POUqfKXoe15xSPheegURv29qGtotXX3yfjr6NCJOd3km2hl
v9GA8BZ6uoFUIspHu8lp0ZICdFZaEEUqR/8Be14GZA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26137#1"]& ], 
       TagBox[{
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Opacity[0.5]], 
         LineBox[CompressedData["
1:eJxNzwssFAAYB/ALiUTLLSxU0hXn0eM8rpy7Q0fXySNH6W4lzZv0EN1F53S0
k1N6cV6Vu8wm570ystyQPJaYJrWurYfE0CIVem3t+3zbt2+/fdv332cVnngg
QotAIOz/2//mEC82MGz5Zibhf/U7DKbr6KN7f7vVVKxCqxWGq78Q0TXjNb3i
Tejs83M+CgaaXiShfxSgy0dK7eIn0aeeJbCNx0ngKj8fzs8XW8CXAnnlHq1b
wbxufZZ1kw34Tp/6ibfCFqzxNsnVuUsGP/JSVlkV2oENemi16Rn2YG5X4nfB
BQewYUCVdWOMIziCR6rwD9iG+ZPmVE/SdjAtiZy7KEevc9bVzTLbAe5yFZFb
b6BVokVmvt5OcJ4WW+Cehb7fLVdI5tHtfQ+mCoQU3Buf+cSfQ/cWUwbb4pzA
Y8faNF/H0PR47pvOo87g4w8lUvYgOpORESIPcAFrDDLXZnegXYjB33z2uIL5
fPXFxsfo5s9O2u1OVLBpQ5Lydh26Ut3kamGzC2xELE7ZW4Q+Ucp56WG2G7wi
keDwOgddIswo8zJwA8f16K/0FaP1jjiu15lFl9lt5EpP08Bn6aap1aNoVs6r
jrJId/B7c/cW1jt087RCKT1IB18lDKsKh9AlwWsqfTkMsGBiNEjViiZrWFcm
LZng+tjChJBD6F9+tVReKHofpUs77DD67fysPIaPNpIFdqaGoaOr9TYootEW
M8n9U+fQUcOyohkBuq5FGflDiGZnDixopaGTTRxtTcTo59QPYpp0yX3LBV+P
7CX5y4hm3peX/POUqfKXoe15xSPheegURv29qGtotXX3yfjr6NCJOd3km2hl
v9GA8BZ6uoFUIspHu8lp0ZICdFZaEEUqR/8Be14GZA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26137#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJxNzwssFAAYB/ALiUTLLSxU0hXn0eM8rpy7Q0fXySNH6W4lzZv0EN1F53S0
k1N6cV6Vu8wm570ystyQPJaYJrWurYfE0CIVem3t+3zbt2+/fdv332cVnngg
QotAIOz/2//mEC82MGz5Zibhf/U7DKbr6KN7f7vVVKxCqxWGq78Q0TXjNb3i
Tejs83M+CgaaXiShfxSgy0dK7eIn0aeeJbCNx0ngKj8fzs8XW8CXAnnlHq1b
wbxufZZ1kw34Tp/6ibfCFqzxNsnVuUsGP/JSVlkV2oENemi16Rn2YG5X4nfB
BQewYUCVdWOMIziCR6rwD9iG+ZPmVE/SdjAtiZy7KEevc9bVzTLbAe5yFZFb
b6BVokVmvt5OcJ4WW+Cehb7fLVdI5tHtfQ+mCoQU3Buf+cSfQ/cWUwbb4pzA
Y8faNF/H0PR47pvOo87g4w8lUvYgOpORESIPcAFrDDLXZnegXYjB33z2uIL5
fPXFxsfo5s9O2u1OVLBpQ5Lydh26Ut3kamGzC2xELE7ZW4Q+Ucp56WG2G7wi
keDwOgddIswo8zJwA8f16K/0FaP1jjiu15lFl9lt5EpP08Bn6aap1aNoVs6r
jrJId/B7c/cW1jt087RCKT1IB18lDKsKh9AlwWsqfTkMsGBiNEjViiZrWFcm
LZng+tjChJBD6F9+tVReKHofpUs77DD67fysPIaPNpIFdqaGoaOr9TYootEW
M8n9U+fQUcOyohkBuq5FGflDiGZnDixopaGTTRxtTcTo59QPYpp0yX3LBV+P
7CX5y4hm3peX/POUqfKXoe15xSPheegURv29qGtotXX3yfjr6NCJOd3km2hl
v9GA8BZ6uoFUIspHu8lp0ZICdFZaEEUqR/8Be14GZA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26137#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJxNzwssFAAYB/ALiUTLLSxU0hXn0eM8rpy7Q0fXySNH6W4lzZv0EN1F53S0
k1N6cV6Vu8wm570ystyQPJaYJrWurYfE0CIVem3t+3zbt2+/fdv332cVnngg
QotAIOz/2//mEC82MGz5Zibhf/U7DKbr6KN7f7vVVKxCqxWGq78Q0TXjNb3i
Tejs83M+CgaaXiShfxSgy0dK7eIn0aeeJbCNx0ngKj8fzs8XW8CXAnnlHq1b
wbxufZZ1kw34Tp/6ibfCFqzxNsnVuUsGP/JSVlkV2oENemi16Rn2YG5X4nfB
BQewYUCVdWOMIziCR6rwD9iG+ZPmVE/SdjAtiZy7KEevc9bVzTLbAe5yFZFb
b6BVokVmvt5OcJ4WW+Cehb7fLVdI5tHtfQ+mCoQU3Buf+cSfQ/cWUwbb4pzA
Y8faNF/H0PR47pvOo87g4w8lUvYgOpORESIPcAFrDDLXZnegXYjB33z2uIL5
fPXFxsfo5s9O2u1OVLBpQ5Lydh26Ut3kamGzC2xELE7ZW4Q+Ucp56WG2G7wi
keDwOgddIswo8zJwA8f16K/0FaP1jjiu15lFl9lt5EpP08Bn6aap1aNoVs6r
jrJId/B7c/cW1jt087RCKT1IB18lDKsKh9AlwWsqfTkMsGBiNEjViiZrWFcm
LZng+tjChJBD6F9+tVReKHofpUs77DD67fysPIaPNpIFdqaGoaOr9TYootEW
M8n9U+fQUcOyohkBuq5FGflDiGZnDixopaGTTRxtTcTo59QPYpp0yX3LBV+P
7CX5y4hm3peX/POUqfKXoe15xSPheegURv29qGtotXX3yfjr6NCJOd3km2hl
v9GA8BZ6uoFUIspHu8lp0ZICdFZaEEUqR/8Be14GZA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26137#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJxNzwssFAAYB/ALiUTLLSxU0hXn0eM8rpy7Q0fXySNH6W4lzZv0EN1F53S0
k1N6cV6Vu8wm570ystyQPJaYJrWurYfE0CIVem3t+3zbt2+/fdv332cVnngg
QotAIOz/2//mEC82MGz5Zibhf/U7DKbr6KN7f7vVVKxCqxWGq78Q0TXjNb3i
Tejs83M+CgaaXiShfxSgy0dK7eIn0aeeJbCNx0ngKj8fzs8XW8CXAnnlHq1b
wbxufZZ1kw34Tp/6ibfCFqzxNsnVuUsGP/JSVlkV2oENemi16Rn2YG5X4nfB
BQewYUCVdWOMIziCR6rwD9iG+ZPmVE/SdjAtiZy7KEevc9bVzTLbAe5yFZFb
b6BVokVmvt5OcJ4WW+Cehb7fLVdI5tHtfQ+mCoQU3Buf+cSfQ/cWUwbb4pzA
Y8faNF/H0PR47pvOo87g4w8lUvYgOpORESIPcAFrDDLXZnegXYjB33z2uIL5
fPXFxsfo5s9O2u1OVLBpQ5Lydh26Ut3kamGzC2xELE7ZW4Q+Ucp56WG2G7wi
keDwOgddIswo8zJwA8f16K/0FaP1jjiu15lFl9lt5EpP08Bn6aap1aNoVs6r
jrJId/B7c/cW1jt087RCKT1IB18lDKsKh9AlwWsqfTkMsGBiNEjViiZrWFcm
LZng+tjChJBD6F9+tVReKHofpUs77DD67fysPIaPNpIFdqaGoaOr9TYootEW
M8n9U+fQUcOyohkBuq5FGflDiGZnDixopaGTTRxtTcTo59QPYpp0yX3LBV+P
7CX5y4hm3peX/POUqfKXoe15xSPheegURv29qGtotXX3yfjr6NCJOd3km2hl
v9GA8BZ6uoFUIspHu8lp0ZICdFZaEEUqR/8Be14GZA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26137#5"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {10.010500473244898`, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(\[Eta]\\), \\(L\\)]\\)\"", TraditionalForm], 
       FormBox["\"Violation\"", TraditionalForm]}, 
     AxesOrigin -> {10.010500473244898`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SuperscriptBox[\\(u\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(f1\\), \\(\[Mu]\\)]\\)\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(u\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(f2\\), \\(\[Mu]\\)]\\)\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(k\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(f1\\), \\(\[Mu]\\)]\\)\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(k\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(f2\\), \\(\[Mu]\\)]\\)\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(f1\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(f2\\), \\(\[Mu]\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.5`16.", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.5`16.", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7701148505476093`*^9, 3.770114902369975*^9}, 
   3.770114939829863*^9, 3.77011516898929*^9, 3.770124816901581*^9, 
   3.770124911613706*^9, 3.770224949364334*^9, 3.7702250563095284`*^9, 
   3.770460059322472*^9, 3.770467025898686*^9, 3.770474088886841*^9, 
   3.77051573306918*^9, 3.770539829172803*^9, 3.770557030904682*^9, {
   3.770567833603031*^9, 3.770567839453704*^9}, 3.77056856901329*^9, {
   3.7705686256195107`*^9, 3.770568643495867*^9}, {3.770619598321027*^9, 
   3.770619612135642*^9}, 3.7706296745669737`*^9, {3.770637947454337*^9, 
   3.77063795054491*^9}, 3.770731411131535*^9, 3.770747553448634*^9, 
   3.770748283753683*^9, 3.7707557750661993`*^9, 3.770819379151067*^9, 
   3.7710569014552097`*^9, 3.7710754939766893`*^9, 3.7710782638309507`*^9, 
   3.7710785630234137`*^9, 3.771078859108959*^9, 3.7711280738518257`*^9, 
   3.771241470656499*^9, 3.773061059674777*^9, 3.773148259821054*^9, 
   3.773563900772491*^9, 3.7735748043940487`*^9, 3.773865607882546*^9, 
   3.77400680900878*^9, 3.774022298933971*^9, 3.7742658691148252`*^9, 
   3.776756354845551*^9, 3.777036977976265*^9, 3.777567101836466*^9, 
   3.777858160732744*^9, 3.777902431998644*^9, 3.777907046174156*^9, 
   3.778322155132163*^9, 3.778412816803954*^9, 3.778491751240178*^9, 
   3.7788241201378593`*^9, 3.778845276614839*^9, 3.781440870178019*^9, {
   3.781440913440916*^9, 3.7814409301172132`*^9}, 3.781441023498918*^9, 
   3.7814410646115103`*^9, 3.781441094827524*^9, 3.78151535071596*^9, 
   3.814101722246323*^9, 3.814713764134301*^9, 3.8252469369023523`*^9, 
   3.832589129523966*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"71aa5dd8-35ef-4eac-98de-5c0076bd530d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
           RowBox[{"(", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Cl", "[", "\[Eta]", "]"}], 
               RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"Pl", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
            ")"}], ".", 
           RowBox[{"(", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Cf1", "[", "\[Eta]", "]"}], 
               RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"P1", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
            ")"}]}], ")"}], "/.", "totBG"}], "/.", "param"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
           RowBox[{"(", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Cl", "[", "\[Eta]", "]"}], 
               RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"Pl", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
            ")"}], ".", 
           RowBox[{"(", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Cf2", "[", "\[Eta]", "]"}], 
               RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"P2", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
            ")"}]}], ")"}], "/.", "totBG"}], "/.", "param"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*FractionBox[\(\[Eta]\), \(L\)]\)\>\"", ",", 
        "\"\<Violation\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SuperscriptBox[\(k\), \
\(\[Mu]\)]\)\!\(\*SubscriptBox[\(f1\), \(\[Mu]\)]\)\>\"", ",", 
        "\"\<\!\(\*SuperscriptBox[\(k\), \
\(\[Mu]\)]\)\!\(\*SubscriptBox[\(f2\), \(\[Mu]\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], 
     RowBox[{"(*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"tin", ",", "t0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["10", 
            RowBox[{"-", "8"}]]}], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "8"}]]}], "}"}]}], "}"}], "*)"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", ".5", "]"}], ",", 
        RowBox[{"Opacity", "[", ".5", "]"}], ",", "Thick", ",", "Thick", ",", 
        "Thick"}], "}"}]}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
          RowBox[{"(", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cf1", "[", "\[Eta]", "]"}], 
              RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"P1", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
           ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cf2", "[", "\[Eta]", "]"}], 
              RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"P2", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
           ")"}]}], ")"}], "/.", "totBG"}], "/.", "param"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*FractionBox[\(\[Eta]\), \(L\)]\)\>\"", ",", 
        "\"\<Violation\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<\!\(\*SuperscriptBox[\(f1\), \
\(\[Mu]\)]\)\!\(\*SubscriptBox[\(f2\), \(\[Mu]\)]\)\>\"", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], 
     RowBox[{"(*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"tin", ",", "t0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["10", 
            RowBox[{"-", "8"}]]}], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "8"}]]}], "}"}]}], "}"}], "*)"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", ".5", "]"}], ",", 
        RowBox[{"Opacity", "[", ".5", "]"}], ",", "Thick", ",", "Thick", ",", 
        "Thick"}], "}"}]}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.781441109409696*^9, 3.781441230502458*^9}, {
  3.8141017387096367`*^9, 3.814101761262765*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"906ab7f5-a428-43c3-b1c7-58e60d0fc4e1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Opacity[0.5]], 
         LineBox[CompressedData["
1:eJxNzwssFAAYB/ALiUTLLSxU0hXn0eM8rpy7Q0fXySNH6W4lzZv0EN1F53S0
k1N6cV6Vu8wm570ystyQPJaYJrWurYfE0CIVem3t+3zbt2+/fdv332cVnngg
QotAIOz/2//mEC82MGz5Zibhf/U7DKbr6KN7f7vVVKxCqxWGq78Q0TXjNb3i
Tejs83M+CgaaXiShfxSgy0dK7eIn0aeeJbCNx0ngKj8fzs8XW8CXAnnlHq1b
wbxufZZ1kw34Tp/6ibfCFqzxNsnVuUsGP/JSVlkV2oENemi16Rn2YG5X4nfB
BQewYUCVdWOMIziCR6rwD9iG+ZPmVE/SdjAtiZy7KEevc9bVzTLbAe5yFZFb
b6BVokVmvt5OcJ4WW+Cehb7fLVdI5tHtfQ+mCoQU3Buf+cSfQ/cWUwbb4pzA
Y8faNF/H0PR47pvOo87g4w8lUvYgOpORESIPcAFrDDLXZnegXYjB33z2uIL5
fPXFxsfo5s9O2u1OVLBpQ5Lydh26Ut3kamGzC2xELE7ZW4Q+Ucp56WG2G7wi
keDwOgddIswo8zJwA8f16K/0FaP1jjiu15lFl9lt5EpP08Bn6aap1aNoVs6r
jrJId/B7c/cW1jt087RCKT1IB18lDKsKh9AlwWsqfTkMsGBiNEjViiZrWFcm
LZng+tjChJBD6F9+tVReKHofpUs77DD67fysPIaPNpIFdqaGoaOr9TYootEW
M8n9U+fQUcOyohkBuq5FGflDiGZnDixopaGTTRxtTcTo59QPYpp0yX3LBV+P
7CX5y4hm3peX/POUqfKXoe15xSPheegURv29qGtotXX3yfjr6NCJOd3km2hl
v9GA8BZ6uoFUIspHu8lp0ZICdFZaEEUqR/8Be14GZA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26237#1"]& ], 
       TagBox[{
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Opacity[0.5]], 
         LineBox[CompressedData["
1:eJxNzwssFAAYB/ALiUTLLSxU0hXn0eM8rpy7Q0fXySNH6W4lzZv0EN1F53S0
k1N6cV6Vu8wm570ystyQPJaYJrWurYfE0CIVem3t+3zbt2+/fdv332cVnngg
QotAIOz/2//mEC82MGz5Zibhf/U7DKbr6KN7f7vVVKxCqxWGq78Q0TXjNb3i
Tejs83M+CgaaXiShfxSgy0dK7eIn0aeeJbCNx0ngKj8fzs8XW8CXAnnlHq1b
wbxufZZ1kw34Tp/6ibfCFqzxNsnVuUsGP/JSVlkV2oENemi16Rn2YG5X4nfB
BQewYUCVdWOMIziCR6rwD9iG+ZPmVE/SdjAtiZy7KEevc9bVzTLbAe5yFZFb
b6BVokVmvt5OcJ4WW+Cehb7fLVdI5tHtfQ+mCoQU3Buf+cSfQ/cWUwbb4pzA
Y8faNF/H0PR47pvOo87g4w8lUvYgOpORESIPcAFrDDLXZnegXYjB33z2uIL5
fPXFxsfo5s9O2u1OVLBpQ5Lydh26Ut3kamGzC2xELE7ZW4Q+Ucp56WG2G7wi
keDwOgddIswo8zJwA8f16K/0FaP1jjiu15lFl9lt5EpP08Bn6aap1aNoVs6r
jrJId/B7c/cW1jt087RCKT1IB18lDKsKh9AlwWsqfTkMsGBiNEjViiZrWFcm
LZng+tjChJBD6F9+tVReKHofpUs77DD67fysPIaPNpIFdqaGoaOr9TYootEW
M8n9U+fQUcOyohkBuq5FGflDiGZnDixopaGTTRxtTcTo59QPYpp0yX3LBV+P
7CX5y4hm3peX/POUqfKXoe15xSPheegURv29qGtotXX3yfjr6NCJOd3km2hl
v9GA8BZ6uoFUIspHu8lp0ZICdFZaEEUqR/8Be14GZA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26237#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {10.010500473244898`, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(\[Eta]\\), \\(L\\)]\\)\"", TraditionalForm], 
       FormBox["\"Violation\"", TraditionalForm]}, 
     AxesOrigin -> {10.010500473244898`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SuperscriptBox[\\(k\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(f1\\), \\(\[Mu]\\)]\\)\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(k\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(f2\\), \\(\[Mu]\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.5`16.", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.5`16.", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.781441130615416*^9, 3.781441168068318*^9}, 
   3.781441235176032*^9, 3.781515360840331*^9, 3.8141017632443733`*^9, 
   3.814713768081916*^9, 3.825246951666862*^9, 3.8325891378417263`*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"179cc16d-fe78-4eda-911c-c794f5529ea9"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Opacity[0.5], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJxNzwssFAAYB/ALiUTLLSxU0hXn0eM8rpy7Q0fXySNH6W4lzZv0EN1F53S0
k1N6cV6Vu8wm570ystyQPJaYJrWurYfE0CIVem3t+3zbt2+/fdv332cVnngg
QotAIOz/2//mEC82MGz5Zibhf/U7DKbr6KN7f7vVVKxCqxWGq78Q0TXjNb3i
Tejs83M+CgaaXiShfxSgy0dK7eIn0aeeJbCNx0ngKj8fzs8XW8CXAnnlHq1b
wbxufZZ1kw34Tp/6ibfCFqzxNsnVuUsGP/JSVlkV2oENemi16Rn2YG5X4nfB
BQewYUCVdWOMIziCR6rwD9iG+ZPmVE/SdjAtiZy7KEevc9bVzTLbAe5yFZFb
b6BVokVmvt5OcJ4WW+Cehb7fLVdI5tHtfQ+mCoQU3Buf+cSfQ/cWUwbb4pzA
Y8faNF/H0PR47pvOo87g4w8lUvYgOpORESIPcAFrDDLXZnegXYjB33z2uIL5
fPXFxsfo5s9O2u1OVLBpQ5Lydh26Ut3kamGzC2xELE7ZW4Q+Ucp56WG2G7wi
keDwOgddIswo8zJwA8f16K/0FaP1jjiu15lFl9lt5EpP08Bn6aap1aNoVs6r
jrJId/B7c/cW1jt087RCKT1IB18lDKsKh9AlwWsqfTkMsGBiNEjViiZrWFcm
LZng+tjChJBD6F9+tVReKHofpUs77DD67fysPIaPNpIFdqaGoaOr9TYootEW
M8n9U+fQUcOyohkBuq5FGflDiGZnDixopaGTTRxtTcTo59QPYpp0yX3LBV+P
7CX5y4hm3peX/POUqfKXoe15xSPheegURv29qGtotXX3yfjr6NCJOd3km2hl
v9GA8BZ6uoFUIspHu8lp0ZICdFZaEEUqR/8Be14GZA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26317#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {10.010500473244898`, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(\[Eta]\\), \\(L\\)]\\)\"", TraditionalForm], 
       FormBox["\"Violation\"", TraditionalForm]}, 
     AxesOrigin -> {10.010500473244898`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SuperscriptBox[\\(f1\\), \
\\(\[Mu]\\)]\\)\\!\\(\\*SubscriptBox[\\(f2\\), \\(\[Mu]\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Opacity", "[", "0.5`16.", "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.781441130615416*^9, 3.781441168068318*^9}, 
   3.781441235176032*^9, 3.781515360840331*^9, 3.8141017632443733`*^9, 
   3.814713768081916*^9, 3.825246951666862*^9, 3.832589142654449*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"778bbdcc-a9c6-4127-83c5-de5207fa8e9c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
              RowBox[{"(", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cu", "[", "\[Eta]", "]"}], 
                  RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", " ", 
                    RowBox[{"Pu", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], 
                "]"}], ")"}], ".", 
              RowBox[{"(", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cl", "[", "\[Eta]", "]"}], 
                  RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", " ", 
                    RowBox[{"Pl", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], 
                "]"}], ")"}]}], ")"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ldown", "[", "\[Eta]in", "]"}], ".", 
              RowBox[{"u", "[", "\[Eta]in", "]"}]}], ")"}], ")"}]}], ")"}], 
         ")"}], "/.", "totBG"}], "/.", "param"}], ")"}], "-", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*FractionBox[\(\[Eta]\), \(L\)]\)\>\"", ",", 
       "\"\<Product\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<k.u\>\"", "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.769952329317161*^9, 3.769952360704836*^9}, {
   3.769952399134184*^9, 3.7699524780466623`*^9}, {3.769952533743435*^9, 
   3.769952560765983*^9}, {3.769952627171851*^9, 3.76995278407519*^9}, {
   3.769952823759981*^9, 3.7699529966445217`*^9}, {3.769953035994566*^9, 
   3.769953131426373*^9}, {3.7699532114761868`*^9, 3.76995323876186*^9}, {
   3.769953292440996*^9, 3.76995329753504*^9}, {3.7699536816836348`*^9, 
   3.769953735407889*^9}, 3.770059284952552*^9, {3.7701246526481247`*^9, 
   3.770124706873959*^9}, {3.770124795759115*^9, 3.770124800192954*^9}, {
   3.770225062492391*^9, 3.770225064149103*^9}, {3.7705157811437397`*^9, 
   3.770515826468977*^9}, 3.7705570309059877`*^9, 3.7706196851714077`*^9, {
   3.770619864221615*^9, 3.7706198680712147`*^9}, {3.7706379583434687`*^9, 
   3.770637977193406*^9}, {3.770731454807474*^9, 3.770731469945857*^9}, 
   3.771078587089451*^9, {3.774021808231607*^9, 3.77402186520833*^9}, {
   3.7742658994012947`*^9, 3.774265905612829*^9}, {3.774266031473456*^9, 
   3.774266054660359*^9}, {3.777567320487608*^9, 3.7775673415966377`*^9}, {
   3.778300991860221*^9, 3.778301045379613*^9}, {3.814101772851907*^9, 
   3.8141018822580338`*^9}, {3.832589153713018*^9, 3.83258922102676*^9}, 
   3.832589274103402*^9},
 CellLabel->
  "In[208]:=",ExpressionUUID->"ac003b57-7690-4b92-869b-e0701c969bc6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
KnfmNFrRgPsvYmTshx1mywzIR9nRgKNPz9z4xhVzZ7/cXONEgwWSNaeuNinj
1bc/tZ9sp8Gn5DO3Fo+a450nc43BHjS4tkj8UfEJfX5N4WJHKR8a2Gv/ZDX8
M8LnWSs+oz+NqPd1FifEAF+Hr4vxDaZBkVDctyWptjhsQ58vHk7kY/cu6QP6
mjilrnLkXhQN1D8+dFmxyxeF1sI69zgaRC643PJTwQkl5pkUL0qkge2CX91z
FFuU+2irVZpMA4nhQwOvvtggo8G9wTGNyD+XcVPt+HZULw6yF0ynwddjlPLL
+kaodyT2Y1EGDWj30wMj2regVcyuKOtsGkRcqjWTFlnDd3PMmjd7mAbFkgd1
XDqp/GD+yUOXj9HgZrq9g6GGJ+5Yf3Gt2SkaHJsrbj6UZoPpC4qvT+TR4Ps3
5zj3SUc8OnRP49x5wl+O7/XMGiN+fktNvf4lGgjqxv+V2O2Oe9e8ruRfpYHc
URPLNT0uGBgwUa58nQYbB/V2O7Yq8bfdEytm3KKBeZ6EsFS5NyovULi84TYN
FK63f1tYoo2rrHXyVt2jgV+epCbjuA5/Lt8pZ9lDGoSs97L6+kkPP4xGZSys
osGY6ZRqrpA0/5l2dupcDQ2ud204esjVBoszC+KIWgGvC+yLNo9cMaenKvRr
Iw1A38gz+SwX4yivfD600uA+bfy39FtHdIked+ntoEHannXz+nTUUadmiU37
S6Ie95RIBr33RMoyssmzXho87lidWOtuh0tcN22pGqCBzu/uY0p0F/x+3V7j
7nsaJOZua71dbIFdv8O5xZ9oMDlBenfmghc+MMikXh6mwQlhy/keJk54/vgl
ubxRot6yTq5rzbPDPR8eSeWME/UVd6CGpGKFAbyXohmTNOj/phUzIiCD5ilj
81NnaJByRv6nWY0lKrUs+hM7R4Nbg41T+ZvcUWbNhvEQQTpIjbveSQ90xb/+
WkPewnR4sfGf/Pd/2/D9XZu3ziJ0+MhiSmTvdcZ6odBuKzE6WF7IlZQgueAN
q32tRpJ0+GEos0H2DeCR/PynIE2H6FNW0mv+LMfY0YpHaqvpsHq0ubvhtCk6
a3feZsvRwUXlneYdqhdC5tci8gY6HKmb8DLNskNyz4KLshQ6xEVLF94wXcQX
oaw7vZxOB1vPF+ZXxpn8sSj1wyJsOgyVtLywqvbAF48t981TpEObxbTl33wD
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
GXM39R72QUXf5cHUBhJgCTsleDsLofRB6oIm4n2fSTbTwQdtf7pUvnlC+NdV
2BQ74Ywh2+VelrQQ/JzqfW+R5YEZQVVTka0keNIQNBpf4Y81NQ6LT7aRQGfR
Bc12HV8clJDRoHQQ+srOzl/lz0NxgzKD+S9IIHVYvdBxMhCVomyc+jpJcHQB
ebpB3wV1W+eH3uki9JtADvIsIuZBuTvpZ3pI0H/daoStwMYwC6t7J16RwG7z
AfEOKy7eSJToJvWRwGyP/PYhQ2If6S34KtlPgjsXXi36HeOPQwpH5V6/Jfyi
27Dzg60zzrWbvaV4kAQRD37nHH/EQuUbt4xOvydBS6n1uify3qg3YuZiNUz4
r7FVsY7ORmf1v2FaHwi+fvd5eed44hnPm9fmfiTBrrk9v+8+dcPs2wfu944R
zxO/adQmcbFh+kdP0QQJzhdeyWhcEogf6Bnfwz+TIEHpuFuoCxcXCIyWHp8k
8q4v935buhOq3Z/eunWaBD1esdExxH5uODvNROIbMQ+knrxVTmOju66+W893
4neZtUrhfD5Gnf4cUfiT0CO1cDJjrQvmNSVlhv0m+vHCz+uXb2RjuU7TtOgv
CarP4ozDDqL/V/7aG/CP6KeyT37HEn5sJ6lf9p9NBp8/uiaDc05h363jI35z
yLBF8rehtbgIRzdEMX0kyOC7Ijb1/iwOfrty76ynJBlk6q3LDJY5odiS8V63
+WSQtQtInf3LFxedW6vhLEUG98vI+vPaCdfM2R9ov5AMJN8qR68UNm4SBLae
XEQGU3eruPlaQqRMFShayZLBqW5fl1wSH8H9jffRJWSIyVZ8nCXuj8aDix6Z
LyPD4JwVjMYGN7Q8DksPrSBD6KK1R45J+qBTB8vRZBUZxB09E+SceehjdK3U
YDUZwqLNdzSvd8bAR22SemvJIFdylG00ysJz28QsddaRwc5yq9H7CG9MvEO6
tXM9UZ+2VyKt3wGvq9v/1v6PDJ9GP6oZmPGwKDPemL6RDPs/xV9VUwrGe6tr
U8kqZLg6+kWmPNMWG+KnJ7aokmFRnl43JdMfX0hthM3qZJgrmUbJ+s8bB0It
LmzSIMPu3l0ftwXwceJ3+IDSFjJonLy+9SY9CH/5lpLXa5Fh9nCE3/dHgTh3
bChsLZkMwhznSVtvYj51WNG5ikoGdQ+fH0N0Ea57pa+ynE6G+QcW9y38w8LN
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26706#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {10.010500473244898`, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(\[Eta]\\), \\(L\\)]\\)\"", TraditionalForm], 
       FormBox["\"Product\"", TraditionalForm]}, 
     AxesOrigin -> {10.010500473244898`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"k.u\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"]
          , LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.832589285186326*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"4441c29b-0a00-4482-98a1-6006f75b4183"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"gg", "[", "\[Eta]", "]"}], ".", 
            RowBox[{"VV", "[", "\[Eta]", "]"}], ".", 
            RowBox[{"VV", "[", "\[Eta]", "]"}]}], "-", "1"}], ")"}], ",", 
         RowBox[{"0", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"gg", "[", "\[Eta]", "]"}], ".", 
             RowBox[{"Pl", "[", "\[Eta]", "]"}], ".", 
             RowBox[{"Pl", "[", "\[Eta]", "]"}]}], "-", 
            SuperscriptBox[
             RowBox[{"Cl", "[", "\[Eta]", "]"}], "2"]}], ")"}]}]}], " ", 
        RowBox[{"(*", 
         RowBox[{"(", " ", 
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"gg", "[", "\[Eta]", "]"}], ".", 
             RowBox[{"Pl", "[", "\[Eta]", "]"}], ".", 
             RowBox[{"Pl", "[", "\[Eta]", "]"}]}], "-", 
            SuperscriptBox[
             RowBox[{"Cl", "[", "\[Eta]", "]"}], "2"]}], 
           SuperscriptBox[
            RowBox[{"Cl", "[", "\[Eta]", "]"}], "2"]], ")"}], " ", "*)"}], 
        "}"}], "/.", "totBG"}], "/.", "param"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", " ", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*FractionBox[\(\[Eta]\), \(L\)]\)\>\"", ",", "Large"}], 
        "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<violation\>\"", ",", "Large"}], "]"}]}], "}"}]}]}], 
   "]"}], " "}]], "Input",
 CellChangeTimes->{{3.770103455915457*^9, 3.7701034621963367`*^9}, 
   3.770103498009613*^9, {3.77010352875215*^9, 3.770103537422221*^9}, {
   3.77010358226573*^9, 3.7701036985436583`*^9}, 3.770103737175025*^9, {
   3.770103798059957*^9, 3.770103810391119*^9}, {3.770103841541194*^9, 
   3.770103850611845*^9}, {3.770103881689533*^9, 3.770103889468096*^9}, {
   3.770113754098781*^9, 3.770113754972283*^9}, {3.770113819345969*^9, 
   3.7701138279916153`*^9}, {3.774021245943061*^9, 3.774021247929639*^9}, 
   3.774265004993778*^9, {3.778322396364012*^9, 3.7783224401550417`*^9}, 
   3.814180680419609*^9},
 CellLabel->
  "In[223]:=",ExpressionUUID->"31284001-c35b-458c-ab5c-9408be7ebf74"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
4r//iPnqdP4PkMcp/g==
       "]]},
     Annotation[#, "Charting`Private`Tag$18034#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFz3ssFAAcB/CLZF4bajnFli63eeQYs+s8uuQkJnOrLD0005CVhJg8zlJb
LIorV6mTQynr5pEjY1Iuj91yjuPCeZ3D3Xmly7NdtbXf77f99ttn398/X7uo
BOYVPQKBEPJ3/93B2WdEw+GXRwn/Z6f70PEdZC7YI2t3wlYSOshYOLVmWAZ+
W+Z7RMNDx4koyoGRV+BZsiW9KrgCrJBJVwOdqsHS0JlFqrwWbJgkCXYSNYKb
b/feCee1gB0iMtpoie3g0r1m/PXpDrBePJVFye/E/7o5X31yFzjVunjFgN0D
biIO5+Z4isAHqFamzjXfwPaV19qbjcVg900b9dNz/eAzkd2FFkUScKL554pO
xQB4gZbtGugmBWekUD2jYobABtu+NU2CYXB5kV9p1YoMTE0p3u5jjIBdxFWS
7uJRzH0EhyJ6x8De2j1Ksu04uFoueMhwngBHZwvn5UK0jXAr/cn1SbCcTem2
NpkCvzDKC21pQJu2MCz8z0+Dc3/qCjm/0BuSiQATrgKc5tX+8aT3DPj1OOFq
ghQtcYgNq89Ugo22RdoO61nskxzRv9yBTkueiVddnsM+tWJ67xY6hK0I6eHN
g+k6rdVjugrsau6yL0uF7rv4NfzUIzU43T2SqXLWgO34tncrBtHiuu/JjkkL
YLfVdW6J2SK4QOajT/qA1p7IIaWHLYH9P3XRPE6j2TRz5uJZtMdhLivqAvqm
ZetYUAx6eXS9ZH8mWp14w7T1DZqmFpBS36HzonU0t/dox/CCuMp6dKx3jfBB
G1q5a451aQDtyaJwiEPoexu3+P0ytL3GQB4wjo4Wk7woKnRDUDxzXoPW/1IX
x1tClzce41hp0T8o9/niNbRfdZ8wfxNddJAoZ/xGTz6P1Op06D9D6kOa
       "]]},
     Annotation[#, "Charting`Private`Tag$18034#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     StyleBox[
     "\"\\!\\(\\*FractionBox[\\(\[Eta]\\), \\(L\\)]\\)\"", Large, 
      StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"violation\"", Large, StripOnInput -> False], 
     TraditionalForm]},
  AxesOrigin->{0.030120935556258378`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.030120935556258378`, 1.}, {-1.3994361225400098`*^-13, 
   1.0919198878411862`*^-10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7701036484392843`*^9, 3.7701037019363127`*^9}, 
   3.770103740974585*^9, 3.770103813440682*^9, 3.770103853220961*^9, {
   3.7701038843037033`*^9, 3.770103892565486*^9}, 3.770113759783647*^9, {
   3.7701138220550747`*^9, 3.770113833709071*^9}, 3.774021254244025*^9, 
   3.7742650129203663`*^9, 3.774657944527327*^9, 3.777037585633996*^9, 
   3.7775671591828012`*^9, 3.777645386665209*^9, 3.777858176606223*^9, 
   3.777907054174387*^9, 3.778302070470292*^9, 3.778313445174925*^9, {
   3.778322383360875*^9, 3.778322441802525*^9}, 3.7784128711747427`*^9, 
   3.77882412925525*^9, 3.778851874387014*^9, 3.78144126467599*^9, 
   3.781515378461748*^9, 3.8141067539016523`*^9, 3.814180684970707*^9, 
   3.814713782319222*^9, 3.825246990702283*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"bd898ec0-fb49-4544-965c-c08b030c919c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"A", "[", "\[Eta]in", "]"}], "2"], 
        RowBox[{"A", "[", "\[Eta]", "]"}]], "-", 
       RowBox[{"Cl", "[", "\[Eta]", "]"}]}], ")"}], "/.", "totBG"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", " ", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*FractionBox[\(\[Eta]\), \(L\)]\)\>\"", ",", "Large"}], 
        "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<en\>\"", ",", "Large"}], "]"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7701040530609913`*^9, 3.770104158561206*^9}, {
  3.774021269996051*^9, 3.774021273190206*^9}, {3.774265022947877*^9, 
  3.77426502937488*^9}, {3.777567519126905*^9, 3.777567521549418*^9}, {
  3.777858207139735*^9, 3.777858234400712*^9}, {3.777907069872987*^9, 
  3.77790707530162*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"fe2b928e-3921-4468-957c-614542c47aa4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
zZ5s8yZhvV9Zdck0gT15RinOniT8D+pcOsM=
       "]]},
     Annotation[#, "Charting`Private`Tag$41675#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     StyleBox[
     "\"\\!\\(\\*FractionBox[\\(\[Eta]\\), \\(L\\)]\\)\"", Large, 
      StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"en\"", Large, StripOnInput -> False], TraditionalForm]},
  AxesOrigin->{1., 1.0191092571997038`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 7.234}, {1.0191092571997038`, 53.3307838181798}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.770104161264674*^9, 3.770113844277216*^9, 3.774021274676064*^9, 
   3.774265032044003*^9, 3.777567508567924*^9, 3.7776454072242813`*^9, 
   3.777858189588471*^9, 3.7778582359270983`*^9, {3.7779070608461943`*^9, 
   3.777907076637822*^9}, 3.778322452429369*^9, 3.7784129197502737`*^9, 
   3.778824135785797*^9, 3.7788518812992496`*^9, 3.7814412722865458`*^9, 
   3.781515383751997*^9, 3.8147137852526207`*^9},
 CellLabel->
  "Out[354]=",ExpressionUUID->"b283bf00-c01d-4c53-b457-437c47945f4e"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Optical Tidal Matrix", "Section",
 CellChangeTimes->{
  3.771075196424478*^9, {3.774007083765881*^9, 3.774007092454192*^9}, {
   3.7740072585488243`*^9, 3.774007264763928*^9}, 3.828538195476211*^9},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"6b0f0702-84d4-4082-bb82-dda6dfe8171e"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Alpha]", ",", "\[Gamma]", ",", "\[ScriptCapitalK]", ",", "\[Gamma]xx", 
    ",", "\[Gamma]xy", ",", "\[Gamma]xz", ",", "\[Gamma]yy", ",", 
    "\[Gamma]yz", ",", "\[Gamma]zz", ",", "kxx", ",", "kxy", ",", "kxz", ",", 
    "kyy", ",", "kyz", ",", "kzz"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7740225830966377`*^9, 3.774022586253909*^9}, {
  3.8140862128241167`*^9, 3.814086302521467*^9}, {3.814086837709573*^9, 
  3.814086839131165*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"5aedd531-9dac-4114-9f46-a7f7b311d022"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Gamma]", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "}"}]}], "}"}]}], 
    ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalK]", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kxx", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"kxy", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kxy", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"kyy", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kxz", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"kyz", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"kzz", "[", "\[Eta]", "]"}]}], "}"}]}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8140862865419483`*^9, 3.8140862873515673`*^9}, {
  3.814086365838334*^9, 3.8140863701431713`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"c53d1a5e-5eed-4f4d-8078-e05a5c9e1a68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "OpticalTidalMatrix"}]], "Input",
 CellChangeTimes->{{3.8315362116544447`*^9, 3.8315362123237123`*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"d62f9e53-8364-4603-9463-a1d95344995b"],

Cell[BoxData["\<\"OpticalTidalMatrix[\\!\\(\\*SuperscriptBox[\\(X\\), \
\\(i\\)]\\),\\!\\(\\*SuperscriptBox[\\(V\\), \\(i\\)]\\), \
\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Phi]\\), \\(i\\)], \\((a)\\)]\\), \
\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Phi]\\), \\(0\\)], \\((a)\\)]\\), \
Q, \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(ij\\)]\\), \\!\\(\\*SubscriptBox[\
\\(K\\), \\(ij\\)]\\), \[Alpha], \\!\\(\\*SuperscriptBox[\\(\[Beta]\\), \
\\(i\\)]\\), time]. Returns the optical tidal matrix computed using only 3+1 \
quantities. The basic idea is to take the contraction of the full Riemann \
with the tangent vector and the frame vectors \
\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Phi]\\), \\(\[Mu]\\)], \
\\((a)\\)]\\) splitted in 3+1. This will give the different parts of the \
Riemann \\ndecomposition along \\!\\(\\*SuperscriptBox[\\(n\\), \
\\(\[Mu]\\)]\\) and \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(ij\\)]\\). Using \
the Riemann's symmetries and the expression for the non-vanishing projection \
(known as the Gauss, Codazzi e Ricci relations), we obtain the optical tidal \
matrix in the frame \\!\\(\\*SubscriptBox[SuperscriptBox[\\(R\\), \\((a)\\)], \
\\(kk \\((b)\\)\\)]\\)\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.832589375165738*^9},
 CellTags->
  "Info2123832596575-9208266",ExpressionUUID->"623a0c81-32fd-4cf7-abb5-\
e28883082cff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Timing", "[", 
   RowBox[{
    RowBox[{"OPT", "=", 
     RowBox[{"OpticalTidalMatrix", "[", 
      RowBox[{
      "X", ",", "V", ",", "frame", ",", "frame0", ",", "Q", ",", "\[Gamma]", 
       ",", "\[ScriptCapitalK]", ",", 
       RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], ",", "\[Beta]", ",", 
       "\[Eta]"}], "]"}]}], ";"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770638926677986*^9, 3.770638944437581*^9}, 
   3.7706403717132263`*^9, 3.771076937628511*^9, 3.774007241913397*^9, {
   3.774022729598443*^9, 3.7740227306686373`*^9}, {3.7817107354394493`*^9, 
   3.781710740947654*^9}, {3.781869937101899*^9, 3.7818699573963118`*^9}, {
   3.781869993347484*^9, 3.781869994518627*^9}, {3.813995537381422*^9, 
   3.813995551888028*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"b20d84d1-6a76-4fc7-9804-bddd8202f344"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"13.800735`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBeKNd58Vcem+cawz223KDaSPiF78D6KLNuoYRgDpzqBq
UxAdxFDBEQ2kLYQSeiYC6QqjZMeVQLpGO6EURN9d2rpuFZCexM7wglXvjaNf
1cNaESA9McT/pzaQjsp4M9ULSB+Yv3xHNZDmydzb2wykqy4ferIJSP9g+z7p
BpDWKHz2tVn/jaPTxKduy4C04rdPjap2bxw7TodcW+r8xnFa2rO/Z4D0EhUV
ubNAmiEoMETd5Y3jl8fsaoKebxzfzUypzAbS4m4bV3UEv3E8taN6rlTyG8d9
ndyt87LeOB76yqW5EEg/3NK/7RSQLgvUEzsNpD8EfZAC0cZv+G3/Zr9xVEmb
2paT/8bxMY/JrhdAOpjdb0dCwRvHhem23Atr3zj+2nq/ckrdG8dt/svKZgDp
f573Hk6of+O4Ifr9s9aGN46vfmfsEO1748i433OhBZAGAPaFtZM=
  "],
 CellLabel->
  "Out[112]=",ExpressionUUID->"bda5e3da-4b23-4c0c-aaa9-98100fddf58f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"OPT", "//", "MatrixForm"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.781795487792552*^9, 3.781795492143276*^9}, {
  3.781869975975293*^9, 3.781869999168789*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"7d5dcbe1-3f8d-482e-97d4-1d6dc60da5c5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f11", "[", "\[Eta]", "]"}], "-", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"fu1", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu1", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fu2", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fu1", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu2", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu1", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fu3", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fu1", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f12", "[", "\[Eta]", "]"}], "-", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"fu2", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu2", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fu3", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "-", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "-", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fu2", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "-", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "-", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f13", "[", "\[Eta]", "]"}], "-", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kzz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
        
        RowBox[{
         RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
            RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
            RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
              RowBox[{
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"f12", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"f13", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"f13", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"f11", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"f13", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"f12", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"f11", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"f11", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"f12", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"f11", "[", "\[Eta]", "]"}], "-", 
              RowBox[{
               RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], "2"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f11", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f12", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"f10", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f11", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f12", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"f12", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f11", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f13", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"f10", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f11", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f13", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"f13", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"f12", "[", "\[Eta]", "]"}], "-", 
             RowBox[{
              RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
              RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f12", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f13", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"f10", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "-", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "-", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f12", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f13", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"f13", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "-", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "-", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"f13", "[", "\[Eta]", "]"}], "-", 
             RowBox[{
              RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
              RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kzz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
        
        RowBox[{
         RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
            RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
            RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
              RowBox[{
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      RowBox[{
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f11", "[", "\[Eta]", "]"}], "-", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"f21", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f12", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f21", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f21", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f11", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f22", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f22", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f13", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f21", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f21", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f11", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f23", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f23", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f12", "[", "\[Eta]", "]"}], "-", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"f22", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f13", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f22", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f22", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "-", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "-", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f12", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f23", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f23", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "-", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "-", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f13", "[", "\[Eta]", "]"}], "-", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"f23", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kzz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
        
        RowBox[{
         RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
            RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
            RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
              RowBox[{
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
          ")"}]}]]}], "0"},
     {
      RowBox[{
       RowBox[{
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f21", "[", "\[Eta]", "]"}], "-", 
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"fu1", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu1", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fu2", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fu1", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu2", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu1", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fu3", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fu1", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f22", "[", "\[Eta]", "]"}], "-", 
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"fu2", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu2", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fu3", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "-", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "-", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fu2", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "-", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "-", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f23", "[", "\[Eta]", "]"}], "-", 
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kzz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
        
        RowBox[{
         RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
            RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
            RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
              RowBox[{
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      RowBox[{
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f11", "[", "\[Eta]", "]"}], "-", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"f21", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f12", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f21", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f21", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f11", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f22", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f22", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f13", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f21", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f21", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f11", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f23", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f23", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f12", "[", "\[Eta]", "]"}], "-", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"f22", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f13", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f22", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f22", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "-", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "-", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f12", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f23", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f23", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "-", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "-", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f13", "[", "\[Eta]", "]"}], "-", 
            RowBox[{
             RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"f23", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kzz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
        
        RowBox[{
         RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
            RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
            RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
              RowBox[{
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"f22", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"f23", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"f23", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"f21", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"f23", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"f22", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"f21", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"f21", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"f22", "[", "\[Eta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
          RowBox[{
           RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"f21", "[", "\[Eta]", "]"}], "-", 
              RowBox[{
               RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], "2"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxx", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f21", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f22", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"f20", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f21", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f22", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"f22", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f21", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f23", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"f20", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f21", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f23", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"f23", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kxz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"f22", "[", "\[Eta]", "]"}], "-", 
             RowBox[{
              RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
              RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyy", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f22", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f23", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"f20", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "-", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "-", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"f22", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"f23", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"f23", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "-", 
            
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "-", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kyz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"f23", "[", "\[Eta]", "]"}], "-", 
             RowBox[{
              RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
              RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"kzz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                   RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
               RowBox[{
                RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{"2", " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
            
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["kzz", "\[Prime]",
               MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
        
        RowBox[{
         RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
            RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
            RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
              RowBox[{
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
          ")"}]}]]}], "0"},
     {
      RowBox[{
      "1.0000000000000000000542101086242752217`14.512700366184692", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"fu2", "[", "\[Eta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"fu3", "[", "\[Eta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"fu3", "[", "\[Eta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"fu1", "[", "\[Eta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"fu3", "[", "\[Eta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"fu2", "[", "\[Eta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"fu1", "[", "\[Eta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"fu1", "[", "\[Eta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"fu2", "[", "\[Eta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"fu1", "[", "\[Eta]", "]"}], "-", 
                RowBox[{
                 RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                 RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], "2"]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{"2", " ", 
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxx", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxx", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kxx", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxx", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxx", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu1", "[", "\[Eta]", "]"}]}], " ", 
               RowBox[{"fu2", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v2", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"fu0", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu1", "[", "\[Eta]", "]"}]}], " ", 
               RowBox[{"fu2", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"fu2", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu1", "[", "\[Eta]", "]"}]}], " ", 
               RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v3", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"fu0", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu1", "[", "\[Eta]", "]"}]}], " ", 
               RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fu2", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kyy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{"2", " ", 
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kyy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu2", "[", "\[Eta]", "]"}]}], " ", 
               RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v3", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"fu0", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "-", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"fu2", "[", "\[Eta]", "]"}]}], " ", 
               RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "-", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fu3", "[", "\[Eta]", "]"}], "-", 
               RowBox[{
                RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"kzz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{"2", " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kzz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kzz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kzz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kzz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kzz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], 
             ")"}]}]}], 
          RowBox[{
           RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox[
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
              RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
              RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                RowBox[{
                 RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                 RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
            ")"}]}]]}], ")"}]}], 
      RowBox[{
      "1.0000000000000000000542101086242752217`14.512700366184692", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"f11", "[", "\[Eta]", "]"}], "-", 
              RowBox[{
               RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"fu1", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{"2", " ", 
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxx", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxx", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kxx", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxx", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxx", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"fu1", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"fu2", "[", "\[Eta]", "]"}], "-", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"fu1", "[", "\[Eta]", "]"}], "-", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
               RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"fu2", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"fu1", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"fu3", "[", "\[Eta]", "]"}], "-", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"fu1", "[", "\[Eta]", "]"}], "-", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
               RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"f11", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"f12", "[", "\[Eta]", "]"}], "-", 
              RowBox[{
               RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"fu2", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kyy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{"2", " ", 
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kyy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"f13", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"fu2", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"fu3", "[", "\[Eta]", "]"}], "-", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "-", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"fu2", "[", "\[Eta]", "]"}], "-", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
               RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"f12", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "-", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"f13", "[", "\[Eta]", "]"}], "-", 
              RowBox[{
               RowBox[{"f10", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"kzz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{"2", " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kzz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kzz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kzz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kzz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kzz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], 
             ")"}]}]}], 
          RowBox[{
           RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox[
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
              RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
              RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                RowBox[{
                 RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                 RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
            ")"}]}]]}], ")"}]}], 
      RowBox[{
      "1.0000000000000000000542101086242752217`14.512700366184692", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v1", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v2", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxy", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyy", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"kxz", "[", "\[Eta]", "]"}]}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu3", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu1", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"fu2", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], "-", 
            RowBox[{
             RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
             RowBox[{"kzz", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"v3", "[", "\[Eta]", "]"}], "2"]}], "+", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"f21", "[", "\[Eta]", "]"}], "-", 
              RowBox[{
               RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"fu1", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxx", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{"2", " ", 
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxx", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxx", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kxx", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxx", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxx", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"fu1", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"fu2", "[", "\[Eta]", "]"}], "-", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"fu1", "[", "\[Eta]", "]"}], "-", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
               RowBox[{"v2", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"fu2", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"fu1", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v1", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"fu3", "[", "\[Eta]", "]"}], "-", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"fu1", "[", "\[Eta]", "]"}], "-", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v1", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
               RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"f21", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"kyz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kxz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"f22", "[", "\[Eta]", "]"}], "-", 
              RowBox[{
               RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"fu2", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kyy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{"2", " ", 
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kyy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyy", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"f23", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"fu2", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v2", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"fu3", "[", "\[Eta]", "]"}], "-", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "-", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"fu2", "[", "\[Eta]", "]"}], "-", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v2", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
               RowBox[{"v3", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"f22", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "-", 
              RowBox[{
               RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kxy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               RowBox[{"kyy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kyz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"f23", "[", "\[Eta]", "]"}], "-", 
              RowBox[{
               RowBox[{"f20", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"fu3", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"fu0", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"v3", "[", "\[Eta]", "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"kzz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"kzz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                    RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                    RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}],
                 ")"}]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kxz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"kyz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], "-", 
                 RowBox[{
                  RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{"2", " ", 
               RowBox[{"kxz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"kyz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], " ", 
                  RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
                  RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kzz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kzz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{
                SuperscriptBox["kzz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kzz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
               RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}], " ", 
               RowBox[{
                SuperscriptBox["kzz", "\[Prime]",
                 MultilineFunction->None], "[", "\[Eta]", "]"}]}]}], 
             ")"}]}]}], 
          RowBox[{
           RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox[
               RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], "2"], " ", 
              RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], " ", 
              RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], " ", 
              RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], "2"], " ", 
              RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], "2"], "-", 
                RowBox[{
                 RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], " ", 
                 RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
            ")"}]}]]}], ")"}]}], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.781795493653884*^9, 3.781795984920967*^9, 3.781796178493526*^9, {
   3.781869977048037*^9, 3.781869999995757*^9}, 3.7818757833445797`*^9, 
   3.7819874312443523`*^9, 3.782035981206108*^9, 3.782036397628579*^9, 
   3.7820389027418756`*^9, 3.782225731741674*^9, 3.782303693168092*^9, {
   3.7823663677182817`*^9, 3.7823663869927607`*^9}, 3.782467016433465*^9, 
   3.7824830577344103`*^9, 3.7830784576859217`*^9, 3.793563314753612*^9, 
   3.7936437632374573`*^9, 3.793828514595668*^9, 3.8140868790036793`*^9},
 CellLabel->
  "Out[205]//MatrixForm=",ExpressionUUID->"77ae9348-2c72-483c-a552-\
9d1cb47d90a2"]
}, Open  ]],

Cell["\<\

The OPT\[CloseCurlyQuote]s components can have a complicated form and this \
cause the fail of finding a solution in NDSolve. 
There are some method which can be used to reduce the OPT\[CloseCurlyQuote]s \
components in a better shape and this depends case by case:
\t- If the components are \[OpenCurlyDoubleQuote]good functions\
\[CloseCurlyDoubleQuote], then we can use \
FunctionInterpolation[OPT[t][[i,j]], {t,ti,tf},InterpolationOrder\[Rule]n] as \
components
\t- alternatively, we need to discretize the function and then  interpolate. \
This case is very expensive and time consuming! to reduce the pain, we can \
use the symmetries of the Riemann tensor to reduce the number of fuctions \
that we need to interpolate. On top of that, we need to choose the correct \
step used to discretize the function.\
\>", "Text",
 CellChangeTimes->{{3.778998617780677*^9, 3.77899900610937*^9}, {
  3.778999054496546*^9, 
  3.778999212653433*^9}},ExpressionUUID->"78f28b44-437e-4e56-b338-\
77dde12877a0"],

Cell[CellGroupData[{

Cell["Use the interpolation to make a better OPT", "Subsubsection",
 CellChangeTimes->{{3.781515509119163*^9, 3.781515551864889*^9}, 
   3.8286781672661037`*^9},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"0d75f3a7-425b-4d69-b146-9e64f3ac093d"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Alpha]", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "i\[Alpha]", "]"}], ",", "prec"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]xx", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "i\[Gamma]xx", "]"}], ",", "prec"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]xy", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "i\[Gamma]xy", "]"}], ",", "prec"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]xz", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "i\[Gamma]xz", "]"}], ",", "prec"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]yy", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "i\[Gamma]yy", "]"}], ",", "prec"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]yz", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "i\[Gamma]yz", "]"}], ",", "prec"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]zz", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "i\[Gamma]zz", "]"}], ",", "prec"}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"kxx", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "ikxx", "]"}], ",", "prec"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kxy", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "ikxy", "]"}], ",", "prec"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kxz", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "ikxz", "]"}], ",", "prec"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kyy", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "ikyy", "]"}], ",", "prec"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kyz", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "ikyz", "]"}], ",", "prec"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kzz", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", "ikzz", "]"}], ",", "prec"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        FractionBox["\[ScriptH]0", "L"], ")"}], " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         FractionBox["\[CapitalOmega]m0", 
          RowBox[{"A", "[", "\[Eta]", "]"}]], "+", 
         RowBox[{"\[CapitalOmega]\[CapitalLambda]", " ", 
          SuperscriptBox[
           RowBox[{"A", "[", "\[Eta]", "]"}], "2"]}]}], "]"}]}], "/.", 
      "param"}], ";"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.782222755912951*^9, 3.782222757607671*^9}, {
   3.782247343500348*^9, 3.7822473647129517`*^9}, 3.814086174366803*^9, 
   3.814086822651321*^9, {3.8249777210947447`*^9, 3.824977731725597*^9}, {
   3.832589771363056*^9, 3.832589786096805*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"4dfa5a8a-a0fd-4bf9-a347-b03a0f3c0796"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Gamma]", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Gamma]xx", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Gamma]xy", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"\[Gamma]yy", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Gamma]xz", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"\[Gamma]yz", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"\[Gamma]zz", "[", "\[Eta]", "]"}]}], "}"}]}], "}"}]}], 
    ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalK]", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kxx", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"kxy", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"kxz", "[", "\[Eta]", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kxy", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"kyy", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"kyz", "[", "\[Eta]", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kxz", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"kyz", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"kzz", "[", "\[Eta]", "]"}]}], "}"}]}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8140864140450077`*^9, 3.814086414736123*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"ff032d0e-f2e2-4a27-8b37-e38aa6309a2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"step", "=", 
   FractionBox[
    RowBox[{"ETA0", "-", "\[Eta]in"}], "49999"]}]}]], "Input",
 CellChangeTimes->{{3.779020257045463*^9, 3.7790202728619347`*^9}, 
   3.7790203070223417`*^9, 3.779021171109808*^9, {3.779022588537451*^9, 
   3.779022602836512*^9}, 3.779027362070859*^9, {3.779090839983777*^9, 
   3.779090840884551*^9}, {3.7790908818943443`*^9, 3.779090892253777*^9}, 
   3.7790925762608137`*^9, 3.779100746580162*^9, {3.781442418018304*^9, 
   3.781442450743156*^9}, 3.781442624561908*^9, 3.781443360947054*^9, 
   3.781444883168211*^9, 3.781870231377492*^9, 3.781870411318419*^9, 
   3.781987080895647*^9, {3.7819880733294783`*^9, 3.7819880734568872`*^9}, 
   3.781988330742517*^9, {3.782225754496644*^9, 3.782225754683351*^9}, 
   3.7823065842772627`*^9, 3.782307419599036*^9, {3.782308351352171*^9, 
   3.782308362346889*^9}, {3.782308459090872*^9, 3.782308460450508*^9}, {
   3.7823663564481773`*^9, 3.782366357368329*^9}, 3.782393281428846*^9, 
   3.783022822665613*^9, {3.7938233048506203`*^9, 3.793823308810643*^9}, 
   3.79388376476991*^9, {3.793950174492435*^9, 3.793950178578347*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"93834f83-72f0-4b03-8a5e-8b9c621014f5"],

Cell[BoxData["0.00046378927578551571145109739916414358`15.729697754260954"], \
"Output",
 CellChangeTimes->{
  3.7790908928945827`*^9, {3.779092573163622*^9, 3.779092577541991*^9}, 
   3.7791007475538073`*^9, {3.781442419097046*^9, 3.78144245217028*^9}, 
   3.781442625247669*^9, {3.78144336195665*^9, 3.781443369014029*^9}, 
   3.781444884590281*^9, 3.781870232652788*^9, 3.7818704125662317`*^9, 
   3.7818758837933807`*^9, 3.7819870827267933`*^9, 3.781987461232448*^9, 
   3.78198807475142*^9, 3.781988386234798*^9, 3.781988432289937*^9, 
   3.782035990288872*^9, 3.7820389130824003`*^9, 3.782225756480752*^9, 
   3.7822556146159563`*^9, 3.7823037234036303`*^9, 3.782306586511838*^9, 
   3.782307421649045*^9, 3.782308462488146*^9, 3.782366398674753*^9, {
   3.7823932823870087`*^9, 3.782393291565152*^9}, 3.783022823879231*^9, 
   3.783078516843205*^9, 3.790679097868309*^9, 3.793563334210936*^9, 
   3.7936437783291397`*^9, 3.793828514713808*^9, 3.793883769254106*^9, 
   3.793950181251045*^9, 3.7964045476175833`*^9, 3.7965895152337513`*^9, 
   3.80189218932423*^9, 3.8100554092874327`*^9, 3.81400751797641*^9, 
   3.814086935025075*^9, 3.8147138526283207`*^9, 3.816514719056703*^9, 
   3.816769012868464*^9, 3.817014884806601*^9, 3.8239622108789577`*^9, 
   3.8244689198375673`*^9, 3.824977746106758*^9, 3.825479487349769*^9, 
   3.832589798390181*^9, 3.832661270222836*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"0b71027f-ccbc-417d-af9f-60c02e642084"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"AbsoluteTiming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Simple\[ScriptCapitalR]ll", "[", "t_", "]"}], "=", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"EBG", "[", "\[Eta]", "]"}], ")"}], "2"], " ", "OPT"}], "/.", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}], ",", "totBG", ",", 
         "param"}], "]"}]}], "]"}]}], ";"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.78198714749689*^9, 3.781987222556415*^9}, {
   3.781987258295704*^9, 3.7819873180585423`*^9}, {3.7819874833482313`*^9, 
   3.7819874895988207`*^9}, {3.782027092017741*^9, 3.782027127254176*^9}, {
   3.782027200206458*^9, 3.782027259859384*^9}, {3.782041454471396*^9, 
   3.782041499104089*^9}, {3.7820443081102533`*^9, 3.7820443086418056`*^9}, {
   3.782045209342174*^9, 3.782045209530501*^9}, {3.782227310633407*^9, 
   3.782227313465767*^9}, {3.7822886140351467`*^9, 3.782288626353015*^9}, 
   3.782303743278306*^9, {3.8326612767677727`*^9, 3.832661287994594*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"c01112bc-092a-43c6-91de-00396d72858b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"944.157804`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.83266224233454*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"f69798d2-72d2-44ec-898f-70a6add0572a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"AbsoluteTiming", "[", 
    RowBox[{
     RowBox[{"TMP", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Tau]", ",", 
          RowBox[{"Simple\[ScriptCapitalR]ll", "[", "\[Tau]", "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"\[Tau]", ",", "\[Eta]in", ",", "ETA0", ",", "step"}], 
         "}"}]}], "]"}]}], ";"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Timing", "[", 
     RowBox[{
      RowBox[{"TMP", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Eta]in", "+", 
            RowBox[{"\[Tau]", " ", "step"}]}], ",", 
           RowBox[{"Simple\[ScriptCapitalR]ll", "[", 
            RowBox[{"\[Eta]in", "+", 
             RowBox[{"\[Tau]", " ", "step"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", "0", ",", "49999"}], "}"}]}], "]"}]}], ";"}],
      "]"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7938838114082317`*^9, 3.793883834101218*^9}, 
   3.8100554299098253`*^9, 3.8140078725861797`*^9, {3.814718044688087*^9, 
   3.814718090673552*^9}, {3.83259092682058*^9, 3.832590983863896*^9}, {
   3.8326612930720778`*^9, 3.832661313805911*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"b33fd26d-6db1-44bb-af5d-306a4ba63472"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2017.583926`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7938921015412188`*^9, 3.793988932947948*^9, 3.796404562869647*^9, 
   3.7964391587206163`*^9, 3.796623619200509*^9, 3.810055427274719*^9, 
   3.8100899895219193`*^9, 3.814008779674539*^9, 3.814092648023467*^9, 
   3.814715819416704*^9, 3.814720025141057*^9, 3.816516835914145*^9, 
   3.8167795858125277`*^9, 3.8170216064456387`*^9, 3.8239657747344093`*^9, 
   3.824472271381637*^9, 3.824980352580141*^9, 3.825482343377379*^9, 
   3.8325909063244257`*^9, {3.8325909675366297`*^9, 3.8325909773229733`*^9}, 
   3.832592673537388*^9, 3.832667072345907*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"57cd049e-39c1-41a7-aa1b-14678ce24de0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Timing", "[", 
   RowBox[{
    RowBox[{"tmp00", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TMP", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TMP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "TMP", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp01", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TMP", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TMP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "TMP", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp02", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TMP", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TMP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "TMP", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp03", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TMP", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TMP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "TMP", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp10", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TMP", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TMP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "TMP", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp11", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TMP", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TMP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "TMP", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp12", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TMP", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TMP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "TMP", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp13", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TMP", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TMP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "TMP", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp20", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TMP", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TMP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "TMP", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp21", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TMP", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TMP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "TMP", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp22", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TMP", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TMP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "TMP", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp23", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TMP", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TMP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "TMP", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp30", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TMP", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TMP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "TMP", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp31", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TMP", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TMP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "TMP", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp32", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TMP", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TMP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "TMP", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp33", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TMP", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TMP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "TMP", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7820479189879913`*^9, 3.782047992727354*^9}, 
   3.782225838472497*^9},
 CellLabel->
  "In[131]:=",ExpressionUUID->"caf22be7-2a66-4359-9e38-4a2495f506ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.896419`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.782227164983567*^9, 3.7822570888584538`*^9, 
  3.782306678289521*^9, 3.7823077791200943`*^9, 3.782391835554842*^9, 
  3.783029444616838*^9, 3.783090647100218*^9, 3.790686088727687*^9, 
  3.793571670140222*^9, 3.793653273135943*^9, 3.793867581690312*^9, 
  3.810089993186058*^9, 3.814008821915236*^9, 3.814093492048233*^9, 
  3.814715822525324*^9, 3.814720028257646*^9, 3.814726810437153*^9, 
  3.816517155973*^9, 3.816779602186274*^9, 3.816779642450892*^9, 
  3.817031367730517*^9, 3.8239703863754253`*^9, 3.824472274816894*^9, 
  3.824980356136908*^9, 3.825482346339685*^9, 3.8325926984656076`*^9, 
  3.83266718217931*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"99db2dc1-bca1-4e5d-87af-9a78eded1bab"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
  "TMP", ">>", 
   "\"\<FLRWSolver_StoO_res49999_TMP_bisect_0p05.m\>\""}]}]], "Input",
 CellChangeTimes->{{3.793950202498982*^9, 3.793950210158848*^9}, {
   3.7964621964706182`*^9, 3.796462240966774*^9}, 3.8100554470722723`*^9, {
   3.810105579686331*^9, 3.8101055856333714`*^9}, {3.8140079148574963`*^9, 
   3.8140079178976707`*^9}, {3.8140345604436827`*^9, 3.814034565906179*^9}, {
   3.816779606842494*^9, 3.816779609116091*^9}, {3.8170313707316027`*^9, 
   3.817031387394755*^9}, 3.823970510192346*^9, {3.82497776658027*^9, 
   3.8249777719662733`*^9}, {3.832592705600101*^9, 3.832592712318346*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"d5040b98-aa94-4a04-988d-0c24ec9e49e2"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tmp", "[", "t_", "]"}], "=", 
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"tmp00", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], "[", 
          "t", "]"}], ",", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"tmp01", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], "[", 
          "t", "]"}], ",", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"tmp02", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], "[", 
          "t", "]"}], ",", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"tmp03", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], "[", 
          "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"tmp10", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], "[", 
          "t", "]"}], ",", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"tmp11", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], "[", 
          "t", "]"}], ",", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"tmp12", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], "[", 
          "t", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"tmp13", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], "[", 
          "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"tmp20", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], "[", 
          "t", "]"}], ",", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"tmp12", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], "[", 
          "t", "]"}], ",", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"tmp22", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], "[", 
          "t", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Interpolation", "[", " ", 
           RowBox[{"tmp23", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], "[", 
          "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"tmp30", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], "[", 
          "t", "]"}], ",", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"tmp31", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], "[", 
          "t", "]"}], ",", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"tmp32", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], "[", 
          "t", "]"}], ",", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"tmp33", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], "[", 
          "t", "]"}]}], "}"}]}], "}"}], ")"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7788535450448847`*^9, 3.7788535509682217`*^9}, {
   3.778853860201015*^9, 3.778853864877541*^9}, {3.778853896312121*^9, 
   3.778854026431569*^9}, {3.778996977395488*^9, 3.778996980996017*^9}, {
   3.778997022984796*^9, 3.778997072560423*^9}, {3.778997117407824*^9, 
   3.778997148223627*^9}, {3.778997212517869*^9, 3.778997233736594*^9}, {
   3.778997343434491*^9, 3.7789973485017242`*^9}, {3.779017245892981*^9, 
   3.779017354632969*^9}, {3.779017406704207*^9, 3.7790175832750597`*^9}, {
   3.77901767446426*^9, 3.7790176779287243`*^9}, {3.7790177171999273`*^9, 
   3.779017719095956*^9}, {3.779019630837179*^9, 3.779019780651245*^9}, {
   3.779020399748096*^9, 3.779020431297325*^9}, {3.779020671723557*^9, 
   3.7790207713595657`*^9}, {3.7790209980972633`*^9, 
   3.7790210035787354`*^9}, {3.779026435184678*^9, 3.77902644257542*^9}, {
   3.779026567468642*^9, 3.779026589325205*^9}, {3.7790267167356663`*^9, 
   3.7790267233505583`*^9}, {3.779026776486767*^9, 3.779026780273993*^9}, {
   3.7790282827558727`*^9, 3.779028295592979*^9}, 3.779028878270671*^9, {
   3.781871857208823*^9, 3.781871904483873*^9}, {3.7818719373139143`*^9, 
   3.7818719485254087`*^9}, {3.7818786003763847`*^9, 3.781878604832129*^9}, 
   3.782227282106379*^9, {3.782227520843659*^9, 3.78222756566055*^9}, {
   3.782306695957073*^9, 3.78230669686484*^9}, {3.782448172583221*^9, 
   3.782448292469105*^9}, 3.7830229164810743`*^9, {3.78302295485828*^9, 
   3.783022964323065*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"8d92da4b-7fcc-47a4-b01a-3c37f6bf9aed"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[ScriptCapitalR]ll", "[", "t_", "]"}], "=", 
    RowBox[{"tmp", "[", "t", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.778492375622633*^9, 3.778492396258313*^9}, {
   3.778851991548059*^9, 3.778851998094021*^9}, 3.77885267593399*^9, {
   3.779092537007221*^9, 3.7790925414345913`*^9}, {3.781515424456648*^9, 
   3.781515429838538*^9}, {3.781714427470418*^9, 3.781714428258203*^9}, 
   3.7817839720115967`*^9, {3.78187013469624*^9, 3.78187013486122*^9}, {
   3.793878415567747*^9, 3.79387841829311*^9}, {3.7938792267453136`*^9, 
   3.79387925983445*^9}, {3.793879607113392*^9, 3.793879607796578*^9}, {
   3.793879669175211*^9, 3.793879669574987*^9}, {3.793881712255848*^9, 
   3.793881849273407*^9}, {3.7938820686724463`*^9, 3.793882112421797*^9}, {
   3.793884468776618*^9, 3.793884486781637*^9}, {3.793896492894021*^9, 
   3.793896519794964*^9}, 3.810055490162108*^9, 3.8140089605927896`*^9},
 CellLabel->
  "In[133]:=",ExpressionUUID->"4ee9d478-fa05-4733-bf83-da646a48024d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[ScriptCapitalR]ll", "[", "t", "]"}], "/.", 
      RowBox[{"t", "\[Rule]", "\[Eta]in"}]}], ")"}], "//", "MatrixForm"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[ScriptCapitalR]ll", "[", "t", "]"}], "/.", 
      RowBox[{"t", "\[Rule]", "ETA0"}]}], ")"}], "//", "MatrixForm"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"A\[ScriptCapitalR]ab", "[", "t", "]"}], "/.", 
      RowBox[{"t", "\[Rule]", "0.9"}]}], ")"}], "//", 
    "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.78187190614647*^9, 3.781871925497789*^9}, 
   3.781878617280427*^9, {3.781988248792301*^9, 3.781988287559173*^9}, {
   3.782227231362749*^9, 3.78222723468915*^9}, {3.7822272901679983`*^9, 
   3.782227290925024*^9}, {3.782307828610805*^9, 3.7823078490032263`*^9}, 
   3.796623704690967*^9, {3.801892340107356*^9, 3.801892350704417*^9}, {
   3.814008987243959*^9, 3.8140089905349827`*^9}, {3.814714430894623*^9, 
   3.8147144341033077`*^9}, {3.825003529468121*^9, 3.8250035343761806`*^9}, {
   3.832593155400137*^9, 3.8325931625692883`*^9}, {3.832594877183543*^9, 
   3.8325948818809233`*^9}, {3.832609873691473*^9, 3.832609877902205*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"166d19e9-6fac-4c6b-a914-47e03b03d606"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0``11.628607870114406", 
      RowBox[{
      "-", "0.05987419761651514974034706272914804017`10.343227378466107"}], 
      "0``11.89269164007715", "0"},
     {"0``11.654184774394126", "0``11.89269164007715", 
      RowBox[{
      "-", "0.05987419761651514974001364797035935772`10.343235823367051"}], 
      "0"},
     {
      RowBox[{
      "-", "0.00019916219483814046182909138495241209`9.866159499639943"}], 
      "0``13.629519410047623", "0``13.655096314327343", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.779028299162986*^9, 3.779028423156304*^9, {3.779028865256156*^9, 
   3.779028879646172*^9}, 3.779028921651843*^9, {3.779029382812417*^9, 
   3.7790293982395687`*^9}, {3.779090953767717*^9, 3.77909096061238*^9}, {
   3.779099998520007*^9, 3.779100009375605*^9}, 3.779104981849753*^9, 
   3.781442662631117*^9, 3.781442694103651*^9, 3.781443688981365*^9, 
   3.781513251865901*^9, {3.7818718084969683`*^9, 3.7818718144428663`*^9}, 
   3.781871898343803*^9, {3.781871932878497*^9, 3.781871958543264*^9}, 
   3.781936705724957*^9, {3.781988232974031*^9, 3.7819882602596483`*^9}, 
   3.7819882973915243`*^9, 3.7822272112715597`*^9, 3.7822272439699907`*^9, 
   3.782227303266592*^9, 3.7822275963091507`*^9, 3.7822571541387453`*^9, {
   3.782306761516313*^9, 3.782306781135221*^9}, {3.782307813194284*^9, 
   3.782307856337803*^9}, 3.782391875039906*^9, 3.782448322062449*^9, 
   3.7830294505701447`*^9, 3.783090689132794*^9, 3.7906860939929523`*^9, 
   3.793571677832491*^9, 3.793653296863578*^9, 3.793867600726562*^9, 
   3.793868866566869*^9, 3.7938795635414257`*^9, 3.793892102609798*^9, {
   3.793896510718449*^9, 3.7938965230229063`*^9}, 3.796623712749784*^9, 
   3.7966239556731653`*^9, 3.79662596370984*^9, {3.8018923536849213`*^9, 
   3.8018923660897503`*^9}, 3.810089994622724*^9, {3.814008992297694*^9, 
   3.814009014184272*^9}, 3.814009057950121*^9, 3.8140935144820013`*^9, 
   3.8147158243024483`*^9, 3.814720030032785*^9, 3.8147268199436407`*^9, 
   3.8165171757693157`*^9, 3.816782740634655*^9, 3.817031472829982*^9, 
   3.823970521497607*^9, 3.8244752906903152`*^9, {3.8250035204609003`*^9, 
   3.825003535527038*^9}, 3.825484239448326*^9, 3.832593083975642*^9, 
   3.8325931665089197`*^9, 3.832594883559177*^9, 3.832609878694066*^9, 
   3.832667193423338*^9},
 CellLabel->
  "Out[134]//MatrixForm=",ExpressionUUID->"48bb610c-9aed-4f0a-b483-\
7ed731ea46e0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0``15.724983267732565", 
      RowBox[{
      "-", "3.7194784211300506777938533717663`10.274303276808086*^-7"}], 
      "0``17.03045869738916", "0"},
     {"0``15.750559908659604", "0``17.03045869738916", 
      RowBox[{
      "-", "3.7194784211300465133534048748276`10.274305094369687*^-7"}], 
      "0"},
     {
      RowBox[{
      "-", "1.4967610362836270370455422792741`9.797208708070153*^-7"}], 
      "0``17.72589480766578", "0``17.751471448592817", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.779028299162986*^9, 3.779028423156304*^9, {3.779028865256156*^9, 
   3.779028879646172*^9}, 3.779028921651843*^9, {3.779029382812417*^9, 
   3.7790293982395687`*^9}, {3.779090953767717*^9, 3.77909096061238*^9}, {
   3.779099998520007*^9, 3.779100009375605*^9}, 3.779104981849753*^9, 
   3.781442662631117*^9, 3.781442694103651*^9, 3.781443688981365*^9, 
   3.781513251865901*^9, {3.7818718084969683`*^9, 3.7818718144428663`*^9}, 
   3.781871898343803*^9, {3.781871932878497*^9, 3.781871958543264*^9}, 
   3.781936705724957*^9, {3.781988232974031*^9, 3.7819882602596483`*^9}, 
   3.7819882973915243`*^9, 3.7822272112715597`*^9, 3.7822272439699907`*^9, 
   3.782227303266592*^9, 3.7822275963091507`*^9, 3.7822571541387453`*^9, {
   3.782306761516313*^9, 3.782306781135221*^9}, {3.782307813194284*^9, 
   3.782307856337803*^9}, 3.782391875039906*^9, 3.782448322062449*^9, 
   3.7830294505701447`*^9, 3.783090689132794*^9, 3.7906860939929523`*^9, 
   3.793571677832491*^9, 3.793653296863578*^9, 3.793867600726562*^9, 
   3.793868866566869*^9, 3.7938795635414257`*^9, 3.793892102609798*^9, {
   3.793896510718449*^9, 3.7938965230229063`*^9}, 3.796623712749784*^9, 
   3.7966239556731653`*^9, 3.79662596370984*^9, {3.8018923536849213`*^9, 
   3.8018923660897503`*^9}, 3.810089994622724*^9, {3.814008992297694*^9, 
   3.814009014184272*^9}, 3.814009057950121*^9, 3.8140935144820013`*^9, 
   3.8147158243024483`*^9, 3.814720030032785*^9, 3.8147268199436407`*^9, 
   3.8165171757693157`*^9, 3.816782740634655*^9, 3.817031472829982*^9, 
   3.823970521497607*^9, 3.8244752906903152`*^9, {3.8250035204609003`*^9, 
   3.825003535527038*^9}, 3.825484239448326*^9, 3.832593083975642*^9, 
   3.8325931665089197`*^9, 3.832594883559177*^9, 3.832609878694066*^9, 
   3.832667193789117*^9},
 CellLabel->
  "Out[135]//MatrixForm=",ExpressionUUID->"80f2a074-4426-4bc3-81b6-\
143b4393cb06"],

Cell[BoxData[
 TagBox[
  RowBox[{"A\[ScriptCapitalR]ab", "[", "0.9`16.", "]"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.779028299162986*^9, 3.779028423156304*^9, {3.779028865256156*^9, 
   3.779028879646172*^9}, 3.779028921651843*^9, {3.779029382812417*^9, 
   3.7790293982395687`*^9}, {3.779090953767717*^9, 3.77909096061238*^9}, {
   3.779099998520007*^9, 3.779100009375605*^9}, 3.779104981849753*^9, 
   3.781442662631117*^9, 3.781442694103651*^9, 3.781443688981365*^9, 
   3.781513251865901*^9, {3.7818718084969683`*^9, 3.7818718144428663`*^9}, 
   3.781871898343803*^9, {3.781871932878497*^9, 3.781871958543264*^9}, 
   3.781936705724957*^9, {3.781988232974031*^9, 3.7819882602596483`*^9}, 
   3.7819882973915243`*^9, 3.7822272112715597`*^9, 3.7822272439699907`*^9, 
   3.782227303266592*^9, 3.7822275963091507`*^9, 3.7822571541387453`*^9, {
   3.782306761516313*^9, 3.782306781135221*^9}, {3.782307813194284*^9, 
   3.782307856337803*^9}, 3.782391875039906*^9, 3.782448322062449*^9, 
   3.7830294505701447`*^9, 3.783090689132794*^9, 3.7906860939929523`*^9, 
   3.793571677832491*^9, 3.793653296863578*^9, 3.793867600726562*^9, 
   3.793868866566869*^9, 3.7938795635414257`*^9, 3.793892102609798*^9, {
   3.793896510718449*^9, 3.7938965230229063`*^9}, 3.796623712749784*^9, 
   3.7966239556731653`*^9, 3.79662596370984*^9, {3.8018923536849213`*^9, 
   3.8018923660897503`*^9}, 3.810089994622724*^9, {3.814008992297694*^9, 
   3.814009014184272*^9}, 3.814009057950121*^9, 3.8140935144820013`*^9, 
   3.8147158243024483`*^9, 3.814720030032785*^9, 3.8147268199436407`*^9, 
   3.8165171757693157`*^9, 3.816782740634655*^9, 3.817031472829982*^9, 
   3.823970521497607*^9, 3.8244752906903152`*^9, {3.8250035204609003`*^9, 
   3.825003535527038*^9}, 3.825484239448326*^9, 3.832593083975642*^9, 
   3.8325931665089197`*^9, 3.832594883559177*^9, 3.832609878694066*^9, 
   3.832667193790799*^9},
 CellLabel->
  "Out[136]//MatrixForm=",ExpressionUUID->"dddf78c5-39fb-4366-b2f6-\
5ce8ccf258df"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"A\[ScriptCapitalR]ab", "[", "t_", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"lup", "[", "\[Eta]in", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"A", "[", "\[Eta]in", "]"}], "4"], 
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"A", "[", "t", "]"}], 
             RowBox[{
              RowBox[{"A", "''"}], "[", "t", "]"}]}], "-", 
            RowBox[{"2", 
             SuperscriptBox[
              RowBox[{
               RowBox[{"A", "'"}], "[", "t", "]"}], "2"]}]}], 
           SuperscriptBox[
            RowBox[{"A", "[", "t", "]"}], "6"]], ")"}]}], ",", "0", ",", " ", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"lup", "[", "\[Eta]in", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"A", "[", "\[Eta]in", "]"}], "4"], 
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"A", "[", "t", "]"}], 
             RowBox[{
              RowBox[{"A", "''"}], "[", "t", "]"}]}], "-", 
            RowBox[{"2", 
             SuperscriptBox[
              RowBox[{
               RowBox[{"A", "'"}], "[", "t", "]"}], "2"]}]}], 
           SuperscriptBox[
            RowBox[{"A", "[", "t", "]"}], "6"]], ")"}]}], ",", " ", "0"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           RowBox[{"lup", "[", "\[Eta]in", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], 
         RowBox[{"A", "[", "\[Eta]in", "]"}], 
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"A", "[", "t", "]"}], 
             RowBox[{
              RowBox[{"A", "''"}], "[", "t", "]"}]}], "-", 
            SuperscriptBox[
             RowBox[{
              RowBox[{"A", "'"}], "[", "t", "]"}], "2"]}], 
           SuperscriptBox[
            RowBox[{"A", "[", "t", "]"}], "4"]], ")"}]}], ",", "0", ",", "0", 
        ",", "0"}], "}"}]}], "}"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7824527775077143`*^9, 3.78245280219575*^9}, {
   3.782454653184257*^9, 3.7824547225775957`*^9}, {3.7824548755384283`*^9, 
   3.782454875996889*^9}, {3.782454985612957*^9, 3.782455107060614*^9}, 
   3.78280477374158*^9, {3.796623730501425*^9, 3.7966237358375597`*^9}, {
   3.7966239370943413`*^9, 3.796623951048265*^9}, {3.814009036485261*^9, 
   3.814009052890912*^9}, {3.823690699070814*^9, 
   3.823690709293153*^9}},ExpressionUUID->"2e04dc66-db9a-40f0-9cb2-\
2d265184ce24"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check OPT", "Subsubsection",
 CellChangeTimes->{{3.777730881749769*^9, 3.7777308970202827`*^9}, {
  3.778413097511088*^9, 3.778413097728544*^9}, {3.778417216439232*^9, 
  3.778417216936638*^9}},ExpressionUUID->"0b2a16fe-eb15-4f7b-83bf-\
9731a452fc24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"?", "Riemann"}]}]], "Input",
 CellChangeTimes->{{3.7777311047648983`*^9, 3.7777311068797197`*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"2709928c-3d3d-4ac8-a6f9-663733ca0ff7"],

Cell[BoxData["\<\"Riemann[g,chart,\[CapitalGamma]] returns the Riemann tensor \
for the metric g in coordinates 'chart' with Christoffel symbols \
\[CapitalGamma].\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.77773110812005*^9},
 CellTags->
  "Info3033777738308-2748660",ExpressionUUID->"2097cf84-6116-4446-86ef-\
794fdf71a7fc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Riem", "=", 
     RowBox[{"Riemann", "[", 
      RowBox[{"g4", ",", 
       RowBox[{"{", 
        RowBox[{"\[Eta]", ",", "x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"Christoffel", "[", 
        RowBox[{"g4", ",", 
         RowBox[{"{", 
          RowBox[{"\[Eta]", ",", "x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"OPTcord", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox["\[Sum]", 
          RowBox[{"alpha", "=", "1"}], "4"], 
         RowBox[{
          SubsuperscriptBox["\[Sum]", 
           RowBox[{"beta", "=", "1"}], "4"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Riem", "[", 
             RowBox[{"[", 
              RowBox[{"\[Mu]", ",", "alpha", ",", "beta", ",", "\[Nu]"}], 
              "]"}], "]"}], 
            RowBox[{
             RowBox[{"lup", "[", "\[Eta]", "]"}], "[", 
             RowBox[{"[", "alpha", "]"}], "]"}], 
            RowBox[{
             RowBox[{"lup", "[", "\[Eta]", "]"}], "[", 
             RowBox[{"[", "beta", "]"}], "]"}]}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Mu]", ",", "1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Nu]", ",", "1", ",", "4"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.777731083518442*^9, 3.777731186928114*^9}, {
  3.7777312195192137`*^9, 3.777731262301033*^9}, {3.777731317635541*^9, 
  3.777731506815249*^9}, {3.778413114308496*^9, 3.77841311464047*^9}},
 CellLabel->
  "In[315]:=",ExpressionUUID->"bc9d5bc9-b6eb-4cbb-821f-8b6669810268"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]0", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"F0", "[", "\[Eta]", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], 
    RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{
      RowBox[{"F", "[", "\[Eta]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]1", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"F0", "[", "\[Eta]", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], 
    RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{
      RowBox[{"F", "[", "\[Eta]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]2", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"F0", "[", "\[Eta]", "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], 
    RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{
      RowBox[{"F", "[", "\[Eta]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]3", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"F0", "[", "\[Eta]", "]"}], "[", 
     RowBox[{"[", "4", "]"}], "]"}], 
    RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{
      RowBox[{"F", "[", "\[Eta]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "4"}], "]"}], "]"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]0", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"EE0", "[", "\[Eta]", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], 
    RowBox[{"ndown", "[", "\[Eta]", "]"}]}], "+", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{
      RowBox[{"EE", "[", "\[Eta]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "All"}], "]"}], "]"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]1", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"EE0", "[", "\[Eta]", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], 
    RowBox[{"ndown", "[", "\[Eta]", "]"}]}], "+", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{
      RowBox[{"EE", "[", "\[Eta]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "All"}], "]"}], "]"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]2", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"EE0", "[", "\[Eta]", "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], 
    RowBox[{"ndown", "[", "\[Eta]", "]"}]}], "+", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{
      RowBox[{"EE", "[", "\[Eta]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "All"}], "]"}], "]"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]3", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"EE0", "[", "\[Eta]", "]"}], "[", 
     RowBox[{"[", "4", "]"}], "]"}], 
    RowBox[{"ndown", "[", "\[Eta]", "]"}]}], "+", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{
      RowBox[{"EE", "[", "\[Eta]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"4", ",", "All"}], "]"}], "]"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.777730900101886*^9, 3.777730928927637*^9}, {
  3.7777309896168613`*^9, 3.777731013640243*^9}, {3.777732388771327*^9, 
  3.7777324191469183`*^9}, {3.777732449168106*^9, 3.777732462722275*^9}, {
  3.777732531407103*^9, 3.7777326674976797`*^9}, {3.777732698942628*^9, 
  3.777732730053562*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"0da7df2a-2c21-40c4-88d3-70d73d3989e1"],

Cell[TextData[{
 "\nStarting from the Optical tidal matrix in the frame (calculated using the \
notebook), recover the optical tidal matrix in coordinates i.e: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox[
      SuperscriptBox["\[ScriptCapitalR]", 
       RowBox[{"(", "a", ")"}]], 
      RowBox[{"l", " ", "l", " ", 
       RowBox[{"(", "b", ")"}]}]], "\[Rule]", 
     SubscriptBox[
      SuperscriptBox["\[ScriptCapitalR]", "\[Rho]"], 
      RowBox[{"l", " ", "l", " ", "\[Sigma]"}]]}], "=", 
    RowBox[{
     SubscriptBox[
      SuperscriptBox["\[Phi]", "\[Rho]"], 
      RowBox[{"(", "a", ")"}]], 
     SubscriptBox[
      SuperscriptBox["\[ScriptCapitalR]", 
       RowBox[{"(", "a", ")"}]], 
      RowBox[{"l", " ", "l", " ", 
       RowBox[{"(", "b", ")"}]}]], 
     SubscriptBox[
      SuperscriptBox["\[Omega]", 
       RowBox[{"(", "b", ")"}]], "\[Sigma]"], " "}]}], TraditionalForm]],
  ExpressionUUID->"5129df84-07fd-432e-8299-bfe20a07d4fa"]
}], "Text",
 CellChangeTimes->{{3.7784168202765713`*^9, 
  3.778417068314145*^9}},ExpressionUUID->"d6a2d381-6278-43b4-9fac-\
a5cb05fb66f4"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RE", "[", "s_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"EBG", "[", "\[Eta]", "]"}], "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"INOPT", "[", 
             RowBox[{"[", 
              RowBox[{"a", ",", "1"}], "]"}], "]"}], 
            RowBox[{
             RowBox[{"\[Omega]0", "[", "\[Eta]", "]"}], "[", 
             RowBox[{"[", "\[Rho]", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"INOPT", "[", 
             RowBox[{"[", 
              RowBox[{"a", ",", "2"}], "]"}], "]"}], 
            RowBox[{
             RowBox[{"\[Omega]1", "[", "\[Eta]", "]"}], "[", 
             RowBox[{"[", "\[Rho]", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"INOPT", "[", 
             RowBox[{"[", 
              RowBox[{"a", ",", "3"}], "]"}], "]"}], 
            RowBox[{
             RowBox[{"\[Omega]2", "[", "\[Eta]", "]"}], "[", 
             RowBox[{"[", "\[Rho]", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"INOPT", "[", 
             RowBox[{"[", 
              RowBox[{"a", ",", "4"}], "]"}], "]"}], 
            RowBox[{
             RowBox[{"\[Omega]3", "[", "\[Eta]", "]"}], "[", 
             RowBox[{"[", "\[Rho]", "]"}], "]"}]}]}], ")"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
     RowBox[{"\[Eta]", "\[Rule]", "s"}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.778415941635895*^9, 3.77841595443087*^9}, {
   3.7784159934063473`*^9, 3.7784160323778257`*^9}, 3.778416076764063*^9, {
   3.778416137383655*^9, 3.778416260342115*^9}, {3.778416354992729*^9, 
   3.778416372416623*^9}, {3.781715337244735*^9, 3.7817153468036613`*^9}, {
   3.781715397079987*^9, 3.781715437175675*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"ad44acf4-dc8c-4b3c-9578-6b6c9cc0d4b3"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[ScriptCapitalR]cord", "[", "\[Eta]_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\[Phi]0", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", "\[Sigma]", "]"}], "]"}], 
         RowBox[{
          RowBox[{"RE", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\[Rho]"}], "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Phi]1", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", "\[Sigma]", "]"}], "]"}], 
         RowBox[{
          RowBox[{"RE", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "\[Rho]"}], "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Phi]2", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", "\[Sigma]", "]"}], "]"}], 
         RowBox[{
          RowBox[{"RE", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "\[Rho]"}], "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Phi]3", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", "\[Sigma]", "]"}], "]"}], 
         RowBox[{
          RowBox[{"RE", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "\[Rho]"}], "]"}], "]"}]}]}], ")"}], "]"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Rho]", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.778416287345096*^9, 3.778416333579352*^9}, {
  3.778416404811213*^9, 3.778416485403343*^9}, {3.781715445012342*^9, 
  3.781715460721531*^9}, {3.781715512668559*^9, 3.7817155229775267`*^9}, {
  3.781715572681199*^9, 3.7817155763649178`*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"432acb9c-656b-44d7-a8bc-efe29ff2e30c"],

Cell[TextData[{
 "\nStarting from the Optical tidal matrix in the frame (calculated using the \
notebook), recover the optical tidal matrix in coordinates i.e: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox[
      SuperscriptBox["\[ScriptCapitalR]", 
       RowBox[{"(", "a", ")"}]], 
      RowBox[{"l", " ", "l", " ", 
       RowBox[{"(", "b", ")"}]}]], "\[Rule]", 
     SubscriptBox[
      SuperscriptBox["\[ScriptCapitalR]", "\[Rho]"], 
      RowBox[{"l", " ", "l", " ", "\[Sigma]"}]]}], "=", 
    RowBox[{
     SubscriptBox[
      SuperscriptBox["\[Phi]", "\[Rho]"], 
      RowBox[{"(", "a", ")"}]], 
     SubscriptBox[
      SuperscriptBox["\[ScriptCapitalR]", 
       RowBox[{"(", "a", ")"}]], 
      RowBox[{"l", " ", "l", " ", 
       RowBox[{"(", "b", ")"}]}]], 
     SubscriptBox[
      SuperscriptBox["\[Omega]", 
       RowBox[{"(", "b", ")"}]], "\[Sigma]"], " "}]}], TraditionalForm]],
  ExpressionUUID->"5c8c5951-2ae5-4a8d-abdf-d1e8b616ce38"]
}], "Text",
 CellChangeTimes->{{3.7784168202765713`*^9, 
  3.778417068314145*^9}},ExpressionUUID->"b1eff9c0-62c8-41dc-bb1c-\
1dbf0d57b4d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[ScriptCapitalR]cord", "[", "0.015", "]"}], "/.", "totBG"}], "//",
      "N"}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"OPTcord", "/.", 
       RowBox[{"{", 
        RowBox[{"\[Eta]", "\[Rule]", "0.015"}], "}"}]}], "/.", "totBG"}], "//",
      "N"}], "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.778413226279686*^9, 3.778413234785932*^9}, {
  3.7784132936604424`*^9, 3.7784133540496073`*^9}, {3.7784142133280497`*^9, 
  3.778414332127696*^9}, {3.778414854253631*^9, 3.778414949998559*^9}, {
  3.778414980728752*^9, 3.778414982907523*^9}, {3.778415089915372*^9, 
  3.778415169729298*^9}, {3.778416072312935*^9, 3.778416114115024*^9}, {
  3.778416509282483*^9, 3.778416513458103*^9}, {3.778416582617578*^9, 
  3.778416584729763*^9}, {3.778418055871953*^9, 3.778418056985462*^9}, {
  3.778419223215625*^9, 3.778419234136787*^9}, {3.778419285655628*^9, 
  3.7784192893470783`*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"20f6d80e-166c-48e2-822e-f334a55c280f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"346.8305983731508`", 
      RowBox[{"-", "173.41529918653183`"}], 
      RowBox[{"-", "173.41529918653183`"}], 
      RowBox[{"-", "245.2462680325813`"}]},
     {"173.41529918653183`", 
      RowBox[{"-", "867.0764957238232`"}], "173.41529904416737`", 
      "245.24626798564043`"},
     {"173.41529918653183`", "173.41529904416737`", 
      RowBox[{"-", "867.0764955054788`"}], "245.24626783124754`"},
     {"245.2462680325813`", "245.24626798564043`", "245.24626783124754`", 
      RowBox[{"-", "693.6611965704836`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778413238216707*^9, {3.778413308981189*^9, 3.778413354861165*^9}, {
   3.778414221078809*^9, 3.7784142257789783`*^9}, {3.778414267383299*^9, 
   3.7784142810006237`*^9}, {3.778414322914062*^9, 3.778414333519451*^9}, 
   3.778414984176009*^9, {3.778415158362425*^9, 3.778415171346127*^9}, 
   3.7784161177423677`*^9, 3.778416572902335*^9, 3.778416642566471*^9, 
   3.778418133585721*^9, 3.7784192786183977`*^9, 3.778419355526458*^9, 
   3.7784920275372543`*^9, 3.7817153911048813`*^9, 3.781715475149845*^9, 
   3.7817175773343563`*^9},
 CellLabel->
  "Out[335]//MatrixForm=",ExpressionUUID->"162448d1-6cc6-444d-a269-\
abe47679b030"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"346.8305983588666`", 
      RowBox[{"-", "173.41529918834632`"}], 
      RowBox[{"-", "173.41529918834632`"}], 
      RowBox[{"-", "245.24626803514738`"}]},
     {"173.41529918834632`", 
      RowBox[{"-", "867.0764959328187`"}], "173.4152991794333`", 
      "245.24626802254247`"},
     {"173.41529918834632`", "173.4152991794333`", 
      RowBox[{"-", "867.0764959328187`"}], "245.24626802254247`"},
     {"245.24626803514738`", "245.24626802254247`", "245.24626802254247`", 
      RowBox[{"-", "693.6611967533853`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778413238216707*^9, {3.778413308981189*^9, 3.778413354861165*^9}, {
   3.778414221078809*^9, 3.7784142257789783`*^9}, {3.778414267383299*^9, 
   3.7784142810006237`*^9}, {3.778414322914062*^9, 3.778414333519451*^9}, 
   3.778414984176009*^9, {3.778415158362425*^9, 3.778415171346127*^9}, 
   3.7784161177423677`*^9, 3.778416572902335*^9, 3.778416642566471*^9, 
   3.778418133585721*^9, 3.7784192786183977`*^9, 3.778419355526458*^9, 
   3.7784920275372543`*^9, 3.7817153911048813`*^9, 3.781715475149845*^9, 
   3.781717577407318*^9},
 CellLabel->
  "Out[336]//MatrixForm=",ExpressionUUID->"cec745b1-7236-45b6-95bc-\
4ef64fe02191"]
}, Open  ]],

Cell["\<\

Starting from the Optical tidal matrix in coordinates, recover the optical \
tidal matrix in frame and compare with OPT from the notebook\
\>", "Text",
 CellChangeTimes->{{3.7784168202765713`*^9, 3.778417068314145*^9}, {
  3.778417153757081*^9, 
  3.778417198677334*^9}},ExpressionUUID->"bdd3cf7b-5026-4042-89a0-\
f85b0c4bb1e0"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"R00", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"OPTcord", "[", 
         RowBox[{"[", 
          RowBox[{"a", ",", "b"}], "]"}], "]"}], 
        RowBox[{
         RowBox[{"\[Omega]0", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", "a", "]"}], "]"}], 
        RowBox[{
         RowBox[{"\[Phi]0", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", "b", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R01", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]0", "[", "\[Eta]", "]"}], ".", "OPTcord", ".", 
      RowBox[{"\[Phi]1", "[", "\[Eta]", "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R02", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]0", "[", "\[Eta]", "]"}], ".", "OPTcord", ".", 
      RowBox[{"\[Phi]2", "[", "\[Eta]", "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R03", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]0", "[", "\[Eta]", "]"}], ".", "OPTcord", ".", 
      RowBox[{"\[Phi]3", "[", "\[Eta]", "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R10", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]1", "[", "\[Eta]", "]"}], ".", "OPTcord", ".", 
      RowBox[{"\[Phi]0", "[", "\[Eta]", "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R11", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"OPTcord", "[", 
         RowBox[{"[", 
          RowBox[{"a", ",", "b"}], "]"}], "]"}], 
        RowBox[{
         RowBox[{"\[Omega]1", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", "a", "]"}], "]"}], 
        RowBox[{
         RowBox[{"\[Phi]1", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", "b", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R12", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]1", "[", "\[Eta]", "]"}], ".", "OPTcord", ".", 
      RowBox[{"\[Phi]2", "[", "\[Eta]", "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R13", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]1", "[", "\[Eta]", "]"}], ".", "OPTcord", ".", 
      RowBox[{"\[Phi]3", "[", "\[Eta]", "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R20", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]2", "[", "\[Eta]", "]"}], ".", "OPTcord", ".", 
      RowBox[{"\[Phi]0", "[", "\[Eta]", "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R21", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]2", "[", "\[Eta]", "]"}], ".", "OPTcord", ".", 
      RowBox[{"\[Phi]1", "[", "\[Eta]", "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R22", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]2", "[", "\[Eta]", "]"}], ".", "OPTcord", ".", 
      RowBox[{"\[Phi]2", "[", "\[Eta]", "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R23", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]2", "[", "\[Eta]", "]"}], ".", "OPTcord", ".", 
      RowBox[{"\[Phi]3", "[", "\[Eta]", "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R30", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]3", "[", "\[Eta]", "]"}], ".", "OPTcord", ".", 
      RowBox[{"\[Phi]0", "[", "\[Eta]", "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R31", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]3", "[", "\[Eta]", "]"}], ".", "OPTcord", ".", 
      RowBox[{"\[Phi]1", "[", "\[Eta]", "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R32", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]3", "[", "\[Eta]", "]"}], ".", "OPTcord", ".", 
      RowBox[{"\[Phi]2", "[", "\[Eta]", "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R33", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]3", "[", "\[Eta]", "]"}], ".", "OPTcord", ".", 
      RowBox[{"\[Phi]3", "[", "\[Eta]", "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}], "}"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.777732802751403*^9, 3.777732893874555*^9}, {
  3.777732928025817*^9, 3.7777329499186773`*^9}, {3.777733029945745*^9, 
  3.777733047234447*^9}, {3.777733080125022*^9, 3.777733188796987*^9}, {
  3.778417796783434*^9, 3.7784178594473352`*^9}, {3.77841794868017*^9, 
  3.778417953999601*^9}},
 CellLabel->
  "In[337]:=",ExpressionUUID->"7b6118fa-2a34-4fd3-a6fa-c27b19b358ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"R00", "[", "\[Eta]", "]"}], "-", 
         RowBox[{
          RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}], 
      ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"R01", "[", "\[Eta]", "]"}], "-", 
         RowBox[{
          RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}], 
      ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"R02", "[", "\[Eta]", "]"}], "-", 
         RowBox[{
          RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}], 
      ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"R03", "[", "\[Eta]", "]"}], "-", 
         RowBox[{
          RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "4"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.77773353391253*^9, 3.777733534348321*^9}, {
  3.777733984317854*^9, 3.777734004772032*^9}, {3.7784175179205093`*^9, 
  3.778417554798792*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"3b84447f-c2d1-4f0f-a5da-d73a44b521d2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$47554#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0XtI0wEQB/ChmSTRTJ2MJB+TUCvmI0StmA9SymcpSqJZro0m1rZMRmpt
YLo1okTJpM2Zkg6m0yzIfCS4nMzyla/f1KVZy2fbJCkFa62CuDs4js8/x3Ff
HyYvlW1HIpGS/va/2Us2Wo3FZZGk/7UY/7LG7UA5eJdYEhzbhY7/dYSt3BaD
idXCYU6hFGzR7Jabrz0AOx+n1JYEPQTHmMIjyn3rwDeoPL6TQQXWvrWSWrae
g6NoXi6S5Q7w8GYNozT6NXhev9Uoqu8DZxckdY6k94PTZOMbgt8D4JJwrXtu
0SC4pYo5NBcwBN57mcerVo/gfYtT8vT978Essy7O/8o4mBtakOehnADfytpM
JWyT4LjT0lFG2jQ4gK/X6CoI/I/gZwl1RQ8mvyJapX6zYBdConxTOgee6EkJ
VukN4OYPo8faKfNgscHXKuQugIspQQxu+0cw5Z7qroNgEczbaZoO8/kEznAU
5uz0oSPtNe+8uZ9xP5NM8qQawZkXI663dKDpCaMDtcwv4IopRoan/RI4WdP9
TFCPJisaTCEJy+AL7iy2aB3dKqzUBNasgKVlskx++Cq439zWLSHQtli6za50
Daw7IRXto62DK71TjLfH0F0cb2dt0VfMM3nkpoxqAh/yXdJOadGc6pnEJ2wz
eE++XhFlbwGrA6MnYtvQhkpxjCFpA3zK7dz007No9SMPztU0tFDeft96Hk1r
mpvxYqHzOuk8VjF6e4GQm5XoS7kN9A4VetCYrxGq0bJV0gr5BZqxeTgkpBdd
7iAaFEyiLZIzWZEEOsPJzeI4i/Ynq1wfL6CHqZM5PWvoULni2x0Tuu4gpyxx
A82nWVXz39GzjbqTym10jF/VGHcH3azKZoZZ0a5H/X7YbOg/hR1ATQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$47554#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0XtI0wEQB/ChmSTRTJ2MJB+TUCvmI0StmA9SymcpSqJZro0m1rZMRmpt
YLo1okTJpM2Zkg6m0yzIfCS4nMzyla/f1KVZy2fbJCkFa62CuDs4js8/x3Ff
HyYvlW1HIpGS/va/2Us2Wo3FZZGk/7UY/7LG7UA5eJdYEhzbhY7/dYSt3BaD
idXCYU6hFGzR7Jabrz0AOx+n1JYEPQTHmMIjyn3rwDeoPL6TQQXWvrWSWrae
g6NoXi6S5Q7w8GYNozT6NXhev9Uoqu8DZxckdY6k94PTZOMbgt8D4JJwrXtu
0SC4pYo5NBcwBN57mcerVo/gfYtT8vT978Essy7O/8o4mBtakOehnADfytpM
JWyT4LjT0lFG2jQ4gK/X6CoI/I/gZwl1RQ8mvyJapX6zYBdConxTOgee6EkJ
VukN4OYPo8faKfNgscHXKuQugIspQQxu+0cw5Z7qroNgEczbaZoO8/kEznAU
5uz0oSPtNe+8uZ9xP5NM8qQawZkXI663dKDpCaMDtcwv4IopRoan/RI4WdP9
TFCPJisaTCEJy+AL7iy2aB3dKqzUBNasgKVlskx++Cq439zWLSHQtli6za50
Daw7IRXto62DK71TjLfH0F0cb2dt0VfMM3nkpoxqAh/yXdJOadGc6pnEJ2wz
eE++XhFlbwGrA6MnYtvQhkpxjCFpA3zK7dz007No9SMPztU0tFDeft96Hk1r
mpvxYqHzOuk8VjF6e4GQm5XoS7kN9A4VetCYrxGq0bJV0gr5BZqxeTgkpBdd
7iAaFEyiLZIzWZEEOsPJzeI4i/Ynq1wfL6CHqZM5PWvoULni2x0Tuu4gpyxx
A82nWVXz39GzjbqTym10jF/VGHcH3azKZoZZ0a5H/X7YbOg/hR1ATQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$47554#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt03lQU2cQAPCoRepVEAQjAgYYCxaMGOW9cJgNt4pCOYsFuQwYL0JBowiN
gEAaQBEsUohYVIyNoBxqHkdQoyAeGI2EhEsNxnDJISjQ0lIKoX/s7Pzm+3Z2
Z2fWJILhE7kQh8P5zcZcrtdSTitPpsLG93YrRmbKHRQ77+avMkiDq3XIPROP
RuFX6ezNrjVp0L8xSiLRINnv/McykjeZDjWEnHzEvsRB1ne0mX6UAwafWPV0
SYbDX2buUQW6GZBXVr65fjHV3jB0De5ZVQZMWmI+YosoYURr/RbL0Uy45x5c
6XTCRzgsWswdOnIWkiOvVNKd7YQ6021bjVdkw3lHeUkV2UJoQy4Ve5Zlw0KN
0BII+9aBIjdfEHjsHFjuvTeqSzQTpu5u3lpzOwdwgfHO4TcMHbTt9C4mWP8K
4zYKb+0xhb3TINk2zewS+KUpJW2eQfZxeEbM0k4+OCcQGJ+t+bUNT6dxpROV
sBqHJ/TP+NpSTdfpsHsEMGjO1T7D/FLTPJZPSXEUQsft5i7WH5U1b+QTJaeK
HwBpyldEOJhrGxy7u/qF/yNghGdVXeDtI/sWSkaY/zaCwfjzYokOxTaB3KAf
Hv8EjCh0f0fO6prS3IjnHRueAz6ALQ0plVYv38dg5JW9AHa4/zkdWSsap5By
/Ve+gmOJvkeNjO5W04aa3Cz2S0DxiZdCqrhEjraJPbCW9xqSSfvF9a5scmLQ
mI9spgXckj+GHXdhYm7bOWKKbyvoHzF/ZcTZjm2IkYuasmXQfUfpvbLOhqzN
/DsB3ysHWo7kPkY1IWthspsc83Z4fDo5hGtsWK0jY/MepnTAzuNOIunZ7ejr
Oq/NfHknXLkeXFhaO4bd6BJvqdB7Azahy8vvMkew9E6zaVb0W9jRl53VSx3A
TupZU6Ir3sHX4/2dxT8uQ/Uy+b9oMBXwEI0VrxN1oYypa62oSTdsy65wdg2s
QAM0WSFTD7rhmZHvBI/0UACLRM8I0e9hrEjj+ILAUSQ9QgtnjFdC8h0vbWJD
Obon1PanUoESpJax1QMXUzCih7jxYsQHeNzNb+V5nMOypZQA40UqWEO13i9R
HUY9RbXlzGIVvCr4U9nulIxoFV0eJHn0QFQX6/O7hgBsrz4t8tRAD/hR6Rn6
h/3Qm6wc0ab8Xpiyy7WWW/lgnNTCPTHkPqj0xLIG2IHYo6FbtWxZH5ynbcIL
f9uGzrgSZxam9EOcT8eQO9cObbLnnPrGdAAGQluIBCsLNIfgpfz55QA81Uwq
CBKvx2roBO2G+I8we3pX+S26aLTnixOF+MFZh+Ul6Zqi681UDdKGOeNwpEQa
Qs9r2/V75NCce2Wm32BLDsmLqIuGZ50U8KF2GVq2yfG1661h9X86L1jQmZPu
1Ll7ZM4V9xN7BS6rvFuvfq/2fZfIXqTswlr6YV+1cdQ4K4TFrTgzHThvt0Y/
xPRaR9s62ryzCP7IgWoig3Zyzkma8o8TyORbGXeIp353zzzRg4SFXyYK+GqH
pdN6BE+Uh0Sssvl6azEZKezD9WpVqa3MCZpAKGPfkUj1aitknj1ImsapJ8wW
tZ28ZSrBMHtHEMjmTDX54SAOC1i6alizfc4PlmyNwmEWWnzdgrfqeVwk7eNI
M74lpK5/vp/UwAWx4RaNnh6ctwLVRS4Z0VN3jahtQLw+Logxnea/+aL20w/n
VYL2kiYH3uT/+/ByQZzMc19GT6ldaZiqEtzgB0eg02pzlCyVQNfKfHxmRt1/
b2b8OPIfd5502Q==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$47554#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.777733686412931*^9, 3.7777358255984983`*^9, 
  3.7784174997836447`*^9, 3.778417566216839*^9, 3.778417913296556*^9, 
  3.778419559053873*^9},
 CellLabel->
  "Out[325]=",ExpressionUUID->"795b7e0c-c5c2-47ba-ae29-b58f89273b8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R10", "[", "\[Eta]", "]"}], "-", 
          RowBox[{
           RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}], 
       ","}], "*)"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R11", "[", "\[Eta]", "]"}], "-", 
        RowBox[{
         RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}], 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R12", "[", "\[Eta]", "]"}], "-", 
          RowBox[{
           RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "3"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R13", "[", "\[Eta]", "]"}], "-", 
          RowBox[{
           RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "4"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}]}],
       "*)"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0.02"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1000"}], ",", "1000"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.778418213794669*^9, 3.77841825615733*^9}, {
  3.7784183966783524`*^9, 3.778418417363385*^9}, {3.7784185473528233`*^9, 
  3.778418550768607*^9}, {3.778418729841406*^9, 3.7784187576152763`*^9}, {
  3.7784188821185293`*^9, 3.778418907653541*^9}},
 CellLabel->
  "In[326]:=",ExpressionUUID->"9fed26c3-2429-4ea7-b902-aa65d01820eb"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{{0.010000020204081634`, 0.5085113294699113}, {
       0.010051670845301638`, 1000.}}], LineBox[CompressedData["
1:eJwl2Hc4lm8bB/AnMlJJRskOFbITsm7JSpKVrIQKFUKZyUqUJDOySbKzifu6
n4fsZJNESbIrhGS+1/V7+6fjc3zP87zGsx22vW14nYpEIh3bSSKh/zc/mvcb
iEdhJPRP9ZnqosT3Sb5rUZhm4FedRZknqsHn22XelkVhK9ZvE4QZQ1QP3KoI
NKCOxg7d2D65mRGo+vpRase0YTRWFWn1e770nqp8dihnUGY0lr0SY2uq6q7a
9s7FgWMxGnPUapb79uy2quU3s4rS0zGYC3NktaGRnerPLTWqc1Ex2KUgt+Bh
wcuqflyiF76PxmC3+zqoq2T1VZkU2JLvScZifY3LJYLMsqqZl7amWAJisUeT
ZzauLwtTTrhPnizojMWcF6e8fhWoUxqiu4LUeeOwL77sLMwbFygmxW87h53j
MOUvfVxyN4wpUx8yudyJOKxv6zyfWeMlivfskxt7GZ9jkl3NTUwK5hSGXe6V
ry4/x6xu+V5Ym7agJB+1olYpfI5pqvUEav+xpIira+kPbDzHGjuntfVcLlPI
NpIpzrrxmF7VxuJfz8sUff9DM7TJ8ZhbZs7MSZ7LlLFkKrm02XjsUKB/nPld
S8rdmtkHcooJWEndq0HHxxYU2sG+rs6wBOxkBlWSy01zSsIy4HYYSsAWzY94
ZvObUYRZXt8kibzAHu2/W/Cu9hKlRjKyKsH7BTYabI8JqJhQdPW8d0q1vsCE
cw5yLxQbU1wen0u1cUjEKlgC0338DShUr2Vm/1UlYkWlJTz1rRcoMQ3c8tF0
SdgWTnYMTtalVG7/7q7PTsIE1Z2ytlw1Kdrcn3gsVpKwzirq7dN+ZyifFOpv
/dFIxp7zn5nreaVK2XCPpRH8kYwJth/y5XgpS4mIuW+Iy6Rg8hOrZ9TLpCi8
JXZpxsEpmFtcwP1drCKU4o4Lc3O9KRgnq8qssOFhitqc/KmHAqnYtsHC8B5N
ZsrFwI+end6pWM7uVgeK/gjZ4YBH5aGuVIxvXaZNrO0N2Sefdfnq0TQs/eMH
5T4BMvmpatmJIt80LPapf6DnSCM5vd/AbbUnDVOa0aQeWGkjm530Ms1gTcdG
hZ46e292kMf8mz2bsHTMnj3S7iJdN9mx7UD87M10jFHGl7mNv4e8zGpXyfQ8
HSM+NyzljPSQ/a5U9J+sS8eOb3HKBJ/pJdPn7Vw2n0vHXq3dmtu06iVHLRmx
BhzMwBxZPu3sP9VL5sBennilloGljh5yXBzuIWc9XjRsc8rArnOYOXno95DF
+k67/U7IwE7apow1JnWTK3miolgbMjCqr08OxTd2kbEbo8WnfmdgFddfxm68
7iS3lEl0WXFkYi6K3w7+SfhA/qzdwZjrkonFfBO1/MPdSr4Wwy3ekZSJFR0J
Zfpa30T+NeJ4/k9TJlb5VfDUl8sNZNKd3eHK3C8xhSZ12UxuMvkxMM+31X6J
7TGz3d1vVUNmps9rC73zEkswNLPdUVVBTjb8N12Q+hLbz6m6OCpWQj6Sor2r
p/UlZp3ucNcmNpdcNBkv9HfpJTawc1fWM4EMsrz0pBYXXxbG4TXZWHI0mlzn
K2t/+lwWxiSwQ2qmwY6s0/wwxM4jC1M1Hb661HOB3Lu//9WTjCzMJbOywTLV
mmxpKdhY3J6FFetJCXIzOJAnsu+M9//NwrpSjaLDdJ3Jtxfqqdf5X2HzOHP9
QeBKXlVkFuDTg9aPjnvTe4ccFGKjpuH9CtM/eM2c5q47eXd3sc3NrFeYYITz
787XHuRYTlLgs85XWIDSfISnlyeZ2+5CevnaK8xYypJzz29PcnZxKvnTkWxs
viqEXYXViyy5/vPLln42NvfnzrDZvCf5rYbyloBvNraT/laC+hNPslpkOPfZ
19lY9u9LEz5zHuT2oc9Kzj3Z2DX1oqdMnB7ki0eOW8ZsZmMqIk8MSrjdyV9u
+9yrFnqNpUdqPshcu0O2r2lNHDF6jd21OqzaWOVGnt95qIbK/zWWTKMo8sLc
lUydWLWq2/8aa/n0RnCzzZEcPk7L7kbKwZKx5ZthhTfIByRM5OKP52AOEYGK
lwPsyEINS+7fAnOw4aXpN3Gs1uRSRvU42sIcbONRzKXOJjOyollM+fHBHMz3
bwJth48RueHlWK8+dS5mOse59DlNh6z3S+qPu3gupiqm1Uetqkz+KB/InGSW
iwXomJD4MHay9YMuKUow9PeayvMzO8kzH3gNfryB9YE1sq8NDpLvsN92Yfic
i5HeYEPM5w6TrXUqUo2o8zBrFUff0eEjZF3f9fbk43kYJW0t3/C9MFm+6PT6
DyNouRuUgzxiZMHRUGEJ3zxs9JRT8LERCTITc8clr6w8TFK8q/QivRR58wxr
SF17HjYfxrF0d1SKPONuXs6wnIe5pO0N5LgnTR54nT5mxJ2PzQddCHIalibX
f5pgStHIx1xMWkfD6U+Qi3aLYRNO+Zipl8vHx9QnyInKd5wknudjj7bkrl/t
liaH3n6b5EXkY+nnfYKoPKTJdzO2W+sm8jGv4lEquWUpsnWvxirDvgIswerR
vgpDKbIuTfhRY7kCbJ695ghLtCRZXq7HOOVKAab/7yNzlJMEWfAG+4OJ0AKM
NLl1yvSRGHl/klWJRHEBVr00yjfpc5w8szWzt55UiKUbf12r2j5KHpCUUtot
XIg9Upr/dD9FkFxv63nT2KAQM+V8HMIiwk9OaqJunsgoxPR53KLTtTjIj1bP
Lku0FWKUDI3mZhk28l2RSAHvxULM2mpnoMYRJrK15YBBPUcRFlComBylRkvW
jeAK2H2mCCNxxnzhql8l5Cm2Rca3oFX+ylFl9RNHFnOGU2Kgh/DG2g8tBLPg
b4bJWmg3pfSv54eJrYsnT0mOF2GqouUcydo/iJnQe/bee95gpPOhrpTkWWLg
bV1cvcwbzDpn08w4dp6on6Vr2H35DRbgEn9O6d8i8YZbb9H4IbR7imIwaZlI
vhDLl1r4BlNtyvk+VrhCPAoc0pvsh/2MtwPP0awSd8v47ktuvcHSwyKMvjH8
I4rdyvqVWIoxa0q0z1z9PyL7yYCjzTHoKnnOLqk1IjnrH3WIInQP7csdlmtE
NOBKyrtQjAXo5zDv0FwjHg9g0p1XizGS9TU5w6V/RMBv29Y/nsUYpfJRqcet
f4QHfYg1e3gxVtwv/X7qzSrheDj3r1I67NeonDzQ9JewVWiPsCkvxuY96V5e
KV0hTI1+HwlpKcb4qsacGb2XCT1HZpA3XIylU8mWm/IsEQqpprN/dpZg6Sm/
5tnZFgjJqntB7IdKsFGlKNnfw7+Io12ph5TFYL4tJh3gOEuwUP3QCrlYgvFp
0HWLY+MEAyf917wbMP/H1iUbOUqQZI57dN4vwSgU+9NtZZ+IFV29vUtRJVgA
9mnnIY0eYu66axZ7dglGOp4bu0ppJMb8YhWVa6Cn618khxcQg/FVPTYd0CY1
DEdXI4mO4qEbIWPQr6sudh7PIRpaN0n5K9CkwTO+J8qIoxfUXG8ylGIBeVv6
sd5viUd9Id+EeaBNf6l27yMTM2bvDaalSjHVWznRSRt1hO7XffU5GtB7Azrb
uBqIomvG0g5mpRiFvDhdOdNIMM0kZB5zgv2rxoY/HZoJt9sjzJMBpRhpVTdS
ObGF6Fs6/CA7FvZLSF95E9hKyPrY/bmeA/OGPbXe/G1Ewnbe1SM47Dfia1rz
byPWgn/3jndC/9vjVZzSRlgyyKhnfYf97Ub/pGBOPPMqv/oX+vyJKGGhNoKP
DQgK7C7DAsz71C4ktxJBiTvixnigSxV7rn5tIb7zatJkSkM/bwwUXW4m1F+F
udtolmHW7qbHbn9rIrJFOn/wmZdhfKfvRPx63UjQF7OYjDqVYaO6xib2ug3E
zZOmTWmBZRhlVlj6aU890V6TLHslDubniAB6lTpCXPVbNk9uGUZamjs6JUgm
FnVuhqZ0QR8acnWhryaMu4r+Wo6XYaplmld+6JcTlRf/2HOtwnkX/blBSDHB
/llu8PPucowkdZ48a51L+Fj7aifxQq8GvG3IySCGf1CqzU9AU5mMZYzFECq3
aIQ5tKBJh1apZNyI9PmzLz6ZQ8ufyZ876URQeUTseuEMbXWgL5U6kLi23uNt
GgTd18ra9v0x0RRwcObgc+jTVbkpK5GEEK2l+cfccizgWuAezchYIuxJettz
APPYSPpmcjwxx/RDwaQb5ldyCuNCEgm958L5bD+gY3adzZpIJoo5nTn7V6Ev
rbsYj6USzBmlT2L3VGCq25vrMirpxN2jf9eN+KBlQ8a3P6cTA/mKjiwyFRip
MMBPRTeDkJcKGO7Rgh7IPdEYmUEkVjboRltUYJQfU+PB+RnEhuIuYHAb9vf6
jYWkZhBWdefF9j+AXuFonLqVQVA0o1O6nsP+D+SpQbYM4nD7wN7IPNg/9fFu
TGo6EWTA6XeBqMBG15lkr9CnE+MDV34x9lRgAbImiWz5qYSmZZZVxw/YXyDf
1seUQuR8m+p4+g/m9KN78zWTCAZ7Mez83kqMlLwdetbgBeE45/pmz+FKTJXp
9x7rk/GE5N+1Z0+0KzGKCQtvUnI0Ee2Lkc5ZwrxSQH5DKJJY2hHswuAC+zWc
omPUnhAmoS2jrQ8qsYCqpbUdrCFE9Z69Bo/joVecZjg7AwiOaIM67XxY/9Cp
UeifB+F78LkUPRl6Mad6IMaB+JI8lNHcAx0g1zTEokCo8vMyh05AOzCc2vH+
HBFE0721uA5d3S71z8GKaJgKmrXaXwX7nRzfVtsRtO0yg21HoaXbrl+670Sc
fTPRIKsETS+yMUhxJcKjE0oyDaBpbbaVrt4lOtx1Uhntocej97dlexBMZhth
Pr7QnI/UN8O9CEOlIs+JKOifci86D/oQsbzW1wxfV2EB/XPPc87eIwaomA0I
HObK85aGR3wJ9ol3yiI90F4JO34V+hLmre4izydh/d7It1MTvkRywbGDVJsw
993KXOz1Jb48+0TtzFyNBbQz4stevgTfnSfzn45B02Zz7h26R1w1UR7RUIZu
pp28v+5DZJ/63VpiWI2RQvwuFH/zJqa4Miq5HWAuy5gpFOVFiJCMXj6+D50T
Nh3I6Ek4ft8ZuRwNXS9k52DlThQ1Vfra5EBrldyOfXiHmM91uPEBwHkrWnxN
j1yJuy7taq+moL3Jf6McbxKVRn4S+7egj5iqK/ZdJ1ZlJbnus7zFAhaP+c8f
siEUOMbop4XeYqRjN6kEIkyJ+5sxy8Yq0Ec70uNjzhOUUY0xihG0+mv3hvET
BFXD3w7RG9ABhw7cKeAj1F/n1ib4QVtWGGToyBMhYRY5O2OhV6r5wjzOEC1O
e+NccqGlRfN5OHUIBgNy4DAB/VlG0IFen9CVcXXW7oPOYrAxyzcknh0UsCif
hvYPpw1ZMSZ61vq0+Lah292lkmdMCNYvITLhrDUYyVWguvWRKWFSJ394VRia
1nqqqMeMSMia2XsNg1aSkzVuMyeGQpPXOo2h29s2eN0sCK5bepOKN6GtvEXb
2y0IKz1S32t/6M8GSlYjFkS6VCmFJQ76dIUIz2sLYoz1WqF/HrRYDOmZmAUh
uMqWOEuGDuR4aX/XnLD73Bxyqb8GPj8WGcP9zYhcwvvOuxlo7rI1WiNTYi7j
uLUEqRYjYYoVO/+YEOIPR3ST2GqxgB8+oP3qRcLF4dkpuuPQkYK/Qa4RUXru
9NE7qtBgwfJsqwGxJP6H+etF2K976d7npxcIWeZX2zq3oP2sg2/onSNqBuk/
8T9HZmsdPKNGbNTWNEbkQyd8U9x3QJFQSXMsXaNAlzI9YPaSIgKCeNLsBqAl
M32Lt3mId9e7nvTMQpOehbeo/AK0Z4O8VHbgGEn1YXunHRuhLSpzPe8AdJa6
ZHs/PxG2b8LggCg03+eFRA0Ron0xXiXoNLS8n6GnvyRBOdsoHXARmqSZr33h
BFGevnjU7wa0m1z4gY6TRM5fXk7f+9Ara71f1+WIJL3z+3yioPUoJ9k+nSIi
XvlQe72CjlURDrdTJII2Xv91fwv91fqn9yslwsOof/bOB+iP3ps34pWJm3lU
o67foItb3ORUVAirHZJ9t5ehNUcAbbIKYWh6ucVpF8BIdpeKlctUCM03Yfgt
buh9n7v9Q1SIU7TVxTekoMtsql6xqxCil39k2WtA70ykqXVUJvjKmV9cN4PO
Cfu6/FCJYN2t+vSqE/Se9ZkKe0WC3tYp0CYQ+pzH6D02BWKjOtH9Shy0cNWL
6Wh5Yn5fy43LudDh/T/ffpclxu2WL1sAaEVwvG73SeIj4Dc064bueVf7g/EE
0caqr3npB/SzqUS+BUmCuHVf4eI/6OjWpZ+OYkT2oUF+g8ME/H5ysDV0WYBI
dKE5eOEkdMCz9fd0PMTTZund589Czz0PzF1kIQJ4rLd1LkOrLv/z8KIm7ro/
/aPtCk0Spl15XgIc2msmNR9Cd/kqdKosA0uBqc/qL6BH28W9du4k9H3YutQK
oRNCQ85W7CHOdKs1qNZBj7v+NjVhJmSFXKpV+qEPdOa6/mEjRPxTCpSmoW++
1s6XPETwDLSlK2xCt0izm+/lIpjFVmPl95Mxkk/wlSuPeQja4COPZY9Abzy9
GWnIR/wbMrwvcwqa2TOMkDxMzEkFuEqfh15M7Bv7epgYfVR4XdIG+gGr7ydr
fqLv65CZuDv0RUW94nJ+okWWXk/0MfQRMY/0YX4Cf3pSTSQFeqj+1d4hfuLN
uK2sUAk0y0Pcv4ifyFSMFDnaCB3ZT8m04CeeRwMewU/Qqe4PVb8fJsKmZ5j5
f0Iz6pw5rQUvni+cOpJEwUiiOpavHvMR1e8zNyMYoB143+8x4yWkPd/+fcoK
ffSuPv81bqKAv2shnAeaK/rj3lOcxNGOidknQtDDmSm3h9mJdO/NH2HS0F4R
gfRGBwiOI6yjj5WgWY3uvslgIRh9T/eF6kPnOHnNVuwmHh0z7Qgxh5a0SdFJ
oyGoep1bHl6DphewX6vbAr5+D+uDnaG73jGkMCyCFeFk/IEXdDpDCaW8D7j0
l1YGBUFHxpGndbvATEBrcWA49GjWfMS+H+Ca6GhewHNopWcXhcPmwcjHlSz/
dOhYjT/7DqwATWn1EeN86A3BYcFn66A4PIpNpBKdj4vnrwKJ4Jj8cn6bAh1k
eljiGhURfFo0pO89dPi0frXaTuJXkjeROwBN8rB7OkBDmK40rfh9g1bxn+Hg
oyPq9VkljOegI56oKPDRE6L5NvbCf6GpHnQcGaQnntO8SdvaUQffzzJt3c/u
IkjWGx9790CPLnCyeuwibtacZco9CO2nO6lovYvoY43X9uOHnlj96sSwi1C5
PR5gJAbNkDHr6ElP5LRKvRWSh3aLEZfPo4O/P/0XNtWgDTv30mTTEr5+7cK9
56GHmbQVnWmIicFDtjmm0EXe1c608PVxwj7x/lXoX32Rlm5URM3T8h5DZ+g1
HZ0fFSRCcGrHbiFv6CnxOda8TRChduHM5gPoAtmkntf/wGpy8r2eCGihVUFX
p2XQbiA355sF7WA0mftjCsgWBAsavoH2Eg5pZ/oK0ml7LI/VoPPum8N3tgAG
G964jQbk/EBb6mJwt9bxQ3cntKSzCqNtO/jCVkPzegi65Z/kreyPQNuFTsX3
B3Q4Db2A6CgobTP2MJhH9X7lg7zjgOtIZtHRdejkmFO1+ZMgxP/3xDpNPUYS
ZI3b/DAD5j8p8XYzQWuT0qIe/gTmMmGXsjmhr2mIcPf8Bg0RH5/dOwq9mBu7
8mkeiE8LtuhLQW84s6/ELYCEM26ko0rQv6yc2rgXAVUqWX5dE9qqQ9HDbRE4
ru5x7TKATg6+cipuEQwYmue+soTeoxcfGboIVAtff/Oxh+bx0xQ9twjy6JYP
6btBuwkkLXxbAKy2aoZH7kOzfrq7cH4B+OHPwtZCoc19LG5EzYOpAyP1ndHQ
lD5fr8u/gaGryHpWCnQC1f7v+j8B/t7zhE8OdLH4N1uqWXD0aOOtC2XQxmxM
AZ5TIDKAOUuQgI6dubhZAV8vJwtZO3vRPB7y8vmvoOPZmm7WF+jRo32F7weB
/IzWQ+9plHuL+O7tAZnqcUBvCZr9VRqh2gT2pI0tC2xDW3t8ZtEsBh7/JMT/
7XoH369DwqROJYNRo/t2HazQ6Xm0j8iVQKeoLfUlL7SpFqdJfj0op2f/6CUC
PZXNV23bCniuXt+ndxJ50lwqoBM8AqVaAqrQ1sbquf49YPEgKWBVB3rYx9Xt
Vx+wdDtf/eEidM523e3dH8FG0PHLLtbQ5VnCQR2DIDlmFxXLLejggyrn1IaA
UtZkdoU79CNrKVX7z2C4vPGcaQB0+7ePZ1SGgW/jy/m1MOg9Y0tJLcOAayAw
LiUOmm+QeZZuBOATVxRU06FZn1qIbQ0Di7/KX8fyoAc76gsLh8EaHVfwwwro
AqsbtIeGQSL7mpAQBdqy9wfrmc9AQXjwQ1sb9EZM4Zr4EBg6Venm1A8dUDLB
NjoIfHRiDzKNov34Oq6ZfQQcFm546Qz0UsXFu+n9oOaWvs3FZbT/Lmmfql5g
7itOu7qN6h9dkn7ZDdbC9+QnMjTA10uqTU9nB0hMmbmgzAbNfoSOi7UNKBS1
LH3lhZa8k3mDqxEMEdkvgkSg9a/4HBsnA5/OYJUjJ5G9RmyVKwDHqO33Zgza
2nNud3EWqJlXfXRTB5rUsDFUawHMdvCK7b0IzZfo+z0vCazu3+x+cwU6YLBv
8W8uSOD/7GF4E3p+JsY9uRTIn3jLuXwX2oH7+EpTFRg8E0+J90f7m+nX8cSB
l7H7dYUw1F/vzHORAtivGzGMxEIP1tyrEq8H1e5Sb/zToKdoRKua3wHTkH3G
/HnQydaSTbyNYPX5z9WGcugcKpVfsk0g4fX7FHsy6rddeLG3GchX56oxtEFH
dnQHZTWDwZbQyYI+6PTrfW83moHXp+vhF75CG6tcSjzYAthnzkgtTkMLzXE2
rDSD6rXDA7FL0KtEIl9yM7i0m3RPbht6TqGwe1czWOH8wju0qxF+vl7RkVNr
As9F8QZfVmh17fPTWo1AVjnxBi8vNNOTuELuBjBw3ouxXhj6WuMX/6Z64GFl
UnZNBno43vqBRh04cFvGlA6Dll9V3KVEBiaR8xm6xtCrkcM/eqrASnqH5m8r
6ISX8UbNZeB5ScFs1A1oa55q4uAbIFsfFilzF9qlvBroZ4P+HoeTH/1QLscT
GJMI7n7XHPJ+DE0RpEnWDQCsS4L+XLHQpC9X9Eq8QflOakFyKqpXuE59IQoY
s31rscmF5qugXPJMAktHyE47y6HnZS8HOWWCWNkU5tcEWi+krbw6G8ho3as6
24r2Lxn2/kUe6LtkZjnXC93iVHmMsQjcdZDb8ewLNOv9Hb8eFwNWb7ZsqWm0
vqfr174SUP74j07fH+jRUZA3WQqMErt/e2xBW34xvlJfBtqvOSXY0jfB+3VV
F7YsB+oSu07rMUPPD+rTNJUD8C9r+hQXtHyN3BtSBZBtUI0+chRaV+bDob0V
oChiWGG/JHTflN3VuXJwzMzr+8YpaEFLmo9p5SBdgDV86gx0127Fn0LlgP3X
G5m+89DJGgfOPC4DkdXnRsiXUH8BW3J9Kdj1YPJhvg2yxNvRgRIQdP6BePwt
tJ9IGfaWYrB2kPdjkDs0nwnWJ/kG3Bmr8Xf2h2biOikXWwDmCkyEzB9DC+Uc
PUjOBSOnI7ylUqBH16J0/F8Ckz0i/Nyvoatpy3bzpoOOgcY2+hK0P0ZXddkX
QCvD5s5SDbS1e9/FxShAubXJOdoATXl6J3Q9GMjLvmh43wEd8OOFFb89KCGd
dKoahCZxLEkccgAi77vYXo6hemP1Mw/9QGacIxExh3Lpk8O/QgGHNb29zwq0
pP7avR2RIEYka58dqRnO2+u2B48Be5axagMGaOuzQjqC8SCY/NlamRWacsFj
QS4RbD723CXMA02KCFFZTgYexiylrELQTMdCF8zTwC+eN+YkaVTP7HGkPB3Y
T+tQzylCe0XF+EZkgNGyifyPGqi/7O9TpUxg6hdk/O4CNPvTlgwiE3Rr82wW
mUEvkc5IsL0EOiw1rxKvonmf34+ovgT1Ixf1Qpygh7s2Hqq9BIo5CyuuntDF
sQ+FOF+CcrenaZcDoemdX/x6nwlElYW1zz6BTsiUFTXJBFl0jfMycdD6Rdil
2gzA3WP9gi8NrV+gSreZDp4nb5zekwstcxZf5UoHjPYJM39LoSN7NHYppIJQ
KZmY7zg0H/FZZSsJkDY6FTuboIXSgmvCXoCFSLqn2UNoPx+PMDLGgpsWL09G
j6P57Wv8jFFg7Aj25f4vaMkDdT+6nwCL+aGQG6voPuxMd2g9BH01HhIXqVrg
ed/ZT+++D3QfMg+q7mlBv2fr/K47g8YLRQGiB5ArJbuCpIAKh44wOx/ynVMB
DdagcvxHN7UIdECQJduGCxB/E+jz+wT0qAbXyb3e4LU3t8BnZWh9BR1GrQDA
p/72fZMWWu9yliz+ACQwXrxbagDdtTzq8D0E7P80z5VqAV3cwxdY8xiEvQxv
fHwdzbsb8gkLB1TOQs7ut6HTzfeccYsA9+QbDth4Q1e/UgsSigTjJc83+YOh
c24NvtyIBLrHb4yPR0C7RJ/zS4sCFVmK77NfQK9e3ue0H/744WEsdciCNh3K
ZDCKBqHxowkib1rQ3wO4Ja9Hg3mmMv+5ty3o8//hknY0MA17aFfUAC001JO5
HQXqqE3Pu3RCs3/7VRsWBUTui8hID6E82n5lNhJEr2xwLI1DD2b6nTgSCdZv
d+6o/A0dGT9E5RoBrk1nTHmuofPcpzmlHw4+2N7tPEXTCve30NI69xjIDmtW
ru+DlseaiHOhgK5z9oH/EWj6gDFHu0Dgok3cPC0Jzaf2b6+FLxisizSgVoRW
1XsQm+QOTitelW/UgLbWcB886QTyyk/yhupDB+xaq4+/DFjE6WnPWkCT+Kbo
Gr/jvq+H5hjsUN64u/mEERjnK+xtd0Hzr8f7FtqC84n+NRH30PxuhXX+W6CS
xTBDPwTNp5YL93IFPE8FHzFHQbvIk7bp3EEo7V/nviTo4qS1LCUvMO/fevF5
NlqP+c02yz1g9i9JybQEmuJ6Tir8Pqh3cxbgwJHLlTZe+gOROVWG4SboKWM6
68IAEHOdZSGlG5pJk0HGNBBsfPnx8cowuo+UgPKeQHDNtJo4PIn8QdyaOwh8
6A579X0BWmggeVE+CMieuxz+agPaS+KfzdEgkNYgcceerg3O26f0dSIQ0KtQ
mQszQ7PbCHfdg/db1ac6ywUtVG3RPhEAPkm+PlZ4DLrlmnSKcABQy/NmvC0N
bY2n3Qn3A3kCusuSytAuKj9C7vsClhSe4UUtaNKT2F3HfYDvgYX6ckO0XkXW
1xee4Mezd7kel1G/032ZzrtAb9fzSHkHVG+b79nlCng3FKzw+9CqNX8jk+zA
I/e9Gn6PoCm6nmmXroD5X1+Pq8YgS4gZ0hsAM4dSZqpU1N+3sMEhAOq/Bf97
l4M8e7YqQhUct7g0+rAMzcvPBmkGILZPuFmLgA7wjP5kbg42zm8U7mqFTg97
ZC5nA643d8S+74Uu5lT1nL4GOlQz7j39guapVKuoOgDZmju2F6ahR105vsjf
AmknNM/uX0LnOxKh1O0E6AvZJXu3oL2Kx+eoXYDr0dkDcbvew9eDTfD4Txcw
lAY2TVihrR1CbbNdgdqhyHF2XmiX/X2PxNxAfrTt+yFh6OLrtysfuIG5xsWK
Hyeg2UuvhuW4AfF/QenzytCUiAsbL92AiyjLk3Ut6NUl7Z8ebqD0ykt3WkNo
SQPNm/xuYCn6hPV+S+gA57vFr13ByaZ3Olx20PKXgnnpXeHvEaOTx1ygSTRR
chouoFp0nFfaB+2nTFu9zhmsXbnLoByM5mUEmVc7AsWYnctaEdCquOeDOzeB
b1PsV8ME6Egr0dYVe0D8E2y7nInmJbb5aV4HJLGKcocCtN9tv+P2tuC0tUba
nUq0H0bXHbVWoKHp+t3Hbeg+gt5NAgNAu7ZsFduHcuXffd0aQEss5GzaFzTv
V+YndQnwyPqATN4UstXxg2mHQVtMNk/FIqrPVGTLUwR7mmV3UTZQPqsm+FYT
nF9r+tNG2w7tTxfHcAFEiF360s8ErfpxPdPaCHRZT7aMckBTmp8JzJoA5ljP
sllB6HSH0wOHzYFRM13qijiq36g2proMYtfiH+04BR1wNacr7AoYEBO6s+cM
dFe5xL9ha8BuU3354HnoYlX/G802wCxWW5v/EjQTPhkabAsSmwelxWyQFfis
Wa+C4TUHbvlb0C4CruKeVwGP+D+6M+7QoyGPbAqvgis2jxfP+6P9BN3OrLoK
0mMPjZg+hraOnGl9fhWMNec2X42Bnu9R+3TuKhBcP1XqnALNJxC//dEWXBdv
S/Z+jea970lWsgXZNuahwSVo/60fT96zAVOxM67PatF+T552i7MGIi0+lomN
6L4eDmpwXAG31hm0XnWi+ty7fi2WoEA8Sar4E5r3dqHylDn4ZXOcq/Y7six2
0e0SkIyrpW36ic4Tf57W0xi4tpxb6PqLcjuDEl0DsCTu2DSx+wOcN36Aalsd
yNpuFC+wQatGXf2Wogg848KTNnhR7m3HWiwMqlu4QuhEoEkUuU+H/+Fr6wUu
zDIoF6QxGjoGlCSULbhVUF49Jv/2JLhv+0FDSBuZxTh8VgUQcZclTxhCj/7p
PQ/OAFLrTw4VS5Tf1zz6RguobdynOWsHTUlLm9Y6Bx5IMM4buaD8dsPbYD3Q
YJs6ZOWD8oaD6SX6gPa5eOONYDQvvfDHvAHQbiXe3I2ALuaNfrFtCB5v6CX6
J6D6fHabESPQJvE1OCwT1dM+4w4zBnuu3r4dVwDNF1m2SnMRrJ8s4dakQLtM
G8c4XgQz9H/er/Si/gkZWp6LwGaRRaBzBDpSXV+rwhgMfpbxeT0Jrc9bGsJv
DPQbL3b7L6D+tjgZeyPQXOQhZLqO6j0Y5oMNgUpCvL8kTQd8vpTu8r1vACoD
qwfo90FTOH1qDfWB2K1PYt/YUf7yzu29eiDLeC34LT9y1e7TcucAlwrncJQo
tCrPvdBj2iDmmNKJm7Id6Pv5Zebv6iBo7f43Dh1oUkDKdLoiWPueKv/HCNW7
zahxyADXD+Rn7y9DB2SYPMsTAlOVoxMv7VH9sR0fPfYD6/QdKr6uyGttK+I0
YPAxf5zxPVTPdnLLlg9cuHNmTvQhyllshEZFgIrmw8SRBDR/8nPOvCyolMhe
qMhE1r1RKawIxA41a0cUIBPUGdQYyKKaSrOrRA7+UqJ8GnDN0f9VoUCn0983
bFYDMf3CegfboF3UFzq41QEDWefV717o0YETgaoaICjn1kbzCPS8K+MOCU3w
LyrcKH0SWrLyg+S0JnC5V5jntYDq5YxlbmuBqWsdOwzW0f0OSF6r0wJX9H6b
CtN0wtf7z1zdUS0wIMdUvGMftH5D2tt2LaB3WIpuiB1a1bO9JFQLNDIYWpXy
Q7vE9TswawGlJbeKMNFO9H3TS9lZE5SPxOy5KgtNefP6XbIGEG0uv6qoivq3
jzWkqYOXxf01LDool/si5n0GcCSu7J8zQuuLmbMcVwPRDw7eaLgMXUyqK61S
BQxO8pRke2i+4N5FNRUQaGJ20N0VrbdzdLpfAbgIJzUeeYjm7UovuXACTDHj
XFsRKL8fdChYHFzZGL4zkABN6vYoYjsKBn5sthVlovy4VnwdB9Dr5OEPLUB5
JDNP2w7QWI15X6lEvqkrmriGK2Vad8lRUD3naq48Cyh/EniMqQ3lJNY1Ll5w
3D3Tb6oXnc+py0LgCMi0etdPGUH+dPruRRHAoT0u+mIS7e/hLhKfBIiSogl2
XUC51RFHshSg5zz6+ew6yi8kK1adAKpBAoeiqLrgevsL9nmcBBsrZer36aBH
ZRxH1mRB9S11lxt7oK3bfn1Rlwd3RvuSLu6HJnFLRRudAtkFARMFB6ApV2O3
TiqAIS9RqZ1cqL/nbWSPAmDUGLxncRjVs+9vhc9Htf3BTaVHoVX//PVSUgQe
IxL7GURRfzXo2a0I8nI/W9hIQafLhV1/oQC+uIdmV8uievZcuslTgFntxMI+
JWi+acb+FXmgyfhV0f40ml/sqfReDvgMhYUQmmj9L4X/7GRBUbZsN5suchs3
zQcZ8M1tjNPJAJ1X53IM6QRgxSLsGkzQ/FuGPDRSQHu3QgmnJZon8BTgYqD4
ZZRmmx2y9q52ZUEwfls56rAjclDjCwUewK40/dnLFc3bIOQiWYAufdzRLg+U
b1um8ewA/n2qrsd8kVfrxmO+4qXpc7V+gajeMgdbpgYTjgm0AyEol078Fbof
6NHMJwVHoXy7nf4wLwjqTpr4/Bzdf4hKUgQ/qEzRkjqRjOpPxv9VOwJmbvy5
F5aB7kN+F3P+McAtm9b0LRtZ9dxMgzDQpzq3/1QBqt+qoXt2HAR3rFhElqDz
Gog70IuB6sTM7MlKVH9aO0hSHMzZ6S2o4MhxtMp0EsB4+1XIzya0fkGGT70E
qI3f5EzuRvt75TR3WgL8uppr92cA1SdsX34mDvglL5boDKP19tTExYgBkw3S
RsY31K+1T8lAFIS1FGj+m0CPR+yE1nsRQMSaRunPof3ocdPTCINF653DrxfQ
8+GLPwfVMXBUrPjo9gpaTyzfoUkQ/l6wcDXZQPULVTwm/CC8kQ4v3NENXe9/
5RYvoESV0dLQQZPOq+b1HgJCIruTy/ZDB1TMjjzbDSxXKicYDqKcJcolaxOP
rLeVsuVCnlIyx9/jDRGMvm8PI481BTXM43/Na5qYjiH3bex8sgOIHLPb7yCK
5lm17RZkAFZ/9luSpdD6eUpX9u8H0WSQfUAOmgIYlglW0PTkxoKTEspj9w8e
YAdrl9iUGk+jnFWqhI0TiAvWhXBpoXkjvX3V3MB23rH7ji7Kt+1kt3hBHM7O
9d4AelR+QmKRD7Q8arDjv4TmfckQrzgMNoxdSrwt0f7yaCa0+IHkYa6NLhvo
9Hv0jnn84NrPZk0he5TrFrGP8IMsbOQrryvKgzW7AD8Yj1r0OngPrecWObV9
GOxUvK/BEgBtvda/3+EwEBynY973EPUn9K7n8wH1p9FfGMLQ+qYacom84Los
dz7tM7R/3rtcidwg5OtrT6pYNC+uTsiCE2Q/klbfSkD9Q67s39jBxJDWyHIm
yqXuDZ9jAbTBPbkLr1G/8qzvKSb4eF/2+FmA7BO4e30X0ByYVJsuQfU6fU2n
qIGdv9u+H5VoHiG97raKhwhtfh6tRb7pgbOM49ndoTnDFGQmM5Pl93iTD7P7
YCPyObkO8zl8UiDldF8bMoeTnN4qTv/hGGNXJ3JOU/8MCQh5lA6970Prb2W2
WNIAbV7l182fkElNAV67gENL8513X9D5K35xKOwFj1wNVcnf0X0x1gpfYAI5
HCN7aqfQ4+Uio9y9H7S8s/9U+RPNxz5J87OAKcfFV6WLqP5EtNJpVkB/4L5b
0V9ovpdsH8TYgBCZDsvbQPO3dqROsgFth+jd2Tt6oONFMp0PgBv7uQczaKHT
y/fSvjsA8q5Ku75ggrYe29vZfwDMVGgxRHFAB0RNrh85ABiu9AyE80KTBlYH
QtmACP3ll48Ee9Dz8x3AWYFOyeTtYGHkJGfzJhZw09xNKUAcrSchEJjNDMKo
N+l9T0DzUbGJXtkP8gpC+z3l0fzrWqQf+0DbRebMO8po/i+unMY9YHYr2fm2
Gsq/6Btf3wX25BxTvKWFvHNEp5UGiBqU0tnrovUmSEx/dwDHl83pViYod0jl
e/YHD9c1dDK3QPPe7rP9/AMvWB4+ZWKNPH7bP4KCt6fa0xpeRw7hM3jVh89p
Lfacv4lc/oRVaBLfs+CbdvY2mrfpOZ+1gIsm0jlq3EW56SWzi39x3TPR8qe9
kfUbtdM2cKc5LhplP3ReDr9qggQi4l53yz9AedJm5jIVKFKRTpV5hPK3A8GL
O0HHJH5T8inK+x0/l9GCX5FacqLRKGdcvy1PDxgVeqiF4tH54rtN/HcB8e+W
XQLJaD+10auhDEAvfDKZNwP1t/MeMNwNnE+63eDMRv29k+SR3SBVllCdLkbe
eeuX3B7QKcfAXlWL+m01/rnvBg7yxdQ8dai/QsC7iAGQTpn8Dm5C6w3/vPlq
F0g4tTE0+x717zfQuUwPJBUymwy7UR64Y3qQFrQoaJe+HUDzyBdvc9IAa8Vf
KXzDqJ5UqiVEDVYVYx+HfkN5nRUn9Q4QpaTg/msCOWVn1ZVNXER51PriHFq/
7tbD66t4vXKILr6A/Ckume8Pbq4iKi/wF9Uz99bIzOKLKj0CYRsoDy+3d/uK
h2Fe+xZ29KL325ncQ2ScX5Vn/RIdMtdzntQWvEa1YYLYg/xcfKx4BDc6fbPn
CHMvej7FUNNO4nOnmYjwgyiPGb7z6hcerFaZ+4cL5XX5+QOLONcZyzhzfuR4
+x6GFbz8DFVg3TFo1R8jb2dXcV31HEchMeSrCw881vFxdT3TZ9LQFCfV2ZxN
3Fdj6cyKHPLKL63AbZxVM1HisjJa74Mx5k8C6loTtMe1kZOCyW47gLu29JdV
Q7TenGX0mx0g+6xfRdNlZOotDYUdYECnLTzWAXo0z/o3Bwk4n3PxWndC/SIH
1lK2cFrdA9ds76B6zEy2ZgNP1cUvtHqh/dE4O0Ws4bLnbRUl/VC99mI/zyre
cZ7+WPwDlD+12OOyjNvpFTFvPUKepyOFLuJbesZb1yJQ/d7S7u5fePyFten3
Mcg6EjmyU7ikfnq/9Atkqmsa2t/wFn3NuhepyGk1R4/24dYGcwWkLGR5mbe8
FfiqQXSCfS5yg+3PvQQeaSgf3FGEXMCg8KwHFzL6cvtkOXLfv+HlYZxiFGyR
/BbZ7tKI8XfczFhEi5qMPKxq1DmJLxp3Sd9sQFbi+Ds+i4dd9ODpbv1vfarz
Ub9xfhMuBvlO5MdXrBwW8BqT+uXUPnQ/pw5IdC3inGbmWQoz6Ly05j3iK7iv
xaLhwDaqT6CPWFjGx5g7n7sy9MH6Dg7xqCVcuy1/aA8btOr3Z6ZOi/j6kURf
cw5okvcP64MLeFHgI54cXlQvf6hM/DduO+JBWRZEnviw8HUWZzt13faMCKq3
UjmjPYW3xBrtjJJAZgxodxrHfedPZ3+RQRavOHVpFJfQldQWVUA28pc+OIiP
veaZ8caQx2SZz3bgcdR7w5vVkSkJs8+rcO0r62JsOsj0Fg1s2fh6zXSn7QVk
6lzB8nd40YFB12JjtB/hzGcRXbiNWxPLlhnKJRRcPg7grB3lFeeuIAefHigY
xluEX156cQ1Z3mCc+ht+72HUv4kb0JQ21VOu33Hxb/5JMrfRPJNymuQf+JiS
s3LQXeS1LzpBk3hcguXXTm9U/2rsFv80rr2kE8jtj2x2WvTeDM56decu41jk
P1Pk3T/xb90gMiwX3a/T2KrELK79OLHvSPl/9/mwpHIKL1L1ZK8jUM68P/TC
D9wm+XoNYwPq16PE6nzHWVeNLC1b0X6Lnx9k/Yb7vJFM/9uL/Dbp55lBXGw3
r5rGJzRv+WPsSA8+ard3PPoLyv3sf95qw2Pr1x+OfkdmVZs0B7gWz8wx8Wnk
Li3R1Fh8zXuw9d4vZL58oY1CvKi/6VbrH+RUpqUnFJz16cs317bQ/GM6XQ+7
8OapKINS6n5oJc1WmT7cRz3gzzY9slnX/eiPuFi6c9x5RmiSwznzpCF8dN1S
LokF5dQTzrojuGbZqXuyPCh/kEbdOYoX3jxA7hZCvqC0ojSG+3zq1KRXQTaq
Lfs+hmtqP+5QMYKmPG5irBrFH74VOCBwGc1r447LGsEbRIjLdPbINy0sRgbx
a1efBP67hfq3blMEBnDqZNNXsy4or+s+KtuLq+39M9fpg/KozeX0VnxMg8JU
74/8jH/0XT0e6PdUpjwYWcnk3NkqnK/K3DT7MXLxNxu5DJzy+5hvQgQySbmR
ORa3FlpOC4tBdivOcyrGSTb173wTkAuY36vX4liP5W6bTGR2h+chzbjfmb+G
GgXIL1v5qLpwojwqUbgS7S+148j9XnzziOjYXgrKpa9vCg3gSvFNwoutyMdX
rm59xIc7Y86Pd6D6iv5H8YP4PXob14FedD/v6M+vDeI13uvVNSPIO83283zC
5S0ltR8soPrzrqxLA7jnh7Zn9uto3vOHGzV9eKXK9Y/naAZgbh9xvqcbN/GU
XldmgFZVwssPd+HLb7Z5JPehvNfkdUI7LnM40Y71EDTpVk+JbwPeZ2YfRsuD
7PPI8iAFvxMtU7TKj+yZnUKqwpnf7+iZOYasa3bhXx5eSt25PCyK7JBc9+gp
bqiUfKhTCrlBq6M5Bl+4e0O5ThbZHOMl5eKRhbI2ZYrI9hrX8stwyQnqh69U
kZnel92qwW9fSm1/rIM8omuoBd8PWuRZnY2R7Rx/WrTgejto5a3NkB0XLQPb
8J+nei0MrZBLagVs2nHRfKeXsg7I8h4DOp14+3eFZiEnZCCTItyF3+Kin+Vw
Q9YOsn/chec9zZTevofuo8rx7+cuXNjlY13zM+QC64vFnbgqvPgjcah+K1r5
RgduGpmjFZSIfHmH+8d2/FGx9welV6hec3h7tAWv6tIx+vsG5bMyHTPv8Il5
zk8lNcjzUv4SOL4VsJNrHwU57nZuZwXOtv+nlWPjf/ejzH66CBfN6M9obUNu
6nO1SMfVpYjxo13IxQdLTrjglnXZx4L7kWP3jJfG4HcMnt38NoQsaVIFsvCw
b56FKqPIRcKFpDd4pqv1fNIP5MZoU51y/MpiFl0I00foM4J+dE04151pHhdF
6ABjCUrvO1yGusfmgyqyLZhIrcfPxdRkiWgitz05p1iH+5Q9Efmhj/rJp9TH
a/G8XsviNAuUcxzV5C3HP/0RkzW3Qzm1yteabHz+wQHvqlvIc8+eURJxetbt
WlZXZGuGwrz7uLxM1+nOe8iGBtd/JODP77qdV49C86LT++jK8KKdFpEZz1E+
IRMXV4E3xp7p3UpC+cxW81AVvlTOavY2G+XaT0qCanGj5cpr4jjKNb0zjpJx
Jo/1e+yTKI9RDGavxlm/16tyzKH8ceZToUqcXT+MhmsB5cEhizTlOJ/IoWe8
68jp9eaORbhg/KjRYdIg+v7gdo0vFxfamcMuQIMsybgj/CUu+UU28+g+5ORC
gzcRuMy5LTshVmQ+hS4+e1y+uvG4yCHk9If0cv64arRxhZgAcoB6XkEirq/p
1iIjh2y//2dbAR55YJrVIBQZE3t5vATfVzVQ+PjYJ/R5fJKUnYMzD4Rm1wcN
QfMEkGsj8J7aC1K5Hz+j/aQErt3E84Y7ThSzjUBfy7l0xQ4P+Syw6ef8Ba1H
bUknifuwSao4F3+FVn3qWEnC2Z7kPqLxGEX7DfH4II7fXnvVL3f4G/q85vRt
4cdN6Pys1ijIkjpjj+hwjLqujc95DFr91IzsYTzEdh+Jh/07enxlxDx5cLMr
p1zzK5GVRj+OMOHi5zoak23HocdLtcb24M/6VEx4qH+g/W1PSlHhenU1bzzS
kXMSHu5Zrt2XkjEnfW4Cekn2kPhC7eUD1677zyCrHrfcO1Fb6BdVJxE/id6P
o/N3fat9HJxo5iI/hb4P3a6++bH23c+imtABZMlEqfDO2m0N8W2qoGnowVfG
Is21zYqP/Rn5Z9DzJVvZlVIbxXfh+/1OZOuvGyMVtW8d+JgavGehXdyEffJq
nfU+eCWyz6H8TRH1q9ojAj8a+hqQSZNNxXG1DnGDumnXf6L7zZw9FFW769bH
FFXqX+j+/Dx5ImoLJE73aBQhw28QPH61n6NC1D6f/41ynwl9n1p1VoP+l/rI
qjbZdh61Bc85HRyNkAOMR8Tcav2Sip9umv6X71/6bFPL/2pokPfaf/2ikTLX
a29Ui9++5oMcucV2L7D275eBpJ/Z//UH2o461FrbZIhX5v7X38NVZF3b8v1W
nV8BMinL54R+beIUaXJf6X9+u/nbSFFlUURaGvz+77xL856KD2n8Wzx6/+s3
1t0brvgr9KwFNvBfzo0bPFU0YWD9RffpP9/dMI5QFNqXy/Liy3/7Y1DxeabY
zt5rVTuNrP9l4spTxZNJKQsP5pCZBu3AE8VUbodg3d//738d/1jRhX8zd2Tp
v36OlpQHip+ympWy/yLzPfnu5K+odiy603ntv9xzVM9DMS/X0lZu87/zMnA8
t1dkET22vL3933n0rYrpa/8HG/XUaw==
       "]]},
     Annotation[#, "Charting`Private`Tag$47644#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.02}, {-1000, 1000}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.778418372540017*^9, 3.778418410643957*^9, 3.778418534719267*^9, 
   3.778418669629197*^9, {3.77841886971354*^9, 3.778418899184292*^9}, 
   3.778419018613381*^9, 3.778419671102762*^9},
 CellLabel->
  "Out[326]=",ExpressionUUID->"93be3b58-0739-47d3-9c38-b451f1d07b3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"R10", "[", "\[Eta]", "]"}], "-", 
         RowBox[{
          RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}], 
      ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"R11", "[", "\[Eta]", "]"}], "-", 
         RowBox[{
          RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}], 
      ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"R12", "[", "\[Eta]", "]"}], "-", 
         RowBox[{
          RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "3"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}], 
      ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"R13", "[", "\[Eta]", "]"}], "-", 
         RowBox[{
          RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "4"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.777733542829121*^9, 3.777733555188416*^9}, {
  3.777734011344316*^9, 3.777734034937489*^9}, {3.7784175663491697`*^9, 
  3.778417599806696*^9}, {3.7784181978924*^9, 
  3.77841822594151*^9}},ExpressionUUID->"e1a6e8bb-f2d1-4ffb-a7df-\
0db1365a717f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0XtI0wEQB/ChmSTRTJ2MJB+TUCvmI0StmA9SymcpSqJZro0m1rZMRmpt
YLo1okTJpM2Zkg6m0yzIfCS4nMzyla/f1KVZy2fbJCkFa62CuDs4js8/x3Ff
HyYvlW1HIpGS/va/2Us2Wo3FZZGk/7UY/7LG7UA5eJdYEhzbhY7/dYSt3BaD
idXCYU6hFGzR7Jabrz0AOx+n1JYEPQTHmMIjyn3rwDeoPL6TQQXWvrWSWrae
g6NoXi6S5Q7w8GYNozT6NXhev9Uoqu8DZxckdY6k94PTZOMbgt8D4JJwrXtu
0SC4pYo5NBcwBN57mcerVo/gfYtT8vT978Essy7O/8o4mBtakOehnADfytpM
JWyT4LjT0lFG2jQ4gK/X6CoI/I/gZwl1RQ8mvyJapX6zYBdConxTOgee6EkJ
VukN4OYPo8faKfNgscHXKuQugIspQQxu+0cw5Z7qroNgEczbaZoO8/kEznAU
5uz0oSPtNe+8uZ9xP5NM8qQawZkXI663dKDpCaMDtcwv4IopRoan/RI4WdP9
TFCPJisaTCEJy+AL7iy2aB3dKqzUBNasgKVlskx++Cq439zWLSHQtli6za50
Daw7IRXto62DK71TjLfH0F0cb2dt0VfMM3nkpoxqAh/yXdJOadGc6pnEJ2wz
eE++XhFlbwGrA6MnYtvQhkpxjCFpA3zK7dz007No9SMPztU0tFDeft96Hk1r
mpvxYqHzOuk8VjF6e4GQm5XoS7kN9A4VetCYrxGq0bJV0gr5BZqxeTgkpBdd
7iAaFEyiLZIzWZEEOsPJzeI4i/Ynq1wfL6CHqZM5PWvoULni2x0Tuu4gpyxx
A82nWVXz39GzjbqTym10jF/VGHcH3azKZoZZ0a5H/X7YbOg/hR1ATQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$42588#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
uZia9qn7GWu3KbY1LUlDhrmYnPgRrOG1G2V224Ea2oBcrGbygugzM1cKXdLr
Fe2Pudhi4S7BzVZHSsQoPacbKQ/TfmpjH15kT+GQMj6ZcBSaZ5uCRaANRaR+
0eP7vTzsq0JIcTybJaVsj1o8fVEehpt+NepoNKUomsZWHO3Pw4IeLNC1+xpS
6jN/9OjR5WMmGVO/v7zQouj+llnwkMzHoiZ2ttKRlSmf5O+xJJvmY9Tub5/4
ME6K5YNOGWpQPkbqF7qpM7WNMvWBT3+sJB8jT9Cz5urvp9zmvOXC9CUfS+N9
1sJy/hDFUqsy1ZCuAONX63EcHjxM0fZbb0s5WoBR/155bvBelCJffHp9zLAA
I5+qLtvPK0ERGg4VlfIrwEg7Er2Eh6QozCztl7yzYH1wS+FFRhnK5hm2kLdt
BZjlmttv92EZypSHWQXTUgE2qYzfOXjnGKUvN+2HIc9LLO2F7l2nwWOUus/j
zM/PvsSYBVgHIxiPU4p3SmDjTi8xab+t7od0xylJyredpJ6+xBL1GKyudR2j
hN56k+xNvMT4p4P8aT2PUdzTt1rejr/Eqs0FtuSWZCiWPWdXmPYWYoyKmzsr
DWQo2tsjjhidLMT0DK4IsMZIU+RPdhs9v1qIBXL57op2kqII2XM+GA8txOS/
zR43CZOg7Eu+8kqqtBBL8+flmvA9Spn6N7W7jlSEJfJkLr3eOkLpk5ZR2ila
hHFe+dN797kQpc7a66aRfhE2vEzcYxUToCQ30jWNpxdhej4vHqZpHKSErZxb
kmotwvjfNxJNsuwUd7EoQZ/5IqxzZ4/32cPMFEvzPv26g8UYtdw+IlqVnqId
yR2480wxFsixQeGuWyHkqdbFRg7FGGki+C1N1kfi8Hze4PNY6MnEkZoPzQSL
0B+miVroA9Oy33QGiX8XT5ySHoX9J+smkjXHiKnQO7Y+u0ow6lvh09SUaaLv
zdv4OtkSLFBh+xmjuFmibpqhfqdFCUa+3nBCaXWeKOHRnTcKLsGGBb4fCSIt
ESkX4vhTi0ow/oyFjh9Ff4mwewO6Ex9h/btS5/PbVwj3cv670v9KMFJozenv
TKtEqVv5RyXWUoyskmw/U7dK5Dzqc7QSLsWGb+/b2SmzRqRkrdKFKEL/y4yl
MV8jYgB3csGFUozf/x8djfoa8bAPO9ZxrRRLK74uarC4SgT+sW5Z8IL1+0Wz
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
POR6S1A1OtZFJ4Zyi+aldRcgWXLP989x5FQ6jt0+INeHR/CLMrRl8cY/9UDA
r/bmfaMGtLRttDD+ACTuuehepg/dmcNgNhIC9n2e5U69jPqlH7jVPAThmREN
D2+g/YUfeo9FAFpnEWePW9BRr4Zk3SLBHfl6Disf1G+scUckCoy+eropEAQ9
2bmWshEFtI/aj45Gov5vD71eRIPKLMX3Oc/Q9Z29abMP/vjh3VNml4XmrR3Y
ZhgDQhOGE8VKoNMOlIjeiAGzzOUBM2+gTWZlfmvGAJPwYJviemgR+aSUrWjw
ls5Ex6UDutS0ozI8GojdFZM9NgDN7G81Ox0FYv5uHFwchZYnxUgcjgLrtzpo
qv78d97Syy6R4PrP9EmvNbT/yUcSehHgg7V7x6ntLfDzriSAmHkI5AbVq9b3
tqDvmwXl50MBQ8f0g4DD0MwVh6xt7gEXTeLmaWnotPQPK2Z+oP9tlD6dIsp9
igKSPcBpxWvyDWehqZFeJSecQEHFCb5QPWhymYZbggVglWSkP3cZmsSPGT0f
wf1yB2aYbKADt096HzcEo/xFPW0uKE8QMC6yBjpJATWRd1A/reVHAQdQxWqQ
rhcCLe2e6OPtCngfC4WxRKN+ucIZBg8QSr/s3JsMHQX+xCh5g9mAlotPc6CH
R37/Yr0DTFeTlUxeQZfKdfNF3AV1bs6CB3E0v4JxOjMAiM2QmQYb0f4pUZeK
AkHsDda5513Q1e6VR03ugY2vY5+uDqL58dqF3ffAdZNq4tAEOi8TbhOe++BD
V3j2yBz0bGjBlPx9IHfeIiJ7A7pz6bDZkfvgRb3UbVuGVvg8Z4V9Gr8HGFVo
zURZoJnj4prvwPN93Uue5oZ2uTFaPx4IPkvnChcJQ1fLfo4XDQSqBT57bh2D
nn0pfCPCHxQIai9JK0PrHcv2vusHWJ/zDs5rQJODH6+L+QI/jrm6CgM071Nv
1zMvMPbkXb6nBTT/o+9HOtyB7o6nUfJ2qF5e7WanK+DbULiC34UObFz2TLYB
YR67z/qHofyhkuOlq2D297ej5FiUnwN8jPrA1K6MhTYVmsR499YBQVD3PWj1
XR6yiNXFSDI4evnScHA5NPW96+MX+iCuV7RJg0DznLgKzMzAhs5G0Y4WaEvf
w2dOWoEbTe1x73ugSyXlLH9eB+3k9DuPv6L8xg4Rsh2Qq7ltfeEnOi/Ot03y
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
cd/yR2JjeshhnddHavGCHvPSF5eRlZ/e5K3APy9IyJnZIFtlSb3JwWcfcPi8
dkAWo5cHSTgj21YtmysyeafT87u4vGzn6Y47yL6cQj8S8afubjpq0chVtjsZ
yvHibZej0p8iU199iKvEG+LO9PxLRv6sTDvwGl+sYDN9k4N89fCfe7W44VLV
dUkc2Sti7DAFZ/Zcv8M5AR04VdS7vxpnG6kjH5xBfnnvm3AVzqkXvp17DtVL
N53dXoHzix14wrf+33mE0zsU40IJw4aHSP3o93I/C18+LrItj1NwO/Iu/rLw
TFz6q1zGkb3IiU5HCyJx2fP/bETYkKlGlrtscfnqhqNiB5A5Q0bFA3ByjFGl
hCBy2rGjBUm4nrpbs+xJ5N57r1sK8SiOn2z6ocgVbgePvsL3vu4reij8GX3f
OCCWnYez9IXm1N0fgJ7yA28i8e7aCzL5n76g50c0aOkmXjDYfryUfQh6nobN
3AYP+SK46e/8Fb0/RjP/ksJ92aVVnEu/offDuurLJJz9UX7Yds9h6M6V90AS
v7WW/fHkoe9ofwUDQAA3ZvC/skZFnj327SYDjtG9beV3/gEtvqtM5hAeYr2X
xMs5gr5P+TXf4sVNr55yfVmFPOPt2M+MS55vb0ixHkX9+bcHduFPelWMeenG
0Os3mU2cFtd9W1PimYacdqWabql27/P0mWPnx6GzPj8Snqu14Lh+I2AKmfn3
Rbrx2iL/6LdSCRPo9avJR/u99mFQkqmL/CS0Jjfj1U+1734V14T2ITO3/fDp
qN06K7lFe/8n+r5hfoK7qbZJ8WHAHoEpVP+H04ZaG81/YeRuB3Jn9LO2yto3
dvzM9T7T6P5RqVcKap11P3gncc5AR5ln/cqqPSw4Vt9bjzyc1PI4vtYuvl/7
xY1faL2Ljzejanc4fHpOpvuN+kU5Zh/XFkqd7j5bjBz4ka33bu2X6BDVLzp/
UL73GqtvrRqb/sdMPWTLo5dEPWsLn3LZORoik8/XzbrW+ieXPt40+a9eK9La
qlYge6Cf7zoyaa0Dv15rXy1567rvf/WV8xb3ape/9iX/ykEOnJl1tau1tEqX
rMr//zxGsmVt84jDW//C//oHOUt1a5MmSRN7y/6rV1xsMVJUmRc7dgwgp3FV
HvFWDN4e0OzZg+xyz0M4QvF36LnLWN9//c/aHR4rGjOx/Wb4/N/8KyvOkYoi
e/NZn339r79zV9wTxTbOniu1P//zL3Ofx4onkp/PPZj5b956Y98jxVQeuyDt
P/9dH9986UNFF4HN/KFFZL3siaoHip+zmpRylv/bn8TyiwBFVeGYDuc15GG1
lkBPxYJ8c+uTm//lIXGrtoqs4sJLW1v/7Y+U1hem8D9WMZ9Z
          "]]}, 
        Annotation[#, "Charting`Private`Tag$42588#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0XtI0wEQB/ChmSTRTJ2MJB+TUCvmI0StmA9SymcpSqJZro0m1rZMRmpt
YLo1okTJpM2Zkg6m0yzIfCS4nMzyla/f1KVZy2fbJCkFa62CuDs4js8/x3Ff
HyYvlW1HIpGS/va/2Us2Wo3FZZGk/7UY/7LG7UA5eJdYEhzbhY7/dYSt3BaD
idXCYU6hFGzR7Jabrz0AOx+n1JYEPQTHmMIjyn3rwDeoPL6TQQXWvrWSWrae
g6NoXi6S5Q7w8GYNozT6NXhev9Uoqu8DZxckdY6k94PTZOMbgt8D4JJwrXtu
0SC4pYo5NBcwBN57mcerVo/gfYtT8vT978Essy7O/8o4mBtakOehnADfytpM
JWyT4LjT0lFG2jQ4gK/X6CoI/I/gZwl1RQ8mvyJapX6zYBdConxTOgee6EkJ
VukN4OYPo8faKfNgscHXKuQugIspQQxu+0cw5Z7qroNgEczbaZoO8/kEznAU
5uz0oSPtNe+8uZ9xP5NM8qQawZkXI663dKDpCaMDtcwv4IopRoan/RI4WdP9
TFCPJisaTCEJy+AL7iy2aB3dKqzUBNasgKVlskx++Cq439zWLSHQtli6za50
Daw7IRXto62DK71TjLfH0F0cb2dt0VfMM3nkpoxqAh/yXdJOadGc6pnEJ2wz
eE++XhFlbwGrA6MnYtvQhkpxjCFpA3zK7dz007No9SMPztU0tFDeft96Hk1r
mpvxYqHzOuk8VjF6e4GQm5XoS7kN9A4VetCYrxGq0bJV0gr5BZqxeTgkpBdd
7iAaFEyiLZIzWZEEOsPJzeI4i/Ynq1wfL6CHqZM5PWvoULni2x0Tuu4gpyxx
A82nWVXz39GzjbqTym10jF/VGHcH3azKZoZZ0a5H/X7YbOg/hR1ATQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$42588#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0XtI0wEQB/ChmSTRTJ2MJB+TUCvmI0StmA9SymcpSqJZro0m1rZMRmpt
YLo1okTJpM2Zkg6m0yzIfCS4nMzyla/f1KVZy2fbJCkFa62CuDs4js8/x3Ff
HyYvlW1HIpGS/va/2Us2Wo3FZZGk/7UY/7LG7UA5eJdYEhzbhY7/dYSt3BaD
idXCYU6hFGzR7Jabrz0AOx+n1JYEPQTHmMIjyn3rwDeoPL6TQQXWvrWSWrae
g6NoXi6S5Q7w8GYNozT6NXhev9Uoqu8DZxckdY6k94PTZOMbgt8D4JJwrXtu
0SC4pYo5NBcwBN57mcerVo/gfYtT8vT978Essy7O/8o4mBtakOehnADfytpM
JWyT4LjT0lFG2jQ4gK/X6CoI/I/gZwl1RQ8mvyJapX6zYBdConxTOgee6EkJ
VukN4OYPo8faKfNgscHXKuQugIspQQxu+0cw5Z7qroNgEczbaZoO8/kEznAU
5uz0oSPtNe+8uZ9xP5NM8qQawZkXI663dKDpCaMDtcwv4IopRoan/RI4WdP9
TFCPJisaTCEJy+AL7iy2aB3dKqzUBNasgKVlskx++Cq439zWLSHQtli6za50
Daw7IRXto62DK71TjLfH0F0cb2dt0VfMM3nkpoxqAh/yXdJOadGc6pnEJ2wz
eE++XhFlbwGrA6MnYtvQhkpxjCFpA3zK7dz007No9SMPztU0tFDeft96Hk1r
mpvxYqHzOuk8VjF6e4GQm5XoS7kN9A4VetCYrxGq0bJV0gr5BZqxeTgkpBdd
7iAaFEyiLZIzWZEEOsPJzeI4i/Ynq1wfL6CHqZM5PWvoULni2x0Tuu4gpyxx
A82nWVXz39GzjbqTym10jF/VGHcH3azKZoZZ0a5H/X7YbOg/hR1ATQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$42588#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.777733826280343*^9, 3.777736575310319*^9, 
  3.778417611997652*^9, 3.778418076349156*^9},
 CellLabel->
  "Out[305]=",ExpressionUUID->"d92e51b4-8906-4341-a3f4-c24767da6586"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R20", "[", "\[Eta]", "]"}], "-", 
          RowBox[{
           RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R21", "[", "\[Eta]", "]"}], "-", 
          RowBox[{
           RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R22", "[", "\[Eta]", "]"}], "-", 
          RowBox[{
           RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"3", ",", "3"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R23", "[", "\[Eta]", "]"}], "-", 
          RowBox[{
           RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"3", ",", "4"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}]}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.777733556461495*^9, 3.777733556964727*^9}, {
  3.7777340410060053`*^9, 3.777734060405985*^9}, {3.7784176053949547`*^9, 
  3.77841763544776*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"9dfce497-291e-4394-b352-b8b1b09f4ddd"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0XtI0wEQB/ChmSTRTJ2MJB+TUCvmI0StmA9SymcpSqJZro0m1rZMRmpt
YLo1okTJpM2Zkg6m0yzIfCS4nMzyla/f1KVZy2fbJCkFa62CuDs4js8/x3Ff
HyYvlW1HIpGS/va/2Us2Wo3FZZGk/7UY/7LG7UA5eJdYEhzbhY7/dYSt3BaD
idXCYU6hFGzR7Jabrz0AOx+n1JYEPQTHmMIjyn3rwDeoPL6TQQXWvrWSWrae
g6NoXi6S5Q7w8GYNozT6NXhev9Uoqu8DZxckdY6k94PTZOMbgt8D4JJwrXtu
0SC4pYo5NBcwBN57mcerVo/gfYtT8vT978Essy7O/8o4mBtakOehnADfytpM
JWyT4LjT0lFG2jQ4gK/X6CoI/I/gZwl1RQ8mvyJapX6zYBdConxTOgee6EkJ
VukN4OYPo8faKfNgscHXKuQugIspQQxu+0cw5Z7qroNgEczbaZoO8/kEznAU
5uz0oSPtNe+8uZ9xP5NM8qQawZkXI663dKDpCaMDtcwv4IopRoan/RI4WdP9
TFCPJisaTCEJy+AL7iy2aB3dKqzUBNasgKVlskx++Cq439zWLSHQtli6za50
Daw7IRXto62DK71TjLfH0F0cb2dt0VfMM3nkpoxqAh/yXdJOadGc6pnEJ2wz
eE++XhFlbwGrA6MnYtvQhkpxjCFpA3zK7dz007No9SMPztU0tFDeft96Hk1r
mpvxYqHzOuk8VjF6e4GQm5XoS7kN9A4VetCYrxGq0bJV0gr5BZqxeTgkpBdd
7iAaFEyiLZIzWZEEOsPJzeI4i/Ynq1wfL6CHqZM5PWvoULni2x0Tuu4gpyxx
A82nWVXz39GzjbqTym10jF/VGHcH3azKZoZZ0a5H/X7YbOg/hR1ATQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$41518#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0XtI0wEQB/ChmSTRTJ2MJB+TUCvmI0StmA9SymcpSqJZro0m1rZMRmpt
YLo1okTJpM2Zkg6m0yzIfCS4nMzyla/f1KVZy2fbJCkFa62CuDs4js8/x3Ff
HyYvlW1HIpGS/va/2Us2Wo3FZZGk/7UY/7LG7UA5eJdYEhzbhY7/dYSt3BaD
idXCYU6hFGzR7Jabrz0AOx+n1JYEPQTHmMIjyn3rwDeoPL6TQQXWvrWSWrae
g6NoXi6S5Q7w8GYNozT6NXhev9Uoqu8DZxckdY6k94PTZOMbgt8D4JJwrXtu
0SC4pYo5NBcwBN57mcerVo/gfYtT8vT978Essy7O/8o4mBtakOehnADfytpM
JWyT4LjT0lFG2jQ4gK/X6CoI/I/gZwl1RQ8mvyJapX6zYBdConxTOgee6EkJ
VukN4OYPo8faKfNgscHXKuQugIspQQxu+0cw5Z7qroNgEczbaZoO8/kEznAU
5uz0oSPtNe+8uZ9xP5NM8qQawZkXI663dKDpCaMDtcwv4IopRoan/RI4WdP9
TFCPJisaTCEJy+AL7iy2aB3dKqzUBNasgKVlskx++Cq439zWLSHQtli6za50
Daw7IRXto62DK71TjLfH0F0cb2dt0VfMM3nkpoxqAh/yXdJOadGc6pnEJ2wz
eE++XhFlbwGrA6MnYtvQhkpxjCFpA3zK7dz007No9SMPztU0tFDeft96Hk1r
mpvxYqHzOuk8VjF6e4GQm5XoS7kN9A4VetCYrxGq0bJV0gr5BZqxeTgkpBdd
7iAaFEyiLZIzWZEEOsPJzeI4i/Ynq1wfL6CHqZM5PWvoULni2x0Tuu4gpyxx
A82nWVXz39GzjbqTym10jF/VGHcH3azKZoZZ0a5H/X7YbOg/hR1ATQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$41518#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl2Xk8VN8bB/BBIalkS1lDWbKHZLuThArZEqJQWbKE7AmVLUnWCMm+JSQk
7rkzZE/2JFHKGipr1vI75/v7q9f79XnOc557Zu6dGR20vWF0jZZEIqltI5HQ
v2DP6N9R/xCMRFJ8+ObUCDZypjKJ/UAopvTOi5FlqYq8LSxc9tSbUIz96UHm
xLd1ZJE683deZmHYbvqqg2NEA/nM5pFreSthmKXrDwWG/Eayy7F///ofh2Pd
jv2NwmcayTEeXckMihHYvZLnNV+lGsivXmTJKX2IwEqVHB+9KK4n9095tjt4
3sfqY9LH2zao5DUhbbsnbJFYm/XFhLAggsxzeT+prTwS4/KoyRziqSVjKTNP
1g0fYIt6e31lfrwm234AR4/MP8A0Rx8exBYqyKEsMe8vxkRhfVHi7Zzq5eSC
s7b2UdIPMc3py/6NqaXkd2HyNKDjIaZ/ml0gAXtO/lVHn/rTJRrjttH7YGmd
T2b9OyDPt+sRxvbGdX1zKZusoPS8Q7/4ERamTZMWuJhBLn6jXkE5FIOlM6aJ
xGSnkdU/itCYecVgl82FZ/YyJ5O7llj05xpisKhraSFLuxLINqzrKRHssRh1
6zWVJjmGvCA9OilwNRaLXjxwdkH+ATlEr13+zatYTEthNllsdxiZ06nyjiFd
HMZOK674N/MOOT8iveOHURz2TSP391z5LbJSXjj33aw47JNQh60Z2Yvc9tbN
4cBCHFZWK6z07dENsuU388ryE/FY38ZAtZGxHfnnPw3as7HxWOfs15AhYSty
II/EudGReGyPKs+214oGZBZljrRbMgmYL6gtF2ZVJGdd+DfFFpyATf303ri2
LEY96jWpUNyZgJn+/uL7q1iT2hDXdVeTPxE7kynLxrp5jmpa9qZzyDURO318
jueYowl16n0WjxeRiMnGeQmYN16g+s08cNy1+zEmJbvWxKJsQWXa4VWVa/UY
e/Oo8tz6j4vUtMOX6NRfPMbEMvfe1Vm0pEppahv0bz7GZn9JntZ3s6JSbGSe
uuomYTMtJxdXfKyoBkH7p+nTkrDfsfPTCnxW1O9ptMeezSRhFhstiRaellTP
mpl7x1SSsd1Nvwac71+k0g/0dXVGJmP7nM+kul23oCYvA16HwWQs0tHJJ0/Q
nCrGln+dJP4Ek+x5Xfy29gK1RibmdbLfE0wssAATUjel6ur7bZNtfYKFKJzn
nS8zobrdP5tu45CC7V2qyvAPMqTS5svPrL1OwShd7Pz1reeo8Q28SnEMqVjb
gQMuIWm61Kqt3931eanYT92qnH/uWlQd3k98F/+kYgsjJ7dOBJ6kflKud1o8
lYY1O/rP9uSSqZteCduFx9OwkPxrAQeyFanR8beNcPmnWDyLvKbmK1kq/0u7
ZyYhTzHbjP7bO9jFqWUd52Zne59ix/Z6zYgZHaRqzCodDxVKx6rOCg8za7FS
z9/56NPpl47Rroo5UA2GKQ6c3lX7u9KxGMpqvWRbKcX/OfvylcPPsK7CFuU+
IQrlIfnV0ZKAZ9iSGTnYZ7iRkvHB0GO15xlGLdSg7f/TRjFX8DXLZM/AWg7h
Ln5/Oyjfg5p9mrAMLKNSze48QzfFuY0zaeZ6BtbUpMraJthDWWa3q2J5nIG5
eCQuFQz3UAIvV35QqMvAfjGvHw052UthLNq2bDGbgYlpnp/9e6mXErtkzB68
LxPjSHi37cPxXsoBLPtorkYmlt/G5rww1EPJub9g1OaSiUV2mbl4G/RQJPtO
ePxOzsS2bmZ+b0ztplTxxcayN2TC51P8/qTGLgrmOFJ2/Hcm9vRZZcJmfiel
5ZV016UDWdiuG8v7FpPfUz7rdOwudMvCQs+TLRd5WylX43mlOlKzMH/NZJav
9U2UX8POeotNWdjPZLnjX6waKKSbO6PUeLMxvVE9xSxeCuU+sHhuq5ONFQZZ
7/xwqYbCyljUFn4zGwt/fdaW5nUlJc1o7UdxejamLHF4YUTyJeXQU50dPa3Z
mKobt6dNQiGlZDJJdGUpG2uzzMp+JJRJUZKb1OYRyMGqFyYaXh6Oo9QFKNqf
OJuDURntRKYb7ChnmkPD7Lyhm1WwpZ5zlN69H3IfZObA+/8qbpluTbG0FG4s
a8/B3JTzeXiZHCgTeTfHPqzkYOTHgQ8idV0pN+br6TYEc7FVpTViH3CnrKqw
Cgno52IRffVxpb03KXfDbDRO+eViUVUfL2z39KLs7C6zuZ6Ti7Uc5P/Zme9N
SeAm3XnUmYs5cH6M8vH1ofDancuoWIf9wj33M//2oeSVpVM+HcrDGlZaOdXZ
fSkyGz+//DPIw9p5vgyaz/lQ3pxS+ycUkIdlHFt5rPnAh6IRE8V7Oj8PMymg
Hfef9aa0D35Wde3Jw6JFPaNYuL0p5w8dsYz/m4et5jkYvOT1ony54X+rWjQf
09E9fjdr/SbFvqY1Zdg4H1OSOIw1vvagzG3bX0MblI/VTJ0Te2LhTqFLeb2q
+yEfWypmFvrb5kyJGqPn8iAVYDqP7RwjXzhSOKVNjyUdKcB0ebcpWwXbUUQb
lry+3SnAviiHlSSyW1PKd2sm0r8owBrMv5h0NplTVMzjK44MFGAh9xbpOvyN
KQ3Z33sN6Aoxs6zpX5+fnaHo/5Jd9JIqxIInd7bRkdUoH5XusKaaQ/d8/ciP
cVGs73XJUkOgPwpf15veRpl+z284XlqIkSfp2fIN91Fuct1wY/oMc74nraxn
D1Ksz1SmG9MVYWTNXueRoUMU3YCN9rQjRVjGn0tPjd6JUZRKTmyMG8P8eHX5
Pj5JivBIuJh0QBFG2pHsIzIsTWFh7bjgm1OEUUNbi88zylL+nmQPq2svwqzX
PX55jshSpr0sKpiWi7ARNfzWgVtylP78jO/GvM+xjGf6t12G5Cj1nyZYnp56
jrEIsg1FMR6llOyUxCZcnmMyAVs99+mOUlLUbrpIP4b1Bgw2V7rlKOE33qT6
Es8xgZmQQFpvOYpn5lZr3cRzjGopuKW4LEux7j21yrSnGCOp/N1ZaSRL0d0e
ddjkWDGmY3RJkC1OhqJ0rMfk6eViLJjbnznWRZoi7Mh1byK8GFP6OnfULEKS
sjf10kvpsmIsJpCPe9L/CGX63/SuetILLJk3e/n11mFKv4ys6k6xF5jApd99
t58KU+ptfa6bGL7ARlaIO2zigpTUJrrmicwXmIHfs/sZ2gcoEaunl6XbYP27
JqJZnoPiKR4j5LfwAuva2et76hALxdqy37D+QAlGfeUYFatBT9GN5gneebIE
C+bcpPDUrxJKVNsSE6cSjDQZWkeT84E4tFAw9DQeeip5tOZ9C8Eq/Jtpshaa
a0b+q94Q8e+8wnGZMbj+WP1kqs44MR1+y96PuRQLrhM5QU2bIfrf1CXWy0Mr
bz9pkjBH1M8wNOy0KsWsrzYqqK4tEKW8+gsmoaXYiOC3wyGkZSLtXIJA+otS
jJS12Pn9xR8i4s6g/uSHUoz8tsz17PZVwvOVwG2ZfzAPrznxjWmNKPN49UGV
rQwTUE91nK1fI/Ie9DvbiJRhIzf37uySXSfSctbowlSg/2XH01iuE3GAJ7Xo
XBlGCvxHR6O1Ttzvx+Q6r5RhGSVXxYyW1ojg37atiz5lGHWfWK630xrhzRhm
zRVVhsUUXiemSlcJ54OFK6oZZVjXUsBnzqYVwla5Pdqmogyb22GadLn8D2Fm
/PtQWAvcr+fVld1+y4S+MysoGoL19MGFZnxLhHK62czitpcYyyP2SS6OeULm
9a27XPtfYtYi+UK/h34Rh7vS96tJQnfRCAQ7zxBstOPaYedfYlSdY1QpbIxg
4mb8WuQIHTNBUYwZIUjyR7w7b7/EgluPC7a9+kT80dXftRQLc6/2Ca5TPcTs
NfccrjyYP3hlsUptJL4HJqio1bzESLfoa1KjiomBpNc9Nh3QA+WWwqsxREfZ
oGPYd+gn/8I7jhQQDa1/Sc//wPXv7L7dOvqKOHxOw/06UzkWPBOzEO/3hojo
C/smxleOkQ47TnTtoRDT5u8Mf8hCb5yyT92sI3S/7qkvOAXr5cdz23gaiJKr
JnIO5uUYdY6uvmq6kWCZTs4ScYFeppf46dBMeNwYZp0Mhta956SW0kL0LR28
l5dQDp8n4yqld1oJRX+7xWsFsB+f6BM/wTYieavoyiEc5tbRuetBbcR6yO/e
sU64/1vCrOxpG2HJJK+ZMwrzFfXPsjAnHvlWXFkpx0bmzniKibYRAhxAWGjn
KyxjhEHkXForcTeFJvE73yuM7OX/+srXFmKUX2t7ltwrbOTINgeJ5WZCMzfS
y0brFUaNi95941sTkSfeOS5gAd2d6P0rv5FgLGMzHXF5hZECTDF73QbiuoJZ
07M7cP38P+6HPfVEe02a4uXEV1iwjq0To3odIUX+lsdXCNfTlv+dFKYQC2eu
hz/tgus1vc+6MVYTJl0lK5ZjMPc5pDxuUEFUnV+051mF6/XS1vCwMoLr87GB
zzsrMNLCT78Z60LC3zpAJ5Uf+qeld0NBJjE0Tq22OAo9Z2Cd+T2eUHfaLnZA
G3rsK4lG3oPImDv95JMFtIzryJSCC0HrHb3jiSt08Y7pp3R3iKsbPX5md6E3
lY+2jt4nmoL3Te97XIEFX2BVe/onhhClt7T4WAjdWp99KiaBiHyQ0fYYQPtF
ZTdRkohZlnFl02643lRDNzEshdB/LPacYxw64tBM9kQaUcbtyv1hFXrjMqfJ
93SCNbP8QQJzJUZt1+qSV88gPA+vbBgLVGLB6VY1W58ziP7nKs5s8pUY2bn7
vLpuJqEkGzzUow19+DJzY0wmkVLVoBt3Ea6nrBMhzzOJTZUdwPAGzA2+g7D0
TOJSnZ7k3nswp8Ezp5wyCapW3NOuxzAfSGga4MgkDrb374opgnlWr3F8egZx
15A78BwB/UeU8zJjBjHWf/nX7h5o43RLjufphJZlzqWO8UqMxHcnuo/lKVHw
barj4RrsxyfQV6SVSjDZS2J6u6owUspug9OGTwjnWfdS5oNVGNm3vv+yQhIh
s7L+6IFOFfw8U51NSYsj4gIw0llLWD8xRr8pGkMs0YS4MblVoftRLl7jAWEa
3jLSeq8KC7a2SadhDyOqmXcZ3k+CPlkew90ZTByIM6zTeQ7r/e33ia55EwH7
HssyUqB72u0+xDsQX9IGM5t7oEfWIrrYlAmyID9r+AR013XNzbazxN3t3f8W
NqAlzN//cbhENEzdnbm09zVGitzSrK62I+jb5QfaDkOrVuuY3nYhTpdONCiq
QicEewxQ3YmouOSXWYbQ2739Va94Eh1eZ9J327/Ggs1Px7bmeRMs5puR/gEw
r3jWshnlSxiplvhMxEJrBx3s3OdPJPBbXzXKh/XHzwoVnL5F9NOyGhI49AX1
n4aHAgiuibdq4j2wfjo18eeLAMKi1Uv88STMX0gbTk0EEGnFIvto/8J8WVB9
oTeA+PLoE50razVG8gmzWPYNIARuPpj7JAI9fQwwD94irpiqDZ9Sg/726sHt
DX8i7/jv1pdG0Hy7Vkq/+RFTPJlVvA7Qxg66orG+hDjJOPv+7Wos2LXg8Z3d
PoTz6LaY5TjoK30cDpe8iJKmqgCbAlif8u1gQuhNYq7QwfE9gH4329cY4U54
urVr5E5Bd/Jfj3W+TlQZB0rv/Qc9y1ar3HeNWFWU4bnN9gYLvru29nu/DaF8
4DvjD9E3GOm0Ekkw2oy4/Td+2UQdWunr88R4PYI6cuo71RjapKqQOnaUoG1Y
6ZBwhLb++MapWIDQzC+sTQ6EFt1R9/SMEhEWebFgWwL0QLpdhPdJosVlV6Jb
IbSH2BYP9xmCyZByZ4iApraa2DMaELry7q46fdCN7Mlmz42IR/uELlb8gF6a
PBn6x4ToWe/TFtiCdsU9U6dNCfYvYfJR7DUYac9JmtYIM8K0Tungqhi0u+ix
kh5zIjlnetdVDNr4YqRxmwUxGJ623mkC/emoKb/HRYLHSX9S5Tr0x9+R79ov
Epf0SX35QdC5Sc+shi8SGbLlVLZE6Gw8jjf/IvGd/eqLoCLo+H/O0ZIXCeFV
jpQZCnTpIJu9pwVh97k57MIH6Oapew+CzIlCwu/m22no+fSb9MZmxGzmEWtp
Ui0WzCwst23RlJAKHdZN5YCeYlFvv3KecHN4dJzhCHS1y01QaEyUnz1x+Ca5
FiMJE2M6rYbEktQi69fz0E9LYgcfniMUWXO3zjhBC7hlOuifJWoGGD8JPoae
z1v4eFKD2KytaYx+Dn2gNWUXpwqh/sy5fJ0KHRPzk8VXlgi+y/fMrh96rsS4
aIuPeHut60HPDDRJKS1Z/RegP33XV50Gh6//yY1WOw5CR0L+WhEndPBdy9YP
gkTknglDTglo0pxc8ilxon0hSf3uCei8bX+9gmQI6ulGueDz0M4rl7TPHSUq
MhYOBzpCRybrcHQoEAUr/NwBt6ENqpO/bBwjUvX19vjHQtf8pGX/dJyIzvWn
882F9tX6F2mnQtzdzF/xegO9aN3mm6tKeBt/mLn5Hnpt7JtDkhpxvYh2xP0b
tH7OJUV1deISjUzfjWXofa1l29PUCSMzqxaXHQAjHVUoUn2lTmiVRuJOvNBr
Xj2BYerEcfrqMkdZ6GwvIodLnZCwGs+xPwVdvY+txlmNEKhgfXLNHPrB/MJS
qCrBvpP88IoLdJfNtkp7FYLR1uWOzR1orttb/hzKxGZ1itflRGgWK2IqTomY
29PiaFUIzdu2782oIjFmt2x1EUD70F6k7lQgPgJBI/NuaMPdc2O7jxJt7AZa
F8ah1xX7+OdlCMLptvL5NWiTUbdZZ0kib/+AoOFBAiPpFl0IWxYiUty27zun
AJ2cIt7KwEc8bJbbqXca2vd5Xd4CGxHMZ711xgq65Wequy8d4en1cFHHHZp0
xFD/8Uvg0F4zqRUKHXOeplF9GVgKTX3WfAJdtlfu5rZthIE/R5fGC+gCUqFm
JTNxslujgVwHHVz3yNSUlVAUdatW/wD964fZjUUOQjzoabHqD+gRNvpCmf0E
X39bhvJf6IEnoxd28RCskqsJSnspGCkkWMnqPh9BH3LovuIh6IOFVo+MBIi1
QaPb8sehZ0RDgMxBYlY22F1OD5rs2Pft60FiJOLFNRkbaNftdwesBYm+r4Pm
Ul7QMawWpRWCRIsio77EfWirvvBnQ4IE/lBBQ/wp9JstnHlQkCgds1UUfQmd
ofEpsESQyFKJET/cCM0/8j3zoiDxOA7wCX+C3vamGBs9SET+mGYV/AkdH3uD
rA0PXiCKLoZEhfOEP8y5L0BUv8v6G80E7bHv2E5zfkLO583KQ3bogQ+NAld5
iWLBrvkoPuiw+fPMx7mJwx0TMw9EobO+CLsOcREZfn/HI+Wgxxj3MhhzEgcO
sY/cV4X2NGIuyWQjdgec6As3gOaSbJmq3ElEiJh1hFlAd9Fuaj/bTtD2uraE
XoXOeKexXPcPBASG1oe4QhfI0iUzLYA/Ymn4PV9oAZ5tLyr6gNuH8qq7d6Hd
DoX063aB6eDWsjtR0C2B90P3jIOrEiNFwY+hTZ4A4cg5MPzxT05QBuo/57mT
8w/QktMcNnkOXeboL/BoA5RFxXKIV0H3+KwvKZOIA5Nf9Lao0GmKOyWv0hIh
JyTC+t5Bq5/VrtLYRvxK9SMK+6GZSh0f9G8nzP40/Qn8Bs2YtMYlwEDUG7BL
m8yieQhzJQFGQuK5jb3YCrTl1pLQACPxeHvps380dXB9XMLN0zsIkvXmx15m
aKMUM1bvHcT1mtMshfugi1qklK13EH3sSTqBgtCCL2SdmXYQ6jfGgo0lobki
tZ18GImCVtk3okrQl2QSFIsY4O/PoPm/GtAGHLfp8uiJgMB2sV49aNF26nHX
7cTEwH7bAjPoX9zKLvTw/jhqn3L7CnSMJvdFD1qi5mFFj5ErtMaF4dFKEiE8
RbNT1A/ajEGItegviNY4d/LvPegli++d+WtgNS3tVk80tM6+AFeXZdBueGw2
IAft19STMz4FFItDhI1KoZWMk+pZvoIM+h5LkRrorod3C7e1ACYb/sTNBuiR
hShVujLgWev8vrsTWuBsxYZNO/jCUbM9fxA6OIvfNu8j0HFjUA8Yh3Ymp/BJ
jIDyNhNvwzlodrfLffxjgOdQVsnhDei+L3+rnk+CsKDfExvb62Gu4r72fhrM
fVLl72aBrm6Pexj6E1jIR17I44buU1LY3/MbNER/fHTrMDSrZO7Spzkg9UO4
xUAWWllRfilxHiSf9CAdVoUuD41v4V0AtOkUpQ0t6MhcZ0+PBeC8yuzeZQht
rZlyLHEB9BtZFOZaQruJDkWHLwDyi/xv/vbQMj8TxM8ugCKG5f0GHtByDIu/
v80DdlsNo0O3oY3o+3/rzYNA/FHkejjq79doHzsHpjiH6zvjoK+22XpZ/QZG
7uIbOU/R9RQxjBj8BPg7n6P+BdABv6Yu086Aw4cbnc69gm7oFLntMwVigllz
hAnoMuL2eiW8XxResHf2onk+nJ3T+wo6Hq3r5nyBzogLKng3AJSmtUP9fkDP
rc977+oBWZqJQH8J7ffYvoLcBJiffV8W2kL9Cvq3TpUB7zVpqbUdb+HzhVtu
VCkNjBjftutghyb9/ORJqQJnStrSs/mhY66/0X1eDyoYuT76ikO7MS+W2LYC
vivX9ugrQDvYWIkGd4IIUK4tRIYuO/0lJ6gHLOwjBa+egc6pEXT91QcsPfSq
35+HbpiPdNr5EWzePWLlZg3NZc0Y2DEA0uJ30LI5QffNyGlrDALVnMm8Si/o
VS0VVfvPYKii8axZMMpD/2DqQyCgMXtuPRK6fZtocssQ4Om/k/g0Ee13y3yS
YRjgE5eVyRnQ7HOVYv+GwMUVta/fi6CnDKSLXgyBdQaekNBK6KWLU7T7h0AK
17qoKBUab/bee/IzUBYbeN/WBl3Re25FahAMHq/ycPkAbaKVwjoyAPzPJOxj
GYH2NJFZMf8IDlz0wMunoS03xNwzPoAaJwOb88vQESf3+bzuBRYBUvSrW9AG
Imels7vBehTz8xSmBvh6Wji0d3aAlKfT59Q4oAuOHOFkbwPKJS1LX/mhM0pG
r/A0gkEi78ldcehg7mM8YxTg3xmifkgB2i2s64JaJTgwYjvajEFb7z35pzQH
1MyRI66fgSZF7Tz65iIwp+GX3HUe+V7Xm6JUsLr3b3fpZeQzjl9WCkGy4Gdv
o+tonhePnNLKgdLRN9zLnmg/wny26TUYOJlETQqCpjIqnPDBga+J1zXlSLTf
VOX+81TAdc2YaTgB2uHdYLlUPaj2ki0NegY9ZJVZ3vwWmIXtMREsgo7yxOv4
G8Hq45+rDRXQxVtffyg2geT8d0/tKdBkn4LEXc1AqbpQg6kNWsIuPTCnGQy0
hE8W96H5WCsrN5uB76drUee+Qi8p6j7e1wK4pk/KLvyAbigXpv5pBtXrB/sT
lqDZp6p40prBhZ2kW8e2oJXUht7vaAZ/uL/wD+5oxEg8gQ+OajSBxxJ4QwA7
9GxExrh2I1BUS3Hk54fue7leyNsA+vV8d9eLQSfQnA9oqgfel0xfXZWHFt07
FXSqDnDekDdjwKALcpxoVSnANGYuU9cEuuyY3tee1+BPRofW70vQLftE9Jpf
gccvi2diHaGt7dnL95UCxfrIGHlP6Axtg5cGeeBDj4PCx0DkljqH+BTgOao1
6HcfmowpOusGA/Yl4SCeBGiSY+BcmR+o2EYnTElHfms1qx8LTDi+tdgUQgts
O3TCJxUsHaK4bKuADi7V8HHJAgmKT1nzCTSf5nhhdR6Q1771+nQrdPKnfuqT
ItB3wdxythc6JlyBd3cJ8HQ4RvPoC/TUlU9T98sAux9HnuwPaOoz68G+l6Di
/uKZvkXoigsNuZPlwDil+7f3P+iuzx4W9a9A+1WXZFvGJnj+jd7ClhVAU3rH
CX1W6G0fk0hNFQCs5fw4zgPdcj2+iFQJFBvIcYcOQwcLqXLsqgQl0UPKe2Wg
Ayx+XJqtACLmvqObx5vQ+yO151kFyBBij5o6CT2kNzolWgG4fpXK9+lBd610
qd9/BWKqzw5TLkBzTX1Pqi8HO+5Nhj63gXZ+lTTU/xLc1bsnleQEHRUgzN5S
Btb38X+86wVNVtZolykFN7/XBLkGQWeMm0knFIPZYlNRi/vQbtJOeyiFYPhE
tJ/sU+iYfM6TQdnAlFlckDcfmvTNdBt/Bujob2xjfImuJ3lFQfEJ0M60ublU
Ay1Tkqi9EAuoTn+5RxpQTufstBEClBSfNLzrQOurLswdtAcvSQourwdQXu3+
lssBiL/r4sj+juZrGdsVGgiyEp2J6Floa2yl7lc4OGDNaO//B82bwXKDJgbE
i+fssSM1w/P4ArZq4wHzMlZtyARNnixUE04CIZTP1mrs0G7+4uPHUsDf+z47
xPigR6xc5JbTgLcJWzm7KFq/lTFu8Qz84iu1IMlBt6yk8FdkAPsfZ+hmVaBX
b3R5R2eCkVcTzz+eQv3rdSNUs4BZ4F2Tt+egDSzk04gs0K3D97fEHHoqtFGM
IxucYavJTbkCbaZ/bYCcDeqHz+uHuUCH9D8P1sgGKgXzf9x9oDd5zwhxZ4MK
j4fPrO5AS1Tc/PEuC0ioiemcfoDmuXFIxDQL5DA0zsknNqPnw0mj2kzA22P9
ROAZdJmvGe3fDPA4bfMEcyF0hf/kIk8G2G2fPL1SDh0xV791PB2Ey8rHj+LQ
SqtBCv9SAWmzU6WzCV1Ppt7LyCdgPobhYd5gM/r8Vdq+OwFcv5itEDcGLboi
fWB3LPh+CPty+xc6zz7Xvu4H4OLcYJjjKrS1ju6cVijoq/GWPk/bAl/PP33N
O28D3VDWATIzcuIT1WuuoPFcSbAEJzTJ5EhzsCxQP3BGjEsAmhzIS26wBlVj
49104ii3alnecANSpXf8fx9FTqfj3OUH8v14hT6rQRuUbP7TCgYCmm/eNWlD
y9jHiuD3QPLu857lhtBdeQwWo2Fg76c5nvSL0HPS9zxq7oPI7KjG+9eg3SIP
vsOiAK2rqKvXDeiMl8PyHtHgllIDp40fWm+qfUs0Boy9fPxXMASt71pP24wB
ukccx8aioSO+3vd5Fgsqc1Te5T2Bpp66brcX/vjh213ukAMds75/m3EcCE8a
SRYvhU7eXyp2LQ7MsbwKmn0DbTYn+0snDphFhtqVNECLKqWkbcWCOjozPbdO
6DLzzsrIWCB+W1xebhCaJdBmbiYGxP3ZPLA0Bq1EipM8FAM2bnTSVP1G1/NH
ZsUtGlz9kTnls47mn3ogaRAF3tt6dh7f3grz0iBi9j5QHNKq2tgD3aVU9Ops
OGDonLkXdAiaseKgrd0d4KZDXD8hA52R+X7VIgAM1MUY0qlAs/i9CEr1AidU
rig1noIOjvYpVXABRRUK/OEG0KRybY8kK8AmxUh/+iIyCTN5OooH5A/OMtlB
U7dP+R41BmMCL3rb3aBHHguavrAFeilBNdG3oAVorT8IOoEqNqNMgzBoGc9k
P193wPdQOII1Fs2vWDzL4AXC6Vdc+1KhY8DvOFVfMBfUev5xHrqe0V8/2W4B
87VUVbOX0GWKPfxRt0G9h6vQARzaoIJxJjsIiM+SmYaa0DyUmAsvgkH8Nbb5
p93InpVHzO6AzS/jHy8Pof6JusU9d8BVs2ri4CT0gBmPGe9d8L47Mnd0Hnoq
vGha6S5QPGsVlbuJ9l8+ZHH4LnjWIH3TnqENPi9yIj5O3AGM6rQWYqzQLAkJ
Lbfg+b7uI8/wQLtdG2uYCAafZPJFXohAV8t/ShQLBhpFfrtvyEGTikWuRQWC
IiHdZRk1aGu5XN/bAYDtKd/Qgja0TOjDDXF/EMA5X19hhPp97Ot+4gPGH70t
9LaCFnjw7XCnJ9Df8ThGyQGarKR5vcsd8G8qX8JvQwc3rXin2oEIr12nAiPQ
fvdVnS9cBnO/vh4hx6P8NOBnNATmDuWstOkoZ7x9Y78QqP8Wsva2AFnU5nw0
GRy5eGEk9BWqf+f+8JkhSOgTa9YmkF24iywswKbe5osdrWh+/0Mnj9mAa80d
Ce96oalSitY/roIOcuath19Qfm2HKNkBKNbctD33A/XnqmtWcgLPjmqd3ruE
ru9mxOFuF8D4gkum9x/01A/m73RuwP3wDGfijnfw959o/6efbmDwGfhryg6t
9IVklucONPbHjHHxQ2fkeAVKeoDncbbvBsVQvcbx4nseYLZxoXL8KHTyccPg
Ag8gtXY3Y04NWqDOeiHbA7hJsD3Y0IZukb496u0Byi9ne9EbQceoPrUW9ABL
cUet91pCB1vN5uW7A4Wmt2d47KBJvbycjO7w94ixgogbdLWbrtQpN1AtMcYv
5w8tk7ElW+cK1i97MqmFQBts89WpdgYq8duWtaOhyddeuN+8DgKaEr4aJUOP
8GS+/mMPiDXhNqsstP+iv4vWNUCSrKxwKEbz/rt+wN4WnLA+9exmFZqH5+3X
mkugoema5/02tP7EehMwBPTry5cS+lD/wBMJ3aeAtmTY6Wdf0LzBQYMnpUGE
Nad80RTyHifu9IOgLT6Pr3IBOY7hSaEKYG5W3EHdhKZmbZus1gJ6602LbfTt
sF9ruhnTORAteeHLB5Z2NK9kqLUx6LKebBk5AC3gLUI/YwpYE3xezQhDk7af
eHPQAhg3M6T/kUIO41aitQIJ60kRNMehqePXKyIvg35J0ZvMJ6G7tmvMDFkD
Lptqq3160BmC9RebbYB5go6O4AW0f4GZf4gtSGkekJO0gS4bJozYr4ChdQde
JSfomHvqB32uAD6pNYaTXqh+7a7Jiyvgss39Bb0gNK9kYuLrKyAjYf+w2X3o
YFpV8PgK+N5c2HwlHs2nR20/ewUIbxwvd30K7eajvvjRFlyTakvzy4eWOZQd
o2oL8mwswkNeovmWu8Vu2YCphGn3R7XQjOFX7RKtgXiLv2VKI6rXcZE6cBk4
bTBp53ZCzz2+YN9iCYqlUmXLPqH+h4UzjluAXzZHeGpHUb9poO5xAcgk1tI3
/UT1Clxz3ibAveXsfNcKNAv8wqhrCJaknJsmdr6H8xZe+vhPEyjabpbNc7xH
7ye6h09VgE9iVOomP8rpP7mUioHqFp4wBnFk32tVPGv4+kaxG6s8dDAjUfZJ
BKhKq13kVYemnqmfqlYAt23fnxLVQXmZutqMOiASrWSOGkFnVHUcBicBqfXn
AXVLlL8ntkq0gcbm7e2n7VD/8ri32mfBPendc8ZuqL5JISFEHzTYpg9e8ke5
+aOHLw0A/WOpRscQ6LJ31r1zhkCnlSj1jIZ20wgK3zIC9zf1U4KSoVnIJ84N
G4M26a8hkVkoF13cGWkCmK/cuJFYjNx3bnL7ebCh8JJXiwrdJXPprvN5MM24
+O5PL+pfXbjMex7YLLAJdQ6jef6sKFaagIHP8v75k6j+10NvQRNg0Hi+O2ge
9VvKFbY3Bs0l3qJmG2heQ92RECOgnpwUJLO9A55P9i3n24ag6k51P+MeaJI6
b7GRAZB0+iT5jQvaWoTXcJc+yDFZD3kjiOp7OYWOnQU86txDsRLIayOOIjog
XkT16HVFVH+Nf/m7Jri7fvvbgTMof/CwLEMFrI+mKy0ao/7y4UwH5IH7e8qj
d1bQwVM/+YtEwVTVyES2PcrByrrXXmCdQaMe4I5ssEdTcjsYuC+YaHIL1St3
xtkKgHM3T85KhCJ/1ia+igN1rdCU4WRocj6315wiqJLOm6/MQvsfOXVPTAVI
7m/WiS5G9b0BrnQYyKGdemZXhaw7k6x2AvDMMq6oU6EFtD4eb9YA8R/E9Pe1
QWekJVbxagImypnc373IdwUdyafA3QKnzeZhaAP20z+ktMBabJRxxiS6fjqj
/T+0gNutF0W+89BlGD/vDW0wdbWDxnADem7uhF6dNris/9tMbHsnzDtpFUe0
Qf8xljKaPdDWb9Sz27WB/kFZhkEu6GDNktRwbdDIZHSpXBCatLVmxKoNVJc8
KiMloKlTIyKuWqBiOJ75iiJ0zG+jkrRTQKK54ooKGVqmibX0mSbILvtQw3YG
2mCMYb/fSXAg5c/eWWPU71DDP3ENEHdvn2ODFdrf+Hr6azJgclGiptlDC9Bn
tmmogzum5vu83JE7hOs/KAM3sdTGQ6HQI4YfIs8dBVOsOM+/aNRvuaf9nhS4
vDl0sz8ZzVdWaMtxGPSP/20ryUK5iz9N3QGg38knGF6MXLrrTwsNaKzG/C5X
IXPxjCat46pZ1l3HqMjfLfYrsYGKB3dEWNrQeQRKOvHwgyNeWYFTvdDkrmMc
QodA1qW3H6jDyKf8pc6LgwM6YxJPJlG93e5afmkQK7s9xH0eXd/bPWcosoCR
+/Dn0xsov/Zr/+ujgHxXaH8sbRe8viDrX14KYPPPK83bDNAjx4LwdUVQ7aTp
5sgMTVqzITSVwM2RvtTze6HJ2fQexsdBXnHwRDEn8s/uLwrKYNBXQnYbD1ov
Ye7eowx2nxq4dfEgdEbb3iL4ftTYG9JUfhj107SyUFUB3sPSe5kkUE4bVrFT
BRQVfr5oI4vmiSzVfqIMvniF51UrQlO1xacnjgNWjaPze1SRP/56/UcJaO3+
qmJ/AtXnV/K/Owb8ByPDCC00T4LmsJ0iKMlT7ObQRfWKO3+0y4NvHt+5XQyh
rSeyfUhHATsWbddgCh1sukC7XRbo7FR+yW2JfNc7HJcEZdmxWm12aN4m9SQ1
YTB2Qy32oDMyuCurzAe4VH989nVHfkJ0PWIDuoyJh7u8kU+19fLSgKA+srtI
APJIRPrDr3h5xmxt4B3U/yab3xIdmHBOpu8PQ74cEhW+F+hvn0sNiUXzf9pR
KMAP7nanTnx+jObNW3aKFgRVT7Vlj6ahfonfWjQOgWnHxVuRmWj9oZHRIhHA
q/is6VseqqcrxRvEgAHt2b3Hi5H5Sgejj4CQjj8XY14i/yhRYZQE1SlZeZNV
6HxC9U1lpMCsnf68Oo72fxu7l0EamGzlhv1sQt6vYlAvDWqT/nKndSPP0r09
IQ1+XSm0W+xH6+9xKjySAoIy51+eGUKv5yMDl3hJYLpJ2sz8hubl4Gc3lACR
LcVaaxNoXisXgXfigEgwizWYRfUmvN+2iYEF621D+fOoXnFtkUYEHJYsO7z1
B9UvJ2s0CcPfCxfdTTf/e39wrJ0XBFGNDPgLmm6YBwlwOPEDauwr+u0MyEeb
rXv3A1HxnWmv9kKTdlzWf7QTWP6pmmDahxzbb5L9F4+pt5W15UEueJf06h3e
EL074M1BZM0ml7dz+IpFTROLCOrXyxYQSQPERez2OkigfMQ/RIgJXFrca0mR
hSZ/ucqzdy+Io4A8zmOovmGznGAHTQ8c511UUe7d9piTC6xf4FBtPIFyledu
HNxASrgujEcb9ZPenVjNC2znnLtv6kJTeWxX/vKDRJyL550h8giFZUEAtEQ0
2AlegM7g+bin8iDYNHF76WeJfDi5WVsQyBzk2eyygRY4sKJXJAiu/mzWErVH
+0UvrQ8Jghxs+Cu/O8qbpV8BQTAWu+C77xb0CBd3+9ZBsE3l9im2YGhryRfL
9geB8BgD655QlJusfn0uADQfxn1hikTzsB4hpfCDa4q8z+kfof7PFsaf8IKw
r/k+tAnoei17Fyy4QV6EnOa/ZFSvzzE6wgUmBrWHl7NQfcipgrNsgD6kp3A+
H/nmidPHWeDrbeX9sxjVR6nkru8AWv2TGj9eovM5WWRznA7YBXnsGa9C9VFL
ch6reJjo388jtSjP0ZNhHcPzusMLhqj/vT46ir/f4U3+rF4DjcgV4mfMZ/FJ
oacn+tqQrzn56K3ijO9Fdnd1ov2G33tPk4Cod/nguz6Um5Vet9wOdPjV8ps/
of1824R8dwCHluabb78g3xkjju8CEe5GZMooOi8pmU19FlBwYJi5dgqd7/fD
LN17Qctb+09VP1H/W1r0gmxgynkht3wBnc8rT5YT7ICR87ZHyQpa/8sxU5ID
iFIYsKJNtD6hzWOSA+g4xO3Mo+mB9QKOPq6cwHEv70AmPfTIW8rnek5QdEXO
/QkLtIBQSu4HTjBdqc0UewCaGmDYe4gTMF3u6Y/iR/UvOkvCOYA4o1V2hDDq
Z037GGcHZ15O3ggRQ7k529EmNnDdwkM1WAqaxCBjkccKIun+MgYcRf0jHmy/
vBcUFYd/8FFC/TloKsb2gLbzrFk31VC9d4plIzOY+ZfmekMDefLJjms7AHOB
iIqTNqp/+Y3Uuh1IGJYz2OtCB+u9b/pDA5yzmzMumaJ6j+Ox0Yt4lK6Ri8VF
5EpurcFxvHh56LipNbLl5oFIKt6ebk9vdA1ZtEM4uw+f1V7o0buOfFqZRmQS
Z54PeHb6BnKIpEPOPC6RwuB8yhPtd9Kxx2QF1z0Zp3TCD+W+Km/TN3GXWZ7t
aoFovjwnb4IEohPzu5XuofMhJ9ks04ISdbl0+QhkHw7NhW2gYxK/LvMQ9VM3
TH1FD37FaB+TiEPra8NllBjBbuUeOtEklLfRcwXtAFKjll1CaSiPvl4TzgT0
oybT+DORpxMGDHcCVwUPR+481P/B2t3hnSBdkSD/KEO5QV/5MWbQeYyJ63Ut
ygcWCK+dwEGpjI6vDvmEF1bCBEjHTX+HNKH9wr7L5u4Aycc3B2feobxtbK8V
I5BRzmoy6kbmlXo5QA9alHXK3/Sj/pUCStzbgbXKr6cCQ2j9I9a9onRgVSXh
fvg35Gvm47Q0IFZV2evXBDqvfEHdy39xcbUR6/OzKOcv4L62iterheni86j/
oz9HBRZxC3UJJaEVlNt9mzk6gy+o9whFbqL1v093uH3FIzHfPfM0vej+9DzP
RsEFyXwbFxiQLX5tprTgNeSGCYIZ+eqb86XDuPGJ6z2HWHvR8zIE2z6Jz55g
IaL2oZzz28ucX3iIRlXhIg809fbLs/0LOM9Jy0QLQWhy3s2bTH/wipO0d+pE
kPMXL86s4rqaBc6ikqj+8g4R7w18TFPf7JEcyofNHhX8xQNOLZ38cwzlS1uz
wVs4u1aKtJUatEDPedYgEtDUnqA/ooPmCfaP96ABXjpyX1aNoEci1exLaUDe
6cDKJivojEtt3Mo0oP9MW1SCA7T1cY6mAyTgetbNd8MF9bfRL3j6D6fX5bxq
exPt/8t9/M0mnq6Ln2v1Reay5Y1exxX1bFVkApGZX4XxreIdeowiSffQ9Wus
gRvLuJ1+Ceu/CNRP1748bAH/p2/y72o0ypO4lLp/4Unn1n+8i0fzVomzKE7h
MgYZH+SeoByfKNH+hrcYaNU9SUdOGNgU7sOtDWeLSTnIA3O83JX4qmFcsn3h
f865tIPAY4yUQjpKkHdb7Y/uwUWNv9xQqED+fISyNIRTjUMupr1B+z35fs5k
FDc3Edemo6CcW6sZ3jwLJl1y1xtQLpPiPDaDR5735utuRWb5+TbmNy5oysOk
1Incf++AwzxeY1q/nN6Hrr9xaqZzAec2t8hRnkY512is1B884OKCUf8W6t8t
bjC/jH9n7XzsztQHzyPIbT5mCddpez7IzAFN4uXndVnANw6lBFgcQPmDnYf3
zeMldyL4CvhRfiZCXeo3bjvsTV0Whg5euBz4dQbnOH7N9qQ4sulGl/YU3pJg
vC1WGtXLXLnoMoYHzJ3I+yKPvFzVajqCS+vK6EgoIz8qMuEcwL/n8037Yci0
Hy20O/BEul1RzZrIaUmh8a9xncsbkhxnkEXXduzJwzdqfnTankPWNfYvf4uX
cA64l5mg/Tt68IdduI1HE9s/c5SPCT3r78fZOyoqz15GOZcaQ/EQ3iKWfeHJ
VXR9pwZv033Db4XGrk04ovp973vdRnGpb0Gp8jeQk45npo7j31Vd1e56IjtZ
TN6ZxBOTLb92+qF+fGY7BH/gOktn7vAGoZxU0eY/jbNf2bbDJAHl9ey2O3/i
37pBTGQh2s8pJ116Bte5n9J3qAI5fId51RReQvbhqiP60N+vjGTOjeM2addq
djegvKtb/cwozr5qbGnZinLfm/Vs33D/UpmMlV7Uv61I6+QALrmTX+PUJ7R/
663fQz34iN2usbgvyCfac6+34Qn1G6Ejo8iDJy+ZAVybb1pE6geyQfXBhAR8
3W+g9dYv5KhF6ZUXeMmHJqfWReRrU9Xw84T9YXbp1X/I14sUQrvw5qlYw3K6
D3D/GhEZ+T7cXzN4cYsRmSo9EfsRl8xwTdTbDU2iHmhIGcRHNiyPpbIhZ3EP
nh3GtV4dv6XIB01VyqnpGMFfXOekdItCk8NyS1S/4/6fOrUY1ZGfdLuOfse1
dO53qBuj/oWO7VUjeOgbIU4hK9TvBMGaM4w3iBNWDPYo91f6PDSAX73y4M6a
E7Kz8wmhfpwuzSx3xg05fq5AoRfX2LU42+mP1gs8+fesFf9+ispSH4Ts1zFd
X4/fCXwoXxGCHNx5Vfs1LvDawizvPrKb2tOjmTj1t0hAcjRyNZvezgTcWnT5
WWQ8svxwl1MZTrKpfxuQjNx2ZlmjFsd6LHfaZCFLeJaGNuOBJ1eMThUj0+iX
0nThREVsilgV8oRWVUAv/veQxPddVDTvzOtHov24alKT2EIryrckVv9+xIc6
4/XGOtD5ZfzlTRrAbzHauPf3ovw31+jaAF7jt1FdM4zOb59YIe8nXMlSRufe
PPJMW+liP+7zvu2R/QbqTwl7UtOHV6lf+3h2ez/0JDbb3Y2b+shtqDFBUy1O
mRzswpdLt/hk9vSj/79inEpqx+UPptix70e+/2L5VgPeZ24fSc+H1mczZnFS
8Ztx8iWrgigPe3lkqwpnfUfTMy2C/K/D/U8RXk7XuTwkgWyw6+rth7iRatr+
Tllk1ZtH6uPxeU9HtTpFZN23xn8L8JgXijavVJBLImiKXuEyE3ShuWTkWXaT
6zX4jQvp7ffPIEs75mrB50GLErurCfINl5MXW3B9Gnola3Pk0NMVwW34z+O9
F40uoXnn7gVYt+MSz12yFR2Q/XbJnenE20eVm0VdoMnJz8+KdeFOPIwzBzzQ
ebzN4rzfhRc9zJLbuoV8ZTL/cxcu5vaxrvkR6h8dUlvaiZNJ1G2HElG/Qq5c
hw7cLKZA+24Kss3scH87HlHm9141F9U3hDqNtOCvu84Yr5Qi73JTnX6LT8xx
f3pZ0//f54+1FI7/C97Gs4eKXPr6YUclzrH35yXnRuS2lnH1Elwi80Nmaxuy
rbqmeQauKUuMHe5CdptyEnTDLevyREI+/He+b9NK4vGbho+ufxtEHitMrs3B
I7/5vFAfQebTi/9Xgme5W8+ljiPHreidrsAvL+QwhLF8RPfTGg1DE85z8wef
m8pH9H3ntm7vW1yersfmPRl5kcEzvR4/G1+TI66F6vf3fVKuw/1fPRAfN0B5
RNfV0Vq8qNey7NlFlKs+vs5XgX9alFS0sEO5dY70mzx87h6n32sn5MP0SiAF
Z2TfqmV3R1ba6fL0Nq4k33Wi8xZyAJfw92T8saeHnmYscpX9ToZXeMm2izGZ
j1F/ysv3CZV4Y8LJ3n+pKP+kRjv4Gl+qYDd/k4d8+dDvO7W48XLVVSkc2Sdq
/BAFZ/HeuMU1idZPv+jbV42zj9aTD8wiP7/zVaQK5zKI3M4zjyzdfGp7BS4g
vv8R/wZanxdJ71SCCyeNGB8kDaDfywOs/IW46LYCLqHtyMwC5ZHZuMwXxazD
e5CTXY4URePyZ//ZibIjd5lYM9vjStWNR8T3I7OEjUkE4eQ4k0pJIeQMuSNF
KbiBlkeL/DHk3juvW4vxGM4f7IbhyBUeB468xPe87n9xX+QTnG9ov3huAc7a
H55Xf3cQ5tMB4E003lN7Trbw42d0/4iFLF/Hi4Y6jpZxDEMv0bBb2uFhn4X+
Brp+Qc/HWJaf0rg/h4y6a9lX9Dysr75IwjkeFEZs9x5B866+A1L4jfXcD8cO
fkPXWzQIBHFThsBL61TkObmv1xlwjK6uTcD1O/o+wFwuexAPs91D4uMahY4J
aLnBh5tfPu7+vAp51td5gAWXOtvRmGY7htYX3hxkxh/1qZvy0Y2j928quwQt
rl9XU+qdgZxxqZpuuXbP08xZubMT6Pftpwci87VWnFevBU0js/w6TzdR+yIw
tk46aRLaWYef9lvt/ZAUczelKWgdHsbLH2vf/iypCe9HZmn/7tdZu3VKaov2
7g/0fcNSgae5tlnlftBuwWlo8m8uO2ptrMC50dudyAOxT9ora984CLA0+M2g
zzsq9VJRrav+e98Urll0XpY5P3NqDwmNN/Q1II+ktD5MrHVIHNB9du0n2u/8
w78xtTucPj4l0/1C68U45x7WFkuf6DlVgkz+wN53u/ZzbJjGZ73fKN9zhc2/
VpPd8EO2AbL1kQti3rXFj7kdnI2RyWfr59xrA1PLHv41+6/+TLStTa1g7uAA
/1Vk0nonfrXWsVrqxlX//+orF6zu1K586U/9mYccPDvn7lBrbZMpVVX4/36M
ZOvallGnusDi/9YPcZXp16ZMkSb3lP9Xr7LUaqKiviAuJweQM7grD/uqhG4P
avHuRXa74yUSpfIr/PRFrP+/9U86nB6qmDKx/2L49F//S6uu0SqiewrZnnxB
LutiTnik0s7Ve6n2x3/+aen3UEUh9en8vdn/+m009T9QSed1CNH9jdzFv1B2
X8VN8G/h8NJ//XInq+6pfMppVs1b+W8eyZVnQSoaInGdruvII5qtwd4qRYWW
tsf+/lcflrBmr8ImIbK8tfXffKSy/gjl/wEKaaiq
          "]]}, 
        Annotation[#, "Charting`Private`Tag$41518#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0XtI0wEQB/ChmSTRTJ2MJB+TUCvmI0StmA9SymcpSqJZro0m1rZMRmpt
YLo1okTJpM2Zkg6m0yzIfCS4nMzyla/f1KVZy2fbJCkFa62CuDs4js8/x3Ff
HyYvlW1HIpGS/va/2Us2Wo3FZZGk/7UY/7LG7UA5eJdYEhzbhY7/dYSt3BaD
idXCYU6hFGzR7Jabrz0AOx+n1JYEPQTHmMIjyn3rwDeoPL6TQQXWvrWSWrae
g6NoXi6S5Q7w8GYNozT6NXhev9Uoqu8DZxckdY6k94PTZOMbgt8D4JJwrXtu
0SC4pYo5NBcwBN57mcerVo/gfYtT8vT978Essy7O/8o4mBtakOehnADfytpM
JWyT4LjT0lFG2jQ4gK/X6CoI/I/gZwl1RQ8mvyJapX6zYBdConxTOgee6EkJ
VukN4OYPo8faKfNgscHXKuQugIspQQxu+0cw5Z7qroNgEczbaZoO8/kEznAU
5uz0oSPtNe+8uZ9xP5NM8qQawZkXI663dKDpCaMDtcwv4IopRoan/RI4WdP9
TFCPJisaTCEJy+AL7iy2aB3dKqzUBNasgKVlskx++Cq439zWLSHQtli6za50
Daw7IRXto62DK71TjLfH0F0cb2dt0VfMM3nkpoxqAh/yXdJOadGc6pnEJ2wz
eE++XhFlbwGrA6MnYtvQhkpxjCFpA3zK7dz007No9SMPztU0tFDeft96Hk1r
mpvxYqHzOuk8VjF6e4GQm5XoS7kN9A4VetCYrxGq0bJV0gr5BZqxeTgkpBdd
7iAaFEyiLZIzWZEEOsPJzeI4i/Ynq1wfL6CHqZM5PWvoULni2x0Tuu4gpyxx
A82nWVXz39GzjbqTym10jF/VGHcH3azKZoZZ0a5H/X7YbOg/hR1ATQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$41518#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.777733859567869*^9, 3.777737330373562*^9, 
  3.7784176477271557`*^9},
 CellLabel->
  "Out[270]=",ExpressionUUID->"816a0c4e-0a60-4000-866d-cbea9d49986f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R30", "[", "\[Eta]", "]"}], "-", 
        RowBox[{
         RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "1"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}], 
     ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R31", "[", "\[Eta]", "]"}], "-", 
        RowBox[{
         RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "2"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}], 
     ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R32", "[", "\[Eta]", "]"}], "-", 
        RowBox[{
         RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "3"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}], 
     ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R33", "[", "\[Eta]", "]"}], "-", 
        RowBox[{
         RowBox[{"\[ScriptCapitalR]opt", "[", "\[Eta]", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "4"}], "]"}], "]"}]}], ")"}], "/.", "totBG"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7777331944506493`*^9, 3.7777332027596207`*^9}, {
  3.777733233439868*^9, 3.777733400034027*^9}, {3.777733531596086*^9, 
  3.7777335508891287`*^9}, {3.7777340669363337`*^9, 3.777734086198181*^9}, {
  3.778417640977145*^9, 3.778417671639331*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"0ce67354-2cd5-45ca-8f41-613dc9580912"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwk13c8ld8fAPBbZpKsfCUhkRFCkhQXCUmFZGfvFdmrJNnJzt5ZSUJCOuch
2VkhJCHJqoyGzN9znt9fXu/XZ5zPOee5z72OWNzUtt5NIpGO7SWR0N/X+79s
ffELIZNIOXEHNNwVJtRfPGLluE8mVb6uMgvVUKQMDZO4UHefrPDuz9zofj1F
gUaDTk/9UHJF7ePnggzGiuqbx60L/4aSSb6Jl/46mig6n97eHkoOI2Nct8Ks
SaaKsbd6U2ikw8mxLj/jcqxMFKue5knKDIaTK17x996iuqE4NOvRZecRQR7+
Q/HozQkjxX9HVW1SWSLJva9c6cMPGihymh4kdVRGkknVQVEnZnUVLQZfnzy+
HEUe01h1bY/TVrzPGPvOKDaaTKLkUM0O11QsvmRhG33iAVnhgJhltsJlxc5Q
qV2vux+Qzeyis/JqLyr+aKRO/+4cQx5movm36K+iyLw1LMW17yHZVUdtr1Tk
ecVTMk+6r5ThpjhxSmZSQbGsTr4a8seSZZY7ri6vn1OU/yCwS98zltz2USbT
7oWMYu8vxitLzbFk9p2w2MhZKUVz5vW0cNY4Mumo1WZjpITiyokv33is4si9
C+X/GPlFFUMud0nVVeHxTJ59578LKLI5vrirRRFPZn+X/yHI+KhiUXhW95x2
PFlcSL04oJlLUaYw7FBwXjxZwftnkdD4f4odb1ztOFbiyWbOSf6P5pgUjScN
XlQqJpB5KB/vNUrdo/h9W2n3pbgE8oTkjT8nP5MUb3OKXP0ykUA22y7q/riy
osAoeyDDXzyRHMSnvphFPaqQp7c9yxKUSCYZ8Nqufu7GTnp+O1XWg8djJciF
nbNYc3xvsDJ3EnlCZk8J2/VVTLeirmfMBfePJzkcn9aw2Xd5nJ4gidz7JWmr
7fgW5rsQZb+PIZms1rVey3SK1Ei3x7Pm8Y1ksllwLf8Nk12NGcdMKOSfJpOX
NrTV9/HubhRTVtUc2kwmu36YrUqN2d0IzcUzXTQekSt+zjmOVOxu1LxzcJ46
A/eZ65dFE3c3TmXsPp298IislvwppFBpd6NH/cK902dTyAFjLHeE3u5qpB4e
6O2JTCFPU/F4Pji6qzHl9+vDdqMpZAV2zt+1VqRGIZYiB5JwKnmiYZPD+/AO
Vi8e+zLFN5Vc8WXPl/bLW5jGFV9KifZUss+9Yb8qyw3MNeJSlrldGlmwKONi
pulfbHeR1MK/l2lkNQGuc0D7N5bQfFgmniadnMFww2jpwipWs/Ozr6kwnaxv
4Jsw6P8DUzs8wmX0J51sdnFcKD9hHhuRbXJcvZBBrqCv2rreNoNteiZS8X3N
IJtViJ1eOPkZi0kI1G6QyiS7Xtzx9/Yfxrif22TrhGSSFXi6zGLZ+7GK7quL
i+9xT5g47xxuw5QWZc7cP5qFm0/BMrQOu373g3ePbxaZZJxitz8qBLNj86o5
2IubbozLLO4e5veE9bflsWwyqensd3PtBOyBQtXJ8oBsclDBAF+4fjqWM6h1
a60/m4ztnK4x3crBDE756Oey5pAVxG9/e/MkH5u60+rdQs4hY9kmXgwtjzGn
DrZHCw64D9x3ETUswn6z2tQwJueQg5Repet6FmO3TV8MnmrE66cy+Cj4SjDa
Usrfhos5ZFKJuuYPtxIs7tc11qD/csnYOss3NocSjIOcf/KxEm4zuqAmthKs
IGJFu8M5lxy0+EYr+G4xJjqgeOtnSi6Z5FrHc6aqCKvhiotjbcbjwcabR6oL
MbL9RMWZn7lkM9XbUR+iHmNtVSd6TTjyyBOx9FVGigXYR7VuhhLXPDJpvLKC
zjQXs0o4LNadnkfGXKIjaR9nYz8+OV1ebcHjJt8Pr3pkYCT3vdFyh/PJ2Jkr
J1+sJGERrw2fWKjhlhi+uKciHmOmLe0Ic88nk+rXpN/Px2AZ2v/myrLw+IpK
VFJcOMafqbanvz2frGBtcmi3aTBW/u2R4N9f+eSgjyPq4nU+mIzkN1VOngIy
qaz8CMMlB6wxQNpW8RJutTw69ocKmHrr/VAbL9wipx46kBWx90yDj6Nycdec
4Cs9oo0ZG/O9rejCrXyPxcHaEJspdJ8e/Is7LeWtzGsz7OZyE8UG72MyaWbX
QGCtJbZ2lvkozxXcr+LiJkRssOBQc6ULvribvrp95rXD9vZVmDsU4LagDaTM
t8cSD5HuPuzBHeb3vveFA3bY5mpO9TrufNcTTy0dscKKLDjCX0gOotuhG6t2
xMQ3vo9va+KO5uG9+dwRq7sgt300AHer0U15c0dMKTb68MWiQjIpwa99stMB
6xr9eM6lH49Xp1I/WbPHrvMfN07YwuMer3vzfthh4zf9/GsFi8gkvvPq96tt
Mdv69rRP14rIQTbetZimDbZEebB+9x3csoV3PdqtMIq0l2sag7jNvdRP25pj
0dPU7LdIxWRSn7X4X1FTjO2E7ulHx3GbxP++6GaECTb/8py8i1vF6H1m6zWs
kkE5ifop7v1ZA6+GrmJnDRKqjw/j1uW79klQDWvOn3qvSVFCJr0IyalOUMCu
/JBY9RTDbcLEVq4miX2QucucboA7J+6hkgsDZnavVwILwa3JkXUngh6bf8et
9fUZ7t63q4xb3Jg7+01Xuo+4x2Tz5UYEMDP1F1nXKErJpOjYV4IaYphGwEZX
xnHckqGZt35LYDLlihtfr+FeTPO4YSKF8U2ECZ0IwK2mt9NtJY0xMnfr+RTg
vm24Sr1PBts6zxra2IW7lpk+wOgMNu9pWE33G/fKS4EeHVlsqChn6trhJ2TS
/NNNuCWLNY3MMGZewN1UN8VrdBYr3ytKnnHGrcTz94PbWSxNzt35RDLunf3X
3qicxcJu1qX7ANxTpeSWcVnMI3envXEG99HjGnXyspjZ+wtrdPvL8Oeb64St
4xlMgyr6mM5p3AITN8LtZTCZ0/06maa4FW+pQrnTGJ89+72ZMNyFlUeSFk9h
TOkmz09U4H7kdsbbTwqb357f10R6iv8eePs+QFkCGxKXOLdXCHfl46f1TCew
JgtvBx0t3L3v/gT7HsfSWyhaZ3JRXLeJm5IPC1+7+PtEB+4xp1bZUzyYh3Ds
Ud8VlB8L+96wY2bGQ1pNHOVkEuegvugRJkwjhjNo73nca1P/sg9TYDKYRbmO
I+6gLP/QNxOQf6V4LDMBN0mwJOHJJGTm+0n37RUy/8k18i+4ff3UGfFp3Iy8
9/YlbcP5MH9bX/pnZNLw3OfkBQpsqK4xqUkKdzXjT3oqWqxpgaZ57w3cFZ7J
t1P3Ys8OX1nRuY/cm85dxoBlXE3kyXqKW1rbXTeHEQu/O3rl2yDuApsXZU+Z
MI8qnkDxbdzxJ+xNgpixiltVg+dYKsgkmSOTkxwsWGHUkJO5AO7E5c7eOyxY
RsE/itCzuDP8scnnLFj8a8700qu4p8Qtp6pYsIghsmSPJe7x3Rcqw1mwoJ8W
7aveuLn0B+ROsmBetKFm7NG4Tbws/WqYMacjJX/P5eBmXrtocYAZs5DtijGv
xl2247SszYTpX/vJH9qGW6FbhPcWI3bFifl16Rhu1jsGgwsMmPL9Uzo9S7h9
Xr33aKLHZLP0F1Ypn+Pv+3LJJWc6TPylfzD7Qdyk43E7qzTYsd6sg3KiuMMD
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
bdS0ArEqJ4SPDRL7Wcx2sgD0e5kZEkaJfrZ+OmYgvOfX8s5n4v5WEtiNAWXi
h0Gnr4RnOCX0QJB+fd3IPLF/VY8NLbDJmZmpskSct1Mz6SLwmbxzt+o3YVY1
3rPg12MLa54NYv2Q12l7gavDhYsPSKPE+31ltyRYFBMUXadCVoj6Qn8e2K3S
MdnuRQ6y2hupAaZffv/1npGIZ8a+0AZmAb3DCmyEDyr16YIxhaqGp4eQzVz8
4wyBPlVyDscRov/wm+UbYKDdJyTsGHKvcp23GdCKMbL7dRy54tDGG3PQrS2v
YS4xSrxfLccsgPp/R8S7pYn+jtXQErR8pGA9ew6Z0bXSyQoo5cz8LVIk6k+4
TVkBYNX+kVV1lPh86h2xBrJCZfCuBlFPKSJsDWq+x+T/0CJ8smrLCkhWuoUZ
6RH1PBUZVqDcS8exzRhZs/kLjRUQPnv66ikL5CUSg4IlKNw5eDLPlqj3vati
AXibN9n2OyNj6lWHzUFW+Od1/1vEfr/bxpoCjstN47PehDvZ44xBMtPjpuuB
yBNh/koGgHkorLApmDivF8El10HJ70oFtnDivL3ffsK/Xw+Mj9o/IPq7TJde
Ah+k9ni+jifWd8sXPw9cdKT2M6UQ+f/ia6UAlYdpiVUmsV50aD8FyEiIPF+b
R7ha66TI/0iu73gs2ygO4GRkZc+SkJlNRqRIlJREVMpI2toyIiFpSSmJioyS
kT0SzkWSrOyM7Ow9y+Z9nefP7+d3rnOt+74fiEpaRitzDHqBO1ablNZ0ONsk
YH9HWTkDcnKSmTMtlTLfrnUHyCyH+if6rFUL723NPESeKtkZWAJasybqMJE4
9KQjoQDr67n2HSFwNesWdTGu75xu9DFy+FkXt/lPzI/SZRwnQ0msSTE1qw53
O3XDinhXbjNcbEAbnuiwJgJj9l0HW/E8ZjIXbEgy67PbUX/wvj+E2dmSPfI5
fDN92M/eKsyWtB3oTdk3gs+L8nKyLbl5iWN/2CTeJ+O517aE5cn23okZrI/9
amlLoj6d9dRfwvmCjHptiGb58/Uha5pX70O1osSaVA9B+vDaVQs/jLWzIueY
B4x11q3aNsox7ThZ2cI98IJz1Z68eeQYCdq3824fXzOun+P+ESJ34cJGrY2Y
+39gMyeFD19+9hfF/Pw5K1MyWTw0pCq3aqqIii97ycN+Xt+Hyugv55R2EWGG
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
+SUGkcR3bv/2+zd6vuPZWv8Bm5B0Xg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$41768#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0XtI0wEQB/ChmSTRTJ2MJB+TUCvmI0StmA9SymcpSqJZro0m1rZMRmpt
YLo1okTJpM2Zkg6m0yzIfCS4nMzyla/f1KVZy2fbJCkFa62CuDs4js8/x3Ff
HyYvlW1HIpGS/va/2Us2Wo3FZZGk/7UY/7LG7UA5eJdYEhzbhY7/dYSt3BaD
idXCYU6hFGzR7Jabrz0AOx+n1JYEPQTHmMIjyn3rwDeoPL6TQQXWvrWSWrae
g6NoXi6S5Q7w8GYNozT6NXhev9Uoqu8DZxckdY6k94PTZOMbgt8D4JJwrXtu
0SC4pYo5NBcwBN57mcerVo/gfYtT8vT978Essy7O/8o4mBtakOehnADfytpM
JWyT4LjT0lFG2jQ4gK/X6CoI/I/gZwl1RQ8mvyJapX6zYBdConxTOgee6EkJ
VukN4OYPo8faKfNgscHXKuQugIspQQxu+0cw5Z7qroNgEczbaZoO8/kEznAU
5uz0oSPtNe+8uZ9xP5NM8qQawZkXI663dKDpCaMDtcwv4IopRoan/RI4WdP9
TFCPJisaTCEJy+AL7iy2aB3dKqzUBNasgKVlskx++Cq439zWLSHQtli6za50
Daw7IRXto62DK71TjLfH0F0cb2dt0VfMM3nkpoxqAh/yXdJOadGc6pnEJ2wz
eE++XhFlbwGrA6MnYtvQhkpxjCFpA3zK7dz007No9SMPztU0tFDeft96Hk1r
mpvxYqHzOuk8VjF6e4GQm5XoS7kN9A4VetCYrxGq0bJV0gr5BZqxeTgkpBdd
7iAaFEyiLZIzWZEEOsPJzeI4i/Ynq1wfL6CHqZM5PWvoULni2x0Tuu4gpyxx
A82nWVXz39GzjbqTym10jF/VGHcH3azKZoZZ0a5H/X7YbOg/hR1ATQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$41768#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0XtI0wEQB/ChmSTRTJ2MJB+TUCvmI0StmA9SymcpSqJZro0m1rZMRmpt
YLo1okTJpM2Zkg6m0yzIfCS4nMzyla/f1KVZy2fbJCkFa62CuDs4js8/x3Ff
HyYvlW1HIpGS/va/2Us2Wo3FZZGk/7UY/7LG7UA5eJdYEhzbhY7/dYSt3BaD
idXCYU6hFGzR7Jabrz0AOx+n1JYEPQTHmMIjyn3rwDeoPL6TQQXWvrWSWrae
g6NoXi6S5Q7w8GYNozT6NXhev9Uoqu8DZxckdY6k94PTZOMbgt8D4JJwrXtu
0SC4pYo5NBcwBN57mcerVo/gfYtT8vT978Essy7O/8o4mBtakOehnADfytpM
JWyT4LjT0lFG2jQ4gK/X6CoI/I/gZwl1RQ8mvyJapX6zYBdConxTOgee6EkJ
VukN4OYPo8faKfNgscHXKuQugIspQQxu+0cw5Z7qroNgEczbaZoO8/kEznAU
5uz0oSPtNe+8uZ9xP5NM8qQawZkXI663dKDpCaMDtcwv4IopRoan/RI4WdP9
TFCPJisaTCEJy+AL7iy2aB3dKqzUBNasgKVlskx++Cq439zWLSHQtli6za50
Daw7IRXto62DK71TjLfH0F0cb2dt0VfMM3nkpoxqAh/yXdJOadGc6pnEJ2wz
eE++XhFlbwGrA6MnYtvQhkpxjCFpA3zK7dz007No9SMPztU0tFDeft96Hk1r
mpvxYqHzOuk8VjF6e4GQm5XoS7kN9A4VetCYrxGq0bJV0gr5BZqxeTgkpBdd
7iAaFEyiLZIzWZEEOsPJzeI4i/Ynq1wfL6CHqZM5PWvoULni2x0Tuu4gpyxx
A82nWVXz39GzjbqTym10jF/VGHcH3azKZoZZ0a5H/X7YbOg/hR1ATQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$41768#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt1Xk01O/7P/AJIRJZSllSdsqWovF6ubQoSbakSIok2ZM9yZJd7+xka+w7
YxvMvGYaIpJs2beo7IqoKEu/fh/fv+7zOOd5n+s69znXdR+2dDK8y4DD4Tx3
4HD//6Ryft787P0U8qKcTDVe3aKOa1cn8h4MAsl5G3F+IR91puAQRc26IGAj
etNer8SqS9abvHO7HgzztjB566EOTXtD9m7uajCMjLpHB52MV3dQ2drqSwgB
60p3h4dH4tSjXDqTWE6Ggq8fFy1hJEG9siRTSbU3FPx6uS5IOcSq9824ttm4
hgEOl6wfK5ih/lv0gvULnnC4KvH6uBzqoi546wCutSIcrNSOBdZneahD8vyL
PwYR0HheXZnGEapu2Us9Lvs9Ajj4qSOyNx+rB3FFvb8RFQnMCc2ciTIXaPmX
LO9Fyj8DDst15fcWV9XfBSvvoLY/A6LYwlNqr7P6t3rmlK8O/wF/TfTaSJab
OvfmgLIwx3NYa2Bk6la6rX5Ctahdt/g59BazTj/eqUErrlOveiUeBQPXZBp/
KKA09X7JHdfdomD+sU8zv9U59c4fXLpLjVEw4y/8N+iUiboF95/kUN5oGFL6
dZbKokhblv88LWIVDUfODHfK151Wf3q5TbmuMhpuy33pENohSNtnV+1vwBgD
fgLdwiulX9C80PT2WcMYmFkinfowspemmhsiEJAZA02pPuk73qnQWl872xxc
joHT9y3pZxnVaGYTJtUVp2PB6GKrVPQJWdrXrTMMl6JjQZWh+Pzerl00X8Gj
ep/HY8FZmsl34fUKlQvPl/pIIQ7aRs4+Mvi+j5Z5bWuGxy8OcAWJvtSl7+hx
t+kTxR1xQOdatZH330NrjOkMOHcoHqbGuy5uyInTjIl1HSOO8fDgvozus6hj
tJn3mYJutHjwkPQ6PTIjQ/Oaj7jPsScBSmMzP2o1H6Gx7XIj5dxMAMTh/v6F
62y0VAlzRvWSBNiB1BTdOH6EJnfugn7fRgIE86V6X2o9QHtloZDmqJMIZ45y
fH12jY+m/+TAHHNqIhTojA7m8IrQPqUyqLycTwTTR1hZYiEXzZU8H6iilgS5
9XceKLUcpDEP9HR2hCfB0ZDoooPVe2lJP6lCNkNJ0C1w2Pyn/T6aNE+eLU7m
BSzpVsZWWTDTyApRNUleL8B85KVXAI6dpqPrxaT49gX0vLZhjrXjpI3ZWRq8
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
/weql14r
          "]]}, 
        Annotation[#, "Charting`Private`Tag$41768#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7777335228493958`*^9, 3.777738515891131*^9, 
  3.778417699497281*^9},
 CellLabel->
  "Out[271]=",ExpressionUUID->"3fdf35c4-214f-4e53-b48c-244ea37fe30d"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.77773274210254*^9, 3.7777327967188883`*^9}, 
   3.7777332157587757`*^9},ExpressionUUID->"7eb19dbe-ab38-470c-9487-\
d59f03b8f783"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tmp", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Tau]", "+", "\[Eta]in"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "0", ",", 
         RowBox[{"ETA0", "-", "\[Eta]in"}], ",", 
         FractionBox[
          RowBox[{"ETA0", "-", "\[Eta]in"}], "100"]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmp", "[", 
     RowBox[{"[", 
      RowBox[{"Length", "@", "tmp"}], "]"}], "]"}], "-", 
    "ETA0"}]}]}]], "Input",
 CellChangeTimes->{{3.777720786221386*^9, 3.777720843849431*^9}, {
  3.777720973397654*^9, 3.777720985609893*^9}, {3.777858345222795*^9, 
  3.777858540084175*^9}, {3.777858576917243*^9, 3.777858610747409*^9}, {
  3.777858682257843*^9, 3.7778586857242537`*^9}, {3.778325357454829*^9, 
  3.7783253666146307`*^9}, {3.7784129764755077`*^9, 3.778412976628056*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"5aa39eed-87ce-4ced-bc3c-a61be4933976"],

Cell[BoxData["0``102."], "Output",
 CellChangeTimes->{{3.777720838750442*^9, 3.777720844507594*^9}, {
   3.77772097563402*^9, 3.7777209868031187`*^9}, {3.77785832440976*^9, 
   3.777858541082304*^9}, {3.7778585801662273`*^9, 3.7778586121838827`*^9}, {
   3.777858683512713*^9, 3.7778586866019087`*^9}, 3.777907128029768*^9, 
   3.7783021412994957`*^9, {3.778325358933786*^9, 3.7783253674141607`*^9}, 
   3.7784129793668537`*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"e0b6ce2e-a4cd-45e5-afef-2f4ca674118c"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[ScriptCapitalW] operators", "Section",
 CellChangeTimes->{{3.777182344590057*^9, 3.777182396978157*^9}, {
  3.777576312317155*^9, 3.777576314290206*^9}, {3.778843670819306*^9, 
  3.778843673412574*^9}, {3.778844041944757*^9, 3.7788440428104477`*^9}, {
  3.828538295775573*^9, 3.828538297644226*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"5dd97302-0485-41c2-ad53-fa5c56889885"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Mxx", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"MXX00", ",", "MXX01", ",", "MXX02", ",", "MXX03"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"MXX10", ",", "MXX11", ",", "MXX12", ",", "MXX13"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"MXX20", ",", "MXX21", ",", "MXX22", ",", "MXX23"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"MXX30", ",", "MXX31", ",", "MXX32", ",", "MXX33"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mxl", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"MXL00", ",", "MXL01", ",", "MXL02", ",", "MXL03"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"MXL10", ",", "MXL11", ",", "MXL12", ",", "MXL13"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"MXL20", ",", "MXL21", ",", "MXL22", ",", "MXL23"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"MXL30", ",", "MXL31", ",", "MXL32", ",", "MXL33"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mlx", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"MLX00", ",", "MLX01", ",", "MLX02", ",", "MLX03"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"MLX10", ",", "MLX11", ",", "MLX12", ",", "MLX13"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"MLX20", ",", "MLX21", ",", "MLX22", ",", "MLX23"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"MLX30", ",", "MLX31", ",", "MLX32", ",", "MLX33"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mll", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"MLL00", ",", "MLL01", ",", "MLL02", ",", "MLL03"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"MLL10", ",", "MLL11", ",", "MLL12", ",", "MLL13"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"MLL20", ",", "MLL21", ",", "MLL22", ",", "MLL23"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"MLL30", ",", "MLL31", ",", "MLL32", ",", "MLL33"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.7771823999742947`*^9, {3.7771963973562927`*^9, 3.777196483757571*^9}, {
   3.777226713563485*^9, 3.777226728683963*^9}, 3.77722739443548*^9, {
   3.7772276684438887`*^9, 3.77722768509663*^9}, {3.777379492660261*^9, 
   3.777379530837048*^9}, {3.777380167742998*^9, 3.777380249709403*^9}, {
   3.777718036327282*^9, 3.7777180397109137`*^9}, {3.778844059566512*^9, 
   3.7788440683151693`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"8dd17eaf-386d-497e-b3f8-59bde3b209d1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "BGOequations"}], "\[IndentingNewLine]", 
 RowBox[{"?", "SolveBGO"}]}], "Input",
 CellChangeTimes->{{3.831536266838328*^9, 3.831536274218191*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"65f9b43f-8f6e-4185-be01-887c90313401"],

Cell[CellGroupData[{

Cell[BoxData["\<\"BGOequations[\\!\\(\\*SubscriptBox[\\(W\\), \\(x\\)]\\),\\!\
\\(\\*SubscriptBox[\\(W\\), \\(y\\)]\\), OPT[t], \[Alpha][t], E[t], param, \
t]. Compute the geodesic deviation equations in the parallel transported \
frame for a group of the Bilocal Geodesic Operators \
{\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalW]\\), \
\\(XL\\)]\\),\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalW]\\), \\(LL\\)]\\)} and \
{\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalW]\\), \
\\(XX\\)]\\),\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalW]\\), \\(LX\\)]\\)} in \
the form {\\!\\(\\*SubscriptBox[\\(W\\), \\(x\\)]\\)'[t]= \
\\!\\(\\*FractionBox[\\(\[Alpha]\\), \\(E\\)]\\) \
\\!\\(\\*SubscriptBox[\\(W\\), \\(y\\)]\\)[t], \\!\\(\\*SubscriptBox[\\(W\\), \
\\(y\\)]\\)'[t]= \\!\\(\\*FractionBox[\\(\[Alpha]\\), \\(E\\)]\\) \
OPT[t].\\!\\(\\*SubscriptBox[\\(W\\), \\(x\\)]\\)[t] \"\>"], "Print", \
"PrintUsage",
 CellChangeTimes->{3.83259321187224*^9},
 CellTags->
  "Info1763832600411-9863370",ExpressionUUID->"14e8fc95-7e2a-475f-9b52-\
4f6dccfbf824"],

Cell[BoxData["\<\"SolveBGO[]. Solve the geodesic deviation equations in the \
parallel transported frame for a group of the Bilocal Geodesic \
Operators.\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.832593211942816*^9},
 CellTags->
  "Info1773832600411-9863370",ExpressionUUID->"05478a0e-72d8-4ab4-aaee-\
8d0e6ffaca3a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["O to S integration of W", "Subsection",
 CellChangeTimes->{{3.832593303757738*^9, 
  3.832593325587216*^9}},ExpressionUUID->"a2d40803-6a35-4c59-b545-\
bb2895de396d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Mxleq", "=", 
     RowBox[{"BGOequations", "[", 
      RowBox[{"Mxl", ",", "Mll", ",", 
       RowBox[{"\[ScriptCapitalR]ll", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"\[Alpha]\[Alpha]", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"EBG", "[", "\[Eta]", "]"}], ",", "param", ",", "\[Eta]"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mxlgrupbc", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Mxl", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "ETA0", "]"}], 
           "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Mll", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "ETA0", "]"}], 
           "\[Equal]", 
           RowBox[{"KroneckerDelta", "[", 
            RowBox[{"i", ",", "j"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "Mxl", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "Mxl", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Timing", "[", 
    RowBox[{
     RowBox[{"Mxlgroupsol", "=", 
      RowBox[{"SolveBGO", "[", 
       RowBox[{
       "Mxleq", ",", " ", "Mxlgrupbc", ",", "Mxl", ",", "Mll", ",", " ", 
        "totBG", ",", " ", "param", ",", "\[Eta]", ",", "\[Eta]in", ",", 
        "ETA0", ",", "\"\<SS\>\"", ",", "60", ",", "50", ",", "20", ",", "10",
         ",", "1000.`"}], "]"}]}], ";"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.79403357454139*^9, 3.794033575182571*^9}, {
  3.794033904758246*^9, 3.794033910209745*^9}, {3.7940350512877207`*^9, 
  3.794035060898102*^9}, {3.796472766881826*^9, 3.796472797416263*^9}, {
  3.796625661837596*^9, 3.7966256620208817`*^9}, {3.798613159432108*^9, 
  3.7986131972248983`*^9}, {3.801892436704364*^9, 3.8018924372445393`*^9}, {
  3.82867827248035*^9, 3.828678291371069*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"2838f40c-a84b-4e7b-99aa-1d618303ab86"],

Cell[BoxData[
 TemplateBox[{
  "SystemOptions","noset",
   "\"The value of SystemOption \
\\!\\(\\*RowBox[{\\\"\\\\\\\"PreemptiveCheckUseThreads\\\\\\\"\\\"}]\\) \
cannot be modified.\"",2,177,14,17611537069224194043,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.79403394220998*^9, 3.794036533915262*^9, 
  3.796472848146296*^9, 3.7966257471976223`*^9, 3.79662604607672*^9, 
  3.801892504813408*^9, 3.810103326640943*^9, 3.8314702955950747`*^9},
 CellLabel->
  "During evaluation of \
In[175]:=",ExpressionUUID->"eb9c32f8-7160-47a6-a8bb-a41606532270"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"26.758234`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.794035047004134*^9, 3.794036533918399*^9, 
  3.796472848154434*^9, 3.796625747207528*^9, 3.796626046086296*^9, 
  3.801892504821162*^9, 3.8101033266470957`*^9, 3.831470300392108*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"70ce9e89-0b30-46e2-a4c7-dae6568671dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Mxxeq", "=", 
     RowBox[{"BGOequations", "[", 
      RowBox[{"Mxx", ",", "Mlx", ",", 
       RowBox[{"\[ScriptCapitalR]ll", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"\[Alpha]\[Alpha]", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"EBG", "[", "\[Eta]", "]"}], ",", "param", ",", "\[Eta]"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mxxgrupbc", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Mxx", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "ETA0", "]"}], 
           "\[Equal]", 
           RowBox[{"KroneckerDelta", "[", 
            RowBox[{"i", ",", "j"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Mlx", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "ETA0", "]"}], 
           "\[Equal]", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "Mxx", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "Mxx", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Timing", "[", 
    RowBox[{
     RowBox[{"Mxxgroupsol", "=", 
      RowBox[{"SolveBGO", "[", 
       RowBox[{
       "Mxxeq", ",", " ", "Mxxgrupbc", ",", "Mxx", ",", "Mlx", ",", " ", 
        "totBG", ",", " ", "param", ",", "\[Eta]", ",", "\[Eta]in", ",", 
        "ETA0", ",", "\"\<SS\>\"", ",", "60", ",", "50", ",", "20", ",", "10",
         ",", "1000.`"}], "]"}]}], ";"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.794034009054657*^9, 3.794034009804047*^9}, {
  3.796472817665702*^9, 3.796472820193334*^9}, {3.798613240437642*^9, 
  3.798613283016026*^9}, {3.801892448886154*^9, 3.801892449348976*^9}, {
  3.828678358606024*^9, 3.828678363658244*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"bea6303b-d868-49ff-a480-cbed4413ead9"],

Cell[BoxData[
 TemplateBox[{
  "SystemOptions","noset",
   "\"The value of SystemOption \
\\!\\(\\*RowBox[{\\\"\\\\\\\"PreemptiveCheckUseThreads\\\\\\\"\\\"}]\\) \
cannot be modified.\"",2,180,15,17611537069224194043,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.801892581825468*^9, 3.810103399099779*^9, 
  3.831470327624174*^9},
 CellLabel->
  "During evaluation of \
In[178]:=",ExpressionUUID->"a49fea1a-a6a5-41fe-8e22-754036c0fea5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"27.733246`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.801892581826974*^9, 3.810103399105834*^9, 
  3.831470327653821*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"ccc562f9-538d-4c3f-884d-512d6915e70f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hUU", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       FractionBox["1", "Q"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "Q"], ",", "0", ",", "0", ",", 
       FractionBox["1", 
        SuperscriptBox["Q", "2"]]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hDD", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "Q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Q", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hUU", ".", "hDD"}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"functional", "[", "\[Eta]_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Mxx", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Mxx", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], 
        ",", 
        RowBox[{
         RowBox[{"Mxl", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Mxl", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], 
        ",", 
        RowBox[{
         RowBox[{"Mlx", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Mlx", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], 
        ",", 
        RowBox[{
         RowBox[{"Mll", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Mll", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.796472865902629*^9, 3.796472871455306*^9}, 
   3.7964729049926167`*^9, {3.8286783211083803`*^9, 3.828678322063126*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"ed11a43e-a71d-4af7-80be-dd172eed5908"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`58.36762521216282", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0``58.06659521649884", "0", "0", "1.`58.36762521216282"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.796472921912966*^9, 3.7966258214625463`*^9, 
  3.796626127806101*^9, 3.8018925990551043`*^9, 3.810103399158709*^9, 
  3.831470327695273*^9},
 CellLabel->
  "Out[183]//MatrixForm=",ExpressionUUID->"07e39d99-5456-4c9b-b232-\
0720f248b138"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"BGO", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"Mxxgroupsol", ",", "Mxlgroupsol"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.801892609448511*^9, 3.801892618538612*^9}, {
  3.828678375279866*^9, 3.828678377358959*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"46f4a108-5089-4697-b5b5-8132d505d983"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MXX", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Mxx", "/.", 
       RowBox[{"functional", "[", "\[Eta]", "]"}]}], "/.", "BGO"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MLX", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Mlx", "/.", 
       RowBox[{"functional", "[", "\[Eta]", "]"}]}], "/.", "BGO"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MXL", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Mxl", "/.", 
       RowBox[{"functional", "[", "\[Eta]", "]"}]}], "/.", "BGO"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MLL", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Mll", "/.", 
       RowBox[{"functional", "[", "\[Eta]", "]"}]}], "/.", "BGO"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalW]", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"MXX", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"MXL", "[", "\[Eta]", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"MLX", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"MLL", "[", "\[Eta]", "]"}]}], "}"}]}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.79388476883996*^9, 3.793884820127489*^9}, {
  3.794033690817127*^9, 3.794033691859838*^9}, {3.796472948236271*^9, 
  3.796472953420309*^9}, {3.80189262581892*^9, 3.801892636504818*^9}, {
  3.810105646926188*^9, 3.8101056584596167`*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"01654f07-bfda-4cb8-8b66-b37c908bb6f1"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"BGO", ">>", "\"\<LCDM_res49999_BGO_bisect.m\>\""}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.801892696229958*^9, 3.801892746596044*^9}, {
  3.8101055932558403`*^9, 3.8101056020362577`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"02057100-cd80-4d5f-8ee5-3741645ae59a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalW]", "[", "\[Eta]in", "]"}], "//", "N"}], "//", 
    "MatrixForm"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "11111111111111111111111111111111111111111111111111111111111111111111111111\
1111111111", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalW]", "[", "ETA0", "]"}], "//", "N"}], "//", 
    "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.778827999578776*^9, 3.778828017296132*^9}, 
   3.778828065965515*^9, {3.7824621942728453`*^9, 3.7824621979092407`*^9}, {
   3.793876150293373*^9, 3.793876153421144*^9}, {3.7938763233904753`*^9, 
   3.793876323918104*^9}, {3.7938848942588778`*^9, 3.793884907242758*^9}, {
   3.79647297173927*^9, 3.796472991837367*^9}, {3.810105665149872*^9, 
   3.8101056671200438`*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"f46bb024-2312-4d95-82c2-459a09be4c15"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.2877394281851598`", "0.`", "0.`"},
         {"0.`", "0.`", "0.2877394281851598`", "0.`"},
         {"0.029566705580108044`", "0.`", "0.`", "1.`"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.1622248089133752`", "0.`", "0.`", "0.`"},
         {"0.`", "0.06077021098223868`", "0.`", "0.`"},
         {"0.`", "0.`", "0.06077021098223868`", "0.`"},
         {
          RowBox[{"-", "0.0009360983488118662`"}], "0.`", "0.`", 
          "0.1622248089133752`"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", 
          RowBox[{"-", "174.55516797727063`"}], "0.`", "0.`"},
         {"0.`", "0.`", 
          RowBox[{"-", "174.55516797727063`"}], "0.`"},
         {
          RowBox[{"-", "2.7979669332270114`"}], "0.`", "0.`", "0.`"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1.`", "0.`", "0.`", "0.`"},
         {"0.`", 
          RowBox[{"-", "33.39046875368181`"}], "0.`", "0.`"},
         {"0.`", "0.`", 
          RowBox[{"-", "33.39046875368181`"}], "0.`"},
         {
          RowBox[{"-", "0.4834663566688024`"}], "0.`", "0.`", "1.`"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778828019242776*^9, 3.778828067437339*^9, 3.778828800683997*^9, 
   3.7788478976129208`*^9, 3.779027728665937*^9, 3.7790296250933332`*^9, 
   3.7790914034602757`*^9, 3.779100551853643*^9, 3.781443214315083*^9, 
   3.781443805691381*^9, 3.781444328539689*^9, 3.7815142120327473`*^9, 
   3.781514604184304*^9, 3.781872433160036*^9, 3.781937918258047*^9, 
   3.7822280989123774`*^9, 3.782257707859597*^9, 3.782306971279459*^9, 
   3.7823081345165453`*^9, 3.782392402604031*^9, 3.782455337114934*^9, 
   3.782455946483754*^9, 3.782455998248321*^9, 3.7824560334016657`*^9, 
   3.782458854569858*^9, 3.782461837711246*^9, 3.782462199193553*^9, 
   3.782462868951228*^9, 3.782463074655713*^9, 3.782467274064609*^9, 
   3.78248333710675*^9, 3.782483693616131*^9, 3.78248385858125*^9, 
   3.782580194832004*^9, 3.78264481830919*^9, 3.782645320472929*^9, 
   3.7826488767959146`*^9, 3.782657257470999*^9, 3.783008458004445*^9, 
   3.783051718696768*^9, 3.783091325612026*^9, 3.790699011158251*^9, 
   3.793582706359519*^9, 3.793653628030154*^9, 3.793677171637999*^9, 
   3.793690794411868*^9, 3.7936996697130747`*^9, 3.793869998606679*^9, 
   3.793876154513888*^9, 3.793892205449741*^9, 3.793897046129251*^9, 
   3.793949443020657*^9, 3.796472992807035*^9, 3.7966258215058823`*^9, 
   3.796626127846277*^9, 3.801892642961979*^9, 3.8101056110554533`*^9, 
   3.810105667987444*^9, {3.831470338587034*^9, 3.831470343528697*^9}},
 CellLabel->
  "Out[194]//MatrixForm=",ExpressionUUID->"8a38aa65-a483-4119-ad20-\
55972b7a70df"],

Cell[BoxData[\
"11111111111111111111111111111111111111111111111111111111111111111111111111111\
1111111"], "Output",
 CellChangeTimes->{
  3.778828019242776*^9, 3.778828067437339*^9, 3.778828800683997*^9, 
   3.7788478976129208`*^9, 3.779027728665937*^9, 3.7790296250933332`*^9, 
   3.7790914034602757`*^9, 3.779100551853643*^9, 3.781443214315083*^9, 
   3.781443805691381*^9, 3.781444328539689*^9, 3.7815142120327473`*^9, 
   3.781514604184304*^9, 3.781872433160036*^9, 3.781937918258047*^9, 
   3.7822280989123774`*^9, 3.782257707859597*^9, 3.782306971279459*^9, 
   3.7823081345165453`*^9, 3.782392402604031*^9, 3.782455337114934*^9, 
   3.782455946483754*^9, 3.782455998248321*^9, 3.7824560334016657`*^9, 
   3.782458854569858*^9, 3.782461837711246*^9, 3.782462199193553*^9, 
   3.782462868951228*^9, 3.782463074655713*^9, 3.782467274064609*^9, 
   3.78248333710675*^9, 3.782483693616131*^9, 3.78248385858125*^9, 
   3.782580194832004*^9, 3.78264481830919*^9, 3.782645320472929*^9, 
   3.7826488767959146`*^9, 3.782657257470999*^9, 3.783008458004445*^9, 
   3.783051718696768*^9, 3.783091325612026*^9, 3.790699011158251*^9, 
   3.793582706359519*^9, 3.793653628030154*^9, 3.793677171637999*^9, 
   3.793690794411868*^9, 3.7936996697130747`*^9, 3.793869998606679*^9, 
   3.793876154513888*^9, 3.793892205449741*^9, 3.793897046129251*^9, 
   3.793949443020657*^9, 3.796472992807035*^9, 3.7966258215058823`*^9, 
   3.796626127846277*^9, 3.801892642961979*^9, 3.8101056110554533`*^9, 
   3.810105667987444*^9, {3.831470338587034*^9, 3.83147034353659*^9}},
 CellLabel->
  "Out[195]=",ExpressionUUID->"771ff824-fc4f-4fa0-92e5-98d52f9b7150"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1.`", "0.`", "0.`", "0.`"},
         {"0.`", "1.`", "0.`", "0.`"},
         {"0.`", "0.`", "1.`", "0.`"},
         {"0.`", "0.`", "0.`", "1.`"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1.`", "0.`", "0.`", "0.`"},
         {"0.`", "1.`", "0.`", "0.`"},
         {"0.`", "0.`", "1.`", "0.`"},
         {"0.`", "0.`", "0.`", "1.`"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778828019242776*^9, 3.778828067437339*^9, 3.778828800683997*^9, 
   3.7788478976129208`*^9, 3.779027728665937*^9, 3.7790296250933332`*^9, 
   3.7790914034602757`*^9, 3.779100551853643*^9, 3.781443214315083*^9, 
   3.781443805691381*^9, 3.781444328539689*^9, 3.7815142120327473`*^9, 
   3.781514604184304*^9, 3.781872433160036*^9, 3.781937918258047*^9, 
   3.7822280989123774`*^9, 3.782257707859597*^9, 3.782306971279459*^9, 
   3.7823081345165453`*^9, 3.782392402604031*^9, 3.782455337114934*^9, 
   3.782455946483754*^9, 3.782455998248321*^9, 3.7824560334016657`*^9, 
   3.782458854569858*^9, 3.782461837711246*^9, 3.782462199193553*^9, 
   3.782462868951228*^9, 3.782463074655713*^9, 3.782467274064609*^9, 
   3.78248333710675*^9, 3.782483693616131*^9, 3.78248385858125*^9, 
   3.782580194832004*^9, 3.78264481830919*^9, 3.782645320472929*^9, 
   3.7826488767959146`*^9, 3.782657257470999*^9, 3.783008458004445*^9, 
   3.783051718696768*^9, 3.783091325612026*^9, 3.790699011158251*^9, 
   3.793582706359519*^9, 3.793653628030154*^9, 3.793677171637999*^9, 
   3.793690794411868*^9, 3.7936996697130747`*^9, 3.793869998606679*^9, 
   3.793876154513888*^9, 3.793892205449741*^9, 3.793897046129251*^9, 
   3.793949443020657*^9, 3.796472992807035*^9, 3.7966258215058823`*^9, 
   3.796626127846277*^9, 3.801892642961979*^9, 3.8101056110554533`*^9, 
   3.810105667987444*^9, {3.831470338587034*^9, 3.831470343538871*^9}},
 CellLabel->
  "Out[196]//MatrixForm=",ExpressionUUID->"5ebe74bb-1643-4a7c-8be7-\
98a1440ff465"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Forward to backwards transformation for \[ScriptCapitalW] operators", \
"Subsection",
 CellChangeTimes->{{3.777182344590057*^9, 3.777182396978157*^9}, {
  3.777576312317155*^9, 3.777576314290206*^9}, {3.778843670819306*^9, 
  3.778843673412574*^9}, {3.778848188992179*^9, 3.77884818972726*^9}, {
  3.828678596809515*^9, 3.828678655371983*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"e5670fd4-492e-4e05-a353-7770691aec67"],

Cell[TextData[{
 "In the case when the initial conditions are given at the initial time, i.e. \
at the source, the BGO are integrated forward in time and they describe the \
optical properties as seen by the source: to indicate the fact that \
\[ScriptCapitalW] acts from the source \[ScriptCapitalS] to any point along \
the null geodesic ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "\[Lambda]"], TraditionalForm]],ExpressionUUID->
  "a8693e08-49c3-4080-98a2-063d9ef2b087"],
 ", we write ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalW]", "(", 
    RowBox[{
     SubscriptBox["p", "\[Lambda]"], ",", "\[ScriptCapitalS]"}]}], 
   TraditionalForm]],ExpressionUUID->"ec849e3a-0127-49d2-8ce9-1eaf6ab1a912"],
 "). \nHowever, all observables are \[OpenCurlyDoubleQuote]seen\
\[CloseCurlyDoubleQuote] by the observer \[ScriptCapitalO], not by the \
source! Therefore, before of using these BGO to compute observables they need \
to be transformed in  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalW]", "(", 
    RowBox[{
     SubscriptBox["p", "\[Lambda]"], ",", "\[ScriptCapitalO]"}]}], 
   TraditionalForm]],ExpressionUUID->"df10ab02-17b7-481d-92d8-9862bc8bb804"],
 "). This can be done using the BGO properties as described in Grasso & Villa \
(2021) and in Grasso et. al. (2021).\n\nThe procedure to perform the \
transformations is encoded in this section: note that here we consider that \
all the quantities (meaning the geodesic and the parallel transported frame) \
were obtained giving the initial conditions at ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Eta]", "in"], TraditionalForm]],ExpressionUUID->
  "3fdc3fc0-bd76-4f85-9f1d-c95eef19483e"],
 "."
}], "Text",
 CellChangeTimes->{{3.828678663314415*^9, 3.828679211619459*^9}, {
  3.828679293325992*^9, 3.828679515464445*^9}, {3.82867960447902*^9, 
  3.8286796657600527`*^9}, {3.828679921139247*^9, 
  3.828679962865923*^9}},ExpressionUUID->"a6d616bc-5c5e-4f18-a236-\
617d1bb598fa"],

Cell[TextData[{
 "\nSolve the GDE for BGO forward in time to obtain  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalW]", "(", 
    RowBox[{
     SubscriptBox["p", "\[Lambda]"], ",", "\[ScriptCapitalS]"}]}], 
   TraditionalForm]],ExpressionUUID->"819d495b-baba-4dba-9f45-082c2973de22"],
 ")"
}], "Text",
 CellChangeTimes->{{3.828680783333612*^9, 3.828680806321802*^9}, {
  3.828680861618031*^9, 
  3.82868087710052*^9}},ExpressionUUID->"5f1c2dd0-2446-4ad6-96b8-\
e4126e81a18f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Mxleq", "=", 
     RowBox[{"BGOequations", "[", 
      RowBox[{"Mxl", ",", "Mll", ",", 
       RowBox[{"\[ScriptCapitalR]ll", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"EBG", "[", "\[Eta]", "]"}], ",", "param", ",", "\[Eta]"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mxlgrupbc", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Mxl", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]in", "]"}], 
           "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Mll", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]in", "]"}], 
           "\[Equal]", 
           RowBox[{"KroneckerDelta", "[", 
            RowBox[{"i", ",", "j"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "Mxl", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "Mxl", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Timing", "[", 
    RowBox[{
     RowBox[{"Mxlgroupsol", "=", 
      RowBox[{"SolveBGO", "[", 
       RowBox[{
       "Mxleq", ",", " ", "Mxlgrupbc", ",", "Mxl", ",", "Mll", ",", " ", 
        "totBG", ",", " ", "param", ",", "\[Eta]", ",", "\[Eta]in", ",", 
        "ETA0", ",", "\"\<SS\>\"", ",", "40", ",", "prec", ",", "10", ",", 
        "10", ",", "1000.`"}], "]"}]}], ";"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.79403357454139*^9, 3.794033575182571*^9}, {
   3.794033904758246*^9, 3.794033910209745*^9}, {3.7940350512877207`*^9, 
   3.794035060898102*^9}, {3.796472766881826*^9, 3.796472797416263*^9}, {
   3.796625661837596*^9, 3.7966256620208817`*^9}, {3.798613159432108*^9, 
   3.7986131972248983`*^9}, {3.801892436704364*^9, 3.8018924372445393`*^9}, {
   3.82867827248035*^9, 3.828678291371069*^9}, {3.828679586238288*^9, 
   3.828679588123335*^9}, {3.832593365577023*^9, 3.8325933853124*^9}, 
   3.832593422511149*^9, 3.832667259966084*^9},
 CellLabel->
  "In[142]:=",ExpressionUUID->"06de226b-ae9d-47d8-ad07-19f67ae25249"],

Cell[BoxData[
 TemplateBox[{
  "SystemOptions","noset",
   "\"The value of SystemOption \
\\!\\(\\*RowBox[{\\\"\\\\\\\"PreemptiveCheckUseThreads\\\\\\\"\\\"}]\\) \
cannot be modified.\"",2,144,1,16928716299805181820,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.832600877766933*^9, 3.832669135282058*^9},
 CellLabel->
  "During evaluation of \
In[142]:=",ExpressionUUID->"591548ed-3997-48be-b92f-d29c5b4ddeec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1872.750907`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.8325933558402452`*^9, 3.832593403251492*^9, 
  3.832594862273731*^9, 3.8326008846889563`*^9, 3.832669135289977*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"4b60fa02-01d5-4256-bc13-3a923bb93899"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Mxxeq", "=", 
     RowBox[{"BGOequations", "[", 
      RowBox[{"Mxx", ",", "Mlx", ",", 
       RowBox[{"\[ScriptCapitalR]ll", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"EBG", "[", "\[Eta]", "]"}], ",", "param", ",", "\[Eta]"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mxxgrupbc", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Mxx", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]in", "]"}], 
           "\[Equal]", 
           RowBox[{"KroneckerDelta", "[", 
            RowBox[{"i", ",", "j"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Mlx", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]in", "]"}], 
           "\[Equal]", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "Mxx", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "Mxx", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Timing", "[", 
    RowBox[{
     RowBox[{"Mxxgroupsol", "=", 
      RowBox[{"SolveBGO", "[", 
       RowBox[{
       "Mxxeq", ",", " ", "Mxxgrupbc", ",", "Mxx", ",", "Mlx", ",", " ", 
        "totBG", ",", " ", "param", ",", "\[Eta]", ",", "\[Eta]in", ",", 
        "ETA0", ",", "\"\<SS\>\"", ",", "40", ",", "prec", ",", "10", ",", 
        "10", ",", "1000.`"}], "]"}]}], ";"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.794034009054657*^9, 3.794034009804047*^9}, {
   3.796472817665702*^9, 3.796472820193334*^9}, {3.798613240437642*^9, 
   3.798613283016026*^9}, {3.801892448886154*^9, 3.801892449348976*^9}, {
   3.828678358606024*^9, 3.828678363658244*^9}, {3.8286799924946404`*^9, 
   3.828679995010724*^9}, {3.832593389449368*^9, 3.832593392907028*^9}, 
   3.832593445299816*^9, 3.8326672711047277`*^9},
 CellLabel->
  "In[145]:=",ExpressionUUID->"e21be740-4048-4d9b-aedd-3202be4927ef"],

Cell[BoxData[
 TemplateBox[{
  "SystemOptions","noset",
   "\"The value of SystemOption \
\\!\\(\\*RowBox[{\\\"\\\\\\\"PreemptiveCheckUseThreads\\\\\\\"\\\"}]\\) \
cannot be modified.\"",2,147,2,16928716299805181820,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8326035813366117`*^9, 3.832670205568653*^9},
 CellLabel->
  "During evaluation of \
In[145]:=",ExpressionUUID->"549decb9-4262-4796-b1fe-da7f52a5c993"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1070.707`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.832603586277034*^9, 3.832670205574666*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"7f647e34-bddf-4c15-8aad-7a69b21ebbbd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hUU", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       FractionBox["1", "Q"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "Q"], ",", "0", ",", "0", ",", 
       FractionBox["1", 
        SuperscriptBox["Q", "2"]]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hDD", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "Q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Q", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hUU", ".", "hDD"}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"functional", "[", "\[Eta]_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Mxx", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Mxx", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], 
        ",", 
        RowBox[{
         RowBox[{"Mxl", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Mxl", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], 
        ",", 
        RowBox[{
         RowBox[{"Mlx", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Mlx", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], 
        ",", 
        RowBox[{
         RowBox[{"Mll", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Mll", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.796472865902629*^9, 3.796472871455306*^9}, 
   3.7964729049926167`*^9, {3.8286783211083803`*^9, 3.828678322063126*^9}},
 CellLabel->
  "In[401]:=",ExpressionUUID->"6ca90a0b-d347-4337-88a1-131661529824"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.00000000000000000000000000000000000007`14.494850017427487", "0", "0",
       "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0``16.194731561696724", "0", "0", 
      "1.00000000000000000000000000000000000007`14.494850017427487"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.832603586318612*^9, 3.8326099112175093`*^9, 
  3.832670293016305*^9, 3.8327069694619904`*^9},
 CellLabel->
  "Out[403]//MatrixForm=",ExpressionUUID->"929324ea-37a7-4c63-b363-\
f729d425a661"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"BGO", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"Mxxgroupsol", ",", "Mxlgroupsol"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.801892609448511*^9, 3.801892618538612*^9}, {
  3.828678375279866*^9, 3.828678377358959*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"f0d408ac-50b1-4cbf-9935-9e2847346fac"],

Cell[TextData[{
 "\nThe block matrices of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalW]", "(", 
    RowBox[{
     SubscriptBox["p", "\[Lambda]"], ",", "\[ScriptCapitalS]"}], ")"}], 
   TraditionalForm]],ExpressionUUID->"29e333f9-480e-4355-867d-8e16971df0ad"],
 " are:"
}], "Text",
 CellChangeTimes->{{3.828681310814333*^9, 
  3.828681373023699*^9}},ExpressionUUID->"11767069-6b85-4a50-b262-\
162af89b0543"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MXX", "[", "\[Eta]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Mxx", "/.", 
     RowBox[{"functional", "[", "\[Eta]", "]"}]}], "/.", "BGO"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MLX", "[", "\[Eta]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Mlx", "/.", 
     RowBox[{"functional", "[", "\[Eta]", "]"}]}], "/.", "BGO"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MXL", "[", "\[Eta]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Mxl", "/.", 
     RowBox[{"functional", "[", "\[Eta]", "]"}]}], "/.", "BGO"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MLL", "[", "\[Eta]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Mll", "/.", 
     RowBox[{"functional", "[", "\[Eta]", "]"}]}], "/.", "BGO"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalM]", "[", "\[Eta]_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MXX", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"MXL", "[", "\[Eta]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MLX", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"MLL", "[", "\[Eta]", "]"}]}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.79388476883996*^9, 3.793884820127489*^9}, {
   3.794033690817127*^9, 3.794033691859838*^9}, {3.796472948236271*^9, 
   3.796472953420309*^9}, {3.80189262581892*^9, 3.801892636504818*^9}, {
   3.810105646926188*^9, 3.8101056584596167`*^9}, {3.828680599542934*^9, 
   3.828680601853067*^9}, 3.828681368210863*^9},
 CellLabel->
  "In[153]:=",ExpressionUUID->"ec1c9368-64aa-4ba0-b8f0-32c589fa4ab5"],

Cell[TextData[{
 "\nThen, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalW]", "(", 
    RowBox[{
     SubscriptBox["p", "\[Lambda]"], ",", "\[ScriptCapitalO]"}]}], 
   TraditionalForm]],ExpressionUUID->"cfedb5c0-0df6-4421-9a49-883454c6a2b6"],
 ") is obtained as:\n\t\t\t\t\t\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalW]", "(", 
    RowBox[{
     SubscriptBox["p", "\[Lambda]"], ",", "\[ScriptCapitalO]"}]}], 
   TraditionalForm]],ExpressionUUID->"acd4d5fd-6d1e-4961-b381-fa5ed53a151c"],
 ") = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalW]", "(", 
    RowBox[{
     SubscriptBox["p", "\[Lambda]"], ",", "\[ScriptCapitalS]"}]}], 
   TraditionalForm]],ExpressionUUID->"3675f5ab-1989-48d4-910c-99beab336c1b"],
 ") ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalW]", "(", 
    RowBox[{"\[ScriptCapitalS]", ",", "\[ScriptCapitalO]"}]}], 
   TraditionalForm]],ExpressionUUID->"fefdf1ea-872d-4b0e-8da5-39343602a8ef"],
 ")\n\twhere ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[ScriptCapitalW]", "(", 
     RowBox[{"\[ScriptCapitalS]", ",", " ", "\[ScriptCapitalO]"}], ")"}], "=",
     " ", 
    RowBox[{
     SuperscriptBox["\[ScriptCapitalW]", 
      RowBox[{"-", "1"}]], "(", 
     RowBox[{"\[ScriptCapitalO]", ",", "\[ScriptCapitalS]"}], ")"}]}], 
   TraditionalForm]],ExpressionUUID->"3b94796c-b5f2-4d3a-a584-874758758bd9"],
 ".\nIn other words, we need to compute the inverse of the 8x8 block matrix \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ScriptCapitalW]", 
     RowBox[{"-", "1"}]], "(", 
    RowBox[{"\[ScriptCapitalO]", ",", "\[ScriptCapitalS]"}], ")"}], 
   TraditionalForm]],ExpressionUUID->"c11f7e6d-80ac-46b6-b2ae-db63fbccb4d9"],
 ": this is not a simple task in general but, using the fact that \
\[ScriptCapitalW] is symplectic, we can find the inverse block components \
as:"
}], "Text",
 CellChangeTimes->{{3.8286808334800367`*^9, 3.8286808495161448`*^9}, {
  3.828680892016994*^9, 3.82868099612794*^9}, {3.828681028521277*^9, 
  3.828681134247409*^9}, {3.828681166445778*^9, 
  3.828681281751048*^9}},ExpressionUUID->"b57c4059-de16-4f2a-a7d1-\
38c6abe50c7d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"WXX", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Sum]", 
         RowBox[{"a", "=", "1"}], "4"], 
        RowBox[{
         SubsuperscriptBox["\[Sum]", 
          RowBox[{"b", "=", "1"}], "4"], 
         RowBox[{
          RowBox[{"hUU", "[", 
           RowBox[{"[", 
            RowBox[{"c", ",", "b"}], "]"}], "]"}], 
          RowBox[{"Mll", "[", 
           RowBox[{"[", 
            RowBox[{"a", ",", "b"}], "]"}], "]"}], 
          RowBox[{"hDD", "[", 
           RowBox[{"[", 
            RowBox[{"a", ",", "d"}], "]"}], "]"}]}]}]}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"d", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mll", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"Mll", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "/.", 
   "BGO"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WLX", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubsuperscriptBox["\[Sum]", 
          RowBox[{"a", "=", "1"}], "4"], 
         RowBox[{
          SubsuperscriptBox["\[Sum]", 
           RowBox[{"b", "=", "1"}], "4"], 
          RowBox[{
           RowBox[{"hUU", "[", 
            RowBox[{"[", 
             RowBox[{"c", ",", "b"}], "]"}], "]"}], 
           RowBox[{"Mlx", "[", 
            RowBox[{"[", 
             RowBox[{"a", ",", "b"}], "]"}], "]"}], 
           RowBox[{"hDD", "[", 
            RowBox[{"[", 
             RowBox[{"a", ",", "d"}], "]"}], "]"}]}]}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mlx", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"Mlx", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "/.", 
   "BGO"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WXL", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubsuperscriptBox["\[Sum]", 
          RowBox[{"a", "=", "1"}], "4"], 
         RowBox[{
          SubsuperscriptBox["\[Sum]", 
           RowBox[{"b", "=", "1"}], "4"], 
          RowBox[{
           RowBox[{"hUU", "[", 
            RowBox[{"[", 
             RowBox[{"c", ",", "b"}], "]"}], "]"}], 
           RowBox[{"Mxl", "[", 
            RowBox[{"[", 
             RowBox[{"a", ",", "b"}], "]"}], "]"}], 
           RowBox[{"hDD", "[", 
            RowBox[{"[", 
             RowBox[{"a", ",", "d"}], "]"}], "]"}]}]}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mxl", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"Mxl", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "/.", 
   "BGO"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WLL", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Sum]", 
         RowBox[{"a", "=", "1"}], "4"], 
        RowBox[{
         SubsuperscriptBox["\[Sum]", 
          RowBox[{"b", "=", "1"}], "4"], 
         RowBox[{
          RowBox[{"hUU", "[", 
           RowBox[{"[", 
            RowBox[{"c", ",", "b"}], "]"}], "]"}], 
          RowBox[{"Mxx", "[", 
           RowBox[{"[", 
            RowBox[{"a", ",", "b"}], "]"}], "]"}], 
          RowBox[{"hDD", "[", 
           RowBox[{"[", 
            RowBox[{"a", ",", "d"}], "]"}], "]"}]}]}]}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"d", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mxx", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"Mxx", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "/.", 
   "BGO"}]}]}], "Input",
 CellChangeTimes->{{3.777304205075492*^9, 3.77730426301886*^9}, {
   3.777304298506168*^9, 3.777304456402152*^9}, {3.777305168567926*^9, 
   3.777305180806041*^9}, {3.7773811446254*^9, 3.777381216024057*^9}, {
   3.77738126654755*^9, 3.777381368455453*^9}, {3.777381446165594*^9, 
   3.777381476464113*^9}, {3.7773815503181467`*^9, 3.777381554227981*^9}, {
   3.7773825821813507`*^9, 3.7773825907064323`*^9}, {3.777698206254397*^9, 
   3.777698211381225*^9}, {3.777698248266268*^9, 3.7776983449549932`*^9}, {
   3.777698812037773*^9, 3.777698839256619*^9}, {3.777699128882594*^9, 
   3.777699132007759*^9}, {3.777700224264862*^9, 3.777700235826548*^9}, {
   3.777700349420586*^9, 3.777700352536067*^9}, {3.777700405597542*^9, 
   3.7777004343887568`*^9}, {3.7777183890545273`*^9, 3.777718540959062*^9}, {
   3.777718585674892*^9, 3.777718588682613*^9}, {3.777718619772092*^9, 
   3.777718662946463*^9}, {3.777718881992339*^9, 3.777718891710998*^9}, {
   3.77771898768266*^9, 3.7777190411101723`*^9}, {3.777719080402052*^9, 
   3.777719111498494*^9}, {3.777719173083843*^9, 3.7777192957124453`*^9}, {
   3.7777239837745047`*^9, 3.777723999952365*^9}, {3.777726557374466*^9, 
   3.777726570557378*^9}, 3.777729404425871*^9, 3.777859601815914*^9, {
   3.777859632873672*^9, 3.777859638746079*^9}, {3.7778596693071623`*^9, 
   3.777859672730871*^9}, {3.7778597323308992`*^9, 3.777859772634964*^9}, {
   3.7778598154689302`*^9, 3.7778598739146*^9}, {3.77786001810358*^9, 
   3.777860127411924*^9}, {3.777860165206658*^9, 3.777860167237174*^9}, {
   3.77786029336112*^9, 3.777860378797068*^9}, {3.777861317319397*^9, 
   3.777861322306428*^9}, {3.777861361202663*^9, 3.7778613625620623`*^9}, 
   3.777907336137229*^9, {3.778308872510717*^9, 3.778308875671413*^9}, {
   3.77830894705762*^9, 3.7783089494264317`*^9}, {3.778308990195141*^9, 
   3.7783091129331923`*^9}, {3.77830976312953*^9, 3.77830977005562*^9}, {
   3.7783098038822193`*^9, 3.778309822630569*^9}, {3.7783117647500257`*^9, 
   3.7783118125719023`*^9}, {3.828680041748825*^9, 3.828680044829439*^9}, {
   3.8286802049189367`*^9, 3.8286802217745123`*^9}, {3.828680298507578*^9, 
   3.8286803734940033`*^9}, {3.828680532014125*^9, 3.82868053664388*^9}, {
   3.8286812859492702`*^9, 3.828681288250025*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"1de1a200-e591-4fd9-b9cf-7a9fc4cdf60d"],

Cell[TextData[{
 "\nThen, the previous components calculated at ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Eta]", "0"], TraditionalForm]],ExpressionUUID->
  "d71885e7-74f5-4566-aff0-92ac9fbd656b"],
 " give  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ScriptCapitalW]", 
     RowBox[{"-", "1"}]], "(", 
    RowBox[{"\[ScriptCapitalO]", ",", "\[ScriptCapitalS]"}], ")"}], 
   TraditionalForm]],ExpressionUUID->"01f72ac7-3c5e-474a-a5f3-7df0736147e7"],
 ", and finally we have:\n\t\t\t\t\t\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalW]", "(", 
    RowBox[{
     SubscriptBox["p", "\[Lambda]"], ",", "\[ScriptCapitalO]"}]}], 
   TraditionalForm]],ExpressionUUID->"9c51df84-4e2b-46e7-ad6b-2bde59059489"],
 ") = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalW]", "(", 
    RowBox[{
     SubscriptBox["p", "\[Lambda]"], ",", "\[ScriptCapitalS]"}]}], 
   TraditionalForm]],ExpressionUUID->"b68cd913-5f19-4189-bdf4-724d14bd7d61"],
 ")",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SuperscriptBox["\[ScriptCapitalW]", 
      RowBox[{"-", "1"}]], "(", 
     RowBox[{"\[ScriptCapitalO]", ",", "\[ScriptCapitalS]"}], ")"}]}], 
   TraditionalForm]],ExpressionUUID->"8ae4b6dc-a809-45a9-acf8-43cbe4cdad30"]
}], "Text",
 CellChangeTimes->{{3.828681483019005*^9, 
  3.828681604397024*^9}},ExpressionUUID->"de7b1f95-6e5e-4fa4-8584-\
2c737f30f5a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalW]", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"MXX", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"WXX", "[", "ETA0", "]"}]}], "+", 
        RowBox[{
         RowBox[{"MXL", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"WLX", "[", "ETA0", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"MXX", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"WXL", "[", "ETA0", "]"}]}], "+", 
        RowBox[{
         RowBox[{"MXL", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"WLL", "[", "ETA0", "]"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"MLX", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"WXX", "[", "ETA0", "]"}]}], "+", 
        RowBox[{
         RowBox[{"MLL", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"WLX", "[", "ETA0", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"MLX", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"WXL", "[", "ETA0", "]"}]}], "+", 
        RowBox[{
         RowBox[{"MLL", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"WLL", "[", "ETA0", "]"}]}]}]}], "}"}]}], "}"}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.77830945792465*^9, 3.778309458487018*^9}, 
   3.778309547644321*^9, {3.778312795997093*^9, 3.778312814675948*^9}, {
   3.778312861183248*^9, 3.778312905463986*^9}, {3.828681527338126*^9, 
   3.828681548925177*^9}},
 CellLabel->
  "In[300]:=",ExpressionUUID->"fb1f02e1-d85f-4260-96f1-e82b68182bbd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalW]", "[", "ETA0", "]"}], "//", "N"}], "//", 
    "MatrixForm"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalM]", "[", "\[Eta]in", "]"}], "//", "N"}], "//", 
    "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.778827999578776*^9, 3.778828017296132*^9}, 
   3.778828065965515*^9},
 CellLabel->
  "In[163]:=",ExpressionUUID->"6ce28a30-e8f9-48df-b7af-3a41c7b31c6e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1.`", "0.`", "0.`", "0.`"},
         {"0.`", "1.0000000000065108`", "0.`", "0.`"},
         {"0.`", "0.`", "1.0000000000065334`", "0.`"},
         {
          RowBox[{"-", "5.248162535190734`*^-13"}], "0.`", "0.`", "1.`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1.`", "0.`", "0.`", "0.`"},
         {"0.`", "1.0000000000065108`", "0.`", "0.`"},
         {"0.`", "0.`", "1.0000000000065334`", "0.`"},
         {
          RowBox[{"-", "5.248162535190734`*^-13"}], "0.`", "0.`", "1.`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.778828019242776*^9, 3.778828067437339*^9, 
  3.778828800683997*^9, 3.832609963789556*^9, 3.8326703160056887`*^9},
 CellLabel->
  "Out[163]//MatrixForm=",ExpressionUUID->"223a2ec1-76a9-4382-83fc-\
417a4ceda3ca"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1.`", "0.`", "0.`", "0.`"},
         {"0.`", "1.`", "0.`", "0.`"},
         {"0.`", "0.`", "1.`", "0.`"},
         {"0.`", "0.`", "0.`", "1.`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1.`", "0.`", "0.`", "0.`"},
         {"0.`", "1.`", "0.`", "0.`"},
         {"0.`", "0.`", "1.`", "0.`"},
         {"0.`", "0.`", "0.`", "1.`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.778828019242776*^9, 3.778828067437339*^9, 
  3.778828800683997*^9, 3.832609963789556*^9, 3.8326703160080442`*^9},
 CellLabel->
  "Out[164]//MatrixForm=",ExpressionUUID->"8495cc77-dcef-4d99-ac58-\
6412daada748"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Section",
 CellChangeTimes->{{3.782456179847932*^9, 3.782456191446459*^9}, {
  3.782456575248456*^9, 
  3.782456575779397*^9}},ExpressionUUID->"96a1eab0-85b3-457a-80b4-\
f29d05318863"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BGO", ">>", "\"\<FLRWSolver_StoO_res49999_BGO_bisect_0p05.m\>\""}],
   ";"}]], "Input",
 CellChangeTimes->{{3.832610108832608*^9, 3.832610140875401*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"86c63792-273d-43ed-aa99-36c5adcc3cbf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalW]", "[", "\[Eta]in", "]"}], "//", "N"}], "//", 
    "MatrixForm"}], "\[IndentingNewLine]", 
   "11111111111111111111111111111111111111111111111111111111111111111111111111\
1111111111", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalW]", "[", "ETA0", "]"}], "//", "N"}], "//", 
    "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.778827999578776*^9, 3.778828017296132*^9}, 
   3.778828065965515*^9, {3.7824621942728453`*^9, 3.7824621979092407`*^9}, {
   3.793876150293373*^9, 3.793876153421144*^9}, {3.7938763233904753`*^9, 
   3.793876323918104*^9}, {3.7938848942588778`*^9, 3.793884907242758*^9}, {
   3.79647297173927*^9, 3.796472991837367*^9}, {3.810105665149872*^9, 
   3.8101056671200438`*^9}, 3.8314602794399*^9},
 CellLabel->
  "In[169]:=",ExpressionUUID->"bb639085-742d-47b7-aedd-92facbb370ea"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.21792507394264027`", "0.`", "0.`"},
         {"0.`", "0.`", "0.2179250739426384`", "0.`"},
         {
          RowBox[{"-", "0.11693748335520796`"}], "0.`", "0.`", "1.`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"801.2736033725188`", "0.`", "0.`", "0.`"},
         {"0.`", "255.05483852224506`", "0.`", "0.`"},
         {"0.`", "0.`", "255.0548385222436`", "0.`"},
         {
          RowBox[{"-", "51.07398735255661`"}], "0.`", "0.`", 
          "801.2736033725188`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", 
          RowBox[{"-", "0.03806224599243068`"}], "0.`", "0.`"},
         {"0.`", "0.`", 
          RowBox[{"-", "0.03806224599243072`"}], "0.`"},
         {
          RowBox[{"-", "0.001392557585385458`"}], "0.`", "0.`", "0.`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1.`", "0.`", "0.`", "0.`"},
         {"0.`", 
          RowBox[{"-", "39.958504305378256`"}], "0.`", "0.`"},
         {"0.`", "0.`", 
          RowBox[{"-", "39.958504305378284`"}], "0.`"},
         {
          RowBox[{"-", "0.9988821509908566`"}], "0.`", "0.`", "1.`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJwV0V1MEmAUBmCy3w03sMWWq42JtHQTUGgr0YyvTDKmhrKZlWgEVIQoZRYp
IRaDYT8Xog2dtrHS1dIKGrVWWzWLn7wQaK1aVitqjh3LXFsXOOt8F2fP3p1z
c/bmaFprdcsYDEYVTnzy6Cf3ZiATSy1JavU3jqwXzRyW9HnQgzUcDaADi7ya
OdTz2GRh5gFhKtPzLDSfE405C4C85gY3uFDe7qxGanmmves2Gv/uGKeu4G7S
NwiAAAk3WVCxuJG9Woh7e6eDg6p+H+sToG7nNF+IFqvq9tbTPJ67sgNNnatR
UncshOqpJz8UHKLKS+NPzqDOF8EiCzpQ9ENN7Wgb8VMH06opqjxr5/tO1GbI
vX8B3f8wMEMd9NYuUEPXDyz60a/JSnccLeWxIlTeWa/jDWpcKxp+hxr4suyL
IvxD8XabF33UH7h6B9WydTJRGRChXVF9dxeQVX+7f8VQq6HdNEOzsIqTRHti
QcMsmjqe6C8pB/LSvO9aGSrXTrRUoAneZHQPWnyruVmDliSyPeJKIIWF9yRW
9MG6dAPVFVYnXXVAKl4dzpEcAcL32vKooxka3U0DkIzZcGoanb8hNC2dAJI8
LR3lGIHom/4JTK14v0WvkLRh73+0SjM6F4qsMXYBGQqHI6dQm9OXpJp7Lkc2
WoEElF+ejqGC1HLpyHnsjfks6rMB+ehrh0vdQNSs9Vt/9gLxWz8Pca8AmYLn
7O3omCNfSv0Pg7Et5A==
  "],
 CellLabel->
  "Out[169]//MatrixForm=",ExpressionUUID->"89c48780-86e8-4c83-8563-\
f96dedf3c393"],

Cell[BoxData[\
"11111111111111111111111111111111111111111111111111111111111111111111111111111\
1111111"], "Output",
 CellChangeTimes->CompressedData["
1:eJwV0V1MkmEUB3Cyzw03sPVuudqYSEs3AYW2Es14yiRjSiibWYlGQEaIUmaR
EmIxGPZxIdLQaRsrWy2toFFrtVWzeCEvBFqrltXqrTn2WObausBZ57k4++2/
c27O/nm69jrDMhaLVQOTnDz6ybsZo4mlNoZY+42S94PZI9IBH3hQRekw6F/k
q+ZA32OLjV2AEVudmeeAhVQ84S7C6DUvssED8nfnNBErs509t8Hkd9c4cQVv
k7FRiBFGdLMNlEiauKtFsHd2uyhQ87t1QAh63dMCEViqqd/bQPJ4/souMH1W
pSbuWIg2EE98KDpEVJQnn5wG3S8iJTbQX/JDS+zqGA0RhzKaKaIiZ+f7btBh
yr9/Htz/MDxDHArULRCj1w4shsCvTLU3CZbzOTEi/0zA9QY0rxWPvANNAnnu
BTH8oXy7LQA+GgxfuQPquQa5uAIjkVNZe3cXRqv+9v5KgHZTp2WGZFENxYB9
iYhpFkwfSw2WVWL00rrvagWo0E+0VYEp/mR8D1h6q6VFB5alcn2SaoyKi+9J
7eCDdZlGoofWMp56jKpeHc6THsFIEHAUEMeydIYbJoyyZun0NDh/XWRZOo4R
c0o2RpkxMjb/E1ra4X6LUSntgN7/6NVWcC4aW2PuwWiYpmMnQYc7yBCtfZdi
G+0YhdVfnt4EhenlstFz0Bv7WTzowOhjsBNf7MVIy1m/9Wc/RiH752HeZYym
8HPudrDVXygj/geCMC22
  "],
 CellLabel->
  "Out[170]=",ExpressionUUID->"2687a102-6888-4a4d-ba80-160865c56fbf"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1.`", "0.`", "0.`", "0.`"},
         {"0.`", "1.0000000000065108`", "0.`", "0.`"},
         {"0.`", "0.`", "1.0000000000065334`", "0.`"},
         {
          RowBox[{"-", "5.248162535190734`*^-13"}], "0.`", "0.`", "1.`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"},
         {"0.`", "0.`", "0.`", "0.`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1.`", "0.`", "0.`", "0.`"},
         {"0.`", "1.0000000000065108`", "0.`", "0.`"},
         {"0.`", "0.`", "1.0000000000065334`", "0.`"},
         {
          RowBox[{"-", "5.248162535190734`*^-13"}], "0.`", "0.`", "1.`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJwV0V1Ik2EUB/BlnzBhM3ohKRjORRZu0y0op9meMpcNXdOBWbnZ2la9zenK
rKVrzhobs48LpzJFg1FGkVZbrIiCCmsfeeG2iIqsqLeQ8VgmQRcT6zwXhx9/
zrk5/PP0LbXGJSwWqxomOXH0k3cjRuOLzQyx5hsl7wGzh6W9PvCgitJjsH+B
r5oFfY8tNnYBRmx1Zo4DbqLiCXchRq954XUekL87p5FYke3svA0mv7vGiMt4
G0wNQowwiupsoETSyF0pgr2zw0WBmt/HeoWg1z0lEIElmrq99SSP5S9vB9Pn
VGrijvlIPfHkh8JDREVZ8skZ0P0iXGwD+4t/aIntrSNB4mBGM0lU5Ox83wE6
6Pz7F8D9D0PTxEF/7Twxcu3AQhD8ylR5k2AZnxMj8s/6XW9A82rx8DuQFshz
L4rhD+XbbX7wUV/o6h3QwDXKxeUYiZzKmru7MFrxt+tXArTTbZZpkkXVFAN2
J8L0DJg+nuorrcDopXXfQDmoMIw3V4Ip/kR8D1hyq6lJD5amcn2SKoyKiu5J
7eCDNZkGoieqZTx1GFW+OpwnPYKRwO8oII5m6Y03aIyyZqLpKXDuusiyeAIj
5rRslDJjZNL9E1pa4H6LSSlthd7/GNRWcDYSW2XuxGgoGo2dAh3uAEO0dl+O
rbdjFFJ/eXoTFKaXykbOQ2/sZ/GAA6OPgTZ8qQsjLWft1p89GAXtn4d4VzCa
xM+520GBbrOM+B9+lS08
  "],
 CellLabel->
  "Out[171]//MatrixForm=",ExpressionUUID->"d3ff7033-14a6-48cd-a78d-\
23ff8961548d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Observables", "Section",
 CellChangeTimes->{{3.828538346681672*^9, 3.828538358501964*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"c7260e57-432c-4532-85bf-967e77f5c627"],

Cell[CellGroupData[{

Cell["\<\

Angular diameter distance\
\>", "Subsection",
 CellChangeTimes->{{3.777639227766439*^9, 3.777639263641485*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"c84704a3-75d5-40f9-9430-7b3a855ba535"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"tmpWAB", "=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\[ScriptCapitalW]", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", "prec"}], 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.77909158986796*^9, 3.77909159142635*^9}, 
   3.779091800843845*^9, {3.782462229880072*^9, 3.7824622345594273`*^9}, {
   3.782463054009677*^9, 3.782463054521495*^9}, {3.782463378768474*^9, 
   3.7824633793020983`*^9}, {3.782483727131351*^9, 3.782483739183284*^9}, {
   3.782483877482067*^9, 3.7824838954417963`*^9}, {3.78259098182658*^9, 
   3.7825910009414377`*^9}, {3.7830085002263117`*^9, 3.783008513564249*^9}, {
   3.7906990335980167`*^9, 3.790699057445014*^9}, {3.7936775649292307`*^9, 
   3.7936775650973997`*^9}, {3.793699690162363*^9, 3.7936996907811203`*^9}, {
   3.793876173916293*^9, 3.793876175140085*^9}, {3.8326707236601267`*^9, 
   3.832670726382148*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"75fce76e-d857-47eb-873a-db55e53dd7a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"detWxlAB", "[", "t_", "]"}], "=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"(", 
           RowBox[{"Det", "[", "tmpWAB", "]"}], ")"}], "]"}], "]"}], "]"}], "/.", 
       RowBox[{"\[Eta]", "\[Rule]", "t"}]}], "]"}], ",", "prec"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.770723948076013*^9, 3.770724070700302*^9}, {
   3.770724157993992*^9, 3.770724170345806*^9}, {3.770724217143008*^9, 
   3.77072423194697*^9}, {3.777228110970332*^9, 3.77722812027512*^9}, {
   3.777228192062351*^9, 3.777228338275981*^9}, {3.777228370346325*^9, 
   3.777228373138342*^9}, {3.7772288162287207`*^9, 3.7772288358082457`*^9}, 
   3.777229090891039*^9, 3.777229495629924*^9, {3.777296326905072*^9, 
   3.777296344622301*^9}, 3.777296452029233*^9, {3.777305376627117*^9, 
   3.77730539109446*^9}, {3.777305466050407*^9, 3.7773054766641808`*^9}, {
   3.7773668510546103`*^9, 3.7773668536404753`*^9}, {3.7773823521913967`*^9, 
   3.777382368092804*^9}, {3.777382419943632*^9, 3.777382446468522*^9}, {
   3.777382478023731*^9, 3.777382551710512*^9}, {3.777383439929245*^9, 
   3.7773834422983828`*^9}, {3.777383485484804*^9, 3.777383489083041*^9}, {
   3.777577099090715*^9, 3.77757710386075*^9}, {3.7776983770918303`*^9, 
   3.7776983847268333`*^9}, 3.777698865950324*^9, {3.77769890233632*^9, 
   3.7776989445302687`*^9}, {3.7776989881108437`*^9, 3.777698989107038*^9}, {
   3.777699149436797*^9, 3.777699152336421*^9}, {3.777699909273879*^9, 
   3.7776999110225163`*^9}, {3.777700004520816*^9, 3.7777000075579157`*^9}, 
   3.7777001442331057`*^9, 3.7778607829523706`*^9, {3.7783172003324947`*^9, 
   3.778317277026095*^9}, {3.778317397455164*^9, 3.7783173986480293`*^9}, {
   3.779091586557301*^9, 3.779091588255348*^9}, {3.781514697173365*^9, 
   3.781514702810226*^9}, 3.781872461716775*^9, {3.781872561268132*^9, 
   3.781872582863512*^9}, {3.7819379620278177`*^9, 3.781937964532751*^9}, {
   3.782483521254232*^9, 3.78248353294803*^9}, {3.782483567154492*^9, 
   3.782483589817184*^9}, {3.782483906602955*^9, 3.782483924477058*^9}, {
   3.7825910303053503`*^9, 3.7825910407665663`*^9}, {3.783008543564212*^9, 
   3.783008553724931*^9}, 3.790699050508334*^9, 3.79069908059834*^9, {
   3.793677568579723*^9, 3.793677568752905*^9}, {3.793699694391564*^9, 
   3.793699694898211*^9}, {3.7938762025673923`*^9, 3.7938762162090693`*^9}, 
   3.832670732926777*^9},
 CellLabel->
  "In[175]:=",ExpressionUUID->"8bbbd89f-66c8-4e99-886c-22773d66be62"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DangWxl", "[", "\[Eta]_", "]"}], "=", 
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ldown", "[", "ETA0", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{"nup", "[", "ETA0", "]"}], ")"}]}], ")"}], 
       RowBox[{"Evaluate", "[", 
        RowBox[{"detWxlAB", "[", "\[Eta]", "]"}], "]"}]}], "/.", 
      RowBox[{"Join", "[", 
       RowBox[{"param", ",", "totBG"}], "]"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.816922115833219*^9, 3.816922120546032*^9}, 
   3.816922237762444*^9, 3.816925020665043*^9, {3.823329962653823*^9, 
   3.823329972803266*^9}, 3.823691514592388*^9, {3.823691544925148*^9, 
   3.8236915471355743`*^9}, {3.823954195512463*^9, 3.8239542334526367`*^9}, {
   3.824003419757923*^9, 3.8240034209220047`*^9}, 3.8244812937326307`*^9, {
   3.824524584875695*^9, 3.824524588241184*^9}, 3.825038265103348*^9, {
   3.82503874556677*^9, 3.8250387486206903`*^9}, 3.8254974536188498`*^9, 
   3.83146033730481*^9},
 CellLabel->
  "In[176]:=",ExpressionUUID->"67cd6ddb-3a17-4866-8e16-2e39caa2630e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"DangWxl", "[", "ETA0", "]"}]}]], "Input",
 CellChangeTimes->{{3.7773105944872513`*^9, 3.7773106322965918`*^9}, {
  3.777369475231862*^9, 3.77736947677293*^9}, {3.78248397448483*^9, 
  3.782483978953794*^9}, {3.7825910882369137`*^9, 3.782591090375145*^9}, {
  3.7830085937657127`*^9, 3.783008598038475*^9}, {3.7906990731400223`*^9, 
  3.790699073464139*^9}, {3.7936775895480556`*^9, 3.793677606274474*^9}, {
  3.793876251943136*^9, 3.7938762548980637`*^9}, {3.7938764184286633`*^9, 
  3.793876418790003*^9}, {3.793884960872369*^9, 3.7938849645075083`*^9}, {
  3.810105702365645*^9, 3.8101057026132402`*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"9f78186d-4293-466d-83ec-72e1d61117b6"],

Cell[BoxData["0``9.764674894484246"], "Output",
 CellChangeTimes->{{3.777310598053442*^9, 3.7773106330888767`*^9}, 
   3.777311411443591*^9, 3.777311482574589*^9, 3.77736686797469*^9, {
   3.777369471917109*^9, 3.7773694772438383`*^9}, {3.777382820985107*^9, 
   3.77738286298046*^9}, {3.777382908348171*^9, 3.777382920957402*^9}, 
   3.777383032413022*^9, 3.777383323500057*^9, 3.7773834587628937`*^9, 
   3.777577133454267*^9, 3.777577997402598*^9, 3.777635863213154*^9, 
   3.777696810323744*^9, 3.7776984191745453`*^9, 3.777698883080943*^9, 
   3.777698966295919*^9, 3.777699004831078*^9, 3.777699107966579*^9, 
   3.777699168099778*^9, 3.7776999348958673`*^9, 3.777700018895268*^9, 
   3.778317449997121*^9, 3.778835958477668*^9, 3.781443318731736*^9, 
   3.781443859733634*^9, 3.7814444358635798`*^9, 3.7815142714062653`*^9, 
   3.781514745229107*^9, 3.781514825206113*^9, {3.781872666498084*^9, 
   3.781872688458358*^9}, 3.781938043323966*^9, 3.7822281909543543`*^9, 
   3.782257784623752*^9, 3.782306999988483*^9, 3.782308168804356*^9, 
   3.7823924315843143`*^9, 3.7824553641078672`*^9, 3.782462298332736*^9, 
   3.782462981257452*^9, 3.782467309979279*^9, 3.782483363986608*^9, 
   3.7824837591349707`*^9, 3.782483979905068*^9, 3.782591091524459*^9, 
   3.7826448886461563`*^9, 3.782649068816773*^9, 3.782657333882976*^9, 
   3.7830085992711153`*^9, 3.7830517843236*^9, 3.7830919439000797`*^9, 
   3.783113223354363*^9, 3.790699845093689*^9, 3.793591772444743*^9, 
   3.7936771891170397`*^9, {3.793677582844071*^9, 3.793677607258915*^9}, 
   3.7936909857867613`*^9, 3.7936998383281727`*^9, 3.793870036764861*^9, 
   3.793876256025334*^9, 3.7938971383980637`*^9, 3.794037075838715*^9, 
   3.794037125614876*^9, {3.796473050347816*^9, 3.796473072822351*^9}, 
   3.796625821696418*^9, 3.796626127997354*^9, 3.801892668059202*^9, 
   3.810105703624413*^9, 3.8140096741600637`*^9, 3.814009936259433*^9, 
   3.814012026303158*^9, 3.81409889344236*^9, 3.8141010416764*^9, 
   3.8147638568866262`*^9, 3.81651804578229*^9, 3.816922010060751*^9, 
   3.817048995903273*^9, 3.823330070011731*^9, 3.8233432559190083`*^9, 
   3.823345294694295*^9, 3.823345503350992*^9, 3.8236914694762278`*^9, 
   3.823691524848057*^9, 3.823954211359839*^9, 3.824000868336134*^9, 
   3.824481420648382*^9, 3.825038323655489*^9, 3.825497578501618*^9, 
   3.831460625798603*^9, 3.832671092558091*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"d9a84454-643a-4127-923b-2259a51f1a2b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"zbg", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"A", "[", "ETA0", "]"}], 
      RowBox[{"A", "[", "\[Eta]", "]"}]], "-", "1"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]z", "[", "z_", "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"A", "[", "ETA0", "]"}]}], "\[ScriptH]0"], 
     FractionBox[
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"z", "+", "1"}], "]"}], "-", "1", " "}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "+", "1"}], ")"}], 
       FractionBox["3", "2"]]], 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"A", "[", "ETA0", "]"}], 
       RowBox[{"Sqrt", "[", 
        RowBox[{"A", "[", "ETA0", "]"}], "]"}], 
       FractionBox[
        RowBox[{"1", "-", 
         RowBox[{"Sqrt", "[", 
          FractionBox["1", 
           RowBox[{"z", "+", "1"}]], "]"}], " "}], 
        RowBox[{"z", "+", "1"}]]}], "*)"}], 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Chi]z2", "[", "z_", "]"}], ":=", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", "ETA0", "]"}], 
        RowBox[{"Sqrt", "[", 
         RowBox[{"\[Alpha]", "[", "ETA0", "]"}], "]"}], 
        FractionBox[
         RowBox[{"1", "-", 
          RowBox[{"Sqrt", "[", 
           FractionBox["1", 
            RowBox[{"z", "+", "1"}]], "]"}], " "}], 
         RowBox[{"z", "+", "1"}]]}]}], "*)"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.814015491917101*^9, 3.814015502426943*^9}, {
   3.814100767573771*^9, 3.814100780486252*^9}, {3.8147676462534523`*^9, 
   3.814767656435239*^9}, 3.81692498848267*^9, {3.816925042562442*^9, 
   3.816925051085423*^9}, 3.8233300425894747`*^9, {3.823345263783173*^9, 
   3.823345272327529*^9}, {3.8240034006309013`*^9, 3.824003415292617*^9}, {
   3.832671154535495*^9, 3.8326711739936*^9}, {3.8327320172456303`*^9, 
   3.832732046319357*^9}, {3.832827064387245*^9, 3.832827079776402*^9}, {
   3.832827129271504*^9, 3.83282716109899*^9}},
 CellLabel->
  "In[699]:=",ExpressionUUID->"33ce08ac-f543-4823-92b5-e144c76cadbb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"DangWxl", "[", "\[Eta]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"WorkingPrecision", "\[Rule]", "10"}], ","}], "*)"}], 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Eta]\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(\[ScriptCapitalD]\), \(num\)]\)\>\""}], 
       "}"}]}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"redshift", "[", "\[Eta]", "]"}], ",", 
       RowBox[{
        FractionBox[
         RowBox[{"DangWxl", "[", "\[Eta]", "]"}], 
         RowBox[{"\[Chi]z", "[", 
          RowBox[{"zbg", "[", "\[Eta]", "]"}], "]"}]], "-", "1"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"WorkingPrecision", "\[Rule]", "10"}], ","}], "*)"}], 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<z\>\"", ",", "\"\<\[CapitalDelta]D(BGO, an)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8140136014738493`*^9, 3.8140136758501053`*^9}, {
   3.814013927598113*^9, 3.814013927920518*^9}, 3.814015477811076*^9, {
   3.814015539893703*^9, 3.814015571712317*^9}, {3.814015611366542*^9, 
   3.8140156122984543`*^9}, {3.8141011083054533`*^9, 3.814101125502903*^9}, {
   3.814767670421929*^9, 3.814767693664526*^9}, {3.823691576512011*^9, 
   3.823691643827073*^9}, {3.823691692954584*^9, 3.823691702145501*^9}, {
   3.8239541182625303`*^9, 3.82395413348335*^9}, 3.823954165121936*^9, {
   3.824003390108012*^9, 3.82400339536598*^9}, {3.825038429047759*^9, 
   3.825038431924364*^9}, {3.825038667582406*^9, 3.825038699514086*^9}, {
   3.82503873730925*^9, 3.8250387413904448`*^9}},
 CellLabel->
  "In[701]:=",ExpressionUUID->"bab264dd-95c1-4b25-b07e-254b0d4912d3"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$79696#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Eta]\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalD]\\), \\(num\\)]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{10.0105, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{10.0105, 33.1995}, {0., 5421.14281490503}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8140136296046867`*^9, 3.8140136765013638`*^9}, {
   3.8140139209087553`*^9, 3.814013928490973*^9}, 3.814015479307151*^9, 
   3.814015514850396*^9, 3.8140155740874767`*^9, 3.8140156135688963`*^9, 
   3.814098910765657*^9, 3.8140989563415623`*^9, 3.8141010484149847`*^9, {
   3.814101120122108*^9, 3.8141011270609293`*^9}, 3.814763863202808*^9, 
   3.8147639025002813`*^9, 3.814767696376614*^9, 3.816518060864173*^9, 
   3.8169220185685883`*^9, 3.816922073367841*^9, 3.816922131073018*^9, 
   3.816922246160378*^9, 3.816924992767557*^9, {3.8169250292403717`*^9, 
   3.8169250585241013`*^9}, 3.81704923900986*^9, 3.8233303036434927`*^9, 
   3.823345294863688*^9, 3.823345503569551*^9, 3.823691481917905*^9, 
   3.823691528827517*^9, 3.823691561035555*^9, {3.823691633384481*^9, 
   3.823691644535592*^9}, {3.8236916949378357`*^9, 3.823691703325644*^9}, 
   3.8239541357609777`*^9, 3.823954166769814*^9, 3.8239542130314407`*^9, 
   3.824000868635948*^9, 3.824003403543077*^9, 3.824003593046485*^9, 
   3.824481420879663*^9, 3.824524597020113*^9, 3.825038323876637*^9, 
   3.825038433301947*^9, {3.825038679980706*^9, 3.8250387013758373`*^9}, 
   3.8250387635072107`*^9, 3.825497578707696*^9, 3.831460917362473*^9, 
   3.832671106269002*^9, 3.832671183680729*^9, {3.8327320372826777`*^9, 
   3.8327320493830976`*^9}, 3.8328271668854027`*^9},
 CellLabel->
  "Out[701]=",ExpressionUUID->"f60bc507-1f64-41c0-ae64-128b4979ab64"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
E7NYohK7Va8d6HrfVeL/A+Z4gTs=
      "]]},
    Annotation[#, "Charting`Private`Tag$79738#1"]& ]},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"z\"", TraditionalForm], 
    FormBox["\"\[CapitalDelta]D(BGO, an)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0., 9.998958061991686}, {-4.5808579152151196`*^-11, 
   1.3039613833143449`*^-10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8140136296046867`*^9, 3.8140136765013638`*^9}, {
   3.8140139209087553`*^9, 3.814013928490973*^9}, 3.814015479307151*^9, 
   3.814015514850396*^9, 3.8140155740874767`*^9, 3.8140156135688963`*^9, 
   3.814098910765657*^9, 3.8140989563415623`*^9, 3.8141010484149847`*^9, {
   3.814101120122108*^9, 3.8141011270609293`*^9}, 3.814763863202808*^9, 
   3.8147639025002813`*^9, 3.814767696376614*^9, 3.816518060864173*^9, 
   3.8169220185685883`*^9, 3.816922073367841*^9, 3.816922131073018*^9, 
   3.816922246160378*^9, 3.816924992767557*^9, {3.8169250292403717`*^9, 
   3.8169250585241013`*^9}, 3.81704923900986*^9, 3.8233303036434927`*^9, 
   3.823345294863688*^9, 3.823345503569551*^9, 3.823691481917905*^9, 
   3.823691528827517*^9, 3.823691561035555*^9, {3.823691633384481*^9, 
   3.823691644535592*^9}, {3.8236916949378357`*^9, 3.823691703325644*^9}, 
   3.8239541357609777`*^9, 3.823954166769814*^9, 3.8239542130314407`*^9, 
   3.824000868635948*^9, 3.824003403543077*^9, 3.824003593046485*^9, 
   3.824481420879663*^9, 3.824524597020113*^9, 3.825038323876637*^9, 
   3.825038433301947*^9, {3.825038679980706*^9, 3.8250387013758373`*^9}, 
   3.8250387635072107`*^9, 3.825497578707696*^9, 3.831460917362473*^9, 
   3.832671106269002*^9, 3.832671183680729*^9, {3.8327320372826777`*^9, 
   3.8327320493830976`*^9}, 3.832827167858971*^9},
 CellLabel->
  "Out[702]=",ExpressionUUID->"751c349f-2b47-4f47-a8a5-d9f15057a940"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DangWxl", "[", "\[Eta]", "]"}], " ", ",", 
      RowBox[{"\[Chi]z", "[", 
       RowBox[{"zbg", "[", "\[Eta]", "]"}], "]"}]}], "}"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"WorkingPrecision", "\[Rule]", "10"}], ","}], "*)"}], 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Eta]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[ScriptCapitalD]\), \(num\)]\)\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7707244357315207`*^9, 3.770724469745571*^9}, {
   3.7711303719952517`*^9, 3.7711303940676126`*^9}, {3.773565061918001*^9, 
   3.773565066843279*^9}, {3.773565339234166*^9, 3.7735653457658777`*^9}, {
   3.77357221298974*^9, 3.77357223331714*^9}, {3.774075659799*^9, 
   3.774075670707013*^9}, {3.777228459930078*^9, 3.777228494721656*^9}, 
   3.777303245453032*^9, 3.777303914311571*^9, {3.7824674647818127`*^9, 
   3.7824674749186153`*^9}, {3.782483990486876*^9, 3.7824839996026993`*^9}, {
   3.7825497132783422`*^9, 3.782549713428422*^9}, {3.782591106141727*^9, 
   3.782591120555224*^9}, {3.7830086043687763`*^9, 3.783008606239254*^9}, {
   3.783093697749569*^9, 3.7830937436399813`*^9}, {3.790699089315419*^9, 
   3.79069910284591*^9}, {3.79069915812467*^9, 3.790699162056213*^9}, 
   3.7964730564824133`*^9, 3.810105706789454*^9, {3.8140127391065807`*^9, 
   3.8140127692600718`*^9}, {3.814012806002718*^9, 3.814012815995839*^9}, 
   3.814013758736977*^9, {3.814015438584548*^9, 3.8140154603081636`*^9}, {
   3.814100858557642*^9, 3.8141009290995817`*^9}, 3.814101060356802*^9, {
   3.81410113167459*^9, 3.81410113929361*^9}, {3.816922143868822*^9, 
   3.816922167229966*^9}, 3.8169222548140574`*^9},
 CellLabel->
  "In[235]:=",ExpressionUUID->"1c02465a-72d7-42ed-be9a-3aab322edf44"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$17833#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1nk0VP8fBnBLWkS7NVRIi6KkkuShUgoVkbVIpBBlKZRdWvhSUlKWrNFi
D4WYW6EsKSFly8wdYx1Ziii/z++vOa9z5t5z77nvz/O8V9m6Gtnz8fDwrOHl
4fn/b1PPA/E5XxNwZr/ipcAmfcza0rKHVyERmQ6tPi/sDaDqt9R1yj0Rf1KL
W3b/NsBBwcru33MeIZj1TvuMzGE8eaS5YyDlEXxKpDc4vj6Cs3XK7C/fk7Dc
433NiMZR9Cgs0UrXS8UV78mj+16awU8/xyTFLRVx/fvqk0TNIep2yOlRbCoW
pkheT/Uwx76ym/ce9KSi6H6eUKKKBdKP8g9GBKeBN1H1walCS5wOGIu9VJKO
EVHemlntJ8BqbR7VVczEh5b2xpLPtpjK8Iv5zyQTN9c87AxcdApLvBR2fvbP
xJ5F4byPD52ClujFIMsvmQhXcpRYUHsK8UYii118n2BQkYrSr7HDsZqjSnc+
PkXW3a3ebt9Po7q04Uy7exYQXOf/SNsJnWFeQrIJWcjoUitbGuaEXxYrc05X
Z+E8m/mw+4sT5Cddf3OlssF3zqI+6qwzArcuDOWrzEb+qDuvesw5SLekf1oa
noOAzObCd7zn0XyYHlLryMUrSxe70kg3nJprXjz2Mxen5jWE6hS5YbiiNjBH
IA/G+l0S4x1umKdSsGztxjwINQnYVym5Q2NZsLrYlTzkVm413t7gjuSvK0PH
JfLh/im7VF3SEy4nraTzTAqw7pV2X8CHS5jj3qinWFeIU8Gh5tGxvlh/NH86
uKsQ6+xk4pze+0J/y53nbaOFeKvDlLKf9EXUqNHCCMkiCDuGZr0294OMx+fP
ww5F2FWr0iso5Q9Vz0/mhXzFMDRcpu5/NAA2lz46aKu9ROfksQb+/kC8vFwT
bJpSgvBZaevX6l3FOosrr9UvVMDiZTo/0/0/xIkKZ08wKTwdl9OZ5rsDPie1
AOWwdxDVnR+juvI+1uVxNPkVqmHUE+UgExWPSxJ3fgpEf8Ac+2+i1b5JKBb/
GhK4rQ48No9dBO6mYqWamNCGZx9RJ7/xqkvMY6xOO1fxUvATZpQ+fhxKfoIt
f6T6Y80/Y/Pwvde5AlkwsX4fuTiqEWqDWrFbEnJwYdGb1HesL0Ds0G5PmzwM
qvtv0t3cjDpBy/HE5QW44qm2zdahBdMCQv5zi15AYFrzWXHRV1S/XTqH/3wR
kqN2x6X/bEXCi/jCd/wvoeZ5Z7pB5zsmV9XNcn/+Ckqf0hvf32lD7BbLfjGt
UqjtKpK3qGnH08ac69KPy6AxvoytIN2JDSbVBvPFypHZUXRLZ0MXLF0my94r
VsDOv7K3o7ILLlksofLSCkhVTvncc/mBnPLQ2JaDDHREK7+XmN+Ns0LyV9+U
M5D7T/dwhXA33qddHnzAYCDkjG3T6UXd2HjYU+bCGwbWa9z9kS/SjZafkV8l
qhi4yPwzabCyG4km65Os6hlYoFK5PmhrN3ZGqMg+bmNA86NVeJ91N2p8rzfp
TzAQP+/m4ZKCbhxYM/c2pUjBduKWm0lRN4b/dd3V3khhbU/MXe7Lbuw6VHi0
XIlCwdu073Ll3bC6nD1RuJnCB3+GQ/j7btyR12+7t53CxPiE//GObpyzyH4u
voeCcbdDzswcJm5Eyt5dZU5B8pNLY6wgE1lXXw5ctKDQVe75a4swE5PKosMf
LCk4xQdrnFnCRES194TLCQpBZonVDVJMZMhYzHp8ikJOfXNX0mYmFs/medZ8
joJQic7ivZZMXPlLH9scSGEkRetU7nFyf8sCs/1BFL6G73whY8MEQ1Z4jVUw
hdQTm80n7Zi4UD97bdBVCjv5pJOyXJi401CcW36DguOBsU0SQUyYy8+L5Ymi
UN2SfGQog4nvGzknYpIoZFXEJ1s+ZUIu+pNeaDKF6Mz7Y9XPmaj2Cf/jnkLB
5nLE/ZQ8JlY+WxGnl0bht4xPl1kpE+GN5uz+DAoKpw3Pv/nIRFPrAv3hbAoh
YzOR938xIcmZO2t2GQU+r+8W6pNMODcG7mgnDpgqXN02xcR0uPxA3msKl/lc
SlbwsrCtcXOVeQUFt0Vt7PT5LMSHeujefUPh5IbiXS9WslB8/IfYm/cUOrLv
zDWVY2HAIXsg8AMFqy2ujROrWWj80bAdNRTM1BXOaiiysOI/M+UXtRSO6EZH
v9nKwva44JiIjxQ07c73fzrIAut85MCvLxRKe/QK3Q1YOJ6rPxrXREHdaU2g
yBEW+PivndVuprDNrUPU3IQFxd1lyVdbKGwM0N/dZc3CTcEdGlOtFKTi1sYO
ebAwHlPw9EEHhQcrZtndusTCcoWpi2s6KYindCqp+LDQfZrzJI946ZN7bz39
Wcg/w6v3touCYPGs4ekbLHD3b7P50k1hsrFr3/xEFvYeGPF7zKZwzzBHKyCJ
BRsFhsDSHgqqH/3Vx1NYyGU8kfMlPv9BRqkzg4U2TUc5Aw4FToWVSH4eC9Xp
HWvbeimEam5YuPYFC7+rq05o9FGQL52aG1/EggqDf91DYpuiB9OhpSy8wCJv
434yX8+/Mi0qWTCtLv/7YoDCRcWM9o/VLOgNBdcKDlJYlnmpZW8NC6v4Gjec
ID6SKlqj1MCC5czzRzxDZL4eGOfxfWPBI+WhniqXwmlx+WeX2ljoCJuK8yWe
dW80baCDBR4fGd93xFq3o2KbmSwYuR/gHBmmUHytIeDJIAtpG71sjv2kcEzg
kc+KYTIfMaoy0cRjQa4e0SPk/zIDDg3Em/wWnPH7zYLMbU783hEK9VPtJ0cn
WaCCLt+4Quzs/dzyzDQLnfFpM3nEGR76h414aZyzsry5fJTCvpHlB6r4aTQK
bE0wIGa59u/WmE0jjqW90494pdPNbQrzaew+dHvhd+L7J6ul/yyjcWi1nljw
GJmPzhgxVzEa6nV8TpnEX6wcFrMkaNhQq3XqiReZzRaolyHXPzoQtnScnLem
pn+7V9EYi7j/awux/tG0iSI5Gu+bh9hGxNcP7R1IWkujztfAJJxYoXYpW1SR
xnB3yud04rcHmJ1hG2nIPo9vLCe2rcpr5dlEw7rzh2kLMY9OUKOnCo2kK2LW
g8QJlGFdnyqNH9doDu8vChpaq6qst9NYPmt0bBnxt7Lhii87aOiPsYMUiL12
Vrw6oEHD2fJM1DbieZq+hnmaNHYNnmzfS/xAS50jqU0j/9e6YkPi9Xt++wXv
oWGf7Cx7nLhEp0BkQIfGoGTzcgdifd0Lz4x1abTfXJLqStx2UGlP2UEaH6Xq
X10kPmfQ37ragIbFVIH1FeJ/hzPORxymsdTQPSqAONLIfs5vQxrRui+MgolX
msgmWBvTOC+05lEIcY5pp2r1MRpaVR4+/7e2RVzNJnMa8SkHfwQRf7Yyt421
pCFZa/zFn9jWWnSS9wSNI044epl49GRjpKMNjZanhcc9iUPsbik02tLYU3x6
9ByxiINB2U57GkolU0vtidPPChqnOtDY0Lmq3IJ4m3NVn5Ajuf7Q1bFDxFUu
IYGezjQo1c/52sRmF7TFO1xoXC8pmFYh5rj/y9p3gUa5cGu9LLGgt1eb2EUa
za9jhP+R7/Xw8lb3AC8abLeb3r3EG/xG5vX60HgT53qukdgg2Hn7K38yb9OM
/mTijqvr6mWDaPBdu+Z5ndjlOtsuLITGyObhq87Et/6zibK6QSMtynLHJuJV
t6TXvQujcS++8PtC4ryob+UbI2gIutvzD5F5bYwxHvwXRd5njeuPNGK7B4tD
HO6S+bKSjfEnHourl2yIofFW4FuDKbFosq5uUhyNGyfnfOQnfpwq0DkvkYbY
2aaoFnJe1B5Tnm5JNDoizVozic2faaTsSafhRSsNHiCOK9z0j86mcdx8WMGL
nM+NLwejD+XR0ObX+A3i1yVPFIsKyP1WJeyfTdxZIW9+/SU5P7bHHCLI+Zet
ES9Y/4bG5GOn2HCSH3l1TQfvvKPBjcVJXeI9DVE/pqpoRBiHpfMR2zUJLayr
paFQr57hRvLncSePo2szjW2X6/20SH41XEnwFmqlcZIjrt1L8m1CQuNG5nca
7rEKO24RHzS+lMHsoiFs2ln9leTjQPUg27SfxgGlhZb/z0+R02G/xgZp0Bml
5UMkXzX5182OGqbBCf1y7Bpx5C671bXj5HtP35PMJ/mskvftlBYPGw9eZw+M
kTy3POzl3s7HRtTuya8BxCEDIsE+AmzS48ZjgsRNCobJBYJsBLhGFUqQfvB6
WNW1VoSNc/O9jq9iUSgLKTi+eD0bfGPKLV9J37BXGZ3L2sCGg59V0H7iBeXc
K3rKbGR+4JgUkL6ymVwfd1WVjctqHh7X20lfuyR9m9RkI8E0MVjyOwVd0wjT
7qNsBIlEhNOkHxvXnTHM92VDWXqe5TLSv1KMyUi5ADa+3axcYEL62c4srP5O
EBujp49KRVdT+BWapedxjQ1jV/89wlVkX2KN6Wy9zYYsM664n/S7TUKgelEq
G1ln63+akf1gaMlDuZIaNjZeX4aRLArbn2ywVaxno1hOJeTvc7I/aL9+9LCB
Da4xxOcQLzn/Q/pKExs6vrWKIk8pbK1bI76rk43+OUq/pR5TuHKtQKh8hDyf
GPfztwSSZ9N145RED9qKLuwS/o9C30at5w5SPfg7c+FidRjZ/6zz7IRW9OBF
WEFa4E0K4W/uNZrI98BZWocevEbyPMw6l6PUg5RfHm3PyT4mKvnTecHeHtjR
IgdrLpF5VFvGMnfpQWl7pKS3DQV+x9CH/873QD9eWmeE7H+shxNGKe49SJRa
anb2OIW0mTbGgFcPFgn6bDUk++PaqrRE/+AevHMWp+YYU1A+tt0y7X4Psgvj
GQv3k/z2sPg8TPVAKPSv4XWy3+56VFF85l0PzPl2ybWtI/NWq5DYVdWDJOY5
EaW1pF/lR50aanuwjaVuWStPYe+XMIGc5h5070uxHZGmoKdapuba14Pv7cWL
WQspWIytSBxczAF/tqG35QgDXh60U58NB7xvhXJDcxlwXr2Da3KKA08qstox
mwGb5nA3hj0H5ZPcv/rPGdivpup935EDoZHRivmZDIhOB4Xu8+DgvVxZgtsj
BvKDVyYlX+PA9MSgCx3BwFCUZbNFFge334QtOO7IgF3uJ62aKQ6EB8dyApcz
MDwtsMvpHwdqHb9P5okzcFlXfcd83l6863hCdYkwENWZvFlvdi/MJl1ub1vE
AEPYQ7ZmUS84/LfNKmcxIOMoOqtmdS/i+vYrXRyswFdZy6oPh3tR3d42s7Ss
AgbRLIMPKb0oPRbkt8mkAloz42J3tfqQITn0w2PkNTYtUpL06+vDhQKJua6V
pWg4XmV66HY/NJl7ankMX8Fni7VR34YBtH64G6xbXIRV2dJXU5sGAF8F8eLI
AnzK++ax3n0QEyFfV7ruz8Xm0YnEGOEhXFsq7Jvj/RQRrbv45V4MoVTFaaZR
MAXj+wPlfAy5sD769tdhOhp7GdXqqsZcWNrbdR2+G41o9UVGQ8e4yJTimVLR
iYbqxsQAWysuDimP5yen3oHbkrL2gw5cFDfZfFhjG4XhtomY5b5c1O9UdLqZ
HYn+C+eFyjK42Fd9ssHO4irU+4vkLj3l4vWCPgXZ/BDctJtR35zFxUv2soHU
+SFYbxpxNi2fi88FPSl/SoJwRuNZ5X+vudDLiBmjJQLAns0JOPGFiztFibTj
XU9sC1C+L97ChfviOfvC4YHQyYvZn1u5GGk6cWt7rxtWDwh07OvkYtkFwXTF
nedh90lup3Ifeb6jU8cW5duj4KCTUe8AFy7r154amrEF/9u8sylcLhxX/Djc
qWeD5ELt+2LjXMhOxyaPMEwwonwj+9NvLvgvmRjtNT6C3ZkNlWF/uLjMzEj0
fK+DKFnxDp2/XDhPzPY2rduKHw+tx2dmuJh/sVu5WstE83/EDH7w
       "]]},
     Annotation[#, "Charting`Private`Tag$17833#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Eta]\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalD]\\), \\(num\\)]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{0.030120935556258378`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.030120935556258378`, 1.}, {0., 0.14814813442180563`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.770724470790914*^9, 3.7707277984496107`*^9, 3.770727937676949*^9, 
   3.770739479284096*^9, 3.770749581575049*^9, 3.770749685126445*^9, 
   3.7707565198410587`*^9, 3.770763331433918*^9, {3.771080378943994*^9, 
   3.771080402731905*^9}, 3.771080511051407*^9, {3.771080548282403*^9, 
   3.7710805823201513`*^9}, 3.771080834278158*^9, {3.771130362530239*^9, 
   3.7711303956187162`*^9}, 3.7731345071339483`*^9, 3.7731347632664557`*^9, 
   3.773136120639687*^9, 3.773136245070627*^9, 3.773143877860075*^9, {
   3.7731444932429256`*^9, 3.773144509637054*^9}, {3.773144544142405*^9, 
   3.7731445582833643`*^9}, {3.773145402632285*^9, 3.7731454319727983`*^9}, 
   3.773145494740521*^9, 3.773148589347864*^9, {3.773148662175064*^9, 
   3.773148682964069*^9}, {3.7731491270829887`*^9, 3.773149141547246*^9}, 
   3.77314965188601*^9, 3.773564689341329*^9, 3.773564748799189*^9, {
   3.773565036833548*^9, 3.773565068303244*^9}, 3.773565165924629*^9, 
   3.77356542516131*^9, 3.7735654590107937`*^9, 3.773571453786051*^9, 
   3.773571500065126*^9, 3.7735715444971113`*^9, 3.773571835135214*^9, {
   3.7735721979489927`*^9, 3.7735722353542147`*^9}, 3.7735739627849216`*^9, 
   3.773574886871265*^9, 3.773575040374311*^9, 3.773866409531699*^9, 
   3.77386674566333*^9, 3.7740108010647917`*^9, {3.7740108389305563`*^9, 
   3.774010852554799*^9}, 3.774075700915032*^9, 3.774075770372867*^9, 
   3.774080547378656*^9, 3.774087016441511*^9, 3.774268883701706*^9, 
   3.774270790757099*^9, 3.774659161783249*^9, 3.776763664082787*^9, 
   3.7770386739840097`*^9, 3.777228526100182*^9, 3.7772289878173847`*^9, 
   3.777229540396385*^9, 3.7772959910169153`*^9, 3.777296388152322*^9, 
   3.777303274601406*^9, 3.777305437757065*^9, 3.777305487543054*^9, 
   3.7773114350582314`*^9, 3.777311499196787*^9, 3.7773668916138477`*^9, 
   3.777369487450035*^9, 3.777369624100025*^9, {3.777382831215171*^9, 
   3.77738284972617*^9}, 3.777382928978938*^9, 3.777383041931744*^9, 
   3.777383091447834*^9, 3.777383332450801*^9, 3.777383467991984*^9, 
   3.7775771417871723`*^9, 3.7775780051730824`*^9, 3.7776358709488373`*^9, 
   3.7776968340451508`*^9, 3.777698424452176*^9, 3.777698970469254*^9, 
   3.777699008992269*^9, 3.77769911196837*^9, 3.77769917175299*^9, 
   3.777700040690254*^9, 3.778317453648512*^9, 3.778835962813756*^9, 
   3.778848059768556*^9, 3.7790277863333397`*^9, 3.7790296709470882`*^9, 
   3.7790920805871563`*^9, 3.779100570595585*^9, 3.781443326799036*^9, 
   3.781443862583805*^9, 3.781444436311577*^9, 3.7815142754017763`*^9, 
   3.781514840711751*^9, 3.7818726911704493`*^9, 3.781938174519743*^9, 
   3.781944817896847*^9, 3.7822281976042852`*^9, 3.7822578072247066`*^9, 
   3.782307002554325*^9, 3.782308172651569*^9, 3.782392431798841*^9, 
   3.782455366550786*^9, 3.782462300598898*^9, 3.78246298803998*^9, 
   3.782467312110574*^9, 3.782483365601338*^9, 3.782483762050655*^9, 
   3.782484001597844*^9, {3.7825496960122137`*^9, 3.782549715134791*^9}, {
   3.782591109794385*^9, 3.782591121703614*^9}, 3.7826448958976593`*^9, 
   3.7826573340274143`*^9, 3.7830086083561163`*^9, 3.783051790637871*^9, 
   3.783091944529339*^9, 3.783113223566291*^9, 3.7831494015368443`*^9, 
   3.790699860175128*^9, 3.7936771914015427`*^9, 3.793699838585073*^9, 
   3.79387003687542*^9, {3.7964730575148973`*^9, 3.7964730749835453`*^9}, 
   3.7966261280593157`*^9, 3.801892671154379*^9, 3.801942987266856*^9, 
   3.8101057076912537`*^9, 3.8140096786536827`*^9, 3.814009938388813*^9, 
   3.81401202901539*^9, 3.814012776330578*^9, {3.814012807072028*^9, 
   3.8140128189015303`*^9}, 3.8140137601636353`*^9, 3.814015461060873*^9, 
   3.814015518151464*^9, 3.814015711818191*^9, 3.814098929329855*^9, 
   3.814098961685397*^9, {3.814100860143106*^9, 3.8141008871179*^9}, {
   3.814100918481683*^9, 3.814100930584201*^9}, 3.814101062291368*^9, {
   3.814101135055209*^9, 3.8141011410065928`*^9}, 3.81476386973663*^9, 
   3.8147639055825033`*^9, 3.8165180723778152`*^9, 3.816922086194479*^9, {
   3.816922133822023*^9, 3.816922168902164*^9}, 3.816922255816778*^9, 
   3.816925010476136*^9, 3.8169250635070887`*^9, 3.817049244133651*^9, 
   3.823330312721627*^9, 3.8233453137690077`*^9, 3.823345512997026*^9, 
   3.823954173833436*^9, 3.8239542182065153`*^9, 3.8240009369906197`*^9, 
   3.824003406126495*^9, 3.82400359614886*^9, 3.8245246381639977`*^9, 
   3.8250388364700937`*^9, 3.8254975896766367`*^9},
 CellLabel->
  "Out[235]=",ExpressionUUID->"55468491-f9de-4289-9700-2c0c7394290f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

\
\>", "Subsubsection",
 CellChangeTimes->{{3.793593171637043*^9, 
  3.793593178250688*^9}},ExpressionUUID->"01da1102-3ce3-48d6-a088-\
2840b48e3f9a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"redshift", "[", "\[Eta]", "]"}], ",", 
        RowBox[{"\[ScriptH]0", " ", 
         RowBox[{"DangWxl", "[", "\[Eta]", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"redshift", "[", "\[Eta]", "]"}], ",", 
        RowBox[{"\[ScriptH]0", " ", 
         RowBox[{"\[Chi]z", "[", 
          RowBox[{"redshift", "[", "\[Eta]", "]"}], "]"}]}]}], "}"}]}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", " ", 
       RowBox[{"Opacity", "[", "0.5", "]"}]}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\[ScriptCapitalD](Wxl)\>\"", ",", "Large"}], "]"}], ",", 
       
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\[ScriptCapitalD](z)\>\"", ",", "Large"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<z\>\"", ",", "Large"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(D\), \(ang\)]\)\>\"", ",", "Large"}], 
        "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.778317502193995*^9, 3.7783175031177177`*^9}, {
   3.778317544412826*^9, 3.77831758875205*^9}, {3.779092132240621*^9, 
   3.779092141354683*^9}, {3.781944870961082*^9, 3.781944871135054*^9}, 
   3.781944953882739*^9, 3.781944990195759*^9, {3.781946083002562*^9, 
   3.781946083310631*^9}, 3.781946134084015*^9, {3.7819484099277973`*^9, 
   3.781948414403234*^9}, 3.7819548133154087`*^9, 3.796473087143532*^9, 
   3.810105737097818*^9, {3.814015739294231*^9, 3.814015829633154*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"58e453e0-8a68-4d90-9fb1-6368be3dc420"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$18176#1"]& ], 
      TagBox[{
        Directive[
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         Opacity[0.5]], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$18176#2"]& ]}}, {
    DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        StyleBox["\"z\"", Large, StripOnInput -> False], TraditionalForm], 
       FormBox[
        StyleBox[
        "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(ang\\)]\\)\"", Large, 
         StripOnInput -> False], TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 700, 
     Method -> {"ScalingFunctions" -> None}, 
     PlotRange -> {{-0.1, 10}, {0, 10}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"\[ScriptCapitalD](Wxl)\"", Large, StripOnInput -> False], 
       StyleBox["\"\[ScriptCapitalD](z)\"", Large, StripOnInput -> False]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Opacity", "[", "0.5`16.", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.783051856884293*^9, 3.7907000044017267`*^9, 
  3.793593271811545*^9, 3.793677393267289*^9, 3.7938700542267036`*^9, 
  3.796473096547653*^9, 3.8018926857597933`*^9, 3.810105746073924*^9, 
  3.814015794306078*^9, 3.814015830957521*^9, 3.814101151057757*^9, 
  3.814763911339823*^9, 3.816518188892004*^9, 3.8169222694293547`*^9, 
  3.816925066661625*^9, 3.8170492470065823`*^9, 3.8240036028741198`*^9, 
  3.825497593267818*^9},
 CellLabel->
  "Out[236]=",ExpressionUUID->"eafa423b-93c1-416e-9f78-834ab993adb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"redshift", "[", "\[Eta]", "]"}], ",", " ", 
     RowBox[{"Abs", "[", " ", 
      FractionBox[
       RowBox[{
        RowBox[{"DangWxl2", "[", "\[Eta]", "]"}], "-", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"  ", 
           RowBox[{"\[Chi]z", "[", 
            RowBox[{"redshift", "[", "\[Eta]", "]"}], "]"}]}], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"redshift", "[", "\[Eta]", "]"}]}], ")"}]], ")"}]}], 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"  ", 
          RowBox[{"\[Chi]z", "[", 
           RowBox[{"redshift", "[", "\[Eta]", "]"}], "]"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"redshift", "[", "\[Eta]", "]"}]}], ")"}]], ")"}]], 
      "]"}]}], "}"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"LCDMdD", "="}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"znum", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Alpha]", "[", "ETA0", "]"}], 
      RowBox[{"\[Alpha]", "[", "\[Eta]", "]"}]], "-", 
     RowBox[{"1", "\[IndentingNewLine]", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"redshift", "[", "\[Eta]", "]"}], ",", "  ", 
            FractionBox[
             RowBox[{
              RowBox[{"DangWxl", "[", "\[Eta]", "]"}], "-", "  ", 
              RowBox[{"\[Chi]z", "[", 
               RowBox[{"zbg", "[", "\[Eta]", "]"}], "]"}]}], 
             RowBox[{"\[Chi]z", "[", 
              RowBox[{"zbg", "[", "\[Eta]", "]"}], "]"}]]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"redshift", "[", "\[Eta]", "]"}], ",", "  ", 
            FractionBox[
             RowBox[{
              RowBox[{"DangWxl", "[", "\[Eta]", "]"}], "-", "  ", 
              RowBox[{"\[Chi]z2", "[", 
               RowBox[{"znum", "[", "\[Eta]", "]"}], "]"}]}], 
             RowBox[{"\[Chi]z2", "[", 
              RowBox[{"znum", "[", "\[Eta]", "]"}], "]"}]]}], "}"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"2", " ", 
              SuperscriptBox["10", 
               RowBox[{"-", "23"}]]}]}], "}"}]}], "}"}], "*)"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"StandardPlotStyle", "[", 
          RowBox[{
          "18", ",", "24", ",", 
           "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]D\), \(ang\)]\)(BGO, \
an)\>\"", ",", "\"\<z\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[\(D\), \(ang\)]\) in FLRWSolver: numerical \
vs analytical\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<BGO vs an\>\"", ",", "\"\<BGO vs num\>\""}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"0.8", ",", "0.8"}], "}"}]}], "]"}], "]"}]}], "]"}]}]}]}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"redshift", "[", "\[Eta]", "]"}], ",", "  ", 
      FractionBox[
       RowBox[{
        RowBox[{"DangWxl", "[", "\[Eta]", "]"}], "-", "  ", 
        RowBox[{"\[Chi]z", "[", 
         RowBox[{"zbg", "[", "\[Eta]", "]"}], "]"}]}], 
       RowBox[{"\[Chi]z", "[", 
        RowBox[{"zbg", "[", "\[Eta]", "]"}], "]"}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "900"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"StandardPlotStyle", "[", 
      RowBox[{
      "18", ",", "24", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]D\), \(ang\)]\)(BGO, ET)\>\"",
        ",", "\"\<z\>\"", ",", "\"\< \>\"", ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}]}], "]"}], "]"}]}], 
   RowBox[{"(*", 
    RowBox[{",", " ", 
     RowBox[{"WorkingPrecision", "\[Rule]", "48"}]}], "*)"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7939933015423594`*^9, 3.7939933125534782`*^9}, {
   3.793993669005583*^9, 3.793993702673016*^9}, {3.793993753251848*^9, 
   3.79399381027017*^9}, {3.793993874721382*^9, 3.793993900970747*^9}, {
   3.793993972409762*^9, 3.79399397584382*^9}, {3.7939940317768717`*^9, 
   3.79399411317246*^9}, {3.794037095177544*^9, 3.7940371133540087`*^9}, {
   3.794037417827066*^9, 3.794037468206914*^9}, {3.7943192452730503`*^9, 
   3.7943192470231333`*^9}, {3.794320293001371*^9, 3.794320294769548*^9}, {
   3.794665475352037*^9, 3.7946655039093523`*^9}, 3.794665565880992*^9, {
   3.795100055882523*^9, 3.795100100137855*^9}, {3.795515212230505*^9, 
   3.795515247036871*^9}, 3.7964731474593554`*^9, {3.796473201311491*^9, 
   3.796473307594152*^9}, {3.7964735338314657`*^9, 3.796473534373661*^9}, {
   3.8101057475548573`*^9, 3.810105803113244*^9}, {3.8140158539498243`*^9, 
   3.8140159929628572`*^9}, {3.814767574184305*^9, 3.814767615430894*^9}, {
   3.8165182617349*^9, 3.816518282383604*^9}, {3.816518462984231*^9, 
   3.8165185224678*^9}, {3.816518596001574*^9, 3.8165186512775793`*^9}, {
   3.8233303502839603`*^9, 3.823330379035183*^9}, {3.831460959727359*^9, 
   3.8314609749827223`*^9}, {3.8326126669356413`*^9, 3.832612669573052*^9}},
 CellLabel->
  "In[704]:=",ExpressionUUID->"273099cf-773c-4780-9b1b-59b342bbaca8"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
kUj1ORaGs5aXXSOZjvH3sf8DGJK8HA==
      "]]},
    Annotation[#, "Charting`Private`Tag$80685#1"]& ]},
  AspectRatio->0.8,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]D\\), \\(ang\\)]\\)(BGO, \
ET)\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox["\"z\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[FontSize -> 18],
  FrameTicks->{{True, True}, {True, True}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Opacity[0.2`16.], 
    Dashing[{Small, Small}]],
  ImageSize->900,
  Method->{"ScalingFunctions" -> None},
  PlotLabel->FormBox[
    StyleBox["\" \"", Bold, FontSize -> 18, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.832827196326316*^9},
 CellLabel->
  "Out[704]=",ExpressionUUID->"2b1ed740-5bab-42db-9334-aab344637b01"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Angular diameter distance, Luminosity distance and Parallax distance\
\>", "Subsection",
 CellChangeTimes->{{3.777639227766439*^9, 3.777639263641485*^9}, {
  3.790570394542726*^9, 
  3.7905704188928003`*^9}},ExpressionUUID->"b847f2ac-cb7a-47e8-bae8-\
3bcbdffef393"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[ScriptCapitalW]", "[", "t_", "]"}], ":=", 
    RowBox[{"\[ScriptCapitalW]2", "[", "t", "]"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8018929686125593`*^9, 
  3.801893012942874*^9}},ExpressionUUID->"2351e5a2-a8bf-4e5f-93ec-\
f55dc3735752"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"tmpWAA", "=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\[ScriptCapitalW]", "[", "\[Eta]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", "prec"}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.790570384294775*^9, 3.790570388842448*^9}, 
   3.801893030886002*^9, 3.810105882644436*^9, {3.832671277596133*^9, 
   3.832671278355424*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"a99505ef-de4e-4208-8c51-2b02208b8827"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.390751`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.790570422730294*^9, 3.790694052926072*^9, 3.79070106642422*^9, 
   3.793591468874371*^9, 3.801893098937961*^9, 3.80194300903019*^9, 
   3.810105891944882*^9, 3.831461025992688*^9, {3.8326712637569857`*^9, 
   3.8326712894983273`*^9}},
 CellLabel->
  "Out[189]=",ExpressionUUID->"184bb809-56c3-4885-b967-d8ede6c0083e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"detWxxAB", "[", "t_", "]"}], "=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"Simplify", "[", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{"(", 
            RowBox[{"Det", "[", "tmpWAA", "]"}], ")"}], "]"}], "]"}], "]"}], "/.", 
        RowBox[{"\[Eta]", "\[Rule]", "t"}]}], "]"}], ",", "prec"}], "]"}]}], 
   ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.790570435200479*^9, 3.790570447648672*^9}, {
   3.801893062960771*^9, 3.8018930638040447`*^9}, 3.832671284840969*^9},
 CellLabel->
  "In[190]:=",ExpressionUUID->"39d6471b-111b-4ca5-9e7c-46a5fbcafb1f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"351.036298`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.790570454635955*^9, 3.79069471310819*^9, 
  3.7907011118410463`*^9, 3.801893103192862*^9, 3.8019430108034773`*^9, 
  3.810105894129919*^9, 3.831461416112884*^9, 3.832671273994746*^9, 
  3.8326716402651443`*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"392d749b-1852-42aa-a86b-63ab1039251f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Uvel", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Cu", "[", "\[Eta]", "]"}], 
        RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"Pu", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], "/.", 
     "totBG"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Timing", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "[", "\[Eta]_", "]"}], ":=", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"EBG", "[", "\[Eta]", "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nup", "[", "\[Eta]", "]"}], "+", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"VV", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], ")"}]}], 
        "]"}], "/.", "totBG"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DangWxl", "[", "\[Eta]_", "]"}], "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"gg4", "[", "ETA0", "]"}], ".", 
           RowBox[{"k", "[", "ETA0", "]"}], ".", 
           RowBox[{"u", "[", "ETA0", "]"}]}], ")"}], 
         RowBox[{"Evaluate", "[", 
          RowBox[{"detWxlAB", "[", "\[Eta]", "]"}], "]"}]}], "/.", 
        RowBox[{"Join", "[", 
         RowBox[{"param", ",", "totBG"}], "]"}]}], "]"}]}], ";"}], "]"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.770721816843917*^9, {3.770721924305827*^9, 3.7707219312161293`*^9}, {
   3.7707219874431763`*^9, 3.770722029357211*^9}, {3.770723797910541*^9, 
   3.770723934309753*^9}, {3.7707242673272552`*^9, 3.770724289209702*^9}, {
   3.770727791303589*^9, 3.7707277939245768`*^9}, 3.7707279272795553`*^9, {
   3.771079925546609*^9, 3.7710799825360107`*^9}, {3.771080370533682*^9, 
   3.771080397992684*^9}, {3.771080506925797*^9, 3.771080507290257*^9}, {
   3.771080538085998*^9, 3.771080578289493*^9}, {3.771080822719163*^9, 
   3.771080828424811*^9}, {3.773134729964469*^9, 3.773134758241102*^9}, {
   3.7731361092674093`*^9, 3.773136114801257*^9}, {3.7731362406808367`*^9, 
   3.77313624113654*^9}, {3.773143870655678*^9, 3.773143871476556*^9}, {
   3.773144488022088*^9, 3.77314450650718*^9}, {3.773144538580456*^9, 
   3.773144570059057*^9}, {3.7731454082546873`*^9, 3.773145419938561*^9}, 
   3.773148679543244*^9, {3.773149117520308*^9, 3.773149137599835*^9}, {
   3.773564725565069*^9, 3.77356473620531*^9}, {3.773565050143611*^9, 
   3.7735650531138163`*^9}, {3.773565177686364*^9, 3.773565203646122*^9}, {
   3.773565449227846*^9, 3.77356545466999*^9}, {3.7735714894135942`*^9, 
   3.773571495252462*^9}, 3.773572193653825*^9, {3.773574876356483*^9, 
   3.773575033784499*^9}, {3.7740108307017097`*^9, 3.774010847972011*^9}, {
   3.774075562871002*^9, 3.77407559268301*^9}, {3.774075650653715*^9, 
   3.774075656207212*^9}, {3.7740757292485533`*^9, 3.774075737681226*^9}, {
   3.774080502354127*^9, 3.7740805130791903`*^9}, {3.774086992989565*^9, 
   3.774086993721047*^9}, {3.7742688325266447`*^9, 3.7742688577241163`*^9}, 
   3.774270530964744*^9, {3.777228419238329*^9, 3.7772284475078*^9}, {
   3.777303198701213*^9, 3.777303201383518*^9}, 3.7773054316044483`*^9, {
   3.777311403568239*^9, 3.7773114053022003`*^9}, {3.7773114676322603`*^9, 
   3.7773114725778027`*^9}, {3.777311559624873*^9, 3.777311569604794*^9}, {
   3.777369436653853*^9, 3.777369461811366*^9}, {3.7773696069881153`*^9, 
   3.777369615291572*^9}, {3.777382624158472*^9, 3.777382632252574*^9}, {
   3.777382794195918*^9, 3.777382917268537*^9}, {3.777383078545042*^9, 
   3.7773830816204023`*^9}, {3.777383277575057*^9, 3.77738328365736*^9}, 
   3.777383320206542*^9, {3.777384116191554*^9, 3.777384135768407*^9}, 
   3.777696804506941*^9, {3.777699074592245*^9, 3.777699101810384*^9}, {
   3.7778608034754868`*^9, 3.777860815069544*^9}, {3.778317431858512*^9, 
   3.778317442982439*^9}, {3.781443284925642*^9, 3.781443289573612*^9}, {
   3.781514724528276*^9, 3.781514729350964*^9}, 3.78187258778403*^9, 
   3.781872685599043*^9, {3.782483957769952*^9, 3.782483968200886*^9}, {
   3.782591073135255*^9, 3.782591082147286*^9}, {3.783008570469933*^9, 
   3.78300857944073*^9}, {3.783611594771502*^9, 3.783611607945612*^9}, {
   3.785544960057659*^9, 3.7855449631300287`*^9}, 3.7856617073373737`*^9, {
   3.790250292707301*^9, 3.790250311402932*^9}, {3.790263602164785*^9, 
   3.790263622461775*^9}, {3.790570547360033*^9, 3.790570554187478*^9}, {
   3.7905706164125843`*^9, 3.790570616667713*^9}, {3.7906941083039618`*^9, 
   3.7906941444825163`*^9}, {3.801893066719511*^9, 3.801893091099128*^9}, 
   3.8018932944383*^9},ExpressionUUID->"04f62cbc-8e68-416b-aefd-25872535a2ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"19.229711`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.783612462954411*^9, 3.785570033773245*^9, 
  3.785686324734831*^9, 3.790250315619376*^9, 3.79026362735854*^9, 
  3.790488289408719*^9, 3.790523120089435*^9, 3.790569413303878*^9, 
  3.790694845174162*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"756569c5-209c-48ec-9433-a9a411bc1d40"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Dpar", "[", "\[Eta]_", "]"}], "=", 
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ldown", "[", "ETA0", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{"nup", "[", "ETA0", "]"}], ")"}]}], ")"}], 
       RowBox[{"Evaluate", "[", 
        FractionBox[
         RowBox[{"detWxlAB", "[", "\[Eta]", "]"}], 
         RowBox[{"detWxxAB", "[", "\[Eta]", "]"}]], "]"}]}], "/.", 
      RowBox[{"Join", "[", 
       RowBox[{"param", ",", "totBG"}], "]"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.79057046659107*^9, 3.790570474488205*^9}, {
   3.7905706227577667`*^9, 3.790570623247905*^9}, 3.7905706615360203`*^9, {
   3.790694154005787*^9, 3.790694159322487*^9}, 3.801893074360897*^9, 
   3.8018932902286158`*^9, 3.810105898939178*^9, {3.8314610352786283`*^9, 
   3.831461036546533*^9}, 3.83146106718326*^9},
 CellLabel->
  "In[191]:=",ExpressionUUID->"60b2cf5d-ad08-4528-a441-13433436ad4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DangWxl", "[", "ETA0", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Dpar", "[", "ETA0", "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7773105944872513`*^9, 3.7773106322965918`*^9}, {
   3.777369475231862*^9, 3.77736947677293*^9}, {3.78248397448483*^9, 
   3.782483978953794*^9}, {3.7825910882369137`*^9, 3.782591090375145*^9}, {
   3.7830085937657127`*^9, 3.783008598038475*^9}, {3.78361161886832*^9, 
   3.783611619167828*^9}, {3.785683702753274*^9, 3.785683703652748*^9}, {
   3.7902503184419317`*^9, 3.7902503225831738`*^9}, {3.790263630303708*^9, 
   3.790263631408585*^9}, {3.7905706661945066`*^9, 3.790570670660029*^9}, {
   3.790694164085655*^9, 3.7906941664597683`*^9}, 3.801893111096024*^9, 
   3.8101059048131037`*^9},
 CellLabel->
  "In[175]:=",ExpressionUUID->"9f14f164-50e7-4396-a044-533cb02f9b3a"],

Cell[BoxData["0``15.221848718439084"], "Output",
 CellChangeTimes->{{3.777310598053442*^9, 3.7773106330888767`*^9}, 
   3.777311411443591*^9, 3.777311482574589*^9, 3.77736686797469*^9, {
   3.777369471917109*^9, 3.7773694772438383`*^9}, {3.777382820985107*^9, 
   3.77738286298046*^9}, {3.777382908348171*^9, 3.777382920957402*^9}, 
   3.777383032413022*^9, 3.777383323500057*^9, 3.7773834587628937`*^9, 
   3.777577133454267*^9, 3.777577997402598*^9, 3.777635863213154*^9, 
   3.777696810323744*^9, 3.7776984191745453`*^9, 3.777698883080943*^9, 
   3.777698966295919*^9, 3.777699004831078*^9, 3.777699107966579*^9, 
   3.777699168099778*^9, 3.7776999348958673`*^9, 3.777700018895268*^9, 
   3.778317449997121*^9, 3.778835958477668*^9, 3.781443318731736*^9, 
   3.781443859733634*^9, 3.7814444358635798`*^9, 3.7815142714062653`*^9, 
   3.781514745229107*^9, 3.781514825206113*^9, {3.781872666498084*^9, 
   3.781872688458358*^9}, 3.781938043323966*^9, 3.7822281909543543`*^9, 
   3.782257784623752*^9, 3.782306999988483*^9, 3.782308168804356*^9, 
   3.7823924315843143`*^9, 3.7824553641078672`*^9, 3.782462298332736*^9, 
   3.782462981257452*^9, 3.782467309979279*^9, 3.782483363986608*^9, 
   3.7824837591349707`*^9, 3.782483979905068*^9, 3.782591091524459*^9, 
   3.7826448886461563`*^9, 3.782649068816773*^9, 3.782657333882976*^9, 
   3.7830085992711153`*^9, 3.7830517843236*^9, 3.7830919439000797`*^9, 
   3.783113223354363*^9, 3.783612574788974*^9, 3.78568632485207*^9, 
   3.790250323260562*^9, 3.7902636323278933`*^9, 3.79048829195063*^9, 
   3.790523122579033*^9, 3.7905706717970657`*^9, 3.7906948868328533`*^9, 
   3.7907011195773697`*^9, 3.801893111875738*^9, 3.801943018040943*^9, 
   3.810105905493691*^9, 3.8314615015348263`*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"1d77d32c-bebe-4d60-b7de-71c288d2045b"],

Cell[BoxData["0``15.221848718439084"], "Output",
 CellChangeTimes->{{3.777310598053442*^9, 3.7773106330888767`*^9}, 
   3.777311411443591*^9, 3.777311482574589*^9, 3.77736686797469*^9, {
   3.777369471917109*^9, 3.7773694772438383`*^9}, {3.777382820985107*^9, 
   3.77738286298046*^9}, {3.777382908348171*^9, 3.777382920957402*^9}, 
   3.777383032413022*^9, 3.777383323500057*^9, 3.7773834587628937`*^9, 
   3.777577133454267*^9, 3.777577997402598*^9, 3.777635863213154*^9, 
   3.777696810323744*^9, 3.7776984191745453`*^9, 3.777698883080943*^9, 
   3.777698966295919*^9, 3.777699004831078*^9, 3.777699107966579*^9, 
   3.777699168099778*^9, 3.7776999348958673`*^9, 3.777700018895268*^9, 
   3.778317449997121*^9, 3.778835958477668*^9, 3.781443318731736*^9, 
   3.781443859733634*^9, 3.7814444358635798`*^9, 3.7815142714062653`*^9, 
   3.781514745229107*^9, 3.781514825206113*^9, {3.781872666498084*^9, 
   3.781872688458358*^9}, 3.781938043323966*^9, 3.7822281909543543`*^9, 
   3.782257784623752*^9, 3.782306999988483*^9, 3.782308168804356*^9, 
   3.7823924315843143`*^9, 3.7824553641078672`*^9, 3.782462298332736*^9, 
   3.782462981257452*^9, 3.782467309979279*^9, 3.782483363986608*^9, 
   3.7824837591349707`*^9, 3.782483979905068*^9, 3.782591091524459*^9, 
   3.7826448886461563`*^9, 3.782649068816773*^9, 3.782657333882976*^9, 
   3.7830085992711153`*^9, 3.7830517843236*^9, 3.7830919439000797`*^9, 
   3.783113223354363*^9, 3.783612574788974*^9, 3.78568632485207*^9, 
   3.790250323260562*^9, 3.7902636323278933`*^9, 3.79048829195063*^9, 
   3.790523122579033*^9, 3.7905706717970657`*^9, 3.7906948868328533`*^9, 
   3.7907011195773697`*^9, 3.801893111875738*^9, 3.801943018040943*^9, 
   3.810105905493691*^9, 3.831461501540785*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"6450e35c-3b5f-4c63-a782-6f5bea166a75"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"redshift", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"gg4", "[", "t", "]"}], ".", 
         RowBox[{"u", "[", "t", "]"}], ".", 
         RowBox[{"k", "[", "t", "]"}]}], 
        RowBox[{
         RowBox[{"gg4", "[", "ETA0", "]"}], ".", 
         RowBox[{"u", "[", "ETA0", "]"}], ".", 
         RowBox[{"k", "[", "ETA0", "]"}]}]], "-", "1"}], ")"}], "/.", 
     RowBox[{"Join", "[", 
      RowBox[{"totBG", ",", "param"}], "]"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7905698989427977`*^9, 3.790569899528399*^9}, {
   3.790694907164771*^9, 3.790694921713797*^9}, 
   3.7906973940525913`*^9},ExpressionUUID->"2bfe5e20-7e9d-4d06-b22e-\
8b9c557c191d"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Dlum", "[", "t_", "]"}], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"redshift", "[", "t", "]"}]}], ")"}], "2"], 
     RowBox[{"DangWxl", "[", "t", "]"}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.790569861933168*^9, 3.790569936824905*^9}, 
   3.801893117314178*^9, 3.810105911554879*^9},
 CellLabel->
  "In[177]:=",ExpressionUUID->"e7db723a-948d-4077-a7e3-394723c2860a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"redshift", "[", "t", "]"}], ",", " ", 
        RowBox[{"\[ScriptH]0", " ", 
         RowBox[{"DangWxl", "[", "t", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"redshift", "[", "t", "]"}], ",", 
        RowBox[{"\[ScriptH]0", " ", 
         RowBox[{"Dlum", "[", "t", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"redshift", "[", "t", "]"}], ",", 
        RowBox[{"\[ScriptH]0", " ", 
         RowBox[{"Dpar", "[", "t", "]"}]}]}], "}"}]}], "}"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "30"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1.5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"StandardPlotStyle", "[", 
      RowBox[{
      "18", ",", "24", ",", 
       "\"\<\!\(\*FractionBox[\(D\), SubscriptBox[\(D\), SubscriptBox[\(\
\[ScriptCapitalH]\), \(0\)]]]\)\>\"", ",", "\"\<z\>\"", ",", 
       "\"\<Distances in \[CapitalLambda]CDM model\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(D\), \(ang\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(D\), \(lum\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(D\), \(par\)]\)\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0.5"}], "}"}]}], "]"}], "]"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.7906950079719963`*^9, 3.79069504633316*^9}, {
   3.790695088329276*^9, 3.790695154193429*^9}, {3.8018931620838947`*^9, 
   3.8018932584068937`*^9}, {3.801893307241515*^9, 3.8018933101605787`*^9}, {
   3.801893708114862*^9, 3.801893807469385*^9}, {3.80189422729993*^9, 
   3.801894334410911*^9}, 3.810105918698393*^9},
 CellLabel->
  "In[178]:=",ExpressionUUID->"e98fb6ac-4c1c-486c-bab1-f7baf6a485bd"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag$15742#1"]& ], 
        TagBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxdxX080wkcwPF5OpRSWjohMyoPWdk5oofvt1hu12vycFPh4rUs6a5J7CUP
JeapB5lbUZR+tajTdKUZ5aEcxaESC2s5FRmKWOlFmu7u3/u8Xu/Xx5oT5c/V
JpFIrH/991MZzxo6XXKRKr8dpy8lkBdunKbXJ0Sl28nS9FACzTjlO8tPCNFQ
sy/10DwCD9/Zo/DoyUHROMvw7ssibFO8V5dlZyN6UWoyL55H33zbDWlXj2Gj
q7OlfctZfHB9LMNfKcCarB8XpJiJ0FLalqT/KB4lX9+9OZmfhb+Yh1CuZEWi
JW2S5fh3HFZmHw6J8gzF9tKJja+lv6Iha0/+Wzob29zLPC2pu7HOxJ5Of8TC
wJdVg7V7g1Dpvs+/I3YL1tq5fk3JDcDxkAd1MSs24cuuhRODwSwMaEq3S/l2
HeqIbTTC1i0YOynLEDq7oj0x/UQSthkDPXYkKOh0dGx5etvn8gb8mZKz3KuU
hscP9RcvObMWE7poHmoXBxwfdG9eWe6CtFUFBtY/rcDuI5WMvUHOWPC5RS9p
tw3SdDmdXuVOKEyEkC8NFJTsmKr197ZHnmvAmLuXJcbvnc+yq16O5++IG+KH
zfA4lxuO01Rck6dpNnlqig8GBaKbfArm+q3bxdtOxhdfAkNr1RYomPt4mY6+
CXLEc28a/WCG4acyhMPGC/DTLV8afG+KvdItb1qGjbBMbhWbe3cRZjnXe3oq
DPG9iVZFYfhCvFF1NbrOTx/NN4ydWjwzH9vFJRkjS/XQxkZbz+7WXHT7tLWT
M6mN/USvbdUJA/yjWiuoyF4LWSk0/qRaDw3yg8rLOmYhuEFruCpGB2+dLXTI
ujsDtl2Xhoy9tVDBD5JzLKah2vnmVMzoLAgarR/yMz9BqKGubeGeGXgdpr/I
kv0RfKdbEy9ET8HMkAQ3B6uhjXmgndkxCXVzIq1Ld49D0cm4v+TwAUxz7A8T
EaPAb/RZIVs0AbMuXxhcwxF47Dun1On1KPRGMDfep6qg+TNDHeE5AtTA29d5
yQOwvXFpYraeCqbV7whmzysgCKpkV3s/1DRRHK4v6YOPx+s608mvgPIiz22I
/xx62tynoutegM1a123k9V3gdnVWebG/G+gJy83k2R2gU3KOLqvuhAqJJIBf
/Ah+t15D3rXmCSTJSKoiShPMtrpI/U2bIVPW3LXYqh6qvO3OFVyrh+n+79iV
JBlcTD64+kmsDOKnnUSRWSVw2ibqQ9rDEvCIzfwc6lgCtdkTKkFECRiXkUt5
j4shLeSSSGxQAjyG7n05uRgK+Bm9XluLwaCmQPnnZTHckV7ontchhilnyVGr
BgJM+0Z33nhDwOhvFbxNjnnQ7yNSXmHmQbe3hTkl7gykbJsiEaIz0KGPTKeG
01CRnJeg6D0Nukb1Ix3BIjh4bPUc/RgRVKZ7pDFzhKBQkWeYhBBSZz5GSDTp
UFxFF0mNMqCZiosdC9MgN+8bUui1NKi6z2jTdReAj6bGQuAlAKukoefN/KOg
HLhU6nbkKJiPFjhQVHxYv9lPc26MDzbRBLtpZQw4pt4gkp1iAEL3X6FGHoB7
BuHV7P0HQJk4xRtWcmEfHGsV93Hh7bpl2l2cMMj5cCFhLDwMuP2rBvy62DA+
cC+K1sOGcNVTk8xOBjxr1KzmyxlA+l//APnIQR0=
           "]]},
         Annotation[#, "Charting`Private`Tag$15742#2"]& ], 
        TagBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
          Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxd13k0F9//B3BEaCF7ouyyZV/f4vWikEKWiKxZIrTYUiJUllCkQooUWiyV
PVGRiI+tkq1I7/fMOxXJkhKq7/z+/c0/cx7n3HPnvp6vO/fMSHkfsfdjY2Fh
UWdlYfm/+4XE/pY+7YvoLapt47WRCYd9ec9yjGWg5yLPl15xJoh6V7pUpmbg
Mf3ZcKAcU39gmDaUjgsn2z03iTGha/j7bPn582jUHxr/fj0TUmqDH02yn0f/
vbuLdlKu4hjRH4xNQ/EUqUf1IkxQ/GGTqhyXijdu5lVmCzPBNlvW6Oydc6hF
r5y1F2RC97GM4Hb9c0jTWrreLECtp9O5+k1XMq4PlNdXp+zLeHhkZDkJDUXE
TdbyM2Fpg4JVcFQiPrQ0zWvjZcL68sRr8RKJGFHg2aNNWeJZx6H6tgTkmLGa
vsXDhAnRIRdrsQS8znJhZexaJrSWTiXavz+DpWb+0bqrmRBQEazWkn4Gtd41
axWtYoLMqziLMbMzOOA+/J6P8q/Vogafa0/jvUKdv5NcTPC8KnBtsSQeueS9
Um+tZMLCgbKuuKB4jNbybOel3MjTKbxvSzzGcHD9jOZgwly2W9fH6jh0craW
2cvOhB7nkP7soljq+T6tq9iY4LfC0WJCPxaR81BSJCsT/rM/cN2z9xQ+MF1L
I1mYMFQztSeU7RTKHecMefKPBPfu1Kau2Gg8sJAvd+QPCRuru6I5u0+gbJTB
nd4FEuoulEmxRZ5Auq/Hb1XKyro1CnekT+AnQX2DC79IeHh98ueLU8dRYfuf
eKufJAT47bioaRmJklqReu1zJFyumLnr9e8Y1hV8/SlPOehBfsXX2mPY/Ox3
YcIsCW7ZtYxpxWNYGvWhzXSGhKPnQlvGN0XgQtZBtcYpEiYE/x4TGgtHmx3e
rhsof5tRG99fEI5OB0fDj38jwWdEO26rfDh+2WVzVHuShLi+wSxL4zDcXdSc
XPqFhKKzXW8Gc0NQrl3WKIskQcJrda9GYAjujGmDOYKEGLmaOw60EDS+VKdm
S9ltzW7ODyNHcQv7yUFuBuW3x3fmKR1FlRYV8+gxEkJa6o1T/h3BT1bfK4c+
kIDWMaeUS49gyMHxNTqUp0ubXS1WHsEvfkHJ30ZIWHnB30618xCypfvnub8j
4d/zORmH2EOoOHgyrH6YyqN4mDNb+xBmVJfqClFOHbW56XcrGMWk7c52DZKg
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
P6nPDCIX8qs4us2A5f9d/wOg8ABh
           "]]},
         Annotation[#, "Charting`Private`Tag$15742#3"]& ]}, {}},
      AspectRatio->0.8,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"\\!\\(\\*FractionBox[\\(D\\), SubscriptBox[\\(D\\), SubscriptBox[\
\\(\[ScriptCapitalH]\\), \\(0\\)]]]\\)\"", TraditionalForm], 
         FormBox["\"\"", TraditionalForm]}, {
         FormBox["\"z\"", TraditionalForm], 
         FormBox["\"\"", TraditionalForm]}},
      FrameStyle->Directive[FontSize -> 18],
      FrameTicks->{{True, True}, {True, True}},
      GridLines->Automatic,
      GridLinesStyle->Directive[
        GrayLevel[0.5], 
        Opacity[0.2`16.], 
        Dashing[{Small, Small}]],
      ImageSize->700,
      Method->{"ScalingFunctions" -> None},
      PlotLabel->None,
      PlotRange->{{0, 10}, {0, 1.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{
      StyleBox["\"\\!\\(\\*SubscriptBox[\\(D\\), \\(ang\\)]\\)\"", FontSize -> 
        24, StripOnInput -> False],StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(lum\\)]\\)\"", FontSize -> 24, 
        StripOnInput -> False],StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(par\\)]\\)\"", FontSize -> 24, 
        StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{1, 0.5}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->0.8,
   Axes->False,
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{
      FormBox[
      "\"\\!\\(\\*FractionBox[\\(D\\), SubscriptBox[\\(D\\), SubscriptBox[\\(\
\[ScriptCapitalH]\\), \\(0\\)]]]\\)\"", TraditionalForm], 
      FormBox["\"\"", TraditionalForm]}, {
      FormBox["\"z\"", TraditionalForm], 
      FormBox["\"\"", TraditionalForm]}},
   FrameStyle->Directive[FontSize -> 18],
   FrameTicks->{{True, True}, {True, True}},
   ImagePadding->All,
   ImageSize->700,
   Method->{"ScalingFunctions" -> None},
   PlotLabel->FormBox[
     StyleBox[
     "\"Distances in \[CapitalLambda]CDM model\"", Bold, FontSize -> 18, 
      StripOnInput -> False], TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         Line[CompressedData["
1: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
          "]]}, 
        "Charting`Private`Tag$15742#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.880722, 0.611041, 0.142051]], 
         Line[CompressedData["
1:eJxdxX080wkcwPF5OpRSWjohMyoPWdk5oofvt1hu12vycFPh4rUs6a5J7CUP
JeapB5lbUZR+tajTdKUZ5aEcxaESC2s5FRmKWOlFmu7u3/u8Xu/Xx5oT5c/V
JpFIrH/991MZzxo6XXKRKr8dpy8lkBdunKbXJ0Sl28nS9FACzTjlO8tPCNFQ
sy/10DwCD9/Zo/DoyUHROMvw7ssibFO8V5dlZyN6UWoyL55H33zbDWlXj2Gj
q7OlfctZfHB9LMNfKcCarB8XpJiJ0FLalqT/KB4lX9+9OZmfhb+Yh1CuZEWi
JW2S5fh3HFZmHw6J8gzF9tKJja+lv6Iha0/+Wzob29zLPC2pu7HOxJ5Of8TC
wJdVg7V7g1Dpvs+/I3YL1tq5fk3JDcDxkAd1MSs24cuuhRODwSwMaEq3S/l2
HeqIbTTC1i0YOynLEDq7oj0x/UQSthkDPXYkKOh0dGx5etvn8gb8mZKz3KuU
hscP9RcvObMWE7poHmoXBxwfdG9eWe6CtFUFBtY/rcDuI5WMvUHOWPC5RS9p
tw3SdDmdXuVOKEyEkC8NFJTsmKr197ZHnmvAmLuXJcbvnc+yq16O5++IG+KH
zfA4lxuO01Rck6dpNnlqig8GBaKbfArm+q3bxdtOxhdfAkNr1RYomPt4mY6+
CXLEc28a/WCG4acyhMPGC/DTLV8afG+KvdItb1qGjbBMbhWbe3cRZjnXe3oq
DPG9iVZFYfhCvFF1NbrOTx/NN4ydWjwzH9vFJRkjS/XQxkZbz+7WXHT7tLWT
M6mN/USvbdUJA/yjWiuoyF4LWSk0/qRaDw3yg8rLOmYhuEFruCpGB2+dLXTI
ujsDtl2Xhoy9tVDBD5JzLKah2vnmVMzoLAgarR/yMz9BqKGubeGeGXgdpr/I
kv0RfKdbEy9ET8HMkAQ3B6uhjXmgndkxCXVzIq1Ld49D0cm4v+TwAUxz7A8T
EaPAb/RZIVs0AbMuXxhcwxF47Dun1On1KPRGMDfep6qg+TNDHeE5AtTA29d5
yQOwvXFpYraeCqbV7whmzysgCKpkV3s/1DRRHK4v6YOPx+s608mvgPIiz22I
/xx62tynoutegM1a123k9V3gdnVWebG/G+gJy83k2R2gU3KOLqvuhAqJJIBf
/Ah+t15D3rXmCSTJSKoiShPMtrpI/U2bIVPW3LXYqh6qvO3OFVyrh+n+79iV
JBlcTD64+kmsDOKnnUSRWSVw2ibqQ9rDEvCIzfwc6lgCtdkTKkFECRiXkUt5
j4shLeSSSGxQAjyG7n05uRgK+Bm9XluLwaCmQPnnZTHckV7ontchhilnyVGr
BgJM+0Z33nhDwOhvFbxNjnnQ7yNSXmHmQbe3hTkl7gykbJsiEaIz0KGPTKeG
01CRnJeg6D0Nukb1Ix3BIjh4bPUc/RgRVKZ7pDFzhKBQkWeYhBBSZz5GSDTp
UFxFF0mNMqCZiosdC9MgN+8bUui1NKi6z2jTdReAj6bGQuAlAKukoefN/KOg
HLhU6nbkKJiPFjhQVHxYv9lPc26MDzbRBLtpZQw4pt4gkp1iAEL3X6FGHoB7
BuHV7P0HQJk4xRtWcmEfHGsV93Hh7bpl2l2cMMj5cCFhLDwMuP2rBvy62DA+
cC+K1sOGcNVTk8xOBjxr1KzmyxlA+l//APnIQR0=
          "]]}, 
        "Charting`Private`Tag$15742#2"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.560181, 0.691569, 0.194885]], 
         Line[CompressedData["
1:eJxd13k0F9//B3BEaCF7ouyyZV/f4vWikEKWiKxZIrTYUiJUllCkQooUWiyV
PVGRiI+tkq1I7/fMOxXJkhKq7/z+/c0/cx7n3HPnvp6vO/fMSHkfsfdjY2Fh
UWdlYfm/+4XE/pY+7YvoLapt47WRCYd9ec9yjGWg5yLPl15xJoh6V7pUpmbg
Mf3ZcKAcU39gmDaUjgsn2z03iTGha/j7bPn582jUHxr/fj0TUmqDH02yn0f/
vbuLdlKu4hjRH4xNQ/EUqUf1IkxQ/GGTqhyXijdu5lVmCzPBNlvW6Oydc6hF
r5y1F2RC97GM4Hb9c0jTWrreLECtp9O5+k1XMq4PlNdXp+zLeHhkZDkJDUXE
TdbyM2Fpg4JVcFQiPrQ0zWvjZcL68sRr8RKJGFHg2aNNWeJZx6H6tgTkmLGa
vsXDhAnRIRdrsQS8znJhZexaJrSWTiXavz+DpWb+0bqrmRBQEazWkn4Gtd41
axWtYoLMqziLMbMzOOA+/J6P8q/Vogafa0/jvUKdv5NcTPC8KnBtsSQeueS9
Um+tZMLCgbKuuKB4jNbybOel3MjTKbxvSzzGcHD9jOZgwly2W9fH6jh0craW
2cvOhB7nkP7soljq+T6tq9iY4LfC0WJCPxaR81BSJCsT/rM/cN2z9xQ+MF1L
I1mYMFQztSeU7RTKHecMefKPBPfu1Kau2Gg8sJAvd+QPCRuru6I5u0+gbJTB
nd4FEuoulEmxRZ5Auq/Hb1XKyro1CnekT+AnQX2DC79IeHh98ueLU8dRYfuf
eKufJAT47bioaRmJklqReu1zJFyumLnr9e8Y1hV8/SlPOehBfsXX2mPY/Ox3
YcIsCW7ZtYxpxWNYGvWhzXSGhKPnQlvGN0XgQtZBtcYpEiYE/x4TGgtHmx3e
rhsof5tRG99fEI5OB0fDj38jwWdEO26rfDh+2WVzVHuShLi+wSxL4zDcXdSc
XPqFhKKzXW8Gc0NQrl3WKIskQcJrda9GYAjujGmDOYKEGLmaOw60EDS+VKdm
S9ltzW7ODyNHcQv7yUFuBuW3x3fmKR1FlRYV8+gxEkJa6o1T/h3BT1bfK4c+
kIDWMaeUS49gyMHxNTqUp0ubXS1WHsEvfkHJ30ZIWHnB30618xCypfvnub8j
4d/zORmH2EOoOHgyrH6YyqN4mDNb+xBmVJfqClFOHbW56XcrGMWk7c52DZKg
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
P6nPDCIX8qs4us2A5f9d/wOg8ABh
          "]]}, 
        "Charting`Private`Tag$15742#3"]}}, {
     DisplayFunction -> Identity, AspectRatio -> 0.8`16., 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
        "\!\(\*FractionBox[\(D\), SubscriptBox[\(D\), SubscriptBox[\(\
\[ScriptCapitalH]\), \(0\)]]]\)", ""}, {"z", ""}}, FrameStyle -> 
      Directive[FontSize -> 18], FrameTicks -> {{True, True}, {True, True}}, 
      GridLines -> Automatic, GridLinesStyle -> Directive[
        GrayLevel[0.5], 
        Opacity[0.2`16.], 
        Dashing[{Small, Small}]], ImageSize -> 700, 
      Method -> {"ScalingFunctions" -> None}, PlotLabel -> 
      Style["Distances in \[CapitalLambda]CDM model", Bold, FontSize -> 18], 
      PlotRange -> {{0, 10}, {0, 1.5`16.}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         EdgeForm[None], 
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0.368417, 0.506779, 0.709798]], 
        Directive[
         EdgeForm[None], 
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0.880722, 0.611041, 0.142051]], 
        Directive[
         EdgeForm[None], 
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0.560181, 0.691569, 0.194885]]}, {
        Style["\!\(\*SubscriptBox[\(D\), \(ang\)]\)", FontSize -> 24], 
        Style["\!\(\*SubscriptBox[\(D\), \(lum\)]\)", FontSize -> 24], 
        Style["\!\(\*SubscriptBox[\(D\), \(par\)]\)", FontSize -> 24]}, 
       LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> "Column"]], {
     1, 0.5`16.}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.790695048836297*^9, 3.790695106673839*^9, 3.790695156870463*^9, 
   3.7906974073614187`*^9, 3.790702269575005*^9, {3.801893163352336*^9, 
   3.801893259073251*^9}, {3.8018933013408203`*^9, 3.8018933110236397`*^9}, 
   3.8018937243788548`*^9, 3.801893815236824*^9, {3.8018943295594*^9, 
   3.8018943357159567`*^9}, 3.801943025449914*^9, 3.810105920319808*^9, 
   3.8314615142698593`*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"af264687-2120-4efc-8f3a-d5912e913a97"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"redshift", "[", "t", "]"}], ",", " ", 
        RowBox[{"\[ScriptH]0", " ", 
         RowBox[{"DangWxl", "[", "t", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"redshift", "[", "t", "]"}], ",", 
        RowBox[{"\[ScriptH]0", " ", 
         RowBox[{"Dlum", "[", "t", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"redshift", "[", "t", "]"}], ",", 
        RowBox[{"\[ScriptH]0", " ", 
         RowBox[{"Dpar", "[", "t", "]"}]}]}], "}"}]}], "}"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "30"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "15"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"StandardPlotStyle", "[", 
      RowBox[{
      "18", ",", "24", ",", 
       "\"\<\!\(\*FractionBox[\(D\), SubscriptBox[\(D\), SubscriptBox[\(\
\[ScriptCapitalH]\), \(0\)]]]\)\>\"", ",", "\"\<z\>\"", ",", 
       "\"\<Distances in \[CapitalLambda]CDM model\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(D\), \(ang\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(D\), \(lum\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(D\), \(par\)]\)\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0.5"}], "}"}]}], "]"}], "]"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.8018941849168253`*^9, 3.801894192891251*^9}, {
   3.801894350879943*^9, 3.801894360769125*^9}, 3.8101059236589737`*^9},
 CellLabel->
  "In[182]:=",ExpressionUUID->"1e3aea65-1310-438a-8a37-e2d90f69fcf5"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
SqYJEfyLMlIHGkD0f9f/ALItTkU=
           "]]},
         Annotation[#, "Charting`Private`Tag$2455424424#1"]& ], 
        TagBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxdxXk0FAgcwPExGcaVNJSQJklmSCVDOfr9SllHopHQlmPe5lmFKNptxpFt
0xs7G+OqBjE9V0ZvjCux7KRS62hVrp7UUrQa50w8xzbb/ruf977vu5kVwzxN
JBAI3l/778qvktPaMLF23Y9u7m/x5VjE/qqkh9gz+sC+o+ANzi71BAVxpchd
5UwO0x/CnfNK/5B7rVj4Q29of8AgMsz9zx21f4A039iBM7Ov8GXhwajSTgl6
MH09Fhe6sKB+Y2UDuRT37NRNTLokxe29uQsDkdmo0SFweaopxqLKFeIEm4NT
QkXTgiwH3UyVtbcfR6G/xmvVes5VJFvI9V1YLCw7qRcy58pGvbo1FIpVIAps
LnEv8WNxw+Ms0rWoo9gUqKmTMhKBv9b3WPJrPLCF0lqx/0sYWk/FRls+dcX4
wbTye9bfYpJBQjajEzDa+W+5Xbw/qqjXpa2U7kWn08XuC8u+OG6m1HkWxMCC
Nzzrd0+8sP2AyyB5rS2+SDg+E2b8DboWTMmo12xwnLiv+72lK0Zu9LDuC6Dj
sHeXmREglmvRZBllFljDnFVhnHVCuc/DmwrxFhSkjs/7hjvg8SM6zeaszdgU
P5r11tsObevTIpPTTXFF46P9x8u7UPvqyB51W2PkMhnbV4pt8LD2duknA0P0
HGWz7xfQUeuAsdIswQBNFCaaokPbkKrv/BGOUTA8uSjWOs8cz20te1XrrYdd
jhURf1LM8OhVP5VpN10sYvNzvTWpOLxjbaF5iDbm3V+GCb4J1lcJAnQyNLB1
voOT7LQBe515mQ8c1PHNb+Zsdc465EYS1bymVVFczavuGKTgEQlL6+QnInbn
5g9zMvSw27+ieNJeBTmfa7MYfrooSJnVilqjBF388nlFqIWTrT2e39muAMlx
puYIj4zWutP5+fmLUHhlw3T5CxLK9T3Pl6svANPsZy/qtlW4TfTc9UK3AuiW
d6NCxwloPFXyFy1rDmJvycbcw/+B4rWF9kN3ZuBDQsxrmWgRTElzLRbNk9Bo
o+nIPTEPljY/dVpumYDAWLsFNQM5lMbvsGhcGYNAblxDhM8MhNXZyv2ejMLv
V0jPl+ifoC/m/YBP1zt4VZJyOdJvDD5UHjDJCRyCueS24bm9IxCwmBQskvVB
XIA79WD4EOyLM+x8bfgCLMCmsUXQC6rClsci0w5QU7adLLF6DstUH/FwhRS6
+50ontFtoGCm723yk0BidEN/tHcN7Ob4zFI1JMAUi7xWL0vg+sSV0syWapic
Hk8cKJcAjXNqNotWDWvuJM3LVCUQLFVjGRPEEPqoh27QKgbGYj8xLLgSDF3d
82oTRLB0aEtuDl0IIZtUTshKhXDC/+wNjRvFsGtze0C9thAoVTlUPqkY2oOa
U17GFYN0JIAuld6GmuAkHXUsgtWTbSWjOwXge/HcYWGzAJScU3kN6/jAK+E5
PjrGh9rQX55tVWRA5sHz+6rombD7y+39F+9cB2VjYbSjSgY4WAV3Nhmlw+qa
qJuXQ9Mh5j6xXaGdCna0t2Vyq1TI30Pz52Ung4tRCIP4KBkOrzef7dRlw6YK
SUGFLRvuVmd7mpLjYMHk1phgfRy4HWutCdY8A38MxqR0GJ+BcaPAtjoSC1SH
HTZe0GHByPdL1qmqTOgLJriEkZlA+J9/AZijMNM=
           "]]},
         Annotation[#, "Charting`Private`Tag$2455424424#2"]& ], 
        TagBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
          Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
D+e6Eog=
           "]]},
         Annotation[#, "Charting`Private`Tag$2455424424#3"]& ]}, {}},
      AspectRatio->0.8,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"\\!\\(\\*FractionBox[\\(D\\), SubscriptBox[\\(D\\), SubscriptBox[\
\\(\[ScriptCapitalH]\\), \\(0\\)]]]\\)\"", TraditionalForm], 
         FormBox["\"\"", TraditionalForm]}, {
         FormBox["\"z\"", TraditionalForm], 
         FormBox["\"\"", TraditionalForm]}},
      FrameStyle->Directive[FontSize -> 18],
      FrameTicks->{{True, True}, {True, True}},
      GridLines->Automatic,
      GridLinesStyle->Directive[
        GrayLevel[0.5], 
        Opacity[0.2`70.], 
        Dashing[{Small, Small}]],
      ImageSize->700,
      Method->{"ScalingFunctions" -> None},
      PlotLabel->None,
      PlotRange->{{0, 5}, {0, 15}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{
      StyleBox["\"\\!\\(\\*SubscriptBox[\\(D\\), \\(ang\\)]\\)\"", FontSize -> 
        24, StripOnInput -> False],StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(lum\\)]\\)\"", FontSize -> 24, 
        StripOnInput -> False],StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(par\\)]\\)\"", FontSize -> 24, 
        StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{1, 0.5}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->0.8,
   Axes->False,
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{
      FormBox[
      "\"\\!\\(\\*FractionBox[\\(D\\), SubscriptBox[\\(D\\), SubscriptBox[\\(\
\[ScriptCapitalH]\\), \\(0\\)]]]\\)\"", TraditionalForm], 
      FormBox["\"\"", TraditionalForm]}, {
      FormBox["\"z\"", TraditionalForm], 
      FormBox["\"\"", TraditionalForm]}},
   FrameStyle->Directive[FontSize -> 18],
   FrameTicks->{{True, True}, {True, True}},
   ImagePadding->All,
   ImageSize->700,
   Method->{"ScalingFunctions" -> None},
   PlotLabel->FormBox[
     StyleBox[
     "\"Distances in \[CapitalLambda]CDM model\"", Bold, FontSize -> 18, 
      StripOnInput -> False], TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         Line[CompressedData["
1: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
SqYJEfyLMlIHGkD0f9f/ALItTkU=
          "]]}, 
        "Charting`Private`Tag$2455424424#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.880722, 0.611041, 0.142051]], 
         Line[CompressedData["
1:eJxdxXk0FAgcwPExGcaVNJSQJklmSCVDOfr9SllHopHQlmPe5lmFKNptxpFt
0xs7G+OqBjE9V0ZvjCux7KRS62hVrp7UUrQa50w8xzbb/ruf977vu5kVwzxN
JBAI3l/778qvktPaMLF23Y9u7m/x5VjE/qqkh9gz+sC+o+ANzi71BAVxpchd
5UwO0x/CnfNK/5B7rVj4Q29of8AgMsz9zx21f4A039iBM7Ov8GXhwajSTgl6
MH09Fhe6sKB+Y2UDuRT37NRNTLokxe29uQsDkdmo0SFweaopxqLKFeIEm4NT
QkXTgiwH3UyVtbcfR6G/xmvVes5VJFvI9V1YLCw7qRcy58pGvbo1FIpVIAps
LnEv8WNxw+Ms0rWoo9gUqKmTMhKBv9b3WPJrPLCF0lqx/0sYWk/FRls+dcX4
wbTye9bfYpJBQjajEzDa+W+5Xbw/qqjXpa2U7kWn08XuC8u+OG6m1HkWxMCC
Nzzrd0+8sP2AyyB5rS2+SDg+E2b8DboWTMmo12xwnLiv+72lK0Zu9LDuC6Dj
sHeXmREglmvRZBllFljDnFVhnHVCuc/DmwrxFhSkjs/7hjvg8SM6zeaszdgU
P5r11tsObevTIpPTTXFF46P9x8u7UPvqyB51W2PkMhnbV4pt8LD2duknA0P0
HGWz7xfQUeuAsdIswQBNFCaaokPbkKrv/BGOUTA8uSjWOs8cz20te1XrrYdd
jhURf1LM8OhVP5VpN10sYvNzvTWpOLxjbaF5iDbm3V+GCb4J1lcJAnQyNLB1
voOT7LQBe515mQ8c1PHNb+Zsdc465EYS1bymVVFczavuGKTgEQlL6+QnInbn
5g9zMvSw27+ieNJeBTmfa7MYfrooSJnVilqjBF388nlFqIWTrT2e39muAMlx
puYIj4zWutP5+fmLUHhlw3T5CxLK9T3Pl6svANPsZy/qtlW4TfTc9UK3AuiW
d6NCxwloPFXyFy1rDmJvycbcw/+B4rWF9kN3ZuBDQsxrmWgRTElzLRbNk9Bo
o+nIPTEPljY/dVpumYDAWLsFNQM5lMbvsGhcGYNAblxDhM8MhNXZyv2ejMLv
V0jPl+ifoC/m/YBP1zt4VZJyOdJvDD5UHjDJCRyCueS24bm9IxCwmBQskvVB
XIA79WD4EOyLM+x8bfgCLMCmsUXQC6rClsci0w5QU7adLLF6DstUH/FwhRS6
+50ontFtoGCm723yk0BidEN/tHcN7Ob4zFI1JMAUi7xWL0vg+sSV0syWapic
Hk8cKJcAjXNqNotWDWvuJM3LVCUQLFVjGRPEEPqoh27QKgbGYj8xLLgSDF3d
82oTRLB0aEtuDl0IIZtUTshKhXDC/+wNjRvFsGtze0C9thAoVTlUPqkY2oOa
U17GFYN0JIAuld6GmuAkHXUsgtWTbSWjOwXge/HcYWGzAJScU3kN6/jAK+E5
PjrGh9rQX55tVWRA5sHz+6rombD7y+39F+9cB2VjYbSjSgY4WAV3Nhmlw+qa
qJuXQ9Mh5j6xXaGdCna0t2Vyq1TI30Pz52Ung4tRCIP4KBkOrzef7dRlw6YK
SUGFLRvuVmd7mpLjYMHk1phgfRy4HWutCdY8A38MxqR0GJ+BcaPAtjoSC1SH
HTZe0GHByPdL1qmqTOgLJriEkZlA+J9/AZijMNM=
          "]]}, 
        "Charting`Private`Tag$2455424424#2"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.560181, 0.691569, 0.194885]], 
         Line[CompressedData["
1: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
D+e6Eog=
          "]]}, "Charting`Private`Tag$2455424424#3"]}}, {
     DisplayFunction -> Identity, AspectRatio -> 0.8`70., 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
        "\!\(\*FractionBox[\(D\), SubscriptBox[\(D\), SubscriptBox[\(\
\[ScriptCapitalH]\), \(0\)]]]\)", ""}, {"z", ""}}, FrameStyle -> 
      Directive[FontSize -> 18], FrameTicks -> {{True, True}, {True, True}}, 
      GridLines -> Automatic, GridLinesStyle -> Directive[
        GrayLevel[0.5], 
        Opacity[0.2`70.], 
        Dashing[{Small, Small}]], ImageSize -> 700, 
      Method -> {"ScalingFunctions" -> None}, PlotLabel -> 
      Style["Distances in \[CapitalLambda]CDM model", Bold, FontSize -> 18], 
      PlotRange -> {{0, 5}, {0, 15}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         EdgeForm[None], 
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0.368417, 0.506779, 0.709798]], 
        Directive[
         EdgeForm[None], 
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0.880722, 0.611041, 0.142051]], 
        Directive[
         EdgeForm[None], 
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0.560181, 0.691569, 0.194885]]}, {
        Style["\!\(\*SubscriptBox[\(D\), \(ang\)]\)", FontSize -> 24], 
        Style["\!\(\*SubscriptBox[\(D\), \(lum\)]\)", FontSize -> 24], 
        Style["\!\(\*SubscriptBox[\(D\), \(par\)]\)", FontSize -> 24]}, 
       LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> "Column"]], {
     1, 0.5`70.}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.80189419376375*^9, 3.80189436204965*^9, 
  3.810105925803981*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"583eb642-ce5a-46f7-b290-a5f9b62bc84f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"1", "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"DangWxl", "[", "t", "]"}], "2"], 
       SuperscriptBox[
        RowBox[{"Dpar", "[", "t", "]"}], "2"]]}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "30"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*FractionBox[\(\[Eta]\), OverscriptBox[\(M\), \
\(_\)]]\)\>\"", ",", "Large"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Mu]\>\"", ",", "Large"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"redshift", "[", "t", "]"}], ",", " ", 
       RowBox[{"1", "-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"DangWxl", "[", "t", "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"Dpar", "[", "t", "]"}], "2"]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "30"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1.005"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"StandardPlotStyle", "[", 
       RowBox[{
       "18", ",", "24", ",", "\"\<\[Mu]\>\"", ",", "\"\<z\>\"", ",", 
        "\"\<Distance slip in \[CapitalLambda]CDM model\>\"", ",", 
        RowBox[{"{", " ", "}"}], ",", 
        RowBox[{"{", " ", "}"}]}], "]"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7905712629252367`*^9, 3.790571317816127*^9}, {
   3.790695209276085*^9, 3.7906952271047077`*^9}, 3.801893839219028*^9, {
   3.8018944273847218`*^9, 3.8018945058930902`*^9}, {3.81010593289536*^9, 
   3.810105934942449*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"858202b2-488b-4111-9c18-05992b4a2d39"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
eQQrzsEgpQBR6P/zH7bKSFo=
       "]]},
     Annotation[#, "Charting`Private`Tag$17467#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     StyleBox[
     "\"\\!\\(\\*FractionBox[\\(\[Eta]\\), OverscriptBox[\\(M\\), \
\\(_\\)]]\\)\"", Large, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"\[Mu]\"", Large, StripOnInput -> False], TraditionalForm]},
  AxesOrigin->{10.0105, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{10.0105, 33.1995}, {0., 0.952508654296229}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7905713189851713`*^9, 3.790695218432147*^9, 3.790697413217042*^9, 
   3.790702272793742*^9, 3.801893843079854*^9, {3.801894496837912*^9, 
   3.801894506782771*^9}, 3.801943043398856*^9, 3.8101059419101152`*^9, 
   3.8326719443018827`*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"8a734d86-409b-41b3-aee1-326e7aca3d0f"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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

      "]]},
    Annotation[#, "Charting`Private`Tag$17510#1"]& ]},
  AspectRatio->0.8,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Mu]\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox["\"z\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[FontSize -> 18],
  FrameTicks->{{True, True}, {True, True}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Opacity[0.2`16.], 
    Dashing[{Small, Small}]],
  ImageSize->700,
  Method->{"ScalingFunctions" -> None},
  PlotLabel->FormBox[
    StyleBox[
    "\"Distance slip in \[CapitalLambda]CDM model\"", Bold, FontSize -> 18, 
     StripOnInput -> False], TraditionalForm],
  PlotRange->{{0, 10}, {0, 1.005}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7905713189851713`*^9, 3.790695218432147*^9, 3.790697413217042*^9, 
   3.790702272793742*^9, 3.801893843079854*^9, {3.801894496837912*^9, 
   3.801894506782771*^9}, 3.801943043398856*^9, 3.8101059419101152`*^9, 
   3.832671944486347*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"d7f866c5-813f-4c0a-9225-6cc72ed52ff3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ADpar", "[", "z_", "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"A", "[", "ETA0", "]"}], "\[ScriptH]0"], " ", 
    FractionBox[
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "+", "z"}], "]"}], "-", "1"}], 
     RowBox[{
      RowBox[{
       FractionBox["3", "2"], 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", "z"}], "]"}]}], "-", "1"}]], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"A", "[", "ETA0", "]"}], 
      RowBox[{"Sqrt", "[", 
       RowBox[{"A", "[", "ETA0", "]"}], "]"}], 
      FractionBox["1", "\[ScriptH]in"], " ", 
      FractionBox[
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "+", "z"}], "]"}], "-", "1"}], 
       RowBox[{
        RowBox[{
         FractionBox["3", "2"], 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "+", "z"}], "]"}]}], "-", "1"}]]}], 
     "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8203434649132853`*^9, 3.820343507410577*^9}, {
   3.820343601932023*^9, 3.820343618946733*^9}, {3.82034521649466*^9, 
   3.820345224765152*^9}, {3.821280439700323*^9, 3.821280468154353*^9}, {
   3.8212805127942*^9, 3.821280517298628*^9}, 3.832671954307081*^9, {
   3.832752429835883*^9, 3.832752430940248*^9}, {3.8328305179421673`*^9, 
   3.832830534488953*^9}, {3.8328305769564037`*^9, 3.832830645046586*^9}, {
   3.832830954759666*^9, 3.832830974990365*^9}, {3.8328314069626207`*^9, 
   3.832831416523017*^9}},
 CellLabel->
  "In[709]:=",ExpressionUUID->"2f21f3bb-2f04-40b3-9f81-6c9a3c98e77e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"redshift", "[", "t", "]"}], ",", " ", 
      RowBox[{
       FractionBox[
        RowBox[{"Dpar", "[", "t", "]"}], 
        RowBox[{"ADpar", "[", 
         RowBox[{"zbg", "[", "t", "]"}], "]"}]], "-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "30"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"StandardPlotStyle", "[", 
      RowBox[{
      "18", ",", "24", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]D\), \(par\)]\)(BGO, ET)\>\"",
        ",", "\"\<z\>\"", ",", "\"\< \>\"", ",", 
       RowBox[{"{", " ", "}"}], ",", 
       RowBox[{"{", " ", "}"}]}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8212804838243628`*^9, 3.8212805050590277`*^9}, {
  3.831461707620433*^9, 3.831461722579954*^9}, {3.831461762656907*^9, 
  3.831461764106782*^9}, {3.832671313324194*^9, 3.8326713158685017`*^9}},
 CellLabel->
  "In[710]:=",ExpressionUUID->"fa7d14ad-052e-4a97-882d-b225cfd075cf"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
      "]]},
    Annotation[#, "Charting`Private`Tag$82155#1"]& ]},
  AspectRatio->0.8,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]D\\), \\(par\\)]\\)(BGO, \
ET)\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox["\"z\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[FontSize -> 18],
  FrameTicks->{{True, True}, {True, True}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Opacity[0.2`16.], 
    Dashing[{Small, Small}]],
  ImageSize->700,
  Method->{"ScalingFunctions" -> None},
  PlotLabel->FormBox[
    StyleBox["\" \"", Bold, FontSize -> 18, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8328306536622963`*^9, 3.832830978525613*^9, 
  3.832831443248672*^9},
 CellLabel->
  "Out[710]=",ExpressionUUID->"0888333f-fb7a-488e-affd-6ce1108fe4a8"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.8101060370923977`*^9},ExpressionUUID->"42597c69-6d9b-43cc-9aa9-\
e24b6af6c9bb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lup", "[", "\[Eta]in", "]"}], "/.", 
  "geodesic"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "ETA0", "]"}], ",", 
    RowBox[{"y", "[", "ETA0", "]"}], ",", 
    RowBox[{"z", "[", "ETA0", "]"}]}], "}"}], "/.", "geodesic"}]}], "Input",
 CellChangeTimes->{{3.8328396280113697`*^9, 3.832839689424251*^9}},
 CellLabel->
  "In[715]:=",ExpressionUUID->"ddcd426e-04d0-4a47-b8f8-08707fd4fe1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "-", "1.00000000000000000000501871319585869406`14.958607308313038"}], ",", 
   
   RowBox[{
   "-", "0.49999999999746712045595525803933621644`14.920818746588603"}], ",", 
   "0.50000000000000000000577690682635288073`14.920818746588603", ",", 
   "0.70710678118654752440901414208723466227`14.920818746588603"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.832839679261602*^9, 3.832839690405587*^9}},
 CellLabel->
  "Out[715]=",ExpressionUUID->"115e1535-a06d-4f29-a8f0-df1e10d9c011"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11.59449999961035211264256266301896674609`15.844150477530967", ",", 
   RowBox[{
   "-", "11.59449999966908705652170055148580262872`15.844150477530967"}], ",", 
   RowBox[{
   "-", "16.397099148466868970699367399267105805`15.844150477530967"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.832839679261602*^9, 3.832839690408353*^9}},
 CellLabel->
  "Out[716]=",ExpressionUUID->"d5ebcc66-af72-47af-9bc0-cc579b994e7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Sqrt", "[", "2", "]"}], "2"], "//", "N"}]], "Input",
 CellChangeTimes->{{3.832839830450657*^9, 3.832839842592421*^9}},
 CellLabel->
  "In[718]:=",ExpressionUUID->"1e3e5175-ef56-44d2-b14f-829bdc405148"],

Cell[BoxData["0.7071067811865475`"], "Output",
 CellChangeTimes->{{3.832839838480021*^9, 3.832839843183857*^9}},
 CellLabel->
  "Out[718]=",ExpressionUUID->"ea0e6ff7-4df3-4f11-ad94-418612c462d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Drift effects\
\>", "Subsection",
 CellChangeTimes->{{3.80189469323868*^9, 
  3.801894706970212*^9}},ExpressionUUID->"7cdb6dc4-c6a6-423b-8c26-\
2fa6542be9c4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hUU", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       FractionBox["1", "Q"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "Q"], ",", "0", ",", "0", ",", 
       FractionBox["1", 
        SuperscriptBox["Q", "2"]]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hDD", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "Q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Q", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hUU", ".", "hDD"}], "//", "MatrixForm"}], "\n", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"functional", "[", "\[Eta]_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Mxx", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Mxx", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], 
        ",", 
        RowBox[{
         RowBox[{"Mxl", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Mxl", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], 
        ",", 
        RowBox[{
         RowBox[{"Mlx", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Mlx", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], 
        ",", 
        RowBox[{
         RowBox[{"Mll", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Mll", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.796472865902629*^9, 3.796472871455306*^9}, 
   3.7964729049926167`*^9, {3.832703439358197*^9, 3.832703486623087*^9}, {
   3.832735585291148*^9, 3.8327356176849813`*^9}, {3.83294175968369*^9, 
   3.832941772880355*^9}, {3.8351523340956573`*^9, 
   3.835152353886413*^9}},ExpressionUUID->"a25c2e6c-e1f6-45fc-b9d2-\
9227fe757e1f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.99999999999999999999999999999999999999`14.619785165053953", "0", "0",
       "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0``15.27831516319769", "0", "0", 
      "0.99999999999999999999999999999999999999`14.619785165053953"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.801943061547868*^9, 3.8233304251520977`*^9, 3.824524676943748*^9, 
   3.825497619465117*^9, 3.8326719693821287`*^9, {3.832703473507249*^9, 
   3.832703489138176*^9}, 3.832735621246975*^9, 3.8329358474102297`*^9, 
   3.832941773843794*^9},
 CellLabel->
  "Out[906]//MatrixForm=",ExpressionUUID->"1e3d1c1c-27be-4b2e-bbdf-\
ca70d7e7c6e9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalW]XX", "[", "\[Eta]_", "]"}], "=", 
     RowBox[{
      RowBox[{"\[ScriptCapitalW]", "[", "\[Eta]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalW]LX", "[", "\[Eta]_", "]"}], "=", 
     RowBox[{
      RowBox[{"\[ScriptCapitalW]", "[", "\[Eta]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalW]XL", "[", "\[Eta]_", "]"}], "=", 
     RowBox[{
      RowBox[{"\[ScriptCapitalW]", "[", "\[Eta]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalW]LL", "[", "\[Eta]_", "]"}], "=", 
     RowBox[{
      RowBox[{"\[ScriptCapitalW]", "[", "\[Eta]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"IWXL", "[", "\[Eta]_", "]"}], "=", 
     RowBox[{"Inverse", "[", 
      RowBox[{"\[ScriptCapitalW]XL", "[", "\[Eta]", "]"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.79388476883996*^9, 3.793884820127489*^9}, {
  3.794033690817127*^9, 3.794033691859838*^9}, {3.796472948236271*^9, 
  3.796472953420309*^9}, {3.80189262581892*^9, 3.801892636504818*^9}, {
  3.801894893865859*^9, 3.80189489821588*^9}, {3.8018951467223167`*^9, 
  3.801895233571003*^9}, {3.801900723270028*^9, 3.801900738415023*^9}, {
  3.823345564351182*^9, 3.823345574453409*^9}, {3.8240045560892572`*^9, 
  3.824004570590747*^9}, {3.83269883903765*^9, 3.832698842697495*^9}, {
  3.832698933367321*^9, 3.832699034801196*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"43cbb2cd-0b7b-4814-9e2e-e9278e8fd945"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"IWXL", "[", "t", "]"}], ".", 
    RowBox[{"\[ScriptCapitalW]XL", "[", "t", "]"}]}], "/.", 
   RowBox[{"t", "\[Rule]", "\[Eta]in"}]}]}]], "Input",
 CellChangeTimes->{{3.832929247187995*^9, 3.832929277856207*^9}, {
  3.8329306348676987`*^9, 3.8329306374629173`*^9}},
 CellLabel->
  "In[733]:=",ExpressionUUID->"ff6144cb-7461-4443-85eb-cc8528739741"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.00000000000000000000000008423099815152`13.742927730970887", ",", "0", 
     ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.99999999999999999999999998178533569934`13.742927730970889", 
     ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", 
     "1.00000000000000000000000000019907715644`13.742927730970889", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0``14.599931197766308", ",", "0", ",", "0", ",", 
     "0.99999999999999999999999999999140826005`13.742927730970889"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.8329306001474133`*^9, 3.832931934850986*^9},
 CellLabel->
  "Out[733]=",ExpressionUUID->"0600b16a-1a29-446e-ba36-ea9fd66678ad"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Uoo", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"-", 
     RowBox[{"hDD", ".", 
      RowBox[{"IWXL", "[", "\[Eta]", "]"}], ".", 
      RowBox[{"\[ScriptCapitalW]XX", "[", "\[Eta]", "]"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Uoe", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"hDD", ".", 
     RowBox[{"IWXL", "[", "\[Eta]", "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ueo", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"hDD", ".", 
        RowBox[{"\[ScriptCapitalW]LX", "[", "\[Eta]", "]"}]}], "-", 
       RowBox[{"hDD", ".", 
        RowBox[{"\[ScriptCapitalW]LL", "[", "\[Eta]", "]"}], ".", 
        RowBox[{"IWXL", "[", "\[Eta]", "]"}], ".", 
        RowBox[{"\[ScriptCapitalW]XX", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Uee", "[", "\[Eta]_", "]"}], ":=", " ", 
    RowBox[{"-", 
     RowBox[{"hDD", ".", 
      RowBox[{"\[ScriptCapitalW]LL", "[", "\[Eta]", "]"}], ".", 
      RowBox[{"IWXL", "[", "\[Eta]", "]"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.801901280905362*^9, 3.801901347629591*^9}, {
  3.832699088226397*^9, 3.8326991078085213`*^9}, {3.832703499852944*^9, 
  3.83270351278922*^9}, {3.832735437817477*^9, 3.832735453731992*^9}, {
  3.8327356300507593`*^9, 3.832735637478945*^9}, {3.832736784106161*^9, 
  3.8327367887335577`*^9}, {3.832736949892782*^9, 3.8327369544179173`*^9}, {
  3.832737175046631*^9, 3.8327371795344963`*^9}, {3.8329358561777763`*^9, 
  3.832935861747118*^9}, {3.832935972613521*^9, 3.832935978546905*^9}, {
  3.832941781849715*^9, 3.8329417852992563`*^9}, {3.832942166086034*^9, 
  3.8329421731480837`*^9}, {3.835152314704485*^9, 
  3.835152315664344*^9}},ExpressionUUID->"a2899105-3838-4f0d-aab2-\
54e15465539d"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[ScriptCapitalU]dd", "[", "\[Eta]_", "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Uoo", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"Uoe", "[", "\[Eta]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ueo", "[", "\[Eta]", "]"}], ",", 
       RowBox[{"Uee", "[", "\[Eta]", "]"}]}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.8019012628861732`*^9, 3.8019012775547132`*^9}, {
   3.8019013541201887`*^9, 3.801901391933947*^9}, 3.8019031011191597`*^9},
 CellLabel->
  "In[211]:=",ExpressionUUID->"249faab6-ad63-493e-83fa-09e7ce0f4eb9"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "four", " ", "acceleration", " ", "can", " ", "be", " ", "calculated", 
     " ", "as", " ", 
     SuperscriptBox["a", "\[Nu]"]}], "==", 
    RowBox[{
     SuperscriptBox["u", "\[Mu]"], "\[NoBreak]", 
     RowBox[{
      SubscriptBox["\[Del]", "\[Mu]"], 
      SuperscriptBox["u", "\[Nu]"]}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.801931050846197*^9, 
  3.8019311510869513`*^9}},ExpressionUUID->"fc00c469-2bd4-484f-8c41-\
8b2507ebca9d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptU]", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[ScriptA]", "[", "\[Eta]", "]"}]], ",", "0", ",", "0", ",", 
     "0"}], "}"}]}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u0", "[", "\[Eta]", "]"}], ",", 
     RowBox[{"u1", "[", "\[Eta]", "]"}], ",", 
     RowBox[{"u2", "[", "\[Eta]", "]"}], ",", 
     RowBox[{"u3", "[", "\[Eta]", "]"}]}], "}"}], "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ScriptU]", "[", 
          RowBox[{"[", "j", "]"}], "]"}], 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"\[ScriptU]", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"X4", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "+", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Christoffel", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"\[ScriptA]", "[", "\[Eta]", "]"}], ")"}], "2"]}], 
               ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"\[ScriptA]", "[", "\[Eta]", "]"}], ")"}], "2"], ",",
                "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"\[ScriptA]", "[", "\[Eta]", "]"}], ")"}], "2"], ",",
                "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"\[ScriptA]", "[", "\[Eta]", "]"}], ")"}], "2"]}], 
              "}"}]}], "}"}], ",", "X4"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", "s"}], "]"}], "]"}], 
        RowBox[{"\[ScriptU]", "[", 
         RowBox[{"[", "j", "]"}], "]"}], 
        RowBox[{"\[ScriptU]", "[", 
         RowBox[{"[", "s", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "//", 
    "Simplify"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8019256945474358`*^9, 3.8019257221847067`*^9}, {
  3.801925768977686*^9, 3.801925797652062*^9}, {3.801925849519286*^9, 
  3.80192585154941*^9}, {3.8019259190814867`*^9, 3.801926037697041*^9}, {
  3.8019290269452543`*^9, 3.801929046123293*^9}, {3.801931175778933*^9, 
  3.801931220938754*^9}, {3.823343061421205*^9, 3.823343072935615*^9}, {
  3.824003647813706*^9, 3.8240036593084717`*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"9cce0d60-4044-4a30-9f8f-c434a8b99522"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.801925710224264*^9, {3.801925791420411*^9, 3.8019257982899218`*^9}, 
   3.8019260391032352`*^9, 3.801929048281275*^9, {3.80193119834649*^9, 
   3.80193122263127*^9}, {3.824003635911516*^9, 3.824003662074781*^9}},
 CellLabel->
  "Out[229]=",ExpressionUUID->"a62faaf8-212b-4f20-acbe-d03f7b72d62c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"e0", "[", "s_", "]"}], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"ldown", "[", "s", "]"}], "Q"], "/.", "geodesic"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e1", "[", "\[Eta]_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Cf1", "[", "\[Eta]", "]"}], 
         RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", 
           RowBox[{"P1", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
      ")"}]}], "/.", "totBG"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e2", "[", "\[Eta]_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Cf2", "[", "\[Eta]", "]"}], 
         RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", 
           RowBox[{"P2", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
      ")"}]}], "/.", "totBG"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e3", "[", "\[Eta]_", "]"}], "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"(", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Cu", "[", "\[Eta]", "]"}], 
           RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"Pu", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
        ")"}]}], "+", 
      RowBox[{"e0", "[", "\[Eta]", "]"}]}], "Q"], "/.", "totBG"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.823064255999693*^9, 3.82306436066625*^9}, {
   3.823065623207403*^9, 3.82306565108661*^9}, {3.823065764335909*^9, 
   3.8230658213163023`*^9}, {3.8230658772561626`*^9, 3.823065879937333*^9}, {
   3.823071618563901*^9, 3.8230716565308104`*^9}, {3.8230717024202337`*^9, 
   3.823071728345168*^9}, {3.823072068933477*^9, 3.823072122707283*^9}, {
   3.823072159144891*^9, 3.823072212836774*^9}, {3.823072358844885*^9, 
   3.8230723696291103`*^9}, {3.823330446130598*^9, 3.8233304488066397`*^9}, {
   3.832703570930416*^9, 3.832703581342823*^9}, {3.832735366018211*^9, 
   3.832735371440571*^9}, {3.832735670340135*^9, 3.832735672433186*^9}, {
   3.8327367992661047`*^9, 3.832736801272311*^9}, {3.8327369632408323`*^9, 
   3.8327369657490883`*^9}, {3.8327371862661257`*^9, 
   3.8327371881938868`*^9}, {3.832935870167892*^9, 3.832935872122591*^9}, {
   3.8329359303160686`*^9, 3.832935932358883*^9}, {3.832941792220215*^9, 
   3.8329417949758377`*^9}, {3.8329421789923983`*^9, 3.83294218201783*^9}, {
   3.832994003328169*^9, 3.832994020001853*^9}, {3.8329948680309887`*^9, 
   3.8329948764280663`*^9}, {3.833001152508889*^9, 3.833001154983927*^9}, {
   3.8330012177501993`*^9, 3.833001220105604*^9}, 3.8330034302379017`*^9},
 CellLabel->
  "In[1109]:=",ExpressionUUID->"1cbcb307-263a-48f1-805b-4740643781ad"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]0", "[", "\[Eta]_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Cu", "[", "\[Eta]", "]"}], 
          RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", 
            RowBox[{"Pu", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
       ")"}], "/.", "totBG"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]1", "[", "\[Eta]_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Cf1", "[", "\[Eta]", "]"}], 
          RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", 
            RowBox[{"P1", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
       ")"}], "/.", "totBG"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]2", "[", "\[Eta]_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Cf2", "[", "\[Eta]", "]"}], 
          RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", 
            RowBox[{"P2", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
       ")"}], "/.", "totBG"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]3", "[", "\[Eta]_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Cl", "[", "\[Eta]", "]"}], 
          RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", 
            RowBox[{"Pl", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], "]"}], 
       ")"}], "/.", "totBG"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.833002502513893*^9, 3.833002506660758*^9}, {
  3.833002617928491*^9, 3.833002635942464*^9}, {3.8330033043641*^9, 
  3.83300335470153*^9}, {3.833003387779561*^9, 3.833003388068128*^9}},
 CellLabel->
  "In[1113]:=",ExpressionUUID->"b9382118-a853-4ecb-9356-66961ac661d2"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"up", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"e0", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"u", "[", "\[Eta]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"e1", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"u", "[", "\[Eta]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"e2", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"u", "[", "\[Eta]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"e3", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"u", "[", "\[Eta]", "]"}]}]}], "}"}]}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"lp", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Phi]0", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"ldown", "[", "\[Eta]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"\[Phi]1", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"ldown", "[", "\[Eta]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"\[Phi]2", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"ldown", "[", "\[Eta]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"\[Phi]3", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"ldown", "[", "\[Eta]", "]"}]}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.822588988905472*^9, 3.8225889891757*^9}, {
  3.822589051724152*^9, 3.822589063577323*^9}, {3.823064074444579*^9, 
  3.823064105568006*^9}, {3.823064151513612*^9, 3.823064206155085*^9}, {
  3.8230658965556507`*^9, 3.823065905561017*^9}, {3.823065964754306*^9, 
  3.823065969810027*^9}, {3.823072253105453*^9, 3.8230722912873917`*^9}, {
  3.8230723977167177`*^9, 3.823072444721723*^9}, {3.833002448625602*^9, 
  3.83300246355243*^9}, {3.833004381482225*^9, 3.833004405001329*^9}},
 CellLabel->
  "In[1123]:=",ExpressionUUID->"ce3db94c-e189-4ebd-8444-742c7ef3fd99"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"uE", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"e0", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"u", "[", "\[Eta]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"e1", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"u", "[", "\[Eta]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"e2", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"u", "[", "\[Eta]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"e3", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"u", "[", "\[Eta]", "]"}]}]}], "}"}]}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"aE", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uO", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"e0", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"u", "[", "\[Eta]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"e1", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"u", "[", "\[Eta]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"e2", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"u", "[", "\[Eta]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"e3", "[", "\[Eta]", "]"}], ".", 
       RowBox[{"u", "[", "\[Eta]", "]"}]}]}], "}"}]}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"aO", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.801902762957232*^9, 3.801902763518612*^9}, {
   3.801924590171894*^9, 3.801924631725832*^9}, {3.801926097127915*^9, 
   3.8019261031890497`*^9}, {3.8019262721145144`*^9, 
   3.8019263316567383`*^9}, {3.8019267370667257`*^9, 3.801926959388892*^9}, {
   3.8019270061055527`*^9, 3.8019270390129557`*^9}, {3.8019290899858627`*^9, 
   3.801929122117754*^9}, {3.801929290532124*^9, 3.801929317334941*^9}, {
   3.801930197798451*^9, 3.801930426385264*^9}, {3.801930706389925*^9, 
   3.801930775311845*^9}, {3.801930976887451*^9, 3.801930994746711*^9}, {
   3.8019312467562513`*^9, 3.801931273998291*^9}, {3.801941067811077*^9, 
   3.801941097199278*^9}, {3.801941276942626*^9, 3.8019412947511387`*^9}, 
   3.801942866512455*^9, {3.809954720316331*^9, 3.809954725884474*^9}, {
   3.8099590412191353`*^9, 3.809959051124311*^9}, {3.822048298017427*^9, 
   3.8220483426458607`*^9}, {3.8220489871793337`*^9, 3.822049011672752*^9}, {
   3.8220492529784317`*^9, 3.822049260113916*^9}, {3.8220495117266617`*^9, 
   3.8220495173942757`*^9}, 3.823072461930704*^9, {3.8233304869561157`*^9, 
   3.823330494238348*^9}, {3.8326980040445833`*^9, 3.83269802327979*^9}, {
   3.832698331999792*^9, 3.832698344419272*^9}, {3.832703252808762*^9, 
   3.832703263446455*^9}, {3.8327033874100933`*^9, 3.8327033973240967`*^9}, {
   3.832704831488*^9, 3.832704874559347*^9}, {3.832707252194109*^9, 
   3.832707283713337*^9}, {3.8327073633436413`*^9, 3.832707367347239*^9}, {
   3.832707598579998*^9, 3.83270759910845*^9}, {3.832709093935562*^9, 
   3.832709100496022*^9}, {3.832735527237123*^9, 3.832735553057469*^9}, {
   3.8327357034591007`*^9, 3.832735792090205*^9}, {3.832736357811666*^9, 
   3.832736371513524*^9}, {3.832736745389812*^9, 3.8327367693926907`*^9}, {
   3.832736915441227*^9, 3.8327369254435863`*^9}, {3.832737012178617*^9, 
   3.8327370355819283`*^9}, {3.8327371157545347`*^9, 3.832737125987568*^9}, {
   3.8329368349511127`*^9, 3.832936837572917*^9}, {3.832937208735424*^9, 
   3.832937212880001*^9}, {3.832939622347659*^9, 3.832939628169414*^9}, {
   3.832941822279045*^9, 3.8329418246406813`*^9}, {3.832941922384006*^9, 
   3.8329419309707403`*^9}, {3.832994039184619*^9, 3.8329940425610647`*^9}, {
   3.832994078148247*^9, 3.832994080715301*^9}, {3.832994557194178*^9, 
   3.832994560242041*^9}, {3.83299463413662*^9, 3.832994638961928*^9}, {
   3.8330046987544527`*^9, 3.8330047020500097`*^9}, {3.833005551755043*^9, 
   3.833005556297333*^9}, {3.833011612373971*^9, 3.8330116160886097`*^9}, {
   3.8330118802780533`*^9, 3.833011882456278*^9}},
 CellLabel->
  "In[1166]:=",ExpressionUUID->"1051f9b9-122f-410b-be33-6a4aab35de56"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalXi]Doppler", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"lp", "[", "\[Eta]", "]"}], 
       RowBox[{
        RowBox[{"uE", "[", "\[Eta]", "]"}], ".", 
        RowBox[{"lp", "[", "\[Eta]", "]"}]}]], ".", 
      FractionBox[
       RowBox[{"aE", "[", "\[Eta]", "]"}], 
       RowBox[{"1", "+", 
        RowBox[{"redshift", "[", "\[Eta]", "]"}]}]]}], "-", 
     RowBox[{
      FractionBox[
       RowBox[{"lp", "[", "ETA0", "]"}], 
       RowBox[{
        RowBox[{"uO", "[", "ETA0", "]"}], ".", 
        RowBox[{"lp", "[", "ETA0", "]"}]}]], ".", 
      RowBox[{"aO", "[", "ETA0", "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lnzdrift", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalXi]Doppler", "[", "\[Eta]", "]"}], "-", 
        RowBox[{
         FractionBox["1", 
          RowBox[{
           RowBox[{"uO", "[", "ETA0", "]"}], ".", 
           RowBox[{"lp", "[", "ETA0", "]"}]}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Uoo", "[", "\[Eta]", "]"}], ".", 
            RowBox[{"uO", "[", "ETA0", "]"}], ".", 
            RowBox[{"uO", "[", "ETA0", "]"}]}], "+", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"1", "+", 
              RowBox[{"redshift", "[", "\[Eta]", "]"}]}]], 
            RowBox[{
             RowBox[{"Uoe", "[", "\[Eta]", "]"}], ".", 
             RowBox[{"uO", "[", "ETA0", "]"}], ".", 
             RowBox[{"uE", "[", "\[Eta]", "]"}]}]}], "+", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"1", "+", 
              RowBox[{"redshift", "[", "\[Eta]", "]"}]}]], 
            RowBox[{
             RowBox[{"Ueo", "[", "\[Eta]", "]"}], ".", 
             RowBox[{"uE", "[", "\[Eta]", "]"}], ".", 
             RowBox[{"uO", "[", "ETA0", "]"}]}]}], "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"redshift", "[", "\[Eta]", "]"}]}], ")"}], "2"]], 
            RowBox[{
             RowBox[{"Uee", "[", "\[Eta]", "]"}], ".", 
             RowBox[{"uE", "[", "\[Eta]", "]"}], ".", 
             RowBox[{"uE", "[", "\[Eta]", "]"}]}]}]}], ")"}]}]}], ")"}], "/.",
       "BGO"}], "/.", "geodesic"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.801902328055355*^9, {3.8019023598134747`*^9, 3.801902382273644*^9}, {
   3.801902778881104*^9, 3.8019028327050667`*^9}, {3.8019029353120003`*^9, 
   3.801902967436467*^9}, {3.801903011538056*^9, 3.8019030963722153`*^9}, {
   3.8019031304332333`*^9, 3.801903197183112*^9}, 3.801927522981677*^9, {
   3.80192848940348*^9, 3.801928491724813*^9}, {3.801929172075811*^9, 
   3.801929173027179*^9}, {3.823343933835864*^9, 3.823343954639216*^9}, 
   3.823343990995531*^9, {3.824008952558901*^9, 3.824008969280857*^9}, {
   3.8245342636447163`*^9, 3.824534264946302*^9}, {3.832736864945629*^9, 
   3.832736872185657*^9}, {3.832737093218804*^9, 3.832737108658525*^9}, {
   3.832737312291587*^9, 3.832737405148259*^9}, {3.8330116645106297`*^9, 
   3.833011671190975*^9}, {3.8330122251553164`*^9, 3.833012249784668*^9}, {
   3.835149080052267*^9, 
   3.835149082412058*^9}},ExpressionUUID->"5cc9204f-72b1-4baf-9ba1-\
b79086747a56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalXi]Doppler", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.832937381691373*^9, 3.832937397593692*^9}},
 CellLabel->
  "In[1181]:=",ExpressionUUID->"823edfd2-cbc7-4e2b-b382-020d9203d8d3"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.832937384957337*^9, 3.832937400873097*^9}, 
   3.833012344845476*^9},
 CellLabel->
  "Out[1181]=",ExpressionUUID->"876be144-5a1a-4acf-a42d-baec41bb1a7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"cL", "=", 
   FractionBox[
    RowBox[{"299792458", " ", "3.24078", " ", 
     SuperscriptBox["10", 
      RowBox[{"-", "23"}]]}], "L"], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      FractionBox["c", "L"], "\[Equal]", 
      FractionBox[
       FractionBox["Mpc", "s"], "Mpc"]}], "=", 
     FractionBox["1", "s"]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8019046538925657`*^9, 3.801904753030881*^9}, 
   3.83269764434118*^9, 3.8326977536301117`*^9},
 CellLabel->
  "In[264]:=",ExpressionUUID->"89fb5bb4-f570-49d5-8ccd-541974c2b430"],

Cell[BoxData["3.62370784236154459312143200307697225544131`15.455931955649724*^\
-17"], "Output",
 CellChangeTimes->{3.801904756148382*^9, 3.810105973160986*^9, 
  3.8233305146022177`*^9, 3.824003683874496*^9, 3.824524709049766*^9, 
  3.825497662186108*^9, 3.831461825788293*^9, 3.8326720039009533`*^9, 
  3.832697645702755*^9, 3.832697755221352*^9},
 CellLabel->
  "Out[264]=",ExpressionUUID->"fd57c522-f69c-4445-a505-d456f310bf3b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ANALITICzdrift", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    FractionBox["\[ScriptH]0", 
     RowBox[{"A", "[", "ETA0", "]"}]], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"zbg", "[", "t", "]"}]}], ")"}], "]"}]}], ")"}]}], "/.", 
   "param"}]}]], "Input",
 CellChangeTimes->{{3.8233439986871767`*^9, 3.823344005083355*^9}, 
   3.823344836050749*^9, {3.8255014278357573`*^9, 3.8255014377301064`*^9}, {
   3.832697095901389*^9, 3.832697155242157*^9}, {3.8326972285345*^9, 
   3.8326972567253113`*^9}, {3.8326972983972073`*^9, 3.832697314946472*^9}, {
   3.832697352063121*^9, 3.83269735528354*^9}, {3.832697422954817*^9, 
   3.8326974267430468`*^9}, {3.832697800630733*^9, 3.832697809326354*^9}, {
   3.832729843302846*^9, 3.832729845580102*^9}, {3.832730129204014*^9, 
   3.832730167003093*^9}, 3.832730207233697*^9, {3.832839262447062*^9, 
   3.832839276127634*^9}, {3.8351493920830517`*^9, 
   3.835149414302907*^9}},ExpressionUUID->"24b63c5e-334e-4fc7-9dc4-\
cd068fa2f7a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"redshift", "[", "t", "]"}], ",", 
     RowBox[{"cL", " ", 
      RowBox[{"ANALITICzdrift", "[", "t", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "900"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Dashed"}], "}"}]}], ",", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"StandardPlotStyle", "[", 
     RowBox[{
     "20", ",", "24", ",", 
      "\"\<\!\(\*FractionBox[\(\[Delta]Log \((1 + z)\)\), \(\[Delta]\[Eta]\)]\
\) [\!\(\*SuperscriptBox[\(s\), \(-1\)]\)]\>\"", ",", "\"\<z\>\"", ",", 
      "\"\<Redshift drift FLRWSolver\>\"", ",", 
      RowBox[{"{", " ", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.8"}], " ", "}"}]}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.832696469269528*^9},
 CellLabel->
  "In[712]:=",ExpressionUUID->"508126e5-0ebe-41c9-aa74-d65b909e9b88"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
     Dashing[{Small, Small}], FaceForm[Opacity[0.3]], LineBox[CompressedData["

1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAA4Khcbnf/I0APouJqC1JXvOLGViZ5
9yNAWDan+flLV7xw79g4f+8jQEE9sLzqRVe8CfnUYJjfI0BlmsPa0jlXvJbQ
6GT+vyNAzuqLVb0hV7yu7qGIloEjQGU0Vj368Va8dlJTJ+IHI0AZPXy/C5RW
vHgsLJRGICJAoHm1fk/eVbyI1GJuvVogQP3sDDAxblS81qY3hXbOHUCOqJNW
MDNTvAUyR6RiSBtAuusd8xkWUrwCFS8CFNoYQGHybt9o+FC8mIJmw37UFkAq
e/evfAFQvIMf90ay3hRA9WRz7hUSTryrTlzWsiUTQOsB8I/5TEy8mNMM0WCy
EUBL3wkuM8JKvBmsZvzXRRBAWWrxE5UxSbwOQrmJ9CEOQIi5et380ke87JCX
pmT4C0CRn2VDQ49GvK5S/oNm0wlARY+C6HJERbzUWqulP/4HQHmIawJWIUS8
BbaHZYErBkA44S3kUfdCvHG1IC4OhwRALHT1nw3jQbx/3fh0IR0DQI0od3LN
7kC8FaaRri6yAUCwITBvweY/vFE4H5yAeABALLi98N4oPrzyY9wgj3r+P2BK
89JlXTy8opY3LcY8/D9S8U5lhLA6vLTD24UaSvo/zI3ftd4yObzy3zilw1H4
P3NzJnfVpze8HlshDQia9j9umFSGc0c2vCS7wCuoBfU/S1Hja2r8NLw4wvLG
aWrzP03kezNupDO8VFPrRlEC8j/RHxG1w3AyvKSm3u29k/A/XSVZK/QwMbzW
eVIo2oPuP76mOk/zAzC8ctiJuwEy7D+97F/kL+wtvKhPNV2c0uk/RtOqkUm5
K7xqBlZWc7vnP3lwbOiuvym8XClp+ILK5T+Nyt+7oOEnvProNRYYzOM/h265
oYntJbxmmipBCAniP6bZ0oaHKyS8ihJYD5I54D9gXztc0VQivEDdy3pJPt0/
JHKazImsILwotFvRoEDaP6OBRp1SNB68tI7G0Qkr1z/ZQm+sUugavOTZSJMQ
btQ/XTJFzXHuF7wwss7PF5vRP2DpDniZzxS8uEEz1QnwzT+ycjpJGtkRvKid
TSy3Psk/UaoHWv1WDrxYBwXYomPEP1Jyx9jStQi8wGH/m6sPwD9AKUaiS50D
vMDdqmXC/7c/vISKDi+G/bsAKgbT6SKvP2JgF1VQTfO7oN6WZG4UoD9L77t6
GhTkuwCB8/hBpZ8/Q6r6yI7C47tA+1nAvyGfPyGfKUANceO7gDOK/QQbnj/F
08ChKM7iuwBBaoa1Dpw/ASXL/NiI4buAT/V/qfqXP63wINc8AN67ANJsxmXJ
jz9Z1tEcXuzTu4D1g5o+yI4/EtZprMlL07sAgBgdR8eNPzTpMxZJq9K7gDSZ
/ubFiz8FRqZpg2rRuwB44OlgxYc/rCBdUsvTzbsAiEFJZpp/Pz3pNq662MO7
AIt4xAKefT+wUEikCZrCuwBF7Cb9oXs/U3/P2X9bwbsAchVFC6t3P+AfhczD
vb27ADKbwRSDbz/DyWx0986zuwCILiAnkGs/myPJwgdUsbsAcNrc851nP9jA
9TjMsq27AMyvcnd3Xz9Eea1wGcqjuwAsdftsl1c/WXoXd1OtnbsAWGClq3FP
P/FRUVSrx5O7ABDgdMZuPz9Ta2t/dMaDuwAAAAAAAAAAAAAAAAAAAADVu1hC

      "]]},
    Annotation[#, "Charting`Private`Tag$82950#1"]& ]},
  AspectRatio->0.8,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*FractionBox[\\(\[Delta]Log \\((1 + z)\\)\\), \\(\[Delta]\
\[Eta]\\)]\\) [\\!\\(\\*SuperscriptBox[\\(s\\), \\(-1\\)]\\)]\"", 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox["\"z\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[FontSize -> 20],
  FrameTicks->{{True, True}, {True, True}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Opacity[0.2`16.], 
    Dashing[{Small, Small}]],
  ImageSize->900,
  Method->{"ScalingFunctions" -> None},
  PlotLabel->FormBox[
    StyleBox[
    "\"Redshift drift FLRWSolver\"", Bold, FontSize -> 20, StripOnInput -> 
     False], TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.832696472765883*^9, 3.8326971637595387`*^9, {3.8326972383602867`*^9, 
   3.832697260747423*^9}, {3.832697329535288*^9, 3.832697358167252*^9}, 
   3.832697429906508*^9, 3.832697655109651*^9, {3.832697788028351*^9, 
   3.832697812213077*^9}, 3.832699205749528*^9, 3.832730172662027*^9, 
   3.832730210874083*^9, 3.832752743111992*^9, 3.8328392814748487`*^9},
 CellLabel->
  "Out[712]=",ExpressionUUID->"2375f0a1-7f06-44cb-a208-60246504c1e3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"redshift", "[", "t", "]"}], ",", 
      RowBox[{
       FractionBox[
        RowBox[{" ", 
         RowBox[{"lnzdrift", "[", "t", "]"}]}], 
        RowBox[{" ", 
         RowBox[{"ANALITICzdrift", "[", "t", "]"}]}]], "-", "1"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "\[Eta]in", ",", 
      RowBox[{"ETA0", "-", 
       SuperscriptBox["10", 
        RowBox[{"-", "15"}]]}]}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "900"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.4"}], ",", "10.4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2.5"}], " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "10"}]]}], ",", 
         RowBox[{"6", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "10"}]]}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"StandardPlotStyle", "[", 
      RowBox[{
      "20", ",", "24", ",", "\"\<\[CapitalDelta]\[Zeta](BGO,ET)\>\"", ",", 
       "\"\<z\>\"", ",", "\"\<\>\"", ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}]}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.801943308380006*^9, 3.801943482039319*^9}, {
   3.801943587051983*^9, 3.80194360519707*^9}, {3.801943647833661*^9, 
   3.801943649117847*^9}, {3.801943958867609*^9, 3.801944133953588*^9}, {
   3.801944184388834*^9, 3.801944188802301*^9}, {3.8019444065714293`*^9, 
   3.801944436733899*^9}, {3.823331032631989*^9, 3.823331071561263*^9}, {
   3.823331618995248*^9, 3.823331625493659*^9}, 3.8233404697795887`*^9, {
   3.8254998385952*^9, 3.825499842082459*^9}, {3.831462034439142*^9, 
   3.831462047102099*^9}, {3.8314828846759243`*^9, 3.8314829370125313`*^9}, {
   3.831520703375619*^9, 3.83152070502726*^9}, {3.832699264530821*^9, 
   3.832699267557225*^9}, 3.8330124690048647`*^9, {3.83514934347821*^9, 
   3.835149374792398*^9}},ExpressionUUID->"e6106f47-dcb3-4d5b-a6b4-\
95c029c72227"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
R3c8Z8NBYf8jKTPQGiR/Pn2gHPKdD31Ml8TPF8X6VWMMzt86Ch4Ih29O+Iae
oUFB70VvmV/d6DFyfnAdFphl14z2lCXzf9zFtKQKrUHq66KUjHTlh+gpZL4X
5XMbXMpG79Sj4A773B/hJPQvfxIvRSe6w8+jM7Vo6JbhGZgSjh6ooyDOzGDO
WX+0H8m3CZscD0h5ome/ouCjbnxP6n/oi6Qeu7yd477CDm1FzgumCgtFX5mh
zcl+vFfy5bn3SrQvie83tlcuSmmjhaRJu8/RQxXz0Cffs4EVW77NUwr9hszP
zJ9ZmxSnoVcIUND1MmjDaw494UWFbLjA8t8YP4IOIOenbarvbe370MvIeSLd
ibaf+wZd+JENzWFiDt/q0SuesCFl7h67R4/RSpfYUHFyg1lcAbqsjQ0rP4pp
789AXz/OBs4qzlTLa2iaYoP5kd0ti8+hL5J4PLTwxhnZMPQIiV/x5nFVoaNo
vSQ2tJXW5zIe6Gghkj+4vOVHndGXSD2XD1y9/6ctWn4bG0J7Ll/5bYbeXsSG
smttqfRK9BdS7zf+tosSXIyOJfE71H903ewF6JBsNoiZ3O5cNBsN7myIillp
tG76ZHsxG9RkUg/v4UafOMEGvZF1PlG/KdyvZLx8n84ZF/SjF6qyITWwv+39
W7SeIhkvb5m2ZDN6Hxcb4v2CLNdXo6u/j0NNwhW108XoHe3joKR+61fcXbS/
/zh8f3e+62YKWmE6mR9Rp978RLRGwjiEbvrJ1EajY7rHoTLKdMnnE+gox3GI
HbYIEjiKZnWOg/jwWJeq5+T3H41DoamJ5aad6JNt4yD9Z0F9gD166sdxWL/m
kkO2Jbr8EHn+YdzPHmO0ADMO2nNnxkvpo0WnskEgVNrIRhOdGseGRVrXh+OU
JsejRXw/JblNCh1hxwaj1xpb5KejD01jg1Om/rR9POhXt9hg71H76OEfNuZD
IPGV1L93+iC6NJqYL1Fs13v0HWM2GMf03qloRx8h+ajiwHNjhXr0/RCSH0Uc
ak5UojWMSLxPS1r9rQi9NoANSpCavTkHfVyFDSZ3jvJWJ6PnhbEh4IaK6fIE
9KWicWg4WXno3ln0tnVsUOG3D1c/gX7bNw7O4+yQTD/0B7Leh93LnDU90buG
xyHhYqFi/k40pU/m491YJWsrOryM/L7vinH9BrTM03GI2Fd0fYcJekPFOIzs
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
0FtfiCc7f4nD/S1Nfr/W0QdhZ7mm8j/5TTM04SusFkebG5Dvf/BfoJITy/09
dgmCdKppWNDD/VxTTqznp1On3qyS//sM491qktaaH9lU9JRr6rqnv2mFfE0R
HiZ4XbJtilY4smy/Wd9Trp+H8NApGyQlNQO4pvbO/kWjbHD9rKGJ/ruIzP/P
JqettU+430/qIeMtEBq55ME1dfNsPjpljLajUAYdG0niRTOFuvRdDNd3zGfS
DT/fvxp+gmuK8TCFbhhtBCuEpq+3EK9gON8//Jj7fr5csn5m/KViz6O5XpI6
i16YY3u+gPGI+/xTn5n0wqCHxyP1uTY8H8xPpwg634n1jeLOt54thU454FPV
8u0h19/leejU+kdqJkvQXs8E6YWlbv4tJyKxXv/HS6d4fWt+lvGAe71jRIhe
uO3mvAe/I7jjG34/l05xPyJOM+Xa7orwfDL/Jk3zQu9zv38kei69cFhsZ9CP
8H9uvWIiSi8MzXLeuIrrmEEbMTrFTFpK9mIY9/n4wgV0qqDhVtV3oZifH4vR
qZlLex3mcW0n5rOIThF+2/dtfwh3PEM3ltAp2er6pxKDue8bvSlDpypcr9Jg
BnGvj9tLketfI1du4tpOIXIxnXpL13vrvcB/Hll7QpZOWVHzV+vNvX+21OWT
p1O1lkxp7gz4Z5dCvRV0yu6cFv9h/3+umAhToFNVl97cdOcO9/d4iynRqR11
36wV/P5Zfbn/SjpF5kJC4Tvff05fcFaFTuVE/vS1u/XPgbpUVTr1L+NEyu+b
/yzRbahOp640XLDqoTd3Pjk7iIuNP/Gtv/HPpVs3atIpd5pPr6+7xh2/wR5t
OoXa01h6nvrPPR+ydeiU3qweeyVP7vPKr9fTKRR77eETl/9ZJ7pzLZ3CYdqp
Jlzizo8czwY6hRWpLNt9/p/3slYb0CmXY3Z9UDjH/V7ABSM6xeF0rJyjC3f8
t1ab0Cn0ma+O7j71z1Pv9m6jUwI5zr1N9tz5VV1rQafskJlRe8TunyNjVffQ
KQKqHf/V7vpnZbVDh+kUnW+it6qM/zkzTtSVTuH+tevh/5GC/wEBep6j
       "]]},
     Annotation[#, "Charting`Private`Tag$22116#1"]& ]}, InsetBox[
    GraphicsBox[
     {GrayLevel[1], RectangleBox[{0, 0}]}], 
    Scaled[{1.1558265582655824, 0.7747289972899732}], Center, 
    Scaled[{0.5, 0.5}]]},
  AspectRatio->0.8,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[CapitalDelta]\[Zeta](BGO,ET)\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox["\"z\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[FontSize -> 20],
  FrameTicks->{{True, True}, {True, True}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Opacity[0.2`16.], 
    Dashing[{Small, Small}]],
  ImagePadding->{{132., 30.}, {56., 29.}},
  ImageSize->900,
  Method->{"ScalingFunctions" -> None},
  PlotLabel->FormBox[
    StyleBox["\"\"", Bold, FontSize -> 20, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{-0.4, 10.4}, {-2.5*^-10, 6.*^-10}},
  PlotRangeClipping->True,
  PlotRangePadding->Automatic,
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{{3.831540123339377*^9, 
  3.831540132732337*^9}},ExpressionUUID->"099ba5d2-781f-47ca-b489-\
47156c9cef63"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"zFLRWSl", "->", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"redshift", "[", "#", "]"}], "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"DangFLRWSl", "->", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"DangWxl", "[", "#", "]"}], "]"}], "&"}], ")"}]}], " ", ",", 
     
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"DlumLCDM", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"Dlum", "[", "#", "]"}], "]"}], "&"}], ")"}]}], " ", ","}],
       "*)"}], " ", 
     RowBox[{"DparFLRWSl", "->", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"Dpar", "[", "#", "]"}], "]"}], "&"}], ")"}]}], " ", ",", 
     RowBox[{"ZdriftFLRWSl", "->", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"lnzdrift", "[", "#", "]"}], "]"}], "&"}], ")"}]}]}], " ", 
    "}"}], ">>", "\"\<observables_FLRWSolverN_bisect.m\>\""}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8020905410016403`*^9, 3.802090581798655*^9}, {
  3.8101067785445538`*^9, 3.8101068105129433`*^9}, {3.82551103886621*^9, 
  3.8255110996120462`*^9}, {3.83146929148831*^9, 3.831469311531151*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"180aec91-ed13-4ed1-9b59-39413a70ca19"],

Cell[BoxData[
 RowBox[{"FILE", " ", "TOO", " ", "BOG", " ", "TO", " ", "BE", " ", 
  RowBox[{
   RowBox[{"SAVED", "!!"}], "!"}]}]], "Text", "Input",
 CellChangeTimes->{{3.831559086526874*^9, 
  3.831559095048108*^9}},ExpressionUUID->"eebd03fd-15aa-4a59-aa22-\
98581cb6adcb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Convert BGO to coordinates frame", "Section",
 CellChangeTimes->{{3.8327078204409027`*^9, 
  3.832707847472663*^9}},ExpressionUUID->"9ac56fe4-0760-45b0-95ad-\
ef5c2bbdcf66"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.8327078495032883`*^9},ExpressionUUID->"4ed9d14f-8fea-4dfb-8042-\
bfe15aab654d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.79388476883996*^9, 3.793884820127489*^9}, {
   3.794033690817127*^9, 3.794033691859838*^9}, {3.796472948236271*^9, 
   3.796472953420309*^9}, {3.80189262581892*^9, 3.801892636504818*^9}, {
   3.810105646926188*^9, 3.8101056584596167`*^9}, {3.828680599542934*^9, 
   3.828680601853067*^9}, 3.828681368210863*^9, 
   3.832708501543908*^9},ExpressionUUID->"aca2dbdf-8441-4878-87b8-\
5f0b9d6cf4b8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]0", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cu", "[", "\[Eta]", "]"}], 
     RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"Pu", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]1", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cf1", "[", "\[Eta]", "]"}], 
     RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"P1", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]2", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cf2", "[", "\[Eta]", "]"}], 
     RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"P2", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]3", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cl", "[", "\[Eta]", "]"}], 
     RowBox[{"nup", "[", "\[Eta]", "]"}]}], "+", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"Pl", "[", "\[Eta]", "]"}]}], "}"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e0", "[", "\[Eta]_", "]"}], "=", 
   FractionBox[
    RowBox[{"\[Phi]3", "[", "\[Eta]", "]"}], "Q"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e1", "[", "\[Eta]_", "]"}], "=", 
   RowBox[{
    RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
    RowBox[{"\[Phi]1", "[", "\[Eta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e2", "[", "\[Eta]_", "]"}], "=", 
   RowBox[{
    RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
    RowBox[{"\[Phi]2", "[", "\[Eta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e3", "[", "\[Eta]_", "]"}], "=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"g4", "[", "\[Eta]", "]"}], ".", 
      RowBox[{"\[Phi]0", "[", "\[Eta]", "]"}]}], "+", 
     RowBox[{"e0", "[", "\[Eta]", "]"}]}], "Q"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.832708170830057*^9, 3.83270830071586*^9}, {
  3.8327083476671124`*^9, 3.8327084626014833`*^9}},
 CellLabel->
  "In[435]:=",ExpressionUUID->"64db702b-da6f-4126-a32f-b4700f8441f3"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Phi]0", "[", "\[Eta]", "]"}], ",", 
      RowBox[{"\[Phi]1", "[", "\[Eta]", "]"}], ",", 
      RowBox[{"\[Phi]2", "[", "\[Eta]", "]"}], ",", 
      RowBox[{"\[Phi]3", "[", "\[Eta]", "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ee", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"e0", "[", "\[Eta]", "]"}], ",", 
      RowBox[{"e1", "[", "\[Eta]", "]"}], ",", 
      RowBox[{"e2", "[", "\[Eta]", "]"}], ",", 
      RowBox[{"e3", "[", "\[Eta]", "]"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.832708812572253*^9, 3.832708884492652*^9}},
 CellLabel->
  "In[444]:=",ExpressionUUID->"6dc056cf-21fa-4cf2-aca3-d1a1d02f0b9f"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"McXX", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalPhi]", "[", "\[Eta]", "]"}], ".", "Mxx", ".", 
       RowBox[{"Ee", "[", "\[Eta]", "]"}]}], "/.", 
      RowBox[{"functional", "[", "\[Eta]", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"McLX", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalPhi]", "[", "\[Eta]", "]"}], ".", "Mlx", ".", 
       RowBox[{"Ee", "[", "\[Eta]", "]"}]}], "/.", 
      RowBox[{"functional", "[", "\[Eta]", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"McXL", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalPhi]", "[", "\[Eta]", "]"}], ".", "Mxl", ".", 
       RowBox[{"Ee", "[", "\[Eta]", "]"}]}], "/.", 
      RowBox[{"functional", "[", "\[Eta]", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"McLL", "[", "\[Eta]_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalPhi]", "[", "\[Eta]", "]"}], ".", "Mll", ".", 
       RowBox[{"Ee", "[", "\[Eta]", "]"}]}], "/.", 
      RowBox[{"functional", "[", "\[Eta]", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.832707961680271*^9, 3.83270796504244*^9}, {
  3.832708504805387*^9, 3.832708523758575*^9}, {3.8327087680512753`*^9, 
  3.832708770331897*^9}, {3.832708894310062*^9, 3.83270894320795*^9}},
 CellLabel->
  "In[446]:=",ExpressionUUID->"3cd58353-1a32-44ef-a3cf-2ddb5c82919f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"McXX", "[", "t", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8327089469514914`*^9, 3.832708978919915*^9}},
 CellLabel->
  "In[451]:=",ExpressionUUID->"4712f989-a63c-4726-9856-466c1d179e9e"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.832708967707779*^9, 3.832709031413089*^9},
 CellLabel->
  "Out[451]=",ExpressionUUID->"f191692a-b831-4cf6-ac4b-1d58d995b8fd"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"WXX", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Sum]", 
         RowBox[{"a", "=", "1"}], "4"], 
        RowBox[{
         SubsuperscriptBox["\[Sum]", 
          RowBox[{"b", "=", "1"}], "4"], 
         RowBox[{
          RowBox[{"hUU", "[", 
           RowBox[{"[", 
            RowBox[{"c", ",", "b"}], "]"}], "]"}], 
          RowBox[{"Mll", "[", 
           RowBox[{"[", 
            RowBox[{"a", ",", "b"}], "]"}], "]"}], 
          RowBox[{"hDD", "[", 
           RowBox[{"[", 
            RowBox[{"a", ",", "d"}], "]"}], "]"}]}]}]}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"d", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mll", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"Mll", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "/.", 
   "BGO"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WLX", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubsuperscriptBox["\[Sum]", 
          RowBox[{"a", "=", "1"}], "4"], 
         RowBox[{
          SubsuperscriptBox["\[Sum]", 
           RowBox[{"b", "=", "1"}], "4"], 
          RowBox[{
           RowBox[{"hUU", "[", 
            RowBox[{"[", 
             RowBox[{"c", ",", "b"}], "]"}], "]"}], 
           RowBox[{"Mlx", "[", 
            RowBox[{"[", 
             RowBox[{"a", ",", "b"}], "]"}], "]"}], 
           RowBox[{"hDD", "[", 
            RowBox[{"[", 
             RowBox[{"a", ",", "d"}], "]"}], "]"}]}]}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mlx", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"Mlx", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "/.", 
   "BGO"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WXL", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubsuperscriptBox["\[Sum]", 
          RowBox[{"a", "=", "1"}], "4"], 
         RowBox[{
          SubsuperscriptBox["\[Sum]", 
           RowBox[{"b", "=", "1"}], "4"], 
          RowBox[{
           RowBox[{"hUU", "[", 
            RowBox[{"[", 
             RowBox[{"c", ",", "b"}], "]"}], "]"}], 
           RowBox[{"Mxl", "[", 
            RowBox[{"[", 
             RowBox[{"a", ",", "b"}], "]"}], "]"}], 
           RowBox[{"hDD", "[", 
            RowBox[{"[", 
             RowBox[{"a", ",", "d"}], "]"}], "]"}]}]}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mxl", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"Mxl", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "/.", 
   "BGO"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WLL", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Sum]", 
         RowBox[{"a", "=", "1"}], "4"], 
        RowBox[{
         SubsuperscriptBox["\[Sum]", 
          RowBox[{"b", "=", "1"}], "4"], 
         RowBox[{
          RowBox[{"hUU", "[", 
           RowBox[{"[", 
            RowBox[{"c", ",", "b"}], "]"}], "]"}], 
          RowBox[{"Mxx", "[", 
           RowBox[{"[", 
            RowBox[{"a", ",", "b"}], "]"}], "]"}], 
          RowBox[{"hDD", "[", 
           RowBox[{"[", 
            RowBox[{"a", ",", "d"}], "]"}], "]"}]}]}]}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"d", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mxx", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"Mxx", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "[", "\[Eta]", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "/.", 
   "BGO"}]}]}], "Input",
 CellChangeTimes->{{3.777304205075492*^9, 3.77730426301886*^9}, {
   3.777304298506168*^9, 3.777304456402152*^9}, {3.777305168567926*^9, 
   3.777305180806041*^9}, {3.7773811446254*^9, 3.777381216024057*^9}, {
   3.77738126654755*^9, 3.777381368455453*^9}, {3.777381446165594*^9, 
   3.777381476464113*^9}, {3.7773815503181467`*^9, 3.777381554227981*^9}, {
   3.7773825821813507`*^9, 3.7773825907064323`*^9}, {3.777698206254397*^9, 
   3.777698211381225*^9}, {3.777698248266268*^9, 3.7776983449549932`*^9}, {
   3.777698812037773*^9, 3.777698839256619*^9}, {3.777699128882594*^9, 
   3.777699132007759*^9}, {3.777700224264862*^9, 3.777700235826548*^9}, {
   3.777700349420586*^9, 3.777700352536067*^9}, {3.777700405597542*^9, 
   3.7777004343887568`*^9}, {3.7777183890545273`*^9, 3.777718540959062*^9}, {
   3.777718585674892*^9, 3.777718588682613*^9}, {3.777718619772092*^9, 
   3.777718662946463*^9}, {3.777718881992339*^9, 3.777718891710998*^9}, {
   3.77771898768266*^9, 3.7777190411101723`*^9}, {3.777719080402052*^9, 
   3.777719111498494*^9}, {3.777719173083843*^9, 3.7777192957124453`*^9}, {
   3.7777239837745047`*^9, 3.777723999952365*^9}, {3.777726557374466*^9, 
   3.777726570557378*^9}, 3.777729404425871*^9, 3.777859601815914*^9, {
   3.777859632873672*^9, 3.777859638746079*^9}, {3.7778596693071623`*^9, 
   3.777859672730871*^9}, {3.7778597323308992`*^9, 3.777859772634964*^9}, {
   3.7778598154689302`*^9, 3.7778598739146*^9}, {3.77786001810358*^9, 
   3.777860127411924*^9}, {3.777860165206658*^9, 3.777860167237174*^9}, {
   3.77786029336112*^9, 3.777860378797068*^9}, {3.777861317319397*^9, 
   3.777861322306428*^9}, {3.777861361202663*^9, 3.7778613625620623`*^9}, 
   3.777907336137229*^9, {3.778308872510717*^9, 3.778308875671413*^9}, {
   3.77830894705762*^9, 3.7783089494264317`*^9}, {3.778308990195141*^9, 
   3.7783091129331923`*^9}, {3.77830976312953*^9, 3.77830977005562*^9}, {
   3.7783098038822193`*^9, 3.778309822630569*^9}, {3.7783117647500257`*^9, 
   3.7783118125719023`*^9}, {3.828680041748825*^9, 3.828680044829439*^9}, {
   3.8286802049189367`*^9, 3.8286802217745123`*^9}, {3.828680298507578*^9, 
   3.8286803734940033`*^9}, {3.828680532014125*^9, 3.82868053664388*^9}, {
   3.8286812859492702`*^9, 3.828681288250025*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"55cd378d-6a44-4520-886a-4f0d73292c3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalW]", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"MXX", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"WXX", "[", "ETA0", "]"}]}], "+", 
        RowBox[{
         RowBox[{"MXL", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"WLX", "[", "ETA0", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"MXX", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"WXL", "[", "ETA0", "]"}]}], "+", 
        RowBox[{
         RowBox[{"MXL", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"WLL", "[", "ETA0", "]"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"MLX", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"WXX", "[", "ETA0", "]"}]}], "+", 
        RowBox[{
         RowBox[{"MLL", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"WLX", "[", "ETA0", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"MLX", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"WXL", "[", "ETA0", "]"}]}], "+", 
        RowBox[{
         RowBox[{"MLL", "[", "\[Eta]", "]"}], ".", 
         RowBox[{"WLL", "[", "ETA0", "]"}]}]}]}], "}"}]}], "}"}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.77830945792465*^9, 3.778309458487018*^9}, 
   3.778309547644321*^9, {3.778312795997093*^9, 3.778312814675948*^9}, {
   3.778312861183248*^9, 3.778312905463986*^9}, {3.828681527338126*^9, 
   3.828681548925177*^9}},
 CellLabel->
  "In[300]:=",ExpressionUUID->"73f046da-3a9f-46cf-b979-7e53ea62540b"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalW]XX", "[", "\[Eta]_", "]"}], "=", 
     RowBox[{
      RowBox[{"\[ScriptCapitalW]", "[", "\[Eta]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalW]LX", "[", "\[Eta]_", "]"}], "=", 
     RowBox[{
      RowBox[{"\[ScriptCapitalW]", "[", "\[Eta]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalW]XL", "[", "\[Eta]_", "]"}], "=", 
     RowBox[{
      RowBox[{"\[ScriptCapitalW]", "[", "\[Eta]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalW]LL", "[", "\[Eta]_", "]"}], "=", 
     RowBox[{
      RowBox[{"\[ScriptCapitalW]", "[", "\[Eta]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"IWXL", "[", "\[Eta]_", "]"}], "=", 
     RowBox[{"Inverse", "[", 
      RowBox[{"\[ScriptCapitalW]XL", "[", "\[Eta]", "]"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.79388476883996*^9, 3.793884820127489*^9}, {
  3.794033690817127*^9, 3.794033691859838*^9}, {3.796472948236271*^9, 
  3.796472953420309*^9}, {3.80189262581892*^9, 3.801892636504818*^9}, {
  3.801894893865859*^9, 3.80189489821588*^9}, {3.8018951467223167`*^9, 
  3.801895233571003*^9}, {3.801900723270028*^9, 3.801900738415023*^9}, {
  3.823345564351182*^9, 3.823345574453409*^9}, {3.8240045560892572`*^9, 
  3.824004570590747*^9}, {3.83269883903765*^9, 3.832698842697495*^9}, {
  3.832698933367321*^9, 3.832699034801196*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"f5e60cc1-02b1-4580-82ed-a55b0227a716"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Uoo", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"-", 
     RowBox[{"h0DD", ".", 
      RowBox[{"IWXL", "[", "\[Eta]", "]"}], ".", 
      RowBox[{"\[ScriptCapitalW]XX", "[", "\[Eta]", "]"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Uoe", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"h0DD", ".", 
     RowBox[{"IWXL", "[", "\[Eta]", "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ueo", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"h0DD", ".", 
        RowBox[{"\[ScriptCapitalW]LX", "[", "\[Eta]", "]"}]}], "-", 
       RowBox[{"h0DD", ".", 
        RowBox[{"\[ScriptCapitalW]LL", "[", "\[Eta]", "]"}], ".", 
        RowBox[{"IWXL", "[", "\[Eta]", "]"}], ".", 
        RowBox[{"\[ScriptCapitalW]XX", "[", "\[Eta]", "]"}]}]}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Uee", "[", "\[Eta]_", "]"}], ":=", " ", 
    RowBox[{"-", 
     RowBox[{"h0DD", ".", 
      RowBox[{"\[ScriptCapitalW]LL", "[", "\[Eta]", "]"}], ".", 
      RowBox[{"IWXL", "[", "\[Eta]", "]"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.801901280905362*^9, 3.801901347629591*^9}, {
  3.832699088226397*^9, 3.8326991078085213`*^9}, {3.832703499852944*^9, 
  3.83270351278922*^9}},
 CellLabel->
  "In[362]:=",ExpressionUUID->"145416b8-639a-4ae7-9bd4-5f6d72b93f27"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalXi]Doppler", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"ldown", "[", "\[Eta]", "]"}], 
       RowBox[{
        RowBox[{"uE", "[", "\[Eta]", "]"}], ".", 
        RowBox[{"ldown", "[", "\[Eta]", "]"}]}]], ".", 
      FractionBox[
       RowBox[{"aE", "[", "\[Eta]", "]"}], 
       RowBox[{"1", "+", 
        RowBox[{"redshift", "[", "\[Eta]", "]"}]}]]}], "-", 
     RowBox[{
      FractionBox[
       RowBox[{"ldown", "[", "ETA0", "]"}], 
       RowBox[{
        RowBox[{"uO", "[", "ETA0", "]"}], ".", 
        RowBox[{"ldown", "[", "ETA0", "]"}]}]], ".", 
      RowBox[{"aO", "[", "ETA0", "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lnzdrift", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalXi]Doppler", "[", "\[Eta]", "]"}], "-", 
        RowBox[{
         FractionBox["1", 
          RowBox[{
           RowBox[{"uO", "[", "ETA0", "]"}], ".", 
           RowBox[{"ldown", "[", "ETA0", "]"}]}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Uoo", "[", "\[Eta]", "]"}], ".", 
            RowBox[{"uO", "[", "ETA0", "]"}], ".", 
            RowBox[{"uO", "[", "ETA0", "]"}]}], "+", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"1", "+", 
              RowBox[{"redshift", "[", "\[Eta]", "]"}]}]], 
            RowBox[{
             RowBox[{"Uoe", "[", "\[Eta]", "]"}], ".", 
             RowBox[{"uO", "[", "ETA0", "]"}], ".", 
             RowBox[{"uE", "[", "\[Eta]", "]"}]}]}], "+", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"1", "+", 
              RowBox[{"redshift", "[", "\[Eta]", "]"}]}]], 
            RowBox[{
             RowBox[{"Ueo", "[", "\[Eta]", "]"}], ".", 
             RowBox[{"uE", "[", "\[Eta]", "]"}], ".", 
             RowBox[{"uO", "[", "ETA0", "]"}]}]}], "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"redshift", "[", "\[Eta]", "]"}]}], ")"}], "2"]], 
            RowBox[{
             RowBox[{"Uee", "[", "\[Eta]", "]"}], ".", 
             RowBox[{"uE", "[", "\[Eta]", "]"}], ".", 
             RowBox[{"uE", "[", "\[Eta]", "]"}]}]}]}], ")"}]}]}], ")"}], "/.",
       "BGO"}], "/.", "geodesic"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.801902328055355*^9, {3.8019023598134747`*^9, 3.801902382273644*^9}, {
   3.801902778881104*^9, 3.8019028327050667`*^9}, {3.8019029353120003`*^9, 
   3.801902967436467*^9}, {3.801903011538056*^9, 3.8019030963722153`*^9}, {
   3.8019031304332333`*^9, 3.801903197183112*^9}, 3.801927522981677*^9, {
   3.80192848940348*^9, 3.801928491724813*^9}, {3.801929172075811*^9, 
   3.801929173027179*^9}, {3.823343933835864*^9, 3.823343954639216*^9}, 
   3.823343990995531*^9, {3.824008952558901*^9, 3.824008969280857*^9}, {
   3.8245342636447163`*^9, 3.824534264946302*^9}},
 CellLabel->
  "In[415]:=",ExpressionUUID->"1df611dc-81ea-4ae2-94ec-f0f7af8a911b"],

Cell[CellGroupData[{

Cell["\<\

Shear and expansion\
\>", "Subsection",
 CellChangeTimes->{
  3.801894638119698*^9, {3.8018946755500097`*^9, 
   3.801894687460556*^9}},ExpressionUUID->"e47cad0f-b9cc-4804-b765-\
f3f0ea4283c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{
     RowBox[{"tmpWllAB", "=", 
      RowBox[{"SetPrecision", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[ScriptCapitalW]", "[", "\[Eta]", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", "50"}], 
       "]"}]}], ";"}], "]"}], "\n", 
   RowBox[{
    RowBox[{"IWxlAB", "=", 
     RowBox[{"Inverse", "[", "tmpWAB", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7855745998430347`*^9, 3.7855746274529743`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"7a1ba02a-053e-42e7-9844-639218db1ded"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"748.60961`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.7855758442618523`*^9, 3.785697494926375*^9, 
  3.790251183138036*^9, 3.790350834921213*^9, 3.790488341640327*^9, 
  3.79052316947838*^9, 3.7906974400368137`*^9, 3.790703029412216*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"6a6c8580-6100-4138-b2aa-3823eb78d2c1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trxlll", "[", "t_", "]"}], "=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"Tr", "[", 
        RowBox[{"IWxlAB", ".", "tmpWllAB"}], "]"}], "/.", 
       RowBox[{"\[Eta]", "\[Rule]", "t"}]}], "]"}], ",", "50"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.785574629483902*^9, 3.7855747610072813`*^9}, {
  3.785595830585311*^9, 3.785595917786838*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"305cddf5-0959-4686-9604-b181a9149584"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DDang", "[", "t_", "]"}], "=", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"DangWxl", "[", "t", "]"}], " ", 
     RowBox[{"trxlll", "[", "t", "]"}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.785696304196725*^9, 3.785696358418643*^9}, 
   3.7856975186658297`*^9},
 CellLabel->
  "In[194]:=",ExpressionUUID->"870f82a0-c74b-482d-b66c-55cd6022f9c0"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[ScriptCapitalS]", "[", "t_", "]"}], "=", 
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"tmpWllAB", ".", "IWxlAB"}], ")"}], "//.", 
      RowBox[{"\[Eta]", "\[Rule]", "t"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.78559591958591*^9, 3.785595920070141*^9}, {
  3.7902518041101522`*^9, 3.790251808247631*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"c20b7829-bdb5-402f-9418-c8978ca2fd16"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"expansion", "[", "\[Eta]_", "]"}], "=", 
     FractionBox[
      RowBox[{"Tr", "[", 
       RowBox[{"\[ScriptCapitalS]", "[", "\[Eta]", "]"}], "]"}], "2"]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"shear", "[", "\[Eta]_", "]"}], "=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"Tr", "[", 
          RowBox[{
           RowBox[{"\[ScriptCapitalS]", "[", "\[Eta]", "]"}], ".", 
           RowBox[{"\[ScriptCapitalS]", "[", "\[Eta]", "]"}]}], "]"}], "2"], 
        "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"Tr", "[", 
            RowBox[{"\[ScriptCapitalS]", "[", "\[Eta]", "]"}], "]"}], "2"], 
          ")"}], "2"]}], ")"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.785595935880835*^9, 3.7855960407412*^9}, {
   3.785596075864532*^9, 3.7855961543516207`*^9}, {3.785597550947915*^9, 
   3.785597556120249*^9}, 3.785598038521151*^9, {3.78559824454729*^9, 
   3.7855982449777193`*^9}, {3.790251596470039*^9, 3.790251636779038*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"50f3b3a8-c56b-45c6-b6f4-4ed557a0f5df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"shear", "[", "\[Eta]", "]"}], ",", 
      RowBox[{"expansion", "[", "\[Eta]", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "0.01"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.785596166261383*^9, 3.785596190127163*^9}, {
   3.785597521687737*^9, 3.785597625203265*^9}, {3.785597682346835*^9, 
   3.7855977134044533`*^9}, {3.785597976282675*^9, 3.785597983414378*^9}, {
   3.7855982944306583`*^9, 3.78559829489727*^9}, {3.785598332760509*^9, 
   3.785598338794869*^9}, {3.790251205077724*^9, 3.790251207282692*^9}, 
   3.7902512453486156`*^9, {3.7902516459458237`*^9, 3.7902517280425386`*^9}, {
   3.7903508950752172`*^9, 3.790350916350634*^9}, {3.790697616345518*^9, 
   3.790697633195655*^9}, 3.79069784378034*^9},
 CellLabel->
  "In[198]:=",ExpressionUUID->"c91f207b-b41c-4131-be51-9cf43dd472f6"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF0mtIU2EYwPGlZoUVWlbmJVy68oKkjLzmGZaQeAGtmJtQlksNzKalw01c
zukuTttJ22bD2lrObS7UJLIQNTHRZJqXYSjZBy+tLIemUopoBfN9Xji8/Pg/
hwMPh5jBvJRpRyAQ4v89/+/ohe4qXoWAQrCd8lTfE2JfIfLge1EL3gumqVLG
VLvEyAVXZo91lUiQO3ouGvo8q5DtzryIHOoAx9U7m8xp1cjSfYVXP69XU5oS
ad84r43YBGvSOlv3AHXPuejSH2FSZEaKxmVlYsdq7HGIbH7pPI78R3bWnVeJ
o/l6k2XGYQqnDEXdz3qqlmMUe6VR5P8Q9ZmIxIL9bLAgb+scPgD217XudnWr
QTZNZwwrssF5rkcUHu07xjHXhP50lWMt6u08tp8PFZz2JnC5UQvesk6/DVgD
a0h4WXPsI2SfexG8cBycSHzZM2MBN7e1NJLDZMjBBLq2sww8Hup0J2YMzMrt
DO0jypHdG5jbcfly235YWNcUccD0DvoNFzOe7KxA3SFOQDeng/Xc8JO0FgWa
7yUPZrMClcgbTxZ/tfmokMOVkpWvbHCh3H/VfWTHyRj9A4Nz+rAa9aL+Nk4M
Bl7tthYbFsA/W7O47Asa5KkaKv/4WgPyOq7lk721yG7SVX5SApgqqSnnPQOP
8ocrvic1Ii/xvAT2bPDB0tsCrwZwELdDEPYRrNTERLI3wTkcujCHpEOuLNIL
K5LBBtZvoapYZ/v/A7GbPa+se43QLXdlovFRsGP+nGhxU2fb/ymMxCSL9/jp
UY/NLRMTL+tt/SjGyBkVR3HBI9LU6BLjzrw3ps5mVjLN8H53ZleleBv8hXFA
8jzAgBwvqsXmU8Ee142ST6XgyGsbkmWjAX3PKfTQ5KwZelFaXRXJrglZQbNU
UYLAt4K3J0Oo4L/gB0pw
       "]], LineBox[CompressedData["
1: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
mgnBPfk3VLLF1mxJXKwWr4iQRl8e+8tmIQ+H+SqtviHCBn3lj6pV4YxXOW1n
NLDfFXqly5e04MZ+sWf0epg3u2J/96wRPM7w1PutefO/99uQ6J06ZMNojc5A
4D5lbQvHt5kpFTjBYg6x/Mz/wZLDVnVOtXCZV+Kbyqbmf5+HKVFna9+jnW3o
LqoGl6v74aykoxy7f8FS5qJOjbtb8D7N2p7m4YV1w54ccheC/yvi2sYnDW/U
M6XwlG8hHz/6e8x3EhGdL6C9nf8wnLOTtdRLo4V8P45kaaW3aKG3a4RGCerB
5wZqfHyM4NmrVLZt5vB1ZhXdfdYw21Nvgq8tnKpcINDhBDdllNTb/wdzPkyL
5nfH+cQf4G4944M+vpc2flfAuvMbyd/DHgwXp9ulMIfBKU67BOki4RkTyumq
e2vWIV6e8xJffQibFIhmLybCh3z6ZWZTsV7oUHjBRDrMQn2Q+O0VvFA7WTb0
Bj6a1xWakA9bCO4K2FECv2Kj1GyrgAX0mIK9trTi3+tmgZWGLNhIx/D6/rew
/Qrbnr7i1n+f9wlir07u3eXy1n/3T51YLEx1aPw95s1PsT1+3wgntBwWEmuF
uVuTZRf6YOF2Lhc+2jayHfS1f4cwwhntPtcmt8DiHX1hhbth6c6H6TrSsKth
vWSePJzXufiWQxmW7zKqGdWA04UXFTZpw4Vdb9uz9OCl02Om241hBuq0+XKL
NvL1+xip23+xRi/5eGX6qB18qLt9dYsrHGC8MdjdA67qlmb6dA2mNrG+d/g6
vG0Tj+RECI4XbFKRwnQHvbZnWtg1Gj7eq6NwMBE+2cdk2JEDR5gp9ysWwq19
TueSSmH9/sbLDvXwPfPlxWYS3Nkv4i/bAW+3MKWN74GNPoXe2TCA8421KNx2
YQS959O3R43fYc4zO/mlpmDzzxoZMXNwwhl36ZU/a1YhDnx+WmhF0U7up6Q1
xAOpYasBmjox+nbyfNoFKkZPFvSXc1J76bbB4m7L0Vs44MsrCx8tuOG863Oc
L/jhP/Qzlr+Fsb9y1ETqYUk4YNePr3dk4JrHY6J9ilhPt2/YRUgF1s4cyHFV
g+/K9S+UHYe35qc51p2Ed6l3+hkbYH+LptaqJybwY30S7cwZzA/3Nmgqn4eF
rGsjQu0x7/i9qr3zInrmpfIdvFfgsvA3Qvqh8EBtjEZeDsynEx1GWdj+7/OW
Jdp2RTRrl8IZFrfZ4qowPzUSYjRWBx9wCoqXJsHuswEDvu1wsZcvX2M3XLn5
tbzZZ/hIqHvGuWH4JuuVqcxvuL7GB5cOrEygs3A7ux+bhbmJljc9N3eQfSZL
qFbZAj5foXdhygq+v4MukNsWbvT9QaS8DNtKm3H8cusgXz/VWOPCkBe6q0G2
saEfrKj96k31jY5/P1+ViB0b9kTmhaK75N5xfnoHZrCj0HwQDT/lvLQvJBZW
bR6k8UyAPwXqDtunwMPRPoGcz3C89Nse/bde4nxfJ6R6E7PRj+uym4i/xXr/
gnk2lnKY0+nCDEUN1udzfyRN16PrtWu8/EKCJ4ILQtvasX+IkrBtVTc63+RD
tdxPcFkyPW/aEGxq6E0R8xWe3/yzP/gnfPedeZH7DFzLd9DNZBm2/vha78SG
TrKjxG0uetHADw9GMonRwzK/NozvZoGTy6vODvLCPhbHtWxPwDu2FAkb68A5
1SK0xw3g76KMlSJnYKMlkvzkZdiCYakr6SocbpX1q9kbrq67+yo7CLb0oQpL
uQUvS7raRUfAMcPD6jfuwX8jzhYXPuwkf16CtGrUrYnonO4HRsWewGqT2yXU
nsM0RlufjbxesyRx6T1lyKFc9GLJvxu+FMIjTwePL5Zivmd7i4hBNbp/jKb0
gSm4+f5h1Rm1LrKd7+23dJ6G/Z/tWAzb343vMxuW3BZk4Ubj/llrAryDPnlK
8ShcYn3dOU0TPldsM86qC9OxH7P3OQ1nOol8/WrW/e9+CRANaxht9K3Ql7mm
hkovwMlXW8+KOMEazTmf71+GJ4RizCnd4Wh/j14nH1ixx9S4OwAekFLuOnIT
xw+6xW2QeRtddJiyjSMKvZUwohP8AJ3HITLcJwGdayJd0yJlrXMTq9TD6uue
YZ5lQacm6Q2cpyN9hKEADi6RtJIqgSXu9m4XrYJ91Ep3R9fB2m+KlQo/wHXz
gTsd2nH8h+f85SK70Q++s85d/gQzi5xt4xnGfKizUFbbN3TJ93QSByfhzj0/
M57PYv7p7e/1zYvr7kdL1jP/VfTafdECPzf24HkLcEs1oush3y+2XiOeKuYe
8vwdLm6KK+yYtwzbzRW3C6YZWY2j4YYziF92XuaHBf3Tf/OIwAsTaezHJLF/
wtGQqBwZ9CNJDqzcSnDpkNRkswoccUqS8bcaTH/v9/enJ+A+yjnaDzrYP8C0
K0jBEP0DQ3wAy1k40TM2SdYGnnym9knUES7bdnhZ9xJsc5Hfs8QN+2dzf79y
zx9eaXl1yTEMTttvkVESifXakYxjLDGwhOgB6j3xcJKOo1nuY9jvx13PyjR4
mrmhxTgDViXtO/o3D/4h3u2vU4zjm+mxdo+WoxMm5H7P1qCPaI3tP9qIHv7y
vmNsCyzLqP70Ryf82XFukNgH60SKKbQPwvtF9U9/GYV7blHdPTAOFwoIZ6pO
wyInrDZ1z+N82p+zqooso3vTlXv7bOglm9/e5S2JBv5Qt2dmLwPM9v7h+zey
8DuB45Q0BNgmaJFgdAh+q2aUvXwCbuaYf1OjA9NSvxV8bAhnnbOx+mUKm1Sx
P1I72/vv33cOIhVfdVeMDXpGoOuW7w5wGFec5IILvKLaFhzuBqclB1QMeMHa
lFIrUv5wUnnE5a5bsEhx0O6lAVhU4/n09Mg6tzdVf/3e++/93kYUtZyO/Ty5
ro+zOXfOrjNnSkkWbR/sXXrGVhIWIyw87vCFJYrtBDK5+sl+1LrEJHD1E9mD
fx/oV+R/xvM5VzRK4zlAdtxvyq2M/IN43q6TnNKqYOr4/+STLn3B8aPz4y9x
DJGtsj1QorMA9ki8ffhGMZwt+OD0gVKYT/6l790qeLNxF0mbBLc+FHF5PwzT
88pedxuDj7xQecD/Hc4rMigLnITj+nxZVP7A7edC+SaXYaaf0fIJq7DfSrrl
8sZhsgtu5Li+2LTmZsIMY+lNEzr0iisSqmMMcJOyM30vM/wo7VPVhS2wE9PJ
a7Ns2O9aqcbqt+3oWWcemMbsgv3f07Lz7cY8r8vLwLk96LNdu4kBPPB9v4oX
evywzVep8wOCcJIL0eOOMPbrXjh6W1kMfYu/7uOfEvD8Y+/pdEVYQjiY2pgI
22ZH7qRVgXsq0g7ZqMFbT2QZsGvAmm1FdlXH4SDTGp//tODSoeZIHh2c34JD
75MWXXSp2ZECP4Phtf+vJjh4TzVJGKGnblwa/GQC94dRz982h7exs9ARLeGT
j3ZxjVvBN/n5peLOY/+fld/uctqi61q9+vXIHs6j+E9/j9Pw2u8jEDgS5XKT
LqL7EZfZeS7Dw71lbimu8Ksdx+XTPNbdr7dMsYLesLtB2+Kza+uu51eMibA/
HP1/j1xDIPxUci+nWBDMQBrxfnUT7qC/qJx1G1Z8Lp0oFQFP5cWxtt/F9VCN
FVvK3MP9sL3hX54Xs+5551XnkX+47vOpoAssiIdjLElDiomwtpOcYd9j+Owj
oyfEVLhGaTdNaRp8xz3tffkLmGcm//j7XDg4wueFRj48Lq7KUF8I5zo0NDWW
whoj/TqtdfDLwOQsvcZ1zz/PhS0dH9auN4/gVibyn2HLWi8j9FpMtXW1YV5l
JeeAcSfmU+M87vV8RN+sqDxv2guXqafZrvTDbW7v31oMwH3TrUrcQ3D8Gx2P
syPwBl32ni9j6z7/BkHzr9NwUYmm9S/qEbKTB67y2NLCNylTBvvoYH31xTM1
zOvmsxQOLrPC3KEnP71mg2kyPB/xbYfHm56Yxe4c+fe8FBFaJ5s5mDjRHfNo
HKy54O/hnHTb98I3DHSNHXnXzV/12THID+vGPusyEIK5+v8aHBRbcybBfylT
45Y++lF5dnHeFNgkf9W56QnsLP/99dVncLR86f7Gl/CAvJ3MlXzYXeEd4X0T
/Ezx/AmHhTUnEYoKT4axL6F/UFRsKl2BZxWZT7JRja79vgBhU9HinRLqUXLf
pTTcbEsLixV9YN1KDz8tj7z4mRHWK0qJusAyuvb7HAQbpfB21q3oYUrWhjY7
0D8qMZow86L/KPr9sIAfPl9RuHBDCGYtbuRkEoH5CG/N88Vw/nLFjxOsJNF3
HCPuPCUNmxe7cb+VgbsqFK4Fyo+SP6/A4hPJ9Ero9wmyQ7lEWFVWY5OyCjxN
ii5yOQyTiuee5KjBXwgDoxYa2H+uuF5w84lR8vtIS8y1faMF//57lYdFB+uD
7P4GZujCVavJrPsMME91/2jik9Przk90XJTHBPariChMMMN8qZGMBscZ9L8T
3R0xZ2HCjWvWbOdgLw7e6QibUfL7U5j1/hqjHfZbOOrIEOoAj22WqBl1wno3
11zBQBc4h84kd/Uy/Cvpr6r3FVhKLqV54SqOV/Z4n9Q9T+z/2nr8x7Q35icW
IzycfeGvuryZliHwp40au9UewU01dF2PE2Gz/ZHyyslwt3mPntxTuD3PMXRf
FrxFi3VH2hv41FDuE548nF+Eh4l0Yj7MNTwQrVSEeca0FO0H79A1CRp9bGXo
oa3jdpEVcJ1t5G/G6jWXEfKF9bPs36Or3+vZsqkeviHimxTYCLv+PGQy8AHr
dUWf34lvwfEPTTgeW2yD/a6zdl3pxPqSXXnnZj7CK5kmM869656Xo6u+P/ph
4c0VChoD8GYN4Ysbh+CFzT+Fzo7gfEYbXn95N7buffIpavH6DnM3JuoujmOe
u1x58OYk+q3c5CnFGXg+nYbi5yxslWDPnPgb662iNieI/4EVgqXEqVYwn+p1
n5i7CrO4/NG8QDlGnvc+Z2G2k3qM3MeMKhwaNsG6WgJePnRj5O8jJYdCQyUY
YWHZidhBZszfE9ZNj9oCU+zJy1djhz9u+ayxa8c6b7rWlb4LPrw8OGq6G941
kk5dxgPX5ikcvikGH3jxSFdREk5M3GA1LoXzS4hOmvKSGSN/v3K7WeenI4/5
L95iEZRKsNalyMQcIubzz8+9slFB5zMxLtlxGPtHaL9rqldDX1Ld2++tAdvI
3RgXPwG3inxbGtCClbm16KN0YHY2t7gLejDbZnbh3wY4H78Vd4V0I/Tx6T4N
U1P49KiKEaMFXNGTeqHUEn74oel3lPU6VzoG8drA1PnN9zpscX0uGQeeBDvg
+H1JD3IUnDGvcW+58ocL/CbEsu3Rf3DoZaGZDR7wvE3YhhwvuMkkN/LmNbjx
pD73Dn9Y/ki+RH0gjp8qz3nQOwidWcxPWzwE9tw7bD5wC/Oj7BpOd8PXPc90
Gd5HItFL/jKHzUete37Hup6bxMKiM3M0n+PgquWt1tYJsOkmqdKxJHiGVYfD
MQX3T4aUeLD5CTq3YFib6zP47f7nEovPYW1C7S2flzi/EfXRsQ2Z6N6nNh4J
ykZnM+NJosuF9Tb0O5DeYl71koXR1kK4x8s7J6YYpo3Md0wqh70UY8VHv8Fb
1N6G2o/Dz092jE5MrHt/z7Em/v617n28E8K8+S88MeQxJbLlK36eT8RoZrLB
nIu5zw5sh08wzVgSOeHwhkM3HnPBnrziO9X3rrmZwCqueaWeF/2ZvH2LtgD6
j7mCuWyhr+TPo1MrLeS0COadjKpGesXgjdZfDllKwnFOFAnDUrCUO9cfWxm4
PoBg+FMO+xfMvFPdr4j+PyYAuO8=
       "]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$295479494#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtmnc419/7x62kiCLZJaskKyvSuYukrJSRSpEQsmXPjGzZMhPx0bI3vew9
3vbeK/P9lpUVX7/r+v1zzvW4znXOuc953ue+7vu6zkU9i0cGJERERDJHzf/1
5KTqonRDeeB8NlN+0skbOqzak91O5YPgXkIxkY0X3MN2d65fzIf+Pa5HPnRe
UHnyktq6aD745XhrXi/0hOxU92NG2vnQ4IYfwxN7wodeIZOH3/OB9nY1jjnH
A8g5ntdQVuSDlt/cg6CXHuBm7s9a35UPZK0y3lV0HmB+fKpdajcfzq7+qQvb
dQMVyQgRrvsFwF4klyvW4AL1PhVBY9oFoKgt8W3ltgugrqXZj5YFYCqqh/eu
cAaBN3c+nvpYADaxIY8papyAOnFzf2uuAO7fVCC4LzjA+4WLmjm7BaCR5P1N
0dEBDsRUst5QF0LUVO1zK0oHwLenv5wQK4QT+Zu+oeL20E6kVd/kXQhrjxR/
J6TbQoh+6YcEjiJYO5yNOT1tDaYpk1sk14sgd0Xy8bdAa1CcoHhhrFwEn0NH
0rjFrYFC+/FVcYci8Cm3FA4LtQJPtY1GXFsRdPob3id6agm6YSxC4tNFIOnT
JGN02hIAJxOTsF0EUFohUBBqAfsKYQbGnMVQso4Ls3Q0B3sZARJSx2LojbHq
KDI1BU0PDWPjkGKQUEyrEl59A6KYSwcutRjod3w4xezewJpkS1JCezGcGzxA
8f4mYCpsdEOcqwQIl1Jfq7YagS57yltjXAnIUITWLRcYAHrRNIybKQFJIc1L
Sc8MgC1hVUZ8twRKZiP+oyY1gCEGOEPKXQpUAi+4jz3WB3WakZ8JTqXQon18
DdG+gmvKpPSkoaXg3X/q1litHpwJvOJinFYKxtTKIusOetBO7qgg3lEKsz5d
/s9nX8K9A/rfOO4yeHr6U8izdl3gkb6pIn6jDN7wKZ9vD9SFY076BQmqZdBe
d0rVSUEXqjdzvYydy0B9+tp6U7QOSK88YCftLIOd4vfVqQXPQXjE/4m4Szls
u8g2ETSegmnLOx7B0HKY08BpHm4/gYxSx/VLX8ohKuSNYFTiE2CPNQ5mai2H
XGkyMfElLTiteb9qn+UXfGP87Okb8xiU5G6HbAr+gji781dJ7j4GP1HJZ3jZ
X2Bo5HLYsqkJRHS8m+NvfgH9z1uKok80YRVHwVtT9gu8dBgbswU04GoF0VYZ
7hcUpAwx/ZtTB6PM7er86V+gvNLGa5KsDhNB89rplBiMFGQHhZ1TB9z9xlD/
Zxj4UfyK8qNRg8wa3+0Hexhk1n3vJRN6CIu57nX3aCrgjep8Otu2KvCk2Iff
5qyAhuroYuoqVUjyeH1VRLECskY4fU00VCH4przuufgK+MVXkneX5gEUPiPV
N2erhD1Pk6UH55VAXc292eRSJbzRra1UqFeENYU9odfClXC8e0Mw2EIRBKTW
/+nIVcJZuZ3RrjoFSGecjnloVglhMi2abR73Ibq3ukX0VyXMRWbSCl6Vh99y
0pLHGyuBoo5n8e3EXbheWJA+2FUJDyaoByai7sJwdMY7t/mj/S20dc+R3QV2
rRCJRroq+Jf6OtNs5Q58G3qS+sykClqvPW9tJMjAnkL3aQHbKkgI6AbJfBlQ
KlNyI/KoAr8F0pt+jjJAiIcnaVFVQMG+3ZdLLgOiz7lpCJVVEP/vdETvlduA
ja86eTJUg1dcpUy1AACNqsm8Okc1lDf3G17vQKBbOa1xib8awm8YTJPYICD9
3CfUKlMNof9ZtruV34R7euVz9ObV4OxPb+b6Qhq6Znwffa2tBsbBFrqbQ5LA
qUFc6YyrBjG1jcHIEEl4W+fErzJUDZRSCWbrspLAkG5GsU6oht32Wt/8nOug
/VoNk2apAZ52Bp3+jxLwe+H8lQ6rGmg8m2mvEy4GyOjaGUuXGqDbXNmy1RSD
yDm5bRrfGjCvDJp6yCIGMtOm9Q8SauCiV76syn+ikDRSqoerr4FUyxftJxpF
QB2nGd/OUgvFf091SVy5Bt+VTTzNeWrhpXvM4fMdYSBpdTWmFq4FzbAPOxea
hCG78YuEyt1a+GdE8dzcRBgoq9e62yxrIZwvXXg7Twiq80Oo2upq4ZBJIgxf
JQBMIinrph21wLKT/L3CSgAscwqGqIZrgXyqP9CPQwDYMkcylFZrgbnGALf+
nh8c/rsi18pcB5/EtBq6nl4Fwbh61xaLOni1/y1mle8KvGcc0n/jVAfTrd76
ZQu8MBK9okjpUwe1T74nKWXwQkDEWWbFuDqINxr6XHSJF+aC9Aqba+vAqv4d
22vBy5DgfoBvYqqH+NuFl8h1eSBFc5cij7MehFv+tBZd5YH/+Lc4EvjrIS2Q
s2Zjhxtyh1c0zW/XQ+VuIe5ENDc0SoxitMb1QLaguW3VwwUbhLKQZ8X1cFeC
FzdoxAm79UUZd6rr4UfZ0oD7TU44TMyr5m+th4f/9F0+0nLCSaXvW4fj9YDb
62JixTiAPSPuxZfjDXBFXMRenpkDlHQdBVY0G0BGuDiHbo4dHknY3uvTbYCm
H9yd96rY4TG1lV6FSQOUtCbljiSwg165UXSYWwNkErNosGqwgwOj1oFYegP4
SYgKl0ZcgC8d4u1umw1AGdD9gMiXDf7d2jA7HdkIvpbLqqmTTFAYuhKCS2qE
GvnT+w7/MYH5xFxWyNdGGLIapVswY4IJ98E/VBWNUOBJxRO2zwi1GGZ7YrER
tsK23rWzM0KAtL8rya0mwD87YeHudQ5kgzyTqhSaQGeqcfvKo3OwP+xc4aHR
BE6XqFg1L54DM2dz4kOTJigR/iHNXUUPqqVqPntRTbBDJv7cjZweGK6fD95Y
aoK4VgaH3+l00OHLkJm31QQFh0ICMy504Nd/GmdN3AwSKeEDCmp0sGtHeubP
uWboONct+ZCYDsYK5iNXbjfDA+cyrYt6tPBFJC9hLqYZUkXDi3vEzoCw4L0f
A7ItwHqJVqVXmho+9vMSTSq3gO62byIipQYiD0r1hcctcC0g+gJv8ynAdbTv
7bxpgUmtdk+XJ6fAzFpDkSWyBcY/i1PvuFLB1wK9xeczLcCy1+IiMXoSTr+4
gwzxLZCYSPf3/PeT4EDOE26+3QIfPG4bvnU8CfKPFyTdqVqhXN2nWZ/hJMxu
W/gni7ZCCppavKl1Ai5Ku16e9m4F2n9c6ivLx8Fv5oXLUkgrMEf7r0pUHYfV
oFsd6x9b4Xf8vO1E1HGoGCV1IPvZCknadrHyt47Dc/eABu7eVvi5T/9KI5Yc
YqtjDI2422B3R3M/69kxOHM/98tKXRuMffzyb5yFFNwO+a1rcG2w1By4vLNL
AssFXyF2sA1e+Uc+0xwigXqOz0N3Vo6YKUGlJ5YEnPY/nE442w43WXz/dLOQ
wFSWmYvCq3YQO7vjqMdHDA8MF+6zm7UDNSH0uA41MZSzGjBs2bWD1TwbY9Qf
Ioj21879HNAO/IpT+d+LiUDhleL8dk47nFpJa357nwhyz/Gq/0eEg2e6SWRn
Fw/QhbYvF11P4uDDtYclDYUHKMiLnfDoLA5K6aiFxr0OkOEqQ8DBJRw0vL4w
J3bhADE3k1dqPMBBRZj1O5On/5CX6wwfWRIOXpNL9ktM7aEra7h32Wwd4P/w
wI782g4q9acyJefsgIgJA/+b5DtI4eJ9Te3LHWCwEvWxbWgbvVGtvkIh0gGM
lw9NN7230Y/M/G6dex1QxduZqjz6F/G/ieWmsemAfySOFW8TtxBG0kdj4NAB
PiLLBmN2W0gljna31LUDJEaWNiNVt5B5U2C7oV8HcJvcOTNHtoUyL7nZY4kd
ELxArHrMahMJzeg1mTV2AO2yv0G65gaqdP6UV9PWAT8llSM/iG4gVbqRRKbu
Doi7rGlWRruBLGU0rOtGO4DZIL5+ALeOcpLlWdjWO2Alu52UWXkdXXt+1ayV
rRPA0LZFSm0NifVtnuaz6YShA/4l7YBVxBqXHsnt0Ak6Sc1vtK1WEdmLx4zs
rp0QyvZl3ldrFfXMFl+g9+0ER1klm5eXVpH1prPAYVwnLPHQuV4JIaDMsyRK
3dWdUMzv4/2GFY941Kh9nWm7wE5dk0PPeglRM1SctGPoAqr0k5mcCktoc8gi
xJK1C5j7skt4OZZQrV5nlAFPF7i95JEk7l5EetaRXx5IdUHLZpwNTmIRJYUx
V3PqdYGthu4Tx1MLiKGD519LThcQUTWrY7NzSEtV01u4qAuOSeY9MKyeQ3Ed
PpQx5V0Q0u1iqfxpDrF2zjDpNXTBsEsfW/+TOcTelSK+PdIFsyUst5o7Z9GV
nvOWXBTd4PTyPFtt6wySHjg37fKiG145HBudXJpCrlp3TaZedQMu/rOtH24K
YQO2f+SNu4GQbkStmzeFbg/2HNK+7QbFIIryZOcpdHconPWrfzfUndmNeU49
hR6MUGv25nfD0GKu71vpSaQ3Qd7ET9kDpkkvqG2sxlH6a9JTTqd7ILbwfbvz
nXG0iD9UrafvgfJBRsd2hnFk/W974AV7D0z/zdR9UDGGPJmX5j+I9cDa5jeP
7DNj6LM6jmJNpwf0esgXnGtG0ERjzL3C/B4odD9H0/54CHGpRgaRlPZA8638
bWaRIWTUH9qhUtED6gKxpinUQ2h11l/rd1MPnMvKltepH0REpC5GjOM9YEFs
r+BzfRCx39T1czrRC7yiMlK8lwaQTs7lRvSiF/ZrNtYF+frQrn5smuCrXgiW
a684S9OHohlPerEb9QI3retVjvVe1Oq+dJPEuhdizn8bLijrRVIqmXl1Pr3g
FNemVqLSi84uiXxS+tkLVoPhD7ade1AjF9g93e+Fi/lJL77/6UKvBrLUFIn7
IGGweObKUBc6CGQXlibvA/e0Ia+W6i4ktk68zHa6D0oELl23iOxCKVW1Lyc5
+2CWKblUSrILub5QUDZSPOLCWuMCv0507aMGl11cH6y1687P3uxAlyjkjnV9
6oO6AQec6+UOxOogOsef1gfLeorRYnQdiFyLLmM2qw9kF+Z6jnfh0BBDJ59G
XR+MJXv+5LuKQ+9ilEREV/tgvjI1r3qpDXVEy8qsyfUDu9EbcveoFlRHLsKp
otgPlcMN2tNWLajUjoPsm2o/rATIaDqrtKAvmsT1L5/1w34P7egdihbkcK7i
fqdlP+B8tcnF3JrRhWiph9nx/VBrwcgtY9OEzKOEdc3/9MO2d8qPVfcGVCoc
NWS+1Q9SZuaPePUbEHn7trrFXj+QCcZ9fn+vAX0ir7xveWwAtk4m6WSeaUAd
9ioi1kwDIBQQ8fpHWj0SefqG3O72APgQ5dwQ7alD2+fTfriGDYCU/0+zMwq1
6E4ZxSW36AGgv+J33PlaLQp9bPrZLX4Avtq9PEXKUot4Q0Wi3dMGQL7A9ZvZ
cg16Slzt/q5kAAI4HLQyQmtQ+fTYI5/JAVibt5oIHqtG7zIYd4KEB+H3Oe/0
3ZAqxEO8Z7ctPgj33AW8RByrUOuT0Y1X0oPAZRZ8MeBVFWKkTFmVkh+E9p74
xQ/Xq1C2Gd/8vPYgZAYd5mxPV6KJa6j/jt8gdJITXWe8VYng16uC/bFBSPkX
fBnHiKEZ+rsiRjODoMBHnHhi4xcKML+c070wCI94Z3hscb9Q34WVH982Bo/q
qeCHY+9/IXNPuy9aJ4eAKZdzf/VvOUqS94/IFxuC9j76E4NTZehfZ6aVadAQ
EN/Ole8fLEHpwi9+YGFDUMf+lhuVlSCVsFO/T8cMwRMJluutCSUoWdVUu+Dz
EKzKqzE+1y1BMjhe+YPCIeh0V05SXChGfq1fWEMnhyCslrKEj6QYnW2Ia8gT
H4ZIFe8yf5VC9ItHgYRcehiodG3NLEQLkeH7HWmt28NwwYd4xJa5EBXJaeXu
Kw7DxlcisZm5AvS0lj5R7uUwJJDpdt5+V4CSq0Kt+wOHgeEnv/1gWT7iK3/P
tjcxDGGjws0q8nno6r1vf/7MDsM3p8qLdteOuKetbn5xGOho2F4UsB3x8lnz
vo1h2K3TOeG8kYuusqZiORQj0BtY0XEh9YhdKnSMhEaATIN9IZ8sF/FLb3/u
dR8BOiVyzjsD2UigkcWu1XsEjBoKZAXrj1gdFGr8R0Dk+uUygfwjNn2/lh0x
Ahfld+6ahB5xwlnZoP9GQBe1kXfeP+J9oRkZ3Agcy9vyDPHIQoLlxjzZ50eB
7FYWx3O7n8iPjOrgDNcoyI+cbJVT/4mmlDJ7bXhHob5lS+7xtZ8oenTNW0J0
FHqNjuHW8T/Q/oHzNHZ/FEqnB26dMvmBmm+HJLe9HYXA4NBjEa+/I8OGXOal
5lEgDsoX8nH7iippNNaUOkaBz+wjGefLr4hZ629TZu8oDHuXPp2W/Yra5m84
Wk+MQtg/2v7mE1+R6Mm6/p3NUfjyU5FdKCYDkSj3R1JcHAP2SPMH/MX/ocSu
PWoe+zF42r6y13QmHanI03pcdRmD8iz2RtrdNERUfvnPtXdjMD79icV2Kg3p
pWl0Q+AYqDE2jfjkpSEeh6yYJ5/GwO9ar3mPZhrKZHvFHtwwBncL5kMpU76g
CqNm4Q2GcXgV3TnFoJCKLEcnUnZZxwFfKpWqJZaKOB79pSPmGIfk1lytLPZU
5H2Da+vU1XGQE5aXSvqbgu5Ru5VeujUOx/WHSN3TU1BHnrDsM6NxcLOgdRen
SEGTBx/Vq4vHwVbR+E7XUDKKdHLxzPo1DmdirSv2G5PRvS2d7ITqccCCJs0k
i5JR9goPlX3rOPCKWJ1ZiEhGHiP5NXwT48AhkiN0QSUZ0Tw3im0mnYCXFXns
3wI/oUwpbwpRvgnQfet+5pdXIvLbtv30jX8C5K5yND3UT0R6ha/FLwpNgPF/
gqfJ5RLRuWuK+tRiE/Bnjw1rJU9Erry0lfNoAhLtaLH2wASkxJhsn/hoAvRi
vMh84+PR0mbZHLnTBCxViVKPd8SitTNmh7kuEwAg29CcG4u2+c8z6rhPgFDy
vdq+yFhEbuhxv8h7AjrlW/EqT2LRxb47P15/mACVHdbOsumP6HFhm1XjlwlQ
yqRpMzyIQTV24/v+uAm4OqteR6oQjZrDQ+nFuyZgupjCIFswGnVk3haY6pmA
5eXzLQ700WhsLlVHamgC3mYMGWpPRqEdTaPqxZkJcBPvVXrjFIUEJf74Ku5O
QLRx63hgTiSK/0tCd4p7ElSVTiwQiUSgdl5zh8BLk/CgKLPNhi0CEWkPjp64
Mgn5xSIRe8cjkH5lVga54CTcZNs1uD8ajgT8tRGR5CT8zbuZP+wXjqqZC43X
lSZh8VdVbMN0GJq/aVw5+HYSuqjcqC5lhCJmyx5uLftJ0NT03qGMCkXKKRDY
5zgJkY9/XyT1DEW55Oc0u90mwYLLq++SdihywVUvtfpNgtj5p9n3zoQimpes
DJUJkyBp6byV+S8EiXvjzNJrJ2E7+zXfw7YgFHV2V/1pwyTgqkdSAjKC0MYX
Lmnq5kmgr/z7YcErCOXVOZ60w00CWTq6wHAjCAkd5/pPbmgSmgMLTa5+D0RX
AhwmZgiT8CPV9jJLeAA6H3pRjZNlCpTr254SHP2QK7uSVD/bFOw9kzvv98QP
jWTbXQxkn4L1M1JPb0v6ofjOFsIa9xQk/0rJOLvjixjp7IKqhaZANuvDFykn
X0Qb3Vz38u4UYESD3fqe79GxBJvryVZTEPdMvfzWV280l0XmJv92Ct73yFNf
CfZG9TVRNXi7KTjcCQ0RsPJGfktFKjddpuC+x2iKn6Q3OnljX3/o/RQclAuP
u7Z4IZoh77CzCVOgmJEKahueiIkxetGvfgrKw/Qezmq9Q/yRxQlWLNNgWe9x
cwDngqQwUsEltmmwOH0ZC0l3QXfnVar02aeBW81L3tjVBb2Qnp19zD0NJZPz
0/58Lih05owgEpwGpjPzWrb+zmhN9E3VSdlpEPSk0e5TdEKFvWxzqSbTIFHC
Ete5YI9uMXgJ9pVMw0A6cW2alw1y/BQs61M+DeJsm+cCdGxQ7qWPj0UrpoGS
1dPsww0bxHX9p3t47TR84ziI2V+3Riee9ONUcNOQ1S5+6rmhNeqK47NsmJkG
5TsFyowPrZD++Z7sYpoZOLafT8nmbI78uLmvxRvMgHkNIet2vyFaqVkIZzWa
Ace7I5Z6nw3RI73M9USTGZjNl0BZbwwRyyeJgmSLGZC+qPCglcgQZTIqXE93
nIF2/5ZAGn4D1EtpgXKCZ4DK9RlJVPArxLFWrNBQMANGtqdoHc10URmm9Gr9
2Czge+gj2G9poJQJew4jitmj+BNbmr6gjvxIUidHTs7CtzzNMfMIdaR+d0en
nmYWPrsLM9b+VkPLbWnasUyz8LDG7pFzxCN0fvRAA/hn4QH7FH3LygP0bi/7
XqD6LIioOQpu9Msh+ev0Apyps0BZhB8d4mZET4sPzdvSZiFsJXbiz106ZH59
Mcs+YxYiI6iI0/upUOT1CuHWn7NwQ908OIh0/ebEdWMx2+JZyDob0WjeQYU5
SP6SbmibhXHZfSKLY1ewDCkDxTfbs7BO9qpbiw8wipsFRnnKc0Bs+zvVQVYV
y28d6uxbnoP5iTB19usvsKjf/d+exv6GwdckUn7xBtjL4Ke5VlLzEG3gfJpo
0wR7T+empjswDyEc7SYGNRbYOJejfpbXAghd5JPce26NcVXtpIZxLsIkWdXM
p5y3WOL8Q7WejkWIDmIx8Xhpj5W32pa7dC9Cc/fMaoapPTaSHcvN3bcIxqeF
TPvt7TFmx8m/tsOLwFEn63E3xB77eMIqgWFuEfTFx6bNy+yx8Cuhs0/3FiHH
hOT833MO2HvTdvtJ7iW4Xv/IU6fbAbNYVUjAOy2BeqtRJc7ACStdvPzI2HUJ
pEdq1TmtnTCyWXKKGfclyOOVsPFwc8LiBqttBr2XoLDl3OfHMU5YfbWUYm3I
ErzuGKJyaXLCzkdd2Y1NWQLlTUbabEFnrF3ypJZc8xII32ItMCBzwZhE509V
ti4BJVnmPD2tC6YvUF8jhVuCt4F7EV0XXLBdDk9BoZ4laCTi+mV1wwXjodol
ZxlbApeD65oKNi6Y69hCweqfo/Vun1R3nXXBrno10SUwLcNn6Wv1v3pcsS/D
hopKrMtAfeyxkvesK8YqSua1f34ZJBsKyV9suWKUs2hNm2sZ2lQEcIqMbtji
3fwONsFlCDGmaaF/7oZlnPwU/OnOMtB+wW8EL7ph3OFvj6daLMPjYTaKW5Qe
WMLiGVCzXoYGJjR6nN4DOyubZUdquwzeccGZI+c9MLKNhdlXTkfzr5o2/Lzm
gc1o6NRy+SxDBaZk8+epB5bCpPAuPW4ZDg2XKdkyPbDzny/sfa1bBl7d5+do
dN9h1TT27lcbl+F0UDLLlsk7zMCtnTSreRlWXWjylm3fYT+euVLl45aByuev
yImgd5jUuWE2bHAZ3HJkBklL3mEagdG3ulaWgcXYTYjrnCcWZHvq/S79ClQT
y594NOaJCc3on3RlXAH1Pds0jyVPrPtRecgh8wrQcDBjtdueGLPQmxgy9hW4
mMCiEkLnhWUsNmZQX1mBmWBhe34FL6xWx7uFA60ABxs9V3eZF7Z3f++0ouEK
/JkzYP0v1xtjly5ZrzRaAZsJ3tD8am/sjoB9n/ibFVjnOjQY7/LGQmjX4zks
V+BMiWB4yLo3xjG8yLPruALZ3BqZ2uI+2D3TIemvwSuQwbkZdbLaBzN78fHC
hdAVkA9gjGXq8cHCVTVJosJXwKP+HaXSnA82ItrV4BGzAs+E5bdZKd9jFv+a
Hml9XgH6EB9TZ833WHRIidHxghVQtIjqj9x4j5V52Cu6Fq3Avex7nrQnfLEJ
azGB9ZIV8OugNyhj88WuPM5ZH8NWILqq9HSYvC/268JXt8LGFbCskL+hneiL
zWR/jDQYWYG0uDGL/Yd+mHC3fWUNKR4ELrQ4P5nxxzw5N7ksyPEQXnpscIQ4
AOuxsfZnPoGHm2SJQlkXAjCHs2aPrKjxUPz3E15OOwDDNPRmzjPhIWvt7rmX
gwGY0oAShZMAHqrIr6hGzARiSZebTbmF8ZBolv0363gQRnCQ7+wQwYNaEG+J
CF8QFs4kE3dJEg/7HTT99jZB2OBTiau9snjQZZmkvnwiGDMcvagq9AQPMzpC
zv8UQrBi/k/5w8/wkPp2bsDdNgQ76cbK5PsCD7R0VLeCkkOwn+cZpkZf4SEv
bYCgvB2CbehQvQ00x8Pt/dkbtZkfsHdTWzFzXnhI4q1WYksMxbquvd0Pe48H
+jP+G/pFoRiX1x/dm/54YLE6sUDZFYo1ci7zRobg4S6vOLEHRRhGbTBZdjsW
D4eny3SRUxiW8LtlPCETDzyJr6slbcIxZhXSMOYcPDz33fBTCw/HYvKlZD7m
4WGatENgJiccC3/39UtEMR7scMp/366FY74svsYB1XgwJFp5kuYYgZEduTBF
HR6cVOut6xMiMM/5zRafBjyYf/viZFcZgbkU6Au8a8WDoP2d22EnIjHrBzLr
9n14SKfwimRKjcQIBY5fNgfwQNyS9YSpJRIzZc3RsBnGA/WWDE3DeiT2euFC
sfkEHvi3Lhkg+ShM2+ufi8EiHrodBt5z/Y3C5IuKydUOjuzZYnD+5h6D1bKt
FnUQEaD56s9aioIYTMb7krEKKQE+/v72z2YpBpN+GN1yn4IAfOhqUdizj9i1
JZvQW7QE0GBoS5+4H4tlPfx+GztLAPzYg6Y4v1jsavHU2g0GApzUvS76ozEW
u+TzUEOClQAJyg82iZXjMNYLgswCPATweLru3vk6HovzMWz5fpkAPq0/5OJz
4zGG5UQXXj4CzBKPNHEdxmO0JVTjXEIEGCKzsS9KTMCOqy2mskgd2VPdn9ey
loh5l1zUiJUmgDy/PcdRiY2RsD8hZwACkFEc6/T/loTtLzcY0d45Og+buhyZ
6Sds7X0a/wkVAtjFDvaU+CZjhR9rKDpVCbBZF8brWZ+MOX6bnP6oRoDD9JwC
1eOfMaJ2trjLTwigbJ7IZvThM1Y7fsN29RkB6D58vLbQ9xnz/fNEtfgFAWrf
zqBJ9hSMmj6a/J4+ATgbLe1/ladgXTz5kzSvCUf5mKThEnUqFnW9q7zfmABu
8atyXPqpGKs2tc1rCwK0PpxLMmH8gvGlvh9/70SAkIC0qWOZaRg+/0upiisB
BtqovoudT8dy66ujznkQ4CbT9Tm5iHRMavFAMd2HAG/aBSW0g//DDvZYL5n7
ESBT/PJTdroMrOrUDRLxQAJ8+j6/LPMpA7snbF9cF0qARcpk/6DWrxiVbFRE
cAQBJO0yPBvMv2E49TxzjWgCvNUNOxfE9B3TdCBwzcYf6X1YmxQQ+ANjDjhF
9DOJAC/TuGf11X9io/F8w28/E2Blbd6fhjcT0694HUb235E/JN9gurObhV3u
9DFt/UqAShbqe9ku2djSVKp85A8CsOkfPK4gy8EyN6o4tLMIUH2s30woOgez
Jp/4x5lLAJ262Dmya7mYOOPBwFI+AUztD0F/MBfb4WXNzysiwPdUP7PU4DzM
Q1nLRPYXAZycj4sIcxZgd3Ts5CgrCUAUrDxpQlGIHbeKZO+uPho/8eWiM0kR
1uyZuxdXR4Do4MoT2meLsZDIjj69RgIodmwxJd8uwR6l43OutBAAdyjzJC6k
FKMvpgpeayMAScMGLoKoHBtoumJU2nF0n/deTNEl/cIShu/JenYTQCrarU3W
ogLTXTE8r9BHgNj8wL/SFZUY56H3zplBAjTwW+p4LFdhc6dTewaHCXCm16+d
9V4N9o2jKuvzGAGKmSm9M0ZrMXPR8QDjSQJwGyvqrpbXY8J3/xkIzxzp6eok
SrffiG08Zrm9M0eAb7O3EsjKWrBiY0nWqoUjfb482cnhxWEuzo//+i0TIDel
YqCgqRODYNsuVQIBvPCOncOlPRjJp4ifjGsE+Lu8KyU7OIDVZ+f4TWwc6efx
+MEI+TgWUI17lfGXANtT1sfffJ3BVHpWkOXu0fs9YCh9uonHaOcoma//I4DF
Wdt60+UD7OybWLO7R/z//4Eq/gei8PcU
       "]]},
     Annotation[#, "Charting`Private`Tag$295479494#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.010996809905676965`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.010996809905676965`, 1}, {-0.01, 0.01}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7855961916714983`*^9, 3.7855976271648293`*^9, {3.785597688326222*^9, 
   3.785597716168944*^9}, {3.7855979786645727`*^9, 3.785597985653661*^9}, 
   3.7855980541028843`*^9, {3.785598284928212*^9, 3.785598296311895*^9}, {
   3.7855983348308983`*^9, 3.7855983399943733`*^9}, 3.7857440556013527`*^9, 
   3.7902512090134077`*^9, {3.790251648198471*^9, 3.79025172881872*^9}, 
   3.7902518144934673`*^9, 3.7902519284204397`*^9, 3.790252443030683*^9, {
   3.7903508865675707`*^9, 3.790350917144156*^9}, 3.7904883549558363`*^9, 
   3.790523185379985*^9, 3.7906976051530123`*^9, 3.790697637162858*^9, 
   3.790697846259852*^9, 3.790703058361417*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"7529af3d-7bc0-4d27-a693-91b117a49649"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DangWxl", "[", "\[Eta]", "]"}], ",", " ", 
        RowBox[{"shear", "[", "\[Eta]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DangWxl", "[", "\[Eta]", "]"}], ",", 
        RowBox[{"expansion", "[", "\[Eta]", "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0.2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.1"}], "}"}]}], "}"}]}], 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"DangWxl", "[", "ETA0", "]"}], ",", " ", 
         RowBox[{"DangWxl", "[", "\[Eta]in", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], "*)"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.790523220578676*^9, 3.790523298500903*^9}, {
  3.790523328854651*^9, 3.790523473285123*^9}, {3.7906978984651537`*^9, 
  3.790697966224098*^9}, {3.7906980167396107`*^9, 3.7906980186390553`*^9}, {
  3.790698049930018*^9, 3.790698145961116*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"50dfc92b-44d2-4290-9257-907bec1da97f"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxN2nc0lv0fB/DsrCJZqSQeZWaEjNvKXhmJyAhRRBIlUqEQRcoquyhKskdk
RamQmTQImWU0jAi/8zuH6333T+d13p/r85335c7z8DmcMj1GuW7dujjqdev+
//fPk3PhHBPcKo8MLEf9St4qy5toSfDZ8qg0K15yTkl7qbx+rsaOvmeryrrV
P75M7mVNNtsJ50eyj7ow7CBszVuW51635hrlfuuxuZu3+Yh83+iz5psa/PCw
/aKrgADhPme7gqQlgdXxHyg/EHHtP8UgSOSVnSd0D/bDreodlpWduwj72dM+
jerZTTxf3t1aL/pGiMhr9Xr4FXqECbst1Wezd4gQjk5zMO7sFSWcpXiG7Sv1
HsLJD+9S+66XIMyT1KMumCqxOl6ccgbDA6qdkpKr+U3l/ribb6ia4bmvFzst
jkgRPvIjf6fekhTRL7aNkUsqWpow11H544p79q6eT4TyCQVLppx38IHXQieD
vWSI+qTzp6ZqOGUJC5SOLzlWw1UTR1bcTsit+rLyv/vunqHb9yGfEfHLqoeX
UxhffPKRX13fWWWanyPJp4UUiFyS58P9W6PwcZWkrLp4RcIjbHMPL5gqEZbv
M3jdqqyG/T27/WfHA1jonsUVahb11fGclVm5emQd/NRRHxlc+WMIDsoz39GW
qkF476e5A3KsmoT9DenCG4Nht8HpH64ntQh7eF8P8B+AO3ZxjRYf1ibsXOT9
lbsd3tkWtOWhvs7q/lsrx/7ilX3eqkPkLBVKM3ssdFdtrDy/69Pscq8ukbOx
hPn88dEjbPUtg5T3C163p7Mm+qI+4fHotnSnuwaEWzLvk8yFDVfH11fOrq9Q
/FFnSORFYfPD6kZGhGUOXpJSGYA7cxNnb587QDjm7a4TO+iMCY9eNSrYaQYn
635lm0uEuxwNHjD9XLOqcu7BO03iiiaEa3cuJfdeMyHq24ukLOV7YJX7RlGG
28ww35m997vcYGOpfqmDL+A7ne9FKE4eJHyq+bsp83M4LFJu1pTTnPA527Ob
0k6Yr94fWeVSZ8YNOg1ruYSyBauISxfXIaI++JjVVK/PodV6QeV7caa3BN8h
D4kV5eAQsiDMRCNdw3fJgqh/QBW+/L3Xguifc3YjZbuCJVHPW+0nYBcPO/YZ
yNz+Y0k8P91DS+1henj1PEWUnfOF7KfyDhP1GcdluTlZrHDf1dM6JW9bE268
1hwSNwMvN4x7pVkeIXxa/K/s/R02hNU0g3bYldkSjtNmp9lPdZSwN+W3j3My
MGPjE+ffx+H8KSWTqncwF+9t3fQ0B8L0w66B4Qec0H9uz1e7fhfCU8VUk/Wt
pwj/kJM8kUjvueppEg8VZVqqKDxbFsN90sAT+7dzTwOVB3LJy2Y/n0UhT58p
ionOh+/JUkl3tsEbihd5kmdga/ogCx6O04S1LyaxCCrAn7wkdotegm0F+Pby
pZ0mxu8sNeZ6Wo98k7m5XuoIrHA2Li6XwWv1vIdJUldihrhFvYhc/NNdS2ET
2N6tviLOG6blmmPbmQB30A1bNFWQ5Q4aF2P74D+GDQEBVGcIp9DOqZgKwdXn
Fwey9eFGek7ZyVNniPn9fctHMolBvjTaMtleRtbvwauS5E9w+IfPolKU3oT3
L99/sHEXvCX9zXkLHTi11vsjxRl4L5/9Rrs42Jl/Pa9oPxzeMSpWQ+tDWDPM
LdxLdM1fSTs89ovsN0U+kM9PJ+WL/NHl6s0qKcj517/Rc62HV3xmUwvH4cD5
OQYe1rOETasCg9Lk4FfvKw5L28PNrQunaa7CDMsyUt1PYA3hRf6BdvgQQ67R
0l+Yw2irkSzfOcLZgn+5buicI+av9nIuk8Lz3Or5vCct2L79fjse9a/4d/Xv
r4YbtKsusI7AKcv7i/9t8F19v3wiuVxwC6SR8yX6Fc2MdIvY+RL1F1JPPj0V
Chs8zVlufQpLWltXHvgAZ/SI9H1fdx7jHW2zyRQ6T/QX8T3x8Lc58uCxjc5O
QchZW4ZuzOUiX1FmYnvyCXY4lDF2Zb0f4THxdzSXZGC16KN9PVGw9EHGqwrP
YS+9JtXn43DyrQZaBy7/VbeSekfDUs/o+BP5+rihQFZv+OgtI96t92BpId/e
uGW4jN5/lFbsAtHvt9nrPHX7CzjvR5QcBuHwZPFrPr5y1Gef3lzLOYr8Kw31
6B7OALwfEsvDT2jBXNaHkut9YAdhfVv9mYuE79p/0W3779La93dSYcI9cd9D
l7C/A3pFu8tgYQdPktQYrN0rqCPOfJnwNHtQa8d/sJjPx/xrypeJ/nfuqA4f
sECezdfgIugJG+f4SjBfQ/3ABzcF6ntwqfbTS4wVqOe5Y7awsxMe8jiRoTcB
X3Gl8A2iDcTPmz2ip97wwmJ2C8E75eE3t19MUp6Eo49+2nmlHXaO+21v8AO+
lyr06hRdEN7HQbnpTDvgm9e9EqgVYEupaDemg7D/5y3+Xqfg2JUdUfphMN/l
wo6ge0Gr6y8hJe6VPb2+AnlWUVlDYgccQXW8SekH/Fng9OXv1MGrriGVbqX4
8nBbMJEzTmt8OS2LvDjjxAXdA8gvqiYVix8PJsbXfEN/hS8Qualu3wDfXbix
Qbd5TyH62eicVdZvCl59n1SQdD9GS3oPoT7k6uv0R8tw5EG98EnOK0T9L1O1
YRXJKzjP65/yUvSuEPPh2qA1xOCE/NJ2VV/GeFjljVBzah58eC7eV+0NzFJS
6jM9iH72dO3Ujv+Qa7MXabRxXSUcUzJGSpC6StT3Vj5WkNRHLms3ErrzGLzQ
yZXk1gzz2XbXpIzAg9ZylH0UIYQfb7n5KkQWfpF8u8srDQ6Wt3lZdjaUcH74
kuxH0WuE/5kEMPzTg+1ZPCNFT8CywgWVbqHwdFpIF+khPEYbt8JeD3smTNMF
DlxbPY/HpEp+pnsL68IJ225ueBXEG07UZ0pSlTaxRxAutk+LYWO+QVjQOjV6
RRS++DPN76/BjbV/D5OkqgJ1KdyRV9pun+e4AXOdNrus8ATWjFv65Na85jTS
1tN/qR9PIP+4c8MeK6ZIvM9/0pPEpeFXlT6bKozg98I9lMVRsNXmHj+tvEii
v+VR6dihVuRJE42VU1Nw92jXlym2KMJTWSvem6WjiOc/JDp8GjNDvjv8VEOT
NzwkSSX2PBb1rw4uMFaUIGcvTHvi3gOXcodw9s3DgwLjiZTMN/H+Cr1gnbTt
JtGvKfH4KyXxm8R+LzQmfR5URj3LUQU1F2N4hSV+VtMe1qBQmFl3Gq4r6r1Z
F4h+HccTxyVikEtx7WFkvA8LDzoajeffXL0/iaQDCSbpLxvg/UN13fmdZP2X
nzSTOKMJn56gvByYDJuypD6+n3uLcJrGuoi8gRjcj2+e/ed/w0ano7boUMcS
DhtZt5eHHaagVR16Iwifv+K5/E4W7soqe5SvHbv2+xRSUMGIWIIl8pCMe1eD
T8D1i4FMET/h60HCZ9Ip4/Dzx7YtrpINznHMZaSQhR+UiVsKa8P05WqWlpaw
yKXr9BEn4LL/ik7U+cUR84t4bXN2OQJ59zVxMZVkeFfI24gruXDh156olmo4
vHJZdlsbzKHSd9FzAFaL3HGs8Tfc2uEyIkATv3ofQkjX5K2oQjjisd/jSSXf
dyHXZu9aNpdHPjb6sKdeD66Ne6ax7wicblxAynOHB6qG3j25CS9+dXOSvrfm
y6SNE24Bzwthse0RXAYNqB/O95Duew83jUa7W25LwHnvXxik2AMb3aFteqqa
QPQLYGe9cskE+VObtBEuJzhj7AfDjsfwlfvXmn5UwmNf//x43gLPGzapuv+C
g2SDT+lT3yHGo+BI+S3GAXMZ1r3ZvPsOUT+lEvtrRR65fmr7lJch8sZ4uYVx
e/iCzU9/jzOoP8Z5Tng8FA6hM9E7nYh6PQcTt6VcePO3c+GRdbC3Xn2GwHv4
kIVsafUYLN7aXGW3dGft94OkLf7hZdSsd4l8fOfJ9FwB+HufvX3oGTi5Zv6V
bihMmVzExJp4d/W++5PkDsaIfMlFrsNzwDavFt7C1zMV2A3PRtKH2o7Deur0
/+3clIjPx54qPkZBuOFU3OC8fCIx/4alaJfvhsj5uvIeDRyFaed/Zff6wPcZ
RUv7ImAL0f7Wb8mwSPqL21MF8Lq+I/VLDYnE+lrHD+xn/YjcoyVNSYsyifCJ
junGEVO4esw9i3YG9vQI+WZLn0xY1bohuWJbMrEeiSXhtq1SyPkelPoHacEp
bueiNRPgbQFNDrU5MHWz3h21Wvj4p3qhA+Pwtwu1AZ+X4dcCY8IebCmr9iR9
M1ASp96dQuTxSk5tMSQ40zFJr/cAfJTLppXPETaVqWQtugaLd55vpEyGJTzP
pxnkp6z9vpgUbtxn/vgF8o4uo5//umGfOoUsh3E4tF+k68USfPuQo3C0QCq+
77C/NlySg+1937C566cS6/ONeuA2YgP7KJRXGp9Bff431m3tV2E6c15z4ztw
rGw8f3sO3HiYPsSiJpVYD/0NGr+vHcib7vMsnRyBw89+YlpaQD3DKVczHbo0
Yj4tn/W/sbGmEfU286+LHbfA1kkxfxQF04jnCx5ua18WRy7y3K7EbB/cvt5z
/W51eF3F8f8u62O8e5Qc/V3m6NeSpXjsqR3qmQRcmUNd4W61zfEuZ+AUWQt1
rQD4aHrvPcFQuDDUq3R9NPo31b/84n4XeXXK06fGmWmrny830q0zunzluci5
H/T9TS+D/+4rKPRtgnc8v3jL+T0cLpbAc+grXJH+0lB7HGaVbN+l8Afj/ZgN
yhJfRl5lfds6Y3064RfxfxK2boKH8jRpObbCVgFH2FkF4RFeigZmCVikZpGN
SQHO7FpkuK4ByyewRTAbwYKCtXkslvBlN503PCfhg7wTbJoxcArtoW4zjgzC
aV0LiTRDDwivP2/ranw7Gz8vsjijS0JyCLekZreqez3F/c6xdxEJgCs1Pq+w
hcHXSq5LDiXDgscazoW+hgM1U7WPseQRXll28E53gQ1cD9RsdodjpdsXQr3g
rSKm8h4BcIy9SpP8bbjTauBCTgI8wDbY5pQCX1nJTIy+D1tXParRzc5b++8L
pKqNkzZnc5GbJc7eHS2Eg+prGNjL4aL7tAGbqmHS0OtnyvXw32N+arOv4UEH
ksHOd7BYZPn3253ww4aTuofHYc3r0+ZvpjC/lvzD+xVn8lbvpyKp05SDNWcB
9fsjY6q2rsvH+/2auv4NGlj+eGTJEgPMYD684s6ST/Q/NtyfIcSB/Am3wuQL
Hpi9sDwimw/O1AhYjty1ZgmSftsbTW8x+J/dqP1hadTbSitKdsnDImWPN/Kr
oN4x80s6nSbyN71z1D/04F1BqvtajVHPp57SdfwQLKDX2yZug/obFpOP/R3g
V7tyueyOw/c+Vs/OusMlSawK78/AMU7/BZj5wUv207XjlzCezKSEYPNV5K2M
tmZPI5CPMVTpREfDB1Tjac7Er+23IOk9tcS1g8l43r6spV3mPnxSPSldrh0e
X9dew/EB/dodW1JmviB/7iQTUzAGP2PmjNacgmM30V7wmMHz1um09AaL8PDn
JVtvigKi/kzQHRNaOlhHvpxxkAkObqfNSuSC6cUSTtJLwEGzZdJ3ZOC3gzrX
qhRhZq8vp7y04UtuGyb0DWFq7htb/jODfU+lzS1ZwptcooLf2xYQ+zka1D/l
6FRArKdJcWtmiCvZfCY+n2HzRP3fl27nZc4iF5dpcWK6ANewbFRPCISNp0Mn
qcIKVMT56DdHJkiTqg1k+KNuYDwmeyYZituojw369dcrAbYW4Nh6OBnjs/fe
umt+Hz5o7Nd+OQv1g8ZO6+Ry4ey+V4oPC8nWz1QsyFkOc2fG1oRUwRRa/P8F
1pOdp9eHZafXcJjFhnsdLXCEMPtI+Df4lqL34NwYnLHj01beKbLz/69AlWMG
bni/v1VpAR65z7VvbGMhYY7E2gkJRbjiV6Jygip8ZX39nhXNQmI/oi4aBn/S
Q/7qBRcDqwnsPbG3WvIQbK/xTCTeGra7nSbzzx79cv0YBjKdkXcbyfM2uMEW
djVLu0/DE/EWEVP+MDWb4Ydz0XDs/i79QyPwW8kvlPwTcMDPUOmpX/CKfsvy
1WVYLt1q9xP2IuzHRWe+/v3wN8YM7kxduKUy69LxA3ANXampiDlc5sp6a8Jq
zTtI7K4LSk/tYS3B/bPlznCKY1C7xEk8fyWH31jBC/nmcEfmvHNFxP71jupV
fLqAfJtr2EB1MJ5nc3rjMR5G9nzoVeuHkXDEb8EnjjGo73f+6cB7Fzkpe9eF
j6mwVzDTfEwmXN440GX0GM+vmExsXp8PDyx6FNWUoN7p0aNC30o4SnuQVaIO
zuKReJr8Cs+rcVmMJjWTnQeJy860A/bcNyBJ1wOTupNGPb7BGilsb/nG4c3B
qbSdU7CZYfBzpRmy/TbsE2tchN8ZHm0cXldMzK9fqt8+jraYyF8wV93+x4hc
VdtS6SEr8smngn5SXDDF5TOsRtvgp45HPmXuhlu4Zz3GzGF1u2U3b2v4su50
+bI9xtsWyW0Z5ozcbeKVJutJ2ENEN+jOafgL63cmvnNws8fit4cXYKYtjfTi
QejfOJ3iVxiKfNPMhq6LN5BLZNwjVd4qXr2PHCTnQ26RKglk653lyfRPhs+K
sTBq3Cebr6zoQ81c+BhrxeFRmhK8/xRXthxhhJlDpzjescCaDhsqC3hg3+ke
R34+mCo5Yv9twZLV72c8JJW501aUoshztNwFSySR59FxivTKIj+76DWopwTn
bVBuLVFDfaxkupaLNvI68yMa1w3gnb8M3syYwKSPfq4vj8AuhebBYg5w8Y/g
QiMX2ErxqLGyewmxv1GFD0dtvMjGZy6uqD2H+u+qMRUCAbCMQsxISBDsN0Wl
MhqKfm+PSNXq3ECudNnDPesWnOVMt58uAe7lMlA7lgx75US41N2DM+TZi7dn
wa8G5IT8nsB7mtRfdBZg/pLri9LbS5Hr/BCtfVdJdt5z2/iaamHa5LmaVy/h
IEfhtLq38LkWwarKVrj/hXJR7kd4atZk3rkPXqSsT0n+Btcr/fU4OAavRMhM
Nk7CbV6MKhd/w8vdtmn587BAHt35Y0uwuAr7DwvKUsInHV7E69LBSh+D/BWY
4Kdv50e5OeDlrZwG74RggU0Psp6Jw9QTTfsypeFvt/4tRu6DT/3K/HmOVEqc
94NFeW57deTD6UJe2tqwdv/QopgBXDHEY29qAovtCkudN4e12rIMeazhfYtZ
K9V2sPNFKp97TjBvdyvnlROwxY6gEScPsvH8wwY1zsB6DOaMAr6lxH2pnrO0
pQzAei570HzuC0Q95f23wZUhcPXbreYJEbCbkKu4zE3455iAl2EsLORYVSl4
d80spK7PD8VXUuDBNNNX7++jfh21RMiTLDjUJt81+AksyaDjbVmA5yuPH7sn
Woo8fcDvz0oF2Xl/+XuivQbOe2tGmdGwtl5a0gTvQqX3G7LzMrW9o/EOpuj7
GcfWCdfpChb3f8DzoZzuv3O/YD7r2uVM/AdQP8k036w1Apda8p5g/QEzvx43
Uv8J97nvFvaahTe17VxIW4QP3hCoallXRoyXreTrs0hTRuRvA4/z7mJELkqr
WmHCgvz3eV0df3b4kWSmVroyTCU1PcdzEz7vopORsaecMA21KaXCXtg97pFx
yz54H/9KxW81uNvlffcVLbhXubB/sz7ccoiq5/4BWM1173PJg+Wr95OR5CtV
dKPKEvlLr2ldPRuYf+LQz86j5cR55AgJ3ExwRh5Te3hl2BVO02kwzzoFbyWJ
FP45g/FSuTvHzvsiF5VSWL98Abb0fMscGAh/ot/VFBwOn9NrDqaKgr+cO7Qj
6DbsfF0ifSWerH/Ua5oLSZj/nStRhnNpyJtzWvbsy4Sbmr/dEXyE+bK/WE5K
zEX+nYZSracADnzBM21Uiv7Gy7MXX1QgP3REdHGpGnb6obd1oB62UrNz2vKa
7PwDM03+tpGdv22Rf/YgLDt9NLKd9hnO+4BCaB3DM2K++gnhMtEbkfMyS4vr
c8Eluzop8oXgrVy3gujEYeqR4o4jUvC7B2PfqBThO+E3jm5Xgekyv0k82A9X
3QqMmNGGJdhr8s8bwHKJToz+xrBTYYhi/kFYX0GGb4sN7EqV12VwFI6qOkxT
dAzel6lanXsCDnNv9mPzeEach2fosUVGL+Q11PGqHmdhnsoPV5384Fs/uOmi
LsJ1KSEKYlFwowPvneFWmPSreXCuE+5YUJ+h6yFMihKcbeL4Ap/gtHMV6Ec9
p99Mk8QQTEMt+UdxDB6xu9anOUG2Pp2zkUY/0S/+n6/Pzpm19c4qxeX+2Hvk
L+pPJmgdXPiH/KyY6aATRQWRR9IIH3GhgYcoj8Uep4d1kwa1XFhhE6e5Akl2
eGfO9d/23PDdzbzx5nxw+WURaqP/YM35w2KaQnCGzc5NimLwseMM+g6SFcR8
k9/YM/HLII+pfLmDXR7e8+ecz4wqXKRSWDSoQTZ/y9bHrTqESePa2laVBsgV
OW9WPzBGXtjCV/XtIMY3FhWOvXEYTok/LXrEBrZI67wbexT93jEvXI8/BtdE
PBmgcoUVAhuf7fOAIyR5GE56oV+U/Py75LPIxcN/JFP5w8EpiZX/LqJ+XI1u
QCgYeVuptr95KCz8+GnopQj4d1M0bVYUzClwchN1DNx9YuPhP/Hoz2pjLMKV
hP3R/Cd4gyYN9cNm3tutM2Cf0X8kvyzUn/ql/jY+BzlP3meZS3lk8/tlu0Ou
GPVfhOqWh8uQUxxTj5R6Dm8L2PCNrRb1pcLRM7sakEu/W29F+xr2l5401W/G
et54eCRbtSEP4xwzOt5Vsfr+XFSKlsh39u5BnlfA/e3iF9j3oc/L0H70e8nK
xRw1hPzigJvm0TH0a7h+oT5hArlDaR910gzMF1Ejm/iXbDybj40JS2TnlUDD
GEVTSVjswPPyUHqY4tFCw0XmSmI+//pZ9nizIrepC2NoZoe3lmxmt+KuJObn
8jbrpt42+FS2g7M8H+rDE2NjBf+DH79OfvFmLxwftTHr6T7Y32Cy/5YSLCij
anZQAxbfZnVNSgf+cl1800YD2P0Xy8TYAVg6/uev7Qfh/O1W05YWMJWE4oEJ
K6y/K89N5rItbHbK7h6rA+of/fwYqeMJ029epDl1HdZgUEy4+wI+QjH9xFDs
OeEBlaHXDRKwAPVnSqW9a55WmjDfaZknh9xZnfb1TsXna/8/vZLHl66Dt5WR
d0v1LVCo4/kzRp7PPDSR82l03+rRQe4h7BCsboB8kM0uIvsAbMmy9dEGM9Q7
Koz0nj5ENv/MDUIdh5EXOX8NlbKBzyY+WoiyRz2dZcXl747IH5fbc2u6INf5
MPoiyRXmaU6/9Msdrivp0dc6De/K792V4A2Hdy1vGj2H/mFaA28Z/WHBi2oK
ORdhlzMbdzcF4nlet2ydzVfhm7uHvK3CUM85nLDnVwT2f8TKb+JrJOppmD33
8d2C5/T2jSYmwIsbH+q/T4RnTn4s3pCKfnuCdwhq3kMe5/Eq8Xwmxvc23saR
k4XcRdsz5vNjmMpjAwfjU/hGv+ZduQJYT7A1U74Y4/ls86UrLEPevz96T34F
/IlTsbSrCj7bSq08XwtHaLpUqjbApnsltOQaMV+lDgXj+2/J+hldUfdogT0k
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
L2Sf//8BY+lZ8w==
      "]], LineBox[CompressedData["
1:eJxN1AlM01ccB/CC23BqlcIUEJqtRGFaxz1hUo4Jg1oBATNwIkhQW1RYuWdL
waLgAQIJDtyAcQhDkauooyLaQkHOthSVoZxDQNiUmokIAdEdCX7/TZrmk+/v
/fre+//fo4VwfY9okkikrH+///3qMXlpi91SJ9L/HxHjUfpM0OH3JpH0Fwa9
ZUo4ch1tJ1WJeo5o0TJWgbys9OqnnXKpk8L+JLugqI5x1LWiy1SOnDqi7jvV
Bb+tf+Ay0An/OF6/1pLgCW8Nu+QO+Iqwl9zcDr/TsS4xJljLM739cBscqsEW
1rXCBRyzE2/uEfr/NR8nbIFXSx8WhjbBTYXiD/IbpU7XPPZN8esaGN063VK5
FPlmW55qQUJYP7nnlCHB9vSlF1534S+jspZi7sCfedpS6m/Dsu81NvTVE+pn
nh9/eQtOUOStpInh8WJ9L5s6+EH7lieuv8GVFfQW35twRhp/JvDGshsZ189E
cdnXkZvFx14+WIvnt2e3gsUVIV9bNHmVW0PYzxkDn/Bq2LlIujO0Cv3deq0T
givhlFW8XGYF6oO3vupgXiP8//Rsv105rE63tDK5Cruv2TiseQXzC/FoFM3/
SuinaPt9qBT5xc+jnBtLkE8ZG0wXXoZfxG8YFBTDG0XNa/yLCO+bIT/RrBDz
9//wosWKAvh0NMe4Nx/1yc6OK7LzkEt2lMkicpEHzjVxd/wMd1Tc/WpTJjz0
y9xkZzrc6t2foHNheT2tjI/EIVV9qehvsyovec95rPfEcGvOn2cxPq8j6dz+
M6iP8qkPUCfDykPHlMdPwxvuxMxOJGH8QcdUyi4hfF1tHqhKhJ9kfZHvnEB4
XkvUC1XxmG/XO5NtenzCeb+kz/sjDvbl7d7kHIv6qXy6ID8aeVpSitnuCPha
QGaK8CjsxqEm3uMQ9ksrzkiLDc8OabsLQ2AG51KPOBiu+Tjy7bMgwn3nJ5Ub
BRLeD16JPStg+fx3Mcq5jqyY7wjjX4vmcv3huAhDF8m3cKJuAX14L0xp3ida
8EE/kdFxla434f7S+WTE3gNuS5vqYrFgW7HA2oFJuB9Ct4YFucFhiw+oh1zh
8FPsmr0Mwv576e103wGXrj1zxNYOjrYhB5BtYGX/AfqMJZw6/uhcrznhPrGj
rHYwgweGth2KocPi2yGTnC3wLo/cCIYpnNNgZTRgTNgfRqtEbQDTptnRPXqw
KXVClb0ebngmuJ2uC/POs9dbULC/0c91ux3WIV9BynalkAnvxw8szZqVsElL
mXnFa8l7CyLuc/mvYL5+6bHVL5etYpSckIzXvUA+1OjodnCa4P3r20bH4FBl
465bo3DmO3qw9gjcEZCdZNUPb/9GOCbpg/tkNpuZvbDT07Or1PfhyAhrP0sV
7MoKpvUoMN/DXhn9nl1wnEs1t60d9aM5CyMOrXBebNXW2mZ4YZi0h9YE85LN
PDIkcLicS5tvkLw/z4NvpPzieuT7RBQfWR1sIB8rN74Jf51Z2XeyFv5Ju/Tx
42r0M92iWWNRifnrHnjrl1yOepm6W/WwDGb2C3w5pagnP1duDytG3sw7SrtR
AD81L//bIB/+ByGGnT4=
      "]], LineBox[CompressedData["
1:eJxN1nc4Ftz/B3CrEIVkZZQkPImorNypRMnIKCMqZCXJSMoo2VKIIuI2MsoK
2bNkVBQyKsp8jBBRSkm+1+93ec47/3S9rvfnfM7nnMN9J2x5Xt+ajoaGpp6W
hub//jV3H9ofGlWtQvP/P63KI9wTtcMR1Sqvdl+1oSY1KH93b7jMF/ZfTkOT
khjxSyMU9SFN3gfcg5Gb9Dw1TA6AQ60OlE36ot/EsEDbxFXk+gpx8qzesOIn
h8b+y7DbyzWjeu7w1jV3ddwvwCfDa+tLHeELl3vbO85ivtmwtNrPdsh1Lx69
RW8DV+i3FHyxRH2OrGmTqDlyjdl/dsmegNcK36TuM/prvluvC5Q0/5pnizG3
zCH0o9zX19ushtz68NXDtCrw8E4RxonduB8Wb/67bQpY72eW9LtwF+qranWF
z8nCXR1SFBdpuEgzg0dLEl71NaR2kwQ8d2015bso+qtr2QU2bELu4daaELUB
bqr39D0hAJdzpFxp44VljZzzRrnguMei8xlr0f/j4RlmazZ4hR3TsBAr6oMX
qcGdTLBl0djX4BXw4V7eLYp0uJ+6Ktka9qUqknOyV7JZL1SR/mLCq0/KzSNv
DGx7wjAHP8+eOq0zA9+2lHPnnsL6oOvy9HnjyIucm03fD8Gf6z8baGfB/hlf
3UwyYOn1Si1S9+FCSfdVNomwRfYbD5t7Vcvn6VKOqhWjPx2D/M82qxTTKDjj
gJuRbji8ufig8L5QmDH+7HtFe7hW4b2+jCgsmRX4pHojTBU32HJIAD40Kuj3
igf+9XNahosTlq8WE2xeA8cbbzJWW4X5B1pMa7+tQC7UbZC6lRaWo1d9fPd3
JfFTpt35tPNwfzV3gs1X2PxK4ITuFNzjMaC4eRyOMvEb8xquJPsvXXD0aetH
rt14fGK4B7nj66u2jm+ROzsdLSx+A7OwT96Rfw3TmZ3k/PMctudjnb1YBz+p
vn3ZuQa+5dzrO1gOH5GUTYkugl+ODYVR8uHph+L9Vtlwc5sOZ0YKXDzQNvs0
AdZ1W5X57i7Os3qsUX4iCv7z/V3cz7BKlUwt4zGP4h5lDs5r81HXsV7oSzRj
YQBs2rrvOcs1WGPDm6FTXrCtjbZJnvtf81eUii26/LV/Oa+OuiP2i3Bzbgo9
g/xHXQP1lRXW59XzN7KYI8/UclVVN0VeEdCy1tsQvmciuzNPD/UOognpfVrI
1VxueuxQhZuUFoSi96CePSc58JIi8hmb9tpcaXihXCdrih+Od+43nOP+a948
q4PzHOin593l+YMVOdsL+qQCRngs0SF7nA7eE+Kf3rtYQXxc2bn/9TzMH/tN
zeMrbJaWyZY6BQ9Pj9CFfIL39jrfO9gHt//J3iPcDasxXVn/o6OCvMcemu5t
L1oqyPzf1IrcY17CLP30PyzqsZ5rZ1mm+BOYbt3zWxPlcM3EpqzMIng0omLO
Og+WlKYWv8+Eu+nOrm9Lg4vbLWd9kuDBMQ4fVw34he1kZokqrGcVH2BGwXkW
KgclDsvDWRXf5HfIoF5/8pvbQ164oTSPt3SknPhMzupug6uw5+cJP5mUMuLY
gtr7fPdg+Q6/xd9R8K2kBOOiADhpaPjapB1cl9OslmsBvzWSkz97HC7MuHVU
xACu0dvKelnzP/crCzxuZw04gLzxYFSqFOWveonvFu27UH9ez0bVVaqMvGdO
vdbBNWKoX5fM4ZC6ATb78eLLbV5Ys2COmZ4d1n0XE67BDL+u4xN3oEV/Svjw
O41fpSSXkJZNrp2Fy1X0FGImYH7b305pQ6Vk3m+Sim5sH5ArSUpdv9BRSvoH
veeyknuFPKbvcZ90PexKXRAIrIL/TT9j9bYIluszLBTJhekk+VnOpsNO1qtt
c6jwh0fRXSLRsMn3NjGRcMxjVK8VYhiE+Xl91D/5X0X90zR29Vx3eM3bqClV
BZg78dy99O1YT+UZfionDls6eoaKb0R9elmskjoPLKjf3fmbDfXdxeIGfYzI
j9lpzN3+UUK8ojKO224a9sqs4ZIbhYfrvn350wvnMWeFTHfCUR1eO6+9huXs
VGOVGkrIfVT607ZPVSH3UdR1VSqCOfLpVd7m/LU/3771rOlwZM12J2UqzMCm
PkEfDZcIagaGh8HrJgNUCwJLyPk3LUW6tV7BPJuCKb3+F1EfsFNJdskRVtjy
sYzNFlae010nYgS/E2NtXisPZwvsC/r8uJhY1WW+3imxCP0E1jrup39MLPVZ
N/X5fAHuf/sjbY0pmK+Q1a5uCG6fODij+L5gef4R5e7YPmWZFuQ9ki8OrquD
I2lOFrJXwDpJE2y6ufBBc/t2mVRYUq+TafEuLPGoT7AjDPsFPrzbKuCPPGN3
OQ+jCSxccmqP0MN8fH5HU+OnEuADIT+3lEXC/u8Ee7yD4AGN8bFmL3jNp8b8
jvPwPpYv3Q+sYc6QPp9FHfh+a0Hu6a95+L603V/YOQonZf+o2fchj5yn18aq
JaMV+bMw3n7Gerg0PGXaogxmaAxbKMqBDyzZ0jKkwJy9i51Fd2DbUbqZm9fh
Bsa2zhdXYPW61MwlF9imaslB2jZv+ftpQrm9yGK9iSnyHxdli/7VQe7isV0y
ThV5u9KKb/zysMbbR2N/tsKxpScs1DfCLNOd954xwcanEvNnfz6CR1yP6A/C
X6R1WdNfwm9edN3XLnpE5jES09H8GYv8jrl5s4kfXBVmMXTHAFZncVv0/ppL
3Hf+46BJD2z2a1W+xDO4eU/i19RI2J5+9oSuByxrORA/bQFLT5hk+WrADFEH
/Jllcsm8O70DN/nzIldoo7k2u5RDXFQXsRg+Bu+4xmGf+TqH/P7IuxuNfy1C
foZmF7dMAqw+fGnMwh/1z4cnTQPP/pd/Ua5aa3yWqg+HjXtxZCpifXXsC+on
YTjv5DhrPCMsMpM4+Ww6m7h2bHaErwP2iUh0kKiEHUSVJMdTssk83LUuJ6gh
yG97TP5Sc4LtvNSX+g3hjff5rc9TYNcpOrEZEVjbKFzFZhX6p/ofefj6SxbJ
07hfn/znLbxh9Nbxy1XwpLdgTMV92H1has1MCHyzzqeSzymL3NfR4kNxuwyR
Xxmg2TuvlEX2X5mxp1V9E/IfGaqCykxYz8a9zX/zVCbJvftNl5baYWeuj4JC
FXDJ0MA7FSo8P8dRcCAgk/T7V+ql2qQ98ieODm2BuvBSqcqRdXKolx8N6Dfg
Q54bTr/S//dDYr9k49LUPvjNajW71ho4x2ssrSQNNmIIDdgVBL+dKz134+xD
sh+LdmuuqybyAcvx9k0y8OG90eFdnHA2v2K8x/cHZP3NLp5xga4HJHfhWwyJ
qoBpM7pNmah/+cPO8FpL2Fgo9KW/OtzIl6JDEXtA3qtY6mqLJTPy/XqcZpcm
MvD+SjcmvV/B6004Lrs+giV3xed2R8L25hU2Uq4ZpL+YogqzuyFyNQb3is27
YOVtk6PavBnkvMcPexcP/kwn65XSXDRse9JJfYpn1d2eSnim/1C8ChUWb5zX
jLqaTvqZSqq5mFvCkymy4cz7Ub9R3zakZDPy6idsu3tXIJfqmjQWHUwjeYlG
UM32hjSSVx3zEh8IgvmqmC8k2cHhD7hdJNVhfZFTbJ8lYM1V2joeq2DzsQuv
vo+nErNHGflbNqUu38d35fxeR/uqLORjFKaNztfhUs7fyXsdYIrZ3kE7rdTl
z98FZabcY9I+ksjNHkb4BLLClZEhe+dC7xOH8D7njg1Kwf23OPF62sOyp076
KB+GHWmT51JY4Q2qd9aVRiQTc8fEBv++k0R8gkfkx8mL8HrXO8X5hnCy5h8m
cR5Y7dCwSq5UIv6eWpkuXJyiEj9ubmkSyqWS+2ofUZDPOIec3VwunW0bctsb
2UzGkwkkNzzjouOTBav36tkG28OfwleqOkkQU7ZfO23nORGP+XzzjY4mEVNW
N+Q/s7ZGHvSUgbFZBP7Yw1rBMXiPuLNuR4tcEiz4a2+nkAB8R9hbQ/ZjHOkv
fOp0lF8M/NXH6SbDMWKaV6FPuMtY4MobU5b3W2KJIxtPCTy9Af/ju51apUFM
YY+QXzvHjDwisiDpRc1d4paTmr6hXvBq7UBhS2XYKiv2/MxMDHFmE++xiUK4
Q8rBcdEJnj9jV/9ZEh5jeJ41NhBN3mt36siwXWo0+j2ftww0g1df4pIw44f/
2SyXldJ1B3+vlrUqNrW3ibcbuLyZvACzaZeaHhKDzR5pTXqHRuH76JLPEyMK
PGvFLbpyOpI4cVaVJiQJDsxM2v1FGxauqy5goYf5ihaOsRTeIh6pDs0J5II1
4y95dmaHE/P8Stl1hhUOdu44EXM6jPhPkpOj/8ubOI/vjA+LBGxJXxOrEHSD
eMc6NV+W4VCcJ6GM3n8/3NcjOJqceH3Z7BQrl8Jv19mDiROyQ8tLPQOIbZvb
kj9/9Cfrj53pnN8sDT84szLjSLDf8ntyU7Qu3lwrOOBL8hsjVNqbivDFdzuU
Em9dI5YILqA+3OtDXH7g38z90leXP9/4KenDlV0XPniT/iukTiyMxnot12+k
3HbrDE/c6UnWV9RzedB+cCO2C+Zr/el3gXhLGZeozFZX4gxPmqX0Nmfi977H
h467Oy3vv5XiaKSZe1fBkeQGJR1Vcz5n8Z6/7BebGu3w/sdmWDm32xDTX6SM
v9l2ernfbooV76CQQJQ5yQPUj5XGZZji/ytJWQ3DoobL3ktRqVE8x5Osu3x+
dUp4/SnxuFQ1vP+azxJxCnLE9dqXWlKaZvb85/8BzrkFmw==
      "]]},
    Annotation[#, "Charting`Private`Tag$295479539#1"]& ], 
   TagBox[
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
q4UfR2hA/cFw0dBPDAsbvf1FQx7/P7nYLVA=
      "]]},
    Annotation[#, "Charting`Private`Tag$295479539#2"]& ]},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0, 0.2}, {0, 0.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7905232886655483`*^9, 3.7905233029919987`*^9}, 
   3.790523334567884*^9, 3.790523401741045*^9, {3.7905234342487707`*^9, 
   3.790523479228909*^9}, {3.790697937062697*^9, 3.790697969096754*^9}, 
   3.79069802111481*^9, 3.7906980606739197`*^9, {3.7906981200900583`*^9, 
   3.7906981482150383`*^9}, 3.7907030593727016`*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"50db82a9-36f2-4ac3-9567-77ac2775ba14"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]x", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]], "8"]}], ",", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]], "8"]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Delta]Xf", "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[ScriptCapitalW]", "[", "t", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], ".", "\[Delta]x"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.7905757718259478`*^9, {3.790575917241887*^9, 3.790575954853643*^9}, {
   3.790575987063066*^9, 3.790575999427206*^9}, {3.79057604048988*^9, 
   3.790576120155143*^9}, 3.790576313617663*^9, {3.790577184785527*^9, 
   3.790577201784993*^9}, {3.7905778484992867`*^9, 3.790577860216712*^9}, {
   3.790578137959956*^9, 3.790578140622015*^9}, {3.7906983225917253`*^9, 
   3.790698355432641*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"f0c929b7-f293-4252-9d65-62d71fa0e88c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Delta]Xf", "[", "t", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"\[Delta]Xf", "[", "t", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"\[Delta]Xf", "[", "t", "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"\[Delta]Xf", "[", "t", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.790576127652371*^9, 3.790576184480176*^9}, 
   3.790576320397354*^9, {3.790577212721181*^9, 3.790577234144621*^9}, 
   3.790698186627409*^9},
 CellLabel->
  "In[253]:=",ExpressionUUID->"968f032f-fc7a-4492-a384-d7b0b99b2fac"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0XtI0wEQB/ChmSTRTJ2MJB+TUCvmI0StmA9SymcpSqJZro0m1rZMRmpt
YLo1okTJpM2Zkg6m0yzIfCS4nMzyla/f1KVZy2fbJCkFa62CuDs4js8/x3Ff
HyYvlW1HIpGS/va/2Us2Wo3FZZGk/7UY/7LG7UA5eJdYEhzbhY7/dYSt3BaD
idXCYU6hFGzR7Jabrz0AOx+n1JYEPQTHmMIjyn3rwDeoPL6TQQXWvrWSWrae
g6NoXi6S5Q7w8GYNozT6NXhev9Uoqu8DZxckdY6k94PTZOMbgt8D4JJwrXtu
0SC4pYo5NBcwBN57mcerVo/gfYtT8vT978Essy7O/8o4mBtakOehnADfytpM
JWyT4LjT0lFG2jQ4gK/X6CoI/I/gZwl1RQ8mvyJapX6zYBdConxTOgee6EkJ
VukN4OYPo8faKfNgscHXKuQugIspQQxu+0cw5Z7qroNgEczbaZoO8/kEznAU
5uz0oSPtNe+8uZ9xP5NM8qQawZkXI663dKDpCaMDtcwv4IopRoan/RI4WdP9
TFCPJisaTCEJy+AL7iy2aB3dKqzUBNasgKVlskx++Cq439zWLSHQtli6za50
Daw7IRXto62DK71TjLfH0F0cb2dt0VfMM3nkpoxqAh/yXdJOadGc6pnEJ2wz
eE++XhFlbwGrA6MnYtvQhkpxjCFpA3zK7dz007No9SMPztU0tFDeft96Hk1r
mpvxYqHzOuk8VjF6e4GQm5XoS7kN9A4VetCYrxGq0bJV0gr5BZqxeTgkpBdd
7iAaFEyiLZIzWZEEOsPJzeI4i/Ynq1wfL6CHqZM5PWvoULni2x0Tuu4gpyxx
A82nWVXz39GzjbqTym10jF/VGHcH3azKZoZZ0a5H/X7YbOg/hR1ATQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$47147#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVkn080wkcx0Vdp5esSCdKoksKUWnfHs7XXHRJeXpxHCfteMWlbR5OaTWF
bU3ckHmax1PrNVR4XfRIKx15LLGZRYuUh82vJ6mutXN/fF7v1/u/9x+fNVS6
X6Sujo7O/rn9zzukUc3oiTRsruBUmc/bBkrPa/nLzNjIrK8vS1pNhvkcrpP7
DTZKf/44bEwB8PyyMVI0y8EEUTqrN3sHSMcTOqMSeDh2yibyQzTCtOQbofro
n7jYJCOT9WY3LNlhUsx0zMUV9mDJD/cBNxVsZ1uXoqOs3PC0UxjEm9IZixRi
tG4Ocj4czICWhxqd6g91+MJwy9jtbUngarXaiPuyATPeXf3F4f1p6Hyb75JC
uY2N1xY0FbPZMCT7cCG5/C46T6ko28/zIDRu//WugPt47D1WzJRlgn/RYyLx
6wNs/0g2EZZlARNalh9KasMNfFrInnU5UJ1D7Ri07cCciazDTqLzYPAbnS6o
6cK+k4J7l5W5EK/sEwYsfYSisMZ3OZMCiFC3eqw//Bi1ifJgjSIPaM5x0eai
XnyQblZsmJ8PJ0Pe+km1T/CYkOxTTi4Aj5943S7+/fi7iYZeIi4AW4ZM0sqX
Ylaq0WTWbAEsSfyXafpKhpXzNZfsKIVAapRe5tnIsWmAyZ5hFIKRlCu6lzKI
nien/56Y895b3k5imQKV0qEainchVD3t3lJrMoTODbLBZysLgaOw1rBow5jq
ZFXh11sAJ0wcXWi1z3BxjCDBllkAJufEZxckKpERVszQNy0A+ueL/eQ1z3Hm
daRnfUk+BC5khX2++xwbqMmffC3zAfUk7Za0EfzrUf2wCz8POFSSjoXpKLpe
eEYz/iSA4IPbY6sbRlETXVkVGykAh33dD4qpL3BdbGDCyJ1c4Pe5BFrojSHf
u61btDIXDkhuXk0sH0PjN9JPO/84D6SSCtXmfS/RobpWnl6fA78uj4hMnnyJ
/Ix+DmU2Gy6zsiWb8l/h+AAlYMXabOClFc29ZBwPTvnFrwjMgvvqKze50nFc
qO7nxi3ig9bdQaubMoF7LM7ajThmQutOXrKh1SRubDbgjASeg2xL79FTPZMY
7BS6KsmeBzeiLJe0JE1h25Rk7XolB2gHuo4XmapwprQ9eoKbBt9bj7X0tahw
wGOXXNJ5BqIEA15lkWq81WV+SU+XBfpHZCWuetP4T3PP9SSd41CzidLrfmUa
e0WTpT5tDFBkc9wU+wm02zCS0CSkwu5lvv2VPgQe9XscxAygQk2eeVSMP4HN
4eQYEokKLGFtpiaIwMmHXyrZZw6B1cXBgdURBMrb930NjgiH6OsO9IgTBIZ5
1D012xMKs8NSoVpE4NaZm+7hpv4QfqjCoUFMYEZTylbvVD9oGz0iYdUQGN84
dXFC7QtF4zqvSPUEfmfvqvC45wMubzds3nyHQGra66iOHi9gL0huS3xC4LyB
09/G+v4I09y9ISglcH6goX27hRsELlo2vVBOYFdwWZyXyhXWk8TGhcNz/WsF
tssNf4BO0ydhtyYIvKE0+DodswWchSVvUlUEttXNGNTpOkHpqqg0L4JAayN2
XsAme2BYacRD7wnsLApSdpyyBvmF1l2iWQL1B1+83rt7FbjZ5PTQPhNIcnNt
SuMaQ5U4lErWEEg2uxtima4HxnY2M1otgUvjhrWt+tbk/wB9xV+5
          "]]}, 
        Annotation[#, "Charting`Private`Tag$47147#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$47147#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$47147#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.01, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.01, 1}, {0., 2.499999999749999}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"\[Delta]Xf", "(", "t", ")"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], 
       RowBox[{
         RowBox[{"\[Delta]Xf", "(", "t", ")"}], "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}], 
       RowBox[{
         RowBox[{"\[Delta]Xf", "(", "t", ")"}], "\[LeftDoubleBracket]", "3", 
         "\[RightDoubleBracket]"}], 
       RowBox[{
         RowBox[{"\[Delta]Xf", "(", "t", ")"}], "\[LeftDoubleBracket]", "4", 
         "\[RightDoubleBracket]"}]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.790576152842956*^9, 3.790576185040287*^9}, 
   3.790576320883346*^9, {3.7905772056807547`*^9, 3.7905772347852783`*^9}, 
   3.790577864087276*^9, 3.790578147315242*^9, 3.790698188570607*^9, {
   3.790698339537033*^9, 3.790698359540638*^9}},
 CellLabel->
  "Out[253]=",ExpressionUUID->"1147acbc-cc7b-432c-a4b4-56089d5de244"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]X0", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"F0", "[", "t", "]"}], 
      RowBox[{"\[Alpha]\[Alpha]", "[", "t", "]"}]], ".", 
     RowBox[{"\[Delta]Xf", "[", "t", "]"}]}], "/.", 
    RowBox[{"Join", "[", 
     RowBox[{"param", ",", "totBG"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]X1", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"F", "[", "t", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{"F0", "[", "t", "]"}], 
        FractionBox[
         RowBox[{
          RowBox[{"\[Beta]\[Beta]", "[", "t", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{"\[Alpha]\[Alpha]", "[", "t", "]"}]]}]}], ")"}], ".", 
     RowBox[{"\[Delta]Xf", "[", "t", "]"}]}], "/.", 
    RowBox[{"Join", "[", 
     RowBox[{"param", ",", "totBG"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]X2", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"F", "[", "t", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{"F0", "[", "t", "]"}], 
        FractionBox[
         RowBox[{
          RowBox[{"\[Beta]\[Beta]", "[", "t", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], 
         RowBox[{"\[Alpha]\[Alpha]", "[", "t", "]"}]]}]}], ")"}], ".", 
     RowBox[{"\[Delta]Xf", "[", "t", "]"}]}], "/.", 
    RowBox[{"Join", "[", 
     RowBox[{"param", ",", "totBG"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]X3", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"F", "[", "t", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{"F0", "[", "t", "]"}], 
        FractionBox[
         RowBox[{
          RowBox[{"\[Beta]\[Beta]", "[", "t", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], 
         RowBox[{"\[Alpha]\[Alpha]", "[", "t", "]"}]]}]}], ")"}], ".", 
     RowBox[{"\[Delta]Xf", "[", "t", "]"}]}], "/.", 
    RowBox[{"Join", "[", 
     RowBox[{"param", ",", "totBG"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7905762231926126`*^9, 3.790576253332593*^9}, {
  3.790576324829083*^9, 3.7905763320306883`*^9}, {3.790576706807107*^9, 
  3.7905767624147882`*^9}, {3.790576793392707*^9, 3.790576830593192*^9}, {
  3.79057688593077*^9, 3.790576896249983*^9}, {3.790576944410392*^9, 
  3.790576987408559*^9}, {3.790577027108657*^9, 3.790577052656185*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"56769b67-f2d2-4711-b61b-ccc450b05088"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Delta]X0", "[", "t", "]"}], ",", 
      RowBox[{"\[Delta]X1", "[", "t", "]"}], ",", 
      RowBox[{"\[Delta]X2", "[", "t", "]"}], ",", 
      RowBox[{"\[Delta]X3", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.790576919865744*^9, 3.7905769307941513`*^9}, {
   3.790576998115073*^9, 3.790577021036512*^9}, {3.790577065658115*^9, 
   3.7905771334964533`*^9}, {3.790579266521001*^9, 3.790579327072311*^9}, {
   3.790579358539989*^9, 3.790579379738151*^9}, 3.790698205990514*^9},
 CellLabel->
  "In[258]:=",ExpressionUUID->"ef81b07a-f298-4479-80fc-c8f8885ce73d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OErI86b6t/fWunBiU9VWbaOY5BCDHkXqblxSmoshtcVE9FCwIStHNwzKR9Yd
/ismIhNUzrGy3ajlHGV2f1NEjpr0lNW87cbmapWG/5ZCIktRupXXvxs7x0Y9
a6YKiKZ3/CXH4G58OzGpwt5SQNzSLJukY7uxn0GvlDW0gEz84uxLL+iGpDhX
8jOJAhJteudXyHg3xkIHuJPN8sk+s2kuE6keDHpr7x6lyCOiVO26TbI92LnY
5fp+Jpco+hZ8ELjYA1+zd4EGnbnEKtNDYFy1B7X34mhV4nNJ328h8ZuGPbhj
pK+kpJZLAp49Vb7g04MRCfu4oY85hNFizZp9sgcbPS8OOxtmE9bRctm9sz0Q
eGIrZXE1m7CrulPvm++B30oun9W5bHJQgOPtgbUerGWHsxdwZRORQfFoPoZe
nBwKGdzTm0VULz6tFZXoxatoqa0SKlnEm22aVc21FxWPb3Q/uJRJ/F6l9al7
9oLW8jivh0QmCfz1PPyqTy/kl018C49kksh6Gn7NkF4cvRppp7Qtk6TZ8kjp
fOrFPp0AC8H6DNI6oaP7uKcXkn3FEp2qGYQhtzvl9ZE+pI2eO37+fjrxtM73
+SPYhyr6bmP2m+lkm2youf7JPohs2C6uX04nFHW6MjIyfRA+o2i9IphOfvXP
Nv5S78MtR7FTafNppHVjy+wN2z4cIbx+O2zTiPdFYQG+rj5oJEaVd5//ROjp
mHf59vchMuFhs9zRT8StZXF+81sf/jpqB7bu+kTsNQvy+2b6YKfy5otkfyox
eSCn8IaiH+I8prdUn6YSNS9to8Vj/RBVy+u0+ZhCmLtd48od+7FqSFX3iyeZ
JCxlyLK59QN/2O9v3ZVMZHcP9t9/0w8NOaefx5eTiPFVUQamwH7knbSVqq1L
IvXtQ891UvrxXlZ5fJtJEnFsOa3wr6cfaZvjQkmliWSh9vt3MaEvOLT37MdS
0wTSXnjlRELPF5ipTRZS7/pIrudpKUd9/QL2R/y3LqzHkb4s/ftBw19QMLTa
4zMbR4ZSnke9/v4FdJp/uLUa4siPiAimB5tf0Cq/9cr713Fkm9PcvMCRr7i0
NdGpclscIUpvM5ItvuLAJSY9K6ZYkvi1+VTa7gHk7rRZUFKIIXEii8YsnANQ
ZFpdST0TQ6KcOBItDg5A4HGjKZdgDAkUvHtQ5tgAPM4uW/AyxBCXlyv09bL/
8+2IVHtXNNHdxzMx+nAAF10XaIMNogn7LcvAPeUD2JJAr+TgFUVcvhxetzUe
xLCyQ2n/lkhiTM9f4GI2CEZVHqvpuQhyXUbwudeLQVgqtKkK90cQ3gjR+TDH
QbCdF1f9lRpBKvXkxosCBiGZbp0ipxVBqGYMm1ZL/tdv9nYdTw8n9n8TwiwY
voH/Jq2Zy+MwYrVbhBinfcOScRnzKGsIsYl6mX4r+xvc20i9EVUIsReq41Es
+AaxRKbVtflg4iynR8df+Q32ZkHel1uCibe5X+9wzzc4Xroq4+oeTOK6/j69
tvkNs+vXR8yogsl0/ZAG15Eh+Cx636/ZCCS7PRLcqC2GcDu88c8k+3vS/nJA
LePFEAziaG9IbH9PvI2ZOHWsh2BTba7uuxJAdqhbpuTZD+FO78K0SX8AoeBQ
aH/oMYTdnEmXykIDyGzcFGd75BD2CHoqJR8OIOXlRz6FNwzhwuz2DzfP+JMn
q7FdEoeG8euVv2WBmy+Jvln3LefwMLweDGpmvfQl3QWz02J8wziWzDOYY+JL
iPWpjVPHhiFn7lzUpelL6P+V8omIDSOaW2HZ8qgviV//8pxfYRgJisy/rzW+
IyMUzHs5TIcRVZ+4dJT9HblOa3t7tXQYtJmLT2qrvclFFuG/qRXD8HtZyTZQ
6E3EDgz56FcPY1/I47mVNG/CKnGuqrFhGOMNT9iVQrxJhyGNYET3MDQcZizV
TLyJarXXyvnZYcgPrXH0c3qTy84Rfm/2jOCdw7skvXkvAqqy+oPGIwhOEKul
8fYkRdIBn2tNRuDgvsPhhK0nOWPxMMvEbAQLeZV9Ro88iej07vDSFyOIrjfA
urwn4W95YHrn1QhedPGlFG7xJIwhrOyRgSNo1JOvdH7hQUZOGhkcqBjBc+aN
dzSP3YmLHgMFF/soIrteFAU+dyNaOqdNk3JG8URjgib3jDM5rthcFao3hjJF
8X9p0o7kbSe5zkU1DvZrwUzn0+2ISlnBJ4vIcQh2DdvER1kThrCo2ZOKE9jw
stva1PKc/Md218BuZgIN1EtuK9nPSIqtT5nw+0lEUvV/pqs2Ja+dgrVMJKdQ
4uWYmllkTCp+pBa4dk/he+K1s3ffPiCbcsc3tzhOI1T4b2+AhyGpkXptt4t7
BppBwVt7xfWJz8ErozYtMxj8Kvyg/p8OyTc6yFhp+R3rG+napTduEmOVphfB
7LPgjrzOwRh8jfAeHq/srJzF1p5OFbklVWLk36sUYfADETphN94wXCbbH/aE
yVL9hP6A1iM32vMkWfhsu1zqT+xuZEtp5pIkX3xczn1RnkPGQQYBqfv85AKr
WleM6hxuOP+gOU3FT5IDOI0eaczhmaPSmHbYEWIbkvZmXXMOG05laoztfIQ7
tr/3wN05nBKLbz8hw0vu5x1/ctdqDnlr3I8v7uUmy4PdIT/i5jA/4vrnzuAe
ckc36nhOwhyq2MhZdc49pHb0YZlt8hy8e1Ob3DTZSPAUxSRDxhw8TMc4qjpY
CVkQOHmyeA7F3x1dLZqYiDO1Xa1FxxxSbuXZngmhJT9dFbTRPQfTkcXnMftp
yPUdrD9p++bAn9tt+S5yK+FnSGAJGpwDtWejLWU8JWlk77hdOD2H7wE3OySs
lmXEQsLmX83OYegiL42266JM+H4jJ6W5//3Y8XPO2X9exoR7PWFgcQ5Mpadf
Dd+flOn7UCMdtzyHOzqNQjqewzLnjrxrMV6dQ5Nx83KLbo9MYsItPYn1OUgH
Sz39/l+NDIvgkaXNzTk8/qV2xPjzhPT/AYQ3Ask=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$47400#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$47400#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$47400#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
TPUCWT2tz6ur33unxo2FU2OY/wJtSp9L
          "]]}, 
        Annotation[#, "Charting`Private`Tag$47400#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.01, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.01, 1}, {-9.928362091769444, 8.91246210182983}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"\[Delta]X0", "(", "t", ")"}], 
       RowBox[{"\[Delta]X1", "(", "t", ")"}], 
       RowBox[{"\[Delta]X2", "(", "t", ")"}], 
       RowBox[{"\[Delta]X3", "(", "t", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.790576740136861*^9, {3.790576796860236*^9, 3.7905768225114317`*^9}, {
   3.790576926086547*^9, 3.790576931648999*^9}, {3.790577001793971*^9, 
   3.7905770226292973`*^9}, {3.790577115003118*^9, 3.790577134655013*^9}, 
   3.790577243513093*^9, 3.790577871393984*^9, 3.7905781537700787`*^9, 
   3.7905793283825502`*^9, {3.7905793678501*^9, 3.7905793807927303`*^9}, 
   3.7906982981520853`*^9, 3.7906984415377398`*^9},
 CellLabel->
  "Out[258]=",ExpressionUUID->"3221eaa8-9a44-41f2-bc48-e1777fa9c40a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalDelta]x", "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Delta]X0", "[", "t", "]"}], ",", 
          RowBox[{"\[Delta]X1", "[", "t", "]"}], ",", 
          RowBox[{"\[Delta]X2", "[", "t", "]"}], ",", 
          RowBox[{"\[Delta]X3", "[", "t", "]"}]}], "}"}], ".", 
        RowBox[{"ndown", "[", "t", "]"}]}]}], "/.", 
      RowBox[{"Join", "[", 
       RowBox[{"param", ",", "totBG"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Xi]", "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Delta]X0", "[", "t", "]"}], ",", 
          RowBox[{"\[Delta]X1", "[", "t", "]"}], ",", 
          RowBox[{"\[Delta]X2", "[", "t", "]"}], ",", 
          RowBox[{"\[Delta]X3", "[", "t", "]"}]}], "}"}], "-", 
        RowBox[{
         RowBox[{"\[CapitalDelta]x", "[", "t", "]"}], 
         RowBox[{"nup", "[", "t", "]"}]}]}], ")"}], "/.", 
      RowBox[{"Join", "[", 
       RowBox[{"param", ",", "totBG"}], "]"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.790577530365508*^9, 3.790577705315001*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"e1e43786-a02e-4aab-ba45-050495a7b0ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[CapitalDelta]x", "[", "\[Eta]in", "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"\[Xi]", "[", "\[Eta]in", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.790577713833564*^9, 3.790577771402199*^9}, {
  3.790698415335043*^9, 3.7906984224972963`*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"ba4a681a-2c1f-42b0-9fa2-0d063f1e7b0f"],

Cell[BoxData["0.00024999999997500012269265063385378077`21.849485002146295"], \
"Output",
 CellChangeTimes->{{3.790577726823666*^9, 3.790577773576118*^9}, 
   3.7905778812853527`*^9, 3.790578158275629*^9, 3.790698531691127*^9},
 CellLabel->
  "Out[261]=",ExpressionUUID->"79fdb958-5809-42f6-8948-8e1a40c546d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
   "-", "8.85414518910559065955173327316870781206`22.28197379668705"}], ",", 
   "1.24999999987500061346325316926890443297`21.849485002146295", ",", 
   "8.91247653401119882100287692066093865354`22.29478031557237"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.790577726823666*^9, 3.790577773576118*^9}, 
   3.7905778812853527`*^9, 3.790578158275629*^9, 3.7906985316947117`*^9},
 CellLabel->
  "Out[262]=",ExpressionUUID->"163a0f56-6cf5-45a5-b20d-c93beb245339"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]Xc", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Xi]", "[", "t", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"\[Xi]", "[", "t", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"\[Xi]", "[", "t", "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"trajectory", "[", "t_", "]"}], "=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}], ",", 
       RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", "totBG"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"trajectory", "[", "\[Eta]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], 
   RowBox[{"(*", 
    RowBox[{"/.", 
     RowBox[{
      RowBox[{"Line", "[", "x_", "]"}], "\[RuleDelayed]", 
      RowBox[{"Sequence", "[", 
       RowBox[{
        RowBox[{"Arrowheads", "[", 
         RowBox[{"Table", "[", 
          RowBox[{".02", ",", 
           RowBox[{"{", 
            FractionBox["100", "10"], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"Arrow", "@", 
         RowBox[{"Line", "[", "x", "]"}]}]}], "]"}]}]}], "*)"}], " ", ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", 
            RowBox[{
             FractionBox["\[Eta]", "300"], "+", "0.28"}], "]"}], ",", "Black",
            ",", 
           RowBox[{"Arrowheads", "[", "0.02", "]"}], ",", 
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"trajectory", "[", "\[Eta]", "]"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"trajectory", "[", "\[Eta]", "]"}], "+", 
                RowBox[{"40", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Pu", "[", "\[Eta]", "]"}], "/.", "totBG"}], 
                  ")"}]}]}], ")"}]}], "}"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", 
            RowBox[{
             FractionBox["\[Eta]", "300"], "+", "0.28"}], "]"}], ",", "Green",
            ",", 
           RowBox[{"Arrowheads", "[", "0.02", "]"}], ",", 
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"trajectory", "[", "\[Eta]", "]"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"trajectory", "[", "\[Eta]", "]"}], "+", 
                RowBox[{"40", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"P1", "[", "\[Eta]", "]"}], "/.", "totBG"}], 
                  ")"}]}]}], ")"}]}], "}"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", 
            RowBox[{
             FractionBox["\[Eta]", "300"], "+", "0.28"}], "]"}], ",", "Blue", 
           ",", 
           RowBox[{"Arrowheads", "[", "0.02", "]"}], ",", 
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"trajectory", "[", "\[Eta]", "]"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"trajectory", "[", "\[Eta]", "]"}], "+", 
                RowBox[{"40", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"P2", "[", "\[Eta]", "]"}], "/.", "totBG"}], 
                  ")"}]}]}], ")"}]}], "}"}], "]"}]}], "}"}], ",", "{"}], 
        "*)"}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Opacity", "[", 
          RowBox[{
           FractionBox["\[Eta]", "300"], "+", "0.28"}], "]"}], ","}], "*)"}], 
       
       RowBox[{"Red", ",", 
        RowBox[{"Arrowheads", "[", "0.01", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"trajectory", "[", "\[Eta]", "]"}], ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"trajectory", "[", "\[Eta]", "]"}], "+", 
             RowBox[{
              FractionBox["1", "10"], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Delta]Xc", "[", "\[Eta]", "]"}], "/.", "totBG"}], 
               ")"}]}]}], ")"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Eta]", ",", "\[Eta]in", ",", "ETA0", ",", 
       FractionBox[
        RowBox[{"ETA0", "-", "\[Eta]in"}], "30"]}], "}"}]}], "]"}], " ", ",", 
   " ", 
   RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\!\(\*FractionBox[\(x\), OverscriptBox[\(M\), \(_\)]]\)\>\"", ",",
         "Large"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\!\(\*FractionBox[\(y\), OverscriptBox[\(M\), \(_\)]]\)\>\"", ",",
         "Large"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\!\(\*FractionBox[\(z\), OverscriptBox[\(M\), \(_\)]]\)\>\"", ",",
         "Large"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "12"}], "]"}]}], ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "100", ",", "10"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7905772543874903`*^9, 3.79057728933356*^9, {3.790577324189219*^9, 
   3.790577326246138*^9}, {3.79057735775156*^9, 3.790577384073063*^9}, {
   3.79057778785535*^9, 3.7905778217551117`*^9}, {3.790578022900927*^9, 
   3.790578023058436*^9}, {3.79057817242416*^9, 3.7905782002424726`*^9}, {
   3.79057827514918*^9, 3.7905782785119953`*^9}, {3.790578525067868*^9, 
   3.790578635611899*^9}, {3.790698492485076*^9, 3.7906986371531076`*^9}, {
   3.79069868476836*^9, 3.79069868613945*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"6fe7b5e5-1afc-46c0-aa27-effa211de393"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1:eJw9xX081HccAPBDD4rJ0Kg8lZtyeunq0sN281GSPFyKIcc4pTxdFOqs6DUP
q5XWVulkaMpzRZ0uXB5meYio88wd7qfDN6El0+OU9U+fP96v9/K9EW77VWk0
GucTtU+cQnTl+SJ7m89f/6LERKt4p82lFkILJWbweVtHg1EhfTUkG6Rm2hAW
Pm/hTLI3nQ1HbF6MryJ2+K6x5wPf0F0gbPcyXWPijh+Vk5OWdF8gXFGeAdmH
n3bb12dG50Oef+zkYhKFp567OteUHgtzlQGX9EginnGzZqkx/Sx4XEw0dqtM
wQVheUFL3DMhREv7dubjK7hYzX2mqDEXRP4WzxheOfgWUZOmZt1NYDOvLTYv
KcR9K6xNoi1LgPH8jWm2qBhvnhXbM8V3Qe98e7aJVgnObG2KvfGLBDQknn2N
pWLcT1uub+9cBSwvR9U7a8twE28XnvBADQSKnpauVkrwhYdeV4Zw7kN9/DT3
aWAl/rhMYDqsWweZlJXZB3k1Lih7ffdgWz3UxJ5h766twQ3jajq6xQ/gYd16
/22q9/H0qIC3RNAEvWPiHbM+tbgek5PbzWuG7B7nuqBbdXhUzoakLttH8PNs
WtnkeD1+3fFNyHGaFPhzqw9vsXuAR3BV+LSoVgjbnpZdktiIHymIzBN6tEH4
fqeMcUUTLvBekGvo3A5Wzjor21nNeDi5wmawO2Ae/7yF7HAL3qqR5aVh1AlD
oWQq/+EjfG1Kw4Z+7S7ozplipWpK8Q/iPWk/TXdBbfsZtaX0VrxC9CzlZkc3
GG09tctF2ooLvsz6vrG+B+a4+su0Itrwqwvup5bl98Jzp2v21obteFPggj+F
GTJYf33y2LqGdlyZ7gofzsphfv7Sib8CO/DgMJV9Gw/2Qf+FW7Yi7U58PLPX
KYDXDzaGpm3rRJ24PHhZqZ/dAMyoZzCSd3bhlYt+uDe0XAHVwwlBDu+68Iwl
dQl7dCnQ8LMfvHi5Gx+tED7OmqbApyGSvc2+B0/jOUTwowdhU8vxziTSgx9Z
825TJBmEw9a/W2ck9eKOfIb0W88nUPTromP6TBmewQ13iJM+gaOJoe9XtMpw
88XB8QW2SrANZvpdiJPjVvHRmc4VSgi+rZLcu7IPZ/rQTpawhsBIWPxvcUMf
HqSylamWMwSdoQ3wLLIfN/YWVjYbDYP+gOTBHd0BXDMua+GJ34ahvKTcwEM0
gL/UYnw9/XEYfAQrOFxfBe7p1rBcKRiBZFlQ1Yv/FPhUgMGgZHQEpn3W7Sr/
qMDdpQVVorER8FXMKH9SoXAxe3N64cQIWA2dV9eZT+FH9bmeaZMj0DZR4b5e
h8Lft6S3xLwdAQOa9ljMKgqfs8lEslGdQL55+VeqHhSur2V+4e5KAtqFCYUP
vSg85nhpRJEFgRhLDvsil8Jlo9s5uZYEnJjKADqPwtNrg9QvrSHwz2bNou1h
FG76Y+GJ6I0ErDk8u+R4CmcMrw5jORC4ImV0uydRePLuqh2WjgTmub0KNjxF
4ePVHHMzZwK9nmfOFZ2l8OK08Cc6rgRieWKZNJXCWa63vaY8CYwoT/Av/0Hh
KZW21mN7COzc7zjLy6TwVxZtOkouAdNQBX3qGoWXz5l61OZH4PREQdm9XApf
Eplwo4lHYCo8yimxgMKPUTqn/95LgPvyuwHnGxTe55J9QBJIoDZK/ZBeMYWz
77G2iQ4Q+B/DBpBu
       "]]},
     Annotation[#, "Charting`Private`Tag$49250#1"]& ]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0., 0., 0.}, {-0.8854145189105591, 0.12499999998750005`, 
     0.8912476534011199}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.0165, 0.0165, 0.02333452377915607}, {-0.9598684097298625, 
     0.01686562520492987, 0.7145068554208033}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.033, 0.033, 0.04666904755831214}, {-0.9100160834864714, 
     0.03303746748505233, 0.713561595497839}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.0495, 0.0495, 0.0700035713374682}, {-0.8598642118293668, 
     0.04950885517888832, 0.7130399567614951}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.066, 0.066, 0.09333809511662428}, {-0.8096895088489335, 
     0.06600307419605285, 0.7125506063922494}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.0825, 0.0825, 0.11667261889578034`}, {-0.7595107665224585, 
     0.08250133255925916, 0.712066968520959}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.099, 0.099, 0.1400071426749364}, {-0.7093309475626747, 
     0.09900066755577425, 0.7115848532390956}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.1155, 0.1155, 0.16334166645409248`}, {-0.6591507609106749, 
     0.11550037024450532`, 0.7111032579525509}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.132, 0.132, 0.18667619023324855`}, {-0.6089704257618761, 
     0.13200022143003548`, 0.7106218726721933}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.1485, 0.1485, 0.21001071401240462`}, {-0.5587900228921711, 
     0.14850014033647185`, 0.7101405831636598}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.165, 0.165, 0.2333452377915607}, {-0.5086095861510248, 
     0.16500009311434938`, 0.7096593415565778}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.1815, 0.1815, 
     0.25667976157071676`}, {-0.45842913119182827`, 0.1815000641102772, 
     0.7091781257137095}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.198, 0.198, 0.2800142853498728}, {-0.40824866584124736`, 
     0.19800004549758937`, 0.708696924566478}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.2145, 0.2145, 0.3033488091290289}, {-0.35806819426913694`, 
     0.21450003310643112`, 0.708215732217818}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.231, 0.231, 0.32668333290818496`}, {-0.3078877188172957, 
     0.23100002459500368`, 0.7077345453559258}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.2475, 0.2475, 
     0.35001785668734103`}, {-0.25770724086067376`, 0.24750001858835688`, 
     0.7072533620363285}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.264, 0.264, 0.3733523804664971}, {-0.2075267612378467, 
     0.26400001424791525`, 0.7067721810731011}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.2805, 0.2805, 0.39668690424565317`}, {-0.1573462804773735, 
     0.28050001104511973`, 0.7062910017187483}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.297, 0.297, 0.42002142802480924`}, {-0.10716579892213426`, 
     0.2970000086370903, 0.7058098234883643}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.3135, 0.3135, 0.4433559518039653}, {-0.05698531680027429, 
     0.3135000067956816, 0.7053286460593031}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.33, 0.33, 0.4666904755831214}, {-0.006804834267058284, 
     0.33000000536562885`, 0.7048474692119872}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.34650000000000003`, 0.34650000000000003`, 
     0.49002499936227745`}, {0.043375648569695245`, 0.3465000042391137, 
     0.7043662927939381}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.36300000000000004`, 0.36300000000000004`, 
     0.5133595231414335}, {0.09355613163374392, 0.3630000033398937, 
     0.703885116697333}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.3795, 0.3795, 0.5366940469205896}, {0.14373661487028136`, 
     0.3795000026131624, 0.7034039408446638}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.396, 0.396, 0.5600285706997457}, {0.19391709823931774`, 
     0.39600000201893004`, 0.7029227651793764}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.41250000000000003`, 0.41250000000000003`, 
     0.5833630944789018}, {0.24409758171127371`, 0.4125000015276173, 
     0.7024415896596392}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.42900000000000005`, 0.42900000000000005`, 
     0.6066976182580578}, {0.29427806526399514`, 0.42900000111707, 
     0.7019604142541216}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.44550000000000006`, 0.44550000000000006`, 
     0.6300321420372139}, {0.3444585488806972, 0.44550000077050333`, 
     0.7014792389390864}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.4620000000000001, 0.4620000000000001, 0.65336666581637}, {
     0.3946390325485274, 0.46200000047506484`, 0.7009980636963572}}]}, 
   {RGBColor[1, 0, 0], Arrowheads[0.01], 
    Arrow3DBox[{{0.4785000000000001, 0.4785000000000001, 0.676701189595526}, {
     0.44481951625754707`, 0.4785000002208158, 0.7005168885118788}}]}},
  Axes->True,
  AxesLabel->{
    FormBox[
     StyleBox[
     "\"\\!\\(\\*FractionBox[\\(x\\), OverscriptBox[\\(M\\), \\(_\\)]]\\)\"", 
      Large, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
     "\"\\!\\(\\*FractionBox[\\(y\\), OverscriptBox[\\(M\\), \\(_\\)]]\\)\"", 
      Large, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
     "\"\\!\\(\\*FractionBox[\\(z\\), OverscriptBox[\\(M\\), \\(_\\)]]\\)\"", 
      Large, StripOnInput -> False], TraditionalForm]},
  AxesStyle->Directive[
    GrayLevel[0], 12],
  Boxed->False,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->700,
  Method->{},
  PlotRange->{{-1, 1}, {-1, 1}, {-1, 1}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0, 100, 10},
  ViewVertical->{0.17941450219950247`, 0.06664084797874838, 
   0.9815138479823798}]], "Output",
 CellChangeTimes->{
  3.7905778276167383`*^9, 3.790577883798834*^9, 3.790578024671473*^9, {
   3.790578159431419*^9, 3.790578201178186*^9}, 3.790578279287719*^9, {
   3.790578542007536*^9, 3.790578604877877*^9}, 3.790578636385556*^9, {
   3.790698569050136*^9, 3.7906986385841208`*^9}, 3.790698687781129*^9},
 CellLabel->
  "Out[277]=",ExpressionUUID->"aedf1859-7211-4538-83e4-1c9999bef10b"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1140, 1016},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info1103832510958-2235383"->{
  Cell[1024479, 17827, 669, 11, 48, "Print",ExpressionUUID->"8adb320c-e0f9-4d0d-a545-c4aa62dae279",
   CellTags->"Info1103832510958-2235383"]},
 "Info1133832511012-2235383"->{
  Cell[1028300, 17932, 864, 15, 50, "Print",ExpressionUUID->"cff3d585-9358-479a-9693-395e0e8f7449",
   CellTags->"Info1133832511012-2235383"]},
 "Info1283832511214-2235383"->{
  Cell[1056566, 18555, 516, 9, 73, "Print",ExpressionUUID->"2aa45ccc-b0d0-4e9a-ba22-9d13465c72c9",
   CellTags->"Info1283832511214-2235383"]},
 "Info1293832511214-2235383"->{
  Cell[1057085, 18566, 395, 7, 71, "Print",ExpressionUUID->"607e3ad2-d98f-455b-834f-fb69acf3b537",
   CellTags->"Info1293832511214-2235383"]},
 "Info1483832583241-9208266"->{
  Cell[1622833, 28629, 1896, 27, 97, "Print",ExpressionUUID->"546aa5a0-f1e0-4241-956f-4fc8d3c4d4d2",
   CellTags->"Info1483832583241-9208266"]},
 "Info1553832583467-9208266"->{
  Cell[1630573, 28812, 1093, 18, 78, "Print",ExpressionUUID->"cb52e772-9e08-4d91-a55f-32a9c88fec00",
   CellTags->"Info1553832583467-9208266"]},
 "Info1763832600411-9863370"->{
  Cell[3380082, 64209, 1029, 17, 96, "Print",ExpressionUUID->"14e8fc95-7e2a-475f-9b52-4f6dccfbf824",
   CellTags->"Info1763832600411-9863370"]},
 "Info1773832600411-9863370"->{
  Cell[3381114, 64228, 325, 6, 46, "Print",ExpressionUUID->"05478a0e-72d8-4ab4-aaee-8d0e6ffaca3a",
   CellTags->"Info1773832600411-9863370"]},
 "Info2123832596575-9208266"->{
  Cell[2353617, 41795, 1364, 20, 132, "Print",ExpressionUUID->"623a0c81-32fd-4cf7-abb5-e28883082cff",
   CellTags->"Info2123832596575-9208266"]},
 "Info2473832562088-2235383"->{
  Cell[991983, 17068, 511, 8, 50, "Print",ExpressionUUID->"2cca4565-a460-45d5-b615-138b9ee63bf6",
   CellTags->"Info2473832562088-2235383"]},
 "Info2483832562088-2235383"->{
  Cell[992497, 17078, 491, 8, 50, "Print",ExpressionUUID->"fef22a7a-e1fc-46a7-8571-7bf60ae3279d",
   CellTags->"Info2483832562088-2235383"]},
 "Info3033777738308-2748660"->{
  Cell[3122237, 59113, 334, 6, 46, "Print",ExpressionUUID->"2097cf84-6116-4446-86ef-794fdf71a7fc",
   CellTags->"Info3033777738308-2748660"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info1103832510958-2235383", 3992510, 76945},
 {"Info1133832511012-2235383", 3992686, 76948},
 {"Info1283832511214-2235383", 3992862, 76951},
 {"Info1293832511214-2235383", 3993037, 76954},
 {"Info1483832583241-9208266", 3993212, 76957},
 {"Info1553832583467-9208266", 3993389, 76960},
 {"Info1763832600411-9863370", 3993566, 76963},
 {"Info1773832600411-9863370", 3993743, 76966},
 {"Info2123832596575-9208266", 3993918, 76969},
 {"Info2473832562088-2235383", 3994096, 76972},
 {"Info2483832562088-2235383", 3994270, 76975},
 {"Info3033777738308-2748660", 3994444, 76978}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4286, 97, 331, "Text",ExpressionUUID->"35b64677-826f-4a1a-acba-5c0550400bc0"],
Cell[4847, 119, 218, 6, 58, "Text",ExpressionUUID->"900f8435-49f8-4f52-9666-ef4d77c9ff03"],
Cell[5068, 127, 1048, 19, 78, "Input",ExpressionUUID->"7291dc37-5aa3-4c48-9fe3-3c8215a372ce"],
Cell[CellGroupData[{
Cell[6141, 150, 1521, 32, 78, "Input",ExpressionUUID->"cf80fc0c-ac6f-4ff0-8271-01ff249eebac"],
Cell[7665, 184, 1076, 16, 35, "Output",ExpressionUUID->"97128763-f2b2-4eb3-bc1d-2e4612b4b8f0"]
}, Open  ]],
Cell[8756, 203, 3589, 96, 253, "Text",ExpressionUUID->"079ad037-7702-459b-a691-572686106543"],
Cell[12348, 301, 5846, 136, 285, "Input",ExpressionUUID->"525520bd-91ad-4470-9e81-1168489e15ae"],
Cell[CellGroupData[{
Cell[18219, 441, 388, 6, 114, "Title",ExpressionUUID->"effa3edc-2806-4972-8df0-080827701c8f"],
Cell[CellGroupData[{
Cell[18632, 451, 454, 7, 68, "Section",ExpressionUUID->"b499d465-6e10-48c7-aaf8-5b2dda0e1e09"],
Cell[19089, 460, 147, 3, 55, "Input",ExpressionUUID->"4b62894b-f0c0-43a8-92a3-bbd6778e3ab9"],
Cell[19239, 465, 779, 20, 55, "Input",ExpressionUUID->"c8b57949-8555-45ee-aabb-50cc07be673f"],
Cell[20021, 487, 1617, 40, 116, "Input",ExpressionUUID->"1847c416-798d-47ff-b3c2-4c22c3b8eda0"],
Cell[CellGroupData[{
Cell[21663, 531, 580, 14, 101, "Input",ExpressionUUID->"f479d3d9-7818-4685-9b5e-130b23115cbb"],
Cell[22246, 547, 671, 11, 37, "Output",ExpressionUUID->"8c5b0e91-13ee-4c94-9bbf-21dc17f02c47"],
Cell[22920, 560, 608, 9, 35, "Output",ExpressionUUID->"0a19e1dc-7265-40ad-b2cd-edcffc6ad700"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23565, 574, 710, 15, 55, "Input",ExpressionUUID->"cd4ea91e-e240-4fe2-a728-e406301cae26"],
Cell[24278, 591, 569509, 9353, 205, "Output",ExpressionUUID->"cda20160-a055-4b85-9c32-e6858fab5432"]
}, Open  ]],
Cell[593802, 9947, 1195, 27, 101, "Input",ExpressionUUID->"9bbcdf54-27e4-4051-8885-befc1757ac5d"],
Cell[CellGroupData[{
Cell[595022, 9978, 470, 10, 55, "Input",ExpressionUUID->"106a0b19-2892-4620-9431-786dfab1c829"],
Cell[595495, 9990, 912, 15, 35, "Output",ExpressionUUID->"8a691ace-c4b7-4e3c-afa0-a2ebee4d48b0"],
Cell[596410, 10007, 933, 15, 40, "Output",ExpressionUUID->"589205e3-7ed1-43a7-8132-6904df725bf3"]
}, Open  ]],
Cell[597358, 10025, 152, 3, 31, "Input",ExpressionUUID->"9daa8c17-5d59-4c65-8c9d-75df697d0e75"],
Cell[597513, 10030, 4455, 122, 308, "Input",ExpressionUUID->"09940e1f-3fa9-4a5e-8349-c883d23226ad"],
Cell[601971, 10154, 4177, 120, 285, "Input",ExpressionUUID->"b3fe19cb-3a8d-4d95-887b-9a0d0331c2bc"],
Cell[606151, 10276, 919, 24, 78, "Input",ExpressionUUID->"e69b796f-8d16-44f7-a35b-bc104c05e69c"],
Cell[CellGroupData[{
Cell[607095, 10304, 2598, 77, 400, "Input",ExpressionUUID->"5ab351a4-fa7c-4c63-8838-8943f1c4e8d3"],
Cell[609696, 10383, 1243, 17, 35, "Output",ExpressionUUID->"6c1f77bd-631d-4e2e-9efb-9fc5acf61fb8"],
Cell[610942, 10402, 1243, 17, 35, "Output",ExpressionUUID->"484205a9-7a8d-4d96-bb9d-e173e108d9bc"],
Cell[612188, 10421, 1245, 17, 35, "Output",ExpressionUUID->"bee32c3a-9764-4248-9e4b-2ec8fe443a75"],
Cell[613436, 10440, 1245, 17, 35, "Output",ExpressionUUID->"3eb64a4c-aa8c-4878-9fe9-d68657122527"],
Cell[614684, 10459, 1243, 17, 35, "Output",ExpressionUUID->"d344c2f8-d9e9-4059-941d-9585edf6046c"],
Cell[615930, 10478, 1243, 17, 35, "Output",ExpressionUUID->"55342b30-7e42-4ad6-92af-19d1554bc278"],
Cell[617176, 10497, 1243, 17, 35, "Output",ExpressionUUID->"dd46e12b-901e-4cbc-8450-861084cb6c16"],
Cell[618422, 10516, 1243, 17, 35, "Output",ExpressionUUID->"6d7cc1a9-7edb-4c4d-a21e-bddd3c6598bb"],
Cell[619668, 10535, 1243, 17, 35, "Output",ExpressionUUID->"b66ebd6d-6d1b-4e6e-a207-a5e5ae3c3a6d"],
Cell[620914, 10554, 1243, 17, 35, "Output",ExpressionUUID->"7d1d3d4f-5726-463a-8f1f-a9f4432aae20"],
Cell[622160, 10573, 1243, 17, 35, "Output",ExpressionUUID->"535a8afe-da84-47bc-aa25-38405364f582"],
Cell[623406, 10592, 1242, 17, 35, "Output",ExpressionUUID->"a49948f9-ee29-469e-ad7f-65572a9dbb7e"],
Cell[624651, 10611, 1243, 17, 35, "Output",ExpressionUUID->"be6f625b-8ea3-459d-8db8-15f8da004df3"],
Cell[625897, 10630, 1243, 17, 35, "Output",ExpressionUUID->"e68cd3c5-bec1-4c38-a9ab-2bea20130f75"]
}, Open  ]],
Cell[627155, 10650, 7184, 181, 449, "Text",ExpressionUUID->"00359ce3-2c16-499e-9b82-7c216577a645"]
}, Open  ]],
Cell[CellGroupData[{
Cell[634376, 10836, 214, 4, 68, "Section",ExpressionUUID->"e02741d6-f5e0-4d23-9f8e-9f7bbbf6268b"],
Cell[CellGroupData[{
Cell[634615, 10844, 3620, 82, 329, "Input",ExpressionUUID->"067731cc-e536-4b9e-8c78-5fad15a811c6"],
Cell[638238, 10928, 2246, 34, 54, "Output",ExpressionUUID->"9f20f78f-f126-44c3-afc2-9ac2f73f7d18"],
Cell[640487, 10964, 2197, 32, 35, "Output",ExpressionUUID->"4e393aa1-d90b-4d45-80bd-d7e11b58eaf1"],
Cell[642687, 10998, 2256, 33, 35, "Output",ExpressionUUID->"1b834e68-8b45-43de-81f3-1a9fcffae7b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644980, 11036, 2022, 56, 177, "Input",ExpressionUUID->"33fe7bce-305a-4bb4-b7da-690a167f1bef"],
Cell[647005, 11094, 318, 5, 25, "Print",ExpressionUUID->"54ab24d3-1dc9-4f9b-9e42-b103fb885778"]
}, Open  ]],
Cell[CellGroupData[{
Cell[647360, 11104, 270, 6, 31, "Input",ExpressionUUID->"eca6cbea-8ee9-4e5e-ba87-b16fdb9d2ccb"],
Cell[647633, 11112, 249, 3, 35, "Output",ExpressionUUID->"ab077d17-29eb-4e3d-b34c-a7014e990b18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[647919, 11120, 887, 19, 78, "Input",ExpressionUUID->"44e51125-b23a-455e-95d4-c562209117b3"],
Cell[648809, 11141, 1172, 16, 35, "Output",ExpressionUUID->"468a5df0-8ec9-46a6-aa10-7842f6ad4f33"],
Cell[649984, 11159, 1172, 16, 35, "Output",ExpressionUUID->"beb29cbf-78ba-404d-af38-53f8673e81e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[651193, 11180, 197, 3, 31, "Input",ExpressionUUID->"be5f5bfb-9c4b-4d05-a24b-0bb3e44cdc98"],
Cell[651393, 11185, 331, 5, 35, "Output",ExpressionUUID->"a3cd7ea2-29ef-48ea-bcee-0a3ec0631201"]
}, Open  ]],
Cell[CellGroupData[{
Cell[651761, 11195, 1587, 34, 66, "Input",ExpressionUUID->"761d4eb8-2e16-4b9e-bed2-4f11f929b522"],
Cell[653351, 11231, 773, 16, 35, "Output",ExpressionUUID->"d2fcf357-b3e1-40d6-9294-da0d9e746b12"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[654173, 11253, 464, 7, 72, "Section",ExpressionUUID->"fcd6416b-f475-4f0b-828a-9c8ec7199cda"],
Cell[654640, 11262, 1079, 23, 78, "Input",ExpressionUUID->"2ace2196-d1ae-4828-a438-852e74242b27"],
Cell[655722, 11287, 1570, 23, 33, "Input",ExpressionUUID->"5b153b26-febb-4525-9ddb-3b231e3b3dc9"],
Cell[CellGroupData[{
Cell[657317, 11314, 5524, 132, 441, "Input",ExpressionUUID->"56d5b6ea-b49d-4d90-ad39-370d4711ef4c"],
Cell[662844, 11448, 64687, 1078, 582, "Output",ExpressionUUID->"e8dd3bb6-fb59-447f-98d8-9a6358f1c11e"],
Cell[727534, 12528, 65056, 1085, 582, "Output",ExpressionUUID->"0b5c7f23-6e8e-4c0e-800c-1b93a4d0508a"],
Cell[792593, 13615, 170082, 2803, 549, 65780, 1097, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"4af9baf5-f66a-4044-b517-9b73a33f0d9e"]
}, Open  ]],
Cell[962690, 16421, 947, 23, 55, "Input",ExpressionUUID->"05834213-352e-4735-bbab-648a211211f3"],
Cell[963640, 16446, 894, 23, 55, "Input",ExpressionUUID->"a35262e5-9456-4df4-a394-5d9ca40e4017"],
Cell[CellGroupData[{
Cell[964559, 16473, 1917, 53, 237, "Input",ExpressionUUID->"6eeaf6f4-dc9e-4c2f-b573-9f14817dc2f4"],
Cell[966479, 16528, 11599, 234, 115, "Output",ExpressionUUID->"e95aa576-70b9-4c8a-9fb3-fe6a8d1a6b47"],
Cell[978081, 16764, 11596, 234, 94, "Output",ExpressionUUID->"1ab197fe-18e0-413f-b290-14fe0c6b26e9"]
}, Open  ]],
Cell[989692, 17001, 1258, 34, 147, "Input",ExpressionUUID->"4ebf96b0-2b8f-4128-9d72-7b98ca4ff7ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[990987, 17040, 240, 4, 72, "Section",ExpressionUUID->"db9a123e-5242-4797-9c00-6a7f06e0e255"],
Cell[991230, 17046, 433, 9, 55, "Input",ExpressionUUID->"127901fc-4a3e-42ea-a218-00647c7925c2"],
Cell[CellGroupData[{
Cell[991688, 17059, 270, 5, 55, "Input",ExpressionUUID->"9b47d45b-3140-4cc1-8ff3-fa98ef4d7f08"],
Cell[CellGroupData[{
Cell[991983, 17068, 511, 8, 50, "Print",ExpressionUUID->"2cca4565-a460-45d5-b615-138b9ee63bf6",
 CellTags->"Info2473832562088-2235383"],
Cell[992497, 17078, 491, 8, 50, "Print",ExpressionUUID->"fef22a7a-e1fc-46a7-8571-7bf60ae3279d",
 CellTags->"Info2483832562088-2235383"]
}, Open  ]]
}, Open  ]],
Cell[993015, 17090, 687, 12, 55, "Input",ExpressionUUID->"8e4319c7-8117-470a-b32a-ec435ac387f5"],
Cell[993705, 17104, 718, 13, 55, "Input",ExpressionUUID->"f4d4e55a-5ff2-4c55-824f-c0cb9687c345"],
Cell[994426, 17119, 152, 3, 31, "Input",ExpressionUUID->"19e105db-d36d-4ba3-944d-21b1c31df2fe"],
Cell[994581, 17124, 2756, 77, 331, "Input",ExpressionUUID->"5ab4324f-76d2-4ace-850b-14dcb29d8ff6"],
Cell[997340, 17203, 12756, 357, 484, "Input",ExpressionUUID->"f7df74a3-c251-4870-bf42-34815588c538"],
Cell[CellGroupData[{
Cell[1010121, 17564, 277, 4, 71, "Subsection",ExpressionUUID->"58256917-6569-4db9-9211-7c26fe395972"],
Cell[1010401, 17570, 2356, 59, 153, "Text",ExpressionUUID->"e90cca08-d17b-47c1-9d40-ac442a8e6a6a"],
Cell[CellGroupData[{
Cell[1012782, 17633, 3168, 49, 101, "Input",ExpressionUUID->"c2416447-ec02-45ba-a297-6ab6f70a2832"],
Cell[1015953, 17684, 4440, 65, 35, "Output",ExpressionUUID->"2b2e3867-9465-4390-b263-af65ead022e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1020430, 17754, 996, 19, 55, "Input",ExpressionUUID->"b219d184-5b7b-4402-a782-545afac3cc29"],
Cell[1021429, 17775, 2762, 40, 37, "Output",ExpressionUUID->"b18499b2-f6fe-4963-8d38-0c7e90956085"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1024228, 17820, 248, 5, 31, "Input",ExpressionUUID->"41e0aba0-f87e-4a66-8b08-24f9295d3a56"],
Cell[1024479, 17827, 669, 11, 48, "Print",ExpressionUUID->"8adb320c-e0f9-4d0d-a545-c4aa62dae279",
 CellTags->"Info1103832510958-2235383"]
}, Open  ]],
Cell[1025163, 17841, 1276, 39, 46, "Text",ExpressionUUID->"87c7bf41-c412-451a-b4ac-3d64938ad762"],
Cell[1026442, 17882, 573, 11, 55, "Input",ExpressionUUID->"dcb3124e-e852-43b3-b056-7936152e4634"],
Cell[1027018, 17895, 164, 3, 35, "Text",ExpressionUUID->"7526bcc7-3537-4338-932c-8fdd88caa472"],
Cell[1027185, 17900, 876, 22, 55, "Input",ExpressionUUID->"bdef2af2-6450-42d3-a67c-f9d10a2f4b31"],
Cell[CellGroupData[{
Cell[1028086, 17926, 211, 4, 31, "Input",ExpressionUUID->"cd297085-9e6d-4e1d-8cdc-7e6367ed5540"],
Cell[1028300, 17932, 864, 15, 50, "Print",ExpressionUUID->"cff3d585-9358-479a-9693-395e0e8f7449",
 CellTags->"Info1133832511012-2235383"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1029201, 17952, 5119, 100, 170, "Input",ExpressionUUID->"ef86ac4d-2ba3-4ba4-97c7-7511f17e0dcd"],
Cell[1034323, 18054, 551, 14, 35, "Output",ExpressionUUID->"22f66873-a4a6-4030-9534-72e20dfc6e6f"],
Cell[1034877, 18070, 1276, 32, 59, "Output",ExpressionUUID->"f0a194f4-0361-4124-8d31-f30a4016599d"],
Cell[1036156, 18104, 368, 6, 35, "Output",ExpressionUUID->"248186dd-b472-439b-8840-8bf36b9f3c14"],
Cell[1036527, 18112, 665, 17, 35, "Output",ExpressionUUID->"7205a7db-99a7-43ff-ad92-5b84e017c87b"]
}, Open  ]],
Cell[1037207, 18132, 1463, 40, 109, "Text",ExpressionUUID->"cf80e9d1-5e5b-4441-9638-d961fff4d482"],
Cell[CellGroupData[{
Cell[1038695, 18176, 1782, 50, 223, "Input",ExpressionUUID->"0927b213-1400-40f0-91fe-92a9c3705ee0"],
Cell[1040480, 18228, 1009, 15, 35, "Output",ExpressionUUID->"a648dc07-4a84-4785-bcf9-d29a1e5096b3"],
Cell[1041492, 18245, 12044, 239, 115, "Output",ExpressionUUID->"4a0716f2-0193-4a25-bfd1-7a8655564ae1"],
Cell[1053539, 18486, 1104, 18, 35, "Output",ExpressionUUID->"67ee483f-dea1-4469-8d0d-ae3454b406b6"],
Cell[1054646, 18506, 1103, 18, 35, "Output",ExpressionUUID->"4b4af7ef-3cca-488d-8a40-f87fdd42c6e8"]
}, Open  ]],
Cell[1055764, 18527, 154, 3, 31, "Input",ExpressionUUID->"613e7941-c731-4506-8cb2-7ad2d577220a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1055955, 18535, 297, 7, 71, "Subsection",ExpressionUUID->"5faf22dd-539f-46ad-8a8d-86e0aa24db02"],
Cell[CellGroupData[{
Cell[1056277, 18546, 264, 5, 55, "Input",ExpressionUUID->"5313e23a-6cc2-4f49-a34b-43075b243394"],
Cell[CellGroupData[{
Cell[1056566, 18555, 516, 9, 73, "Print",ExpressionUUID->"2aa45ccc-b0d0-4e9a-ba22-9d13465c72c9",
 CellTags->"Info1283832511214-2235383"],
Cell[1057085, 18566, 395, 7, 71, "Print",ExpressionUUID->"607e3ad2-d98f-455b-834f-fb69acf3b537",
 CellTags->"Info1293832511214-2235383"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1057529, 18579, 4380, 71, 147, "Input",ExpressionUUID->"6e301f91-4ed4-4c24-8198-251294853cc0"],
Cell[1061912, 18652, 997, 18, 22, "Message",ExpressionUUID->"e6b2ad5d-1926-481e-be67-2308c3f33cb6"],
Cell[1062912, 18672, 671, 14, 22, "Message",ExpressionUUID->"fff9b7e8-3890-4d9d-a7e9-1e19a80ccb2e"],
Cell[1063586, 18688, 1031, 17, 35, "Output",ExpressionUUID->"9660a995-9dd1-495a-88e2-16596cb985ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1064654, 18710, 3994, 66, 170, "Input",ExpressionUUID->"0a7ed9f9-d64e-46e1-984f-ec59fb83b082"],
Cell[1068651, 18778, 4522, 66, 146, "Message",ExpressionUUID->"23c1523d-9987-4e0b-8eaf-10e57b858d69"],
Cell[1073176, 18846, 927, 17, 22, "Message",ExpressionUUID->"5d57caa9-4533-45f1-9c5a-d0016a1ec40e"],
Cell[1074106, 18865, 5099, 74, 35, "Output",ExpressionUUID->"e407ea94-8641-46cb-9037-3d14a1053688"]
}, Open  ]],
Cell[1079220, 18942, 306, 6, 51, "Text",ExpressionUUID->"11e99ea9-1e82-4cae-80df-8b174a6c03a0"],
Cell[1079529, 18950, 339, 8, 55, "Input",ExpressionUUID->"2dba5fd1-05ee-4a33-8e6b-cace80e918d9"],
Cell[1079871, 18960, 982, 17, 55, "Input",ExpressionUUID->"4226a5c1-ff62-4792-9e43-b4c013c5464a"],
Cell[1080856, 18979, 595, 11, 55, "Input",ExpressionUUID->"650fc979-7060-4ed1-8342-8ca2980ca07a"],
Cell[CellGroupData[{
Cell[1081476, 18994, 8406, 160, 322, "Input",ExpressionUUID->"e804d931-c200-41ca-b38f-c3ef7bf35c9a"],
Cell[1089885, 19156, 56331, 944, 539, "Output",ExpressionUUID->"7fa4a2dc-1ba9-4057-9089-9b954cb1df08"],
Cell[1146219, 20102, 292362, 4883, 455, 268085, 4488, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"a695b3d0-5b7f-430d-9911-30778d5c46cf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1438630, 24991, 168, 3, 55, "Subsection",ExpressionUUID->"1c860e32-457f-40ae-9963-4951f0ee7022"],
Cell[1438801, 24996, 4267, 117, 209, "Text",ExpressionUUID->"1ee689e7-f7e5-43e6-8cbc-3d239f9a0099"],
Cell[1443071, 25115, 602, 15, 59, "Input",ExpressionUUID->"540f819c-a78b-4be8-9002-6fc32982a01f"],
Cell[CellGroupData[{
Cell[1443698, 25134, 1549, 37, 155, "Input",ExpressionUUID->"38f5669c-c17d-42f0-aa90-7cc3282cfd6f"],
Cell[1445250, 25173, 3864, 79, 710, "Output",ExpressionUUID->"19ad6c7d-d305-4aec-8b02-a579d2251706"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1449151, 25257, 236, 7, 71, "Subsubsection",ExpressionUUID->"6a3c2279-463f-4644-8776-89ac697140d5"],
Cell[CellGroupData[{
Cell[1449412, 25268, 445, 11, 70, "Input",ExpressionUUID->"481a711e-7dbe-486c-90e0-509d4597fcba"],
Cell[1449860, 25281, 582, 12, 70, "Output",ExpressionUUID->"bc33bb36-a574-4de8-823a-7019ac98331d"],
Cell[1450445, 25295, 582, 11, 70, "Output",ExpressionUUID->"307aad52-4f50-4b68-bfcd-54374c13dce0"]
}, Open  ]],
Cell[1451042, 25309, 1955, 54, 70, "Input",ExpressionUUID->"fedc1bde-0fe1-4d1f-a055-3ca51683cd26"],
Cell[CellGroupData[{
Cell[1453022, 25367, 3206, 82, 70, "Input",ExpressionUUID->"0b23bf88-a1f6-433f-9990-311e0f3102ec"],
Cell[1456231, 25451, 77718, 1383, 70, "Output",ExpressionUUID->"8b377022-6c9b-4f33-8f8c-f372b19d8cd0"]
}, Open  ]],
Cell[1533964, 26837, 1175, 33, 70, "Input",ExpressionUUID->"8a15387d-e24b-4666-aaee-b9017a85283c"],
Cell[CellGroupData[{
Cell[1535164, 26874, 219, 3, 70, "Input",ExpressionUUID->"c115b936-f166-4364-9251-96a23f39f72a"],
Cell[1535386, 26879, 434, 8, 70, "Output",ExpressionUUID->"8d8e0601-8a18-45bf-8ca0-cae56e6f99d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1535857, 26892, 2176, 56, 70, "Input",ExpressionUUID->"85d7ec7b-439b-45e2-83a9-f030c2f8835a"],
Cell[1538036, 26950, 26745, 523, 70, "Output",ExpressionUUID->"3aa3d0df-1609-4e27-bf97-0763186ca699"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1564818, 27478, 2666, 68, 70, "Input",ExpressionUUID->"5bbd035e-8551-4d6d-a37f-8dc0a4ef763d"],
Cell[1567487, 27548, 25376, 505, 70, "Output",ExpressionUUID->"c5646a27-74f9-48dd-b348-31d2068da072"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1592912, 28059, 219, 6, 79, "Subsubsection",ExpressionUUID->"24b70deb-d431-4767-82de-5db65c955692"],
Cell[CellGroupData[{
Cell[1593156, 28069, 4211, 82, 231, "Input",ExpressionUUID->"11b307f3-b883-42d2-8632-ad2a563be195"],
Cell[1597370, 28153, 10505, 174, 705, "Output",ExpressionUUID->"eff61550-c1df-483f-b5d4-bd5cb23bcbcd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1607948, 28335, 310, 5, 72, "Section",ExpressionUUID->"9ae26f6a-1da7-44c8-b137-d56b4f7e039b"],
Cell[1608261, 28342, 809, 14, 78, "Input",ExpressionUUID->"68af4210-8669-433a-bfc6-6e792f331862"],
Cell[1609073, 28358, 203, 4, 31, "Input",ExpressionUUID->"e4f5e03a-2303-47d7-9cb4-339b52d620e0"],
Cell[1609279, 28364, 769, 21, 55, "Input",ExpressionUUID->"d9b38cbe-b595-4f96-9633-755cde4d12e5"],
Cell[CellGroupData[{
Cell[1610073, 28389, 276, 4, 71, "Subsection",ExpressionUUID->"9c499421-dde9-4742-aaf8-e930a7ebf283"],
Cell[1610352, 28395, 1488, 41, 107, "Text",ExpressionUUID->"4eb11986-07c1-4d46-9c70-713bd2e962ed"],
Cell[CellGroupData[{
Cell[1611865, 28440, 1965, 40, 130, "Input",ExpressionUUID->"6fa015e0-3d19-46f9-ae96-ae58fa4d8b77"],
Cell[1613833, 28482, 2198, 32, 35, "Output",ExpressionUUID->"b57c3cb0-3402-4cf1-9739-a2e508ba6dcb"],
Cell[1616034, 28516, 2155, 32, 35, "Output",ExpressionUUID->"d9e92780-dbed-4c52-92c5-fcae522da81a"],
Cell[1618192, 28550, 2153, 32, 35, "Output",ExpressionUUID->"4cd84897-4a13-46f5-92d4-cee7aaee4907"],
Cell[1620348, 28584, 2214, 33, 35, "Output",ExpressionUUID->"cb52421e-8d5e-469d-9a86-3037e2dab902"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1622599, 28622, 231, 5, 55, "Input",ExpressionUUID->"eb021b1a-f966-4794-a1c5-f0b0a68042e8"],
Cell[1622833, 28629, 1896, 27, 97, "Print",ExpressionUUID->"546aa5a0-f1e0-4241-956f-4fc8d3c4d4d2",
 CellTags->"Info1483832583241-9208266"]
}, Open  ]],
Cell[1624744, 28659, 599, 17, 78, "Input",ExpressionUUID->"d48eb203-c3ad-497b-967d-475ad01d4afe"],
Cell[CellGroupData[{
Cell[1625368, 28680, 719, 16, 55, "Input",ExpressionUUID->"c474e067-07a0-4d30-b309-3c509ce6e91d"],
Cell[1626090, 28698, 1529, 40, 93, "Output",ExpressionUUID->"58c09ecd-8518-4646-adb9-840bf48d97e1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1627668, 28744, 258, 4, 71, "Subsection",ExpressionUUID->"d04d3f28-0202-43a8-abf1-03892eae4ad9"],
Cell[1627929, 28750, 2407, 52, 101, "Input",ExpressionUUID->"e22ec248-4ef6-4331-a193-9fab3c7ca546"],
Cell[CellGroupData[{
Cell[1630361, 28806, 209, 4, 31, "Input",ExpressionUUID->"3a3596b1-8e40-4822-a0a8-2b8fca9f3acd"],
Cell[1630573, 28812, 1093, 18, 78, "Print",ExpressionUUID->"cb52e772-9e08-4d91-a55f-32a9c88fec00",
 CellTags->"Info1553832583467-9208266"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1631703, 28835, 1558, 32, 147, "Input",ExpressionUUID->"d921d83f-04d0-4a56-8ac0-6a84f46f3917"],
Cell[1633264, 28869, 2988, 46, 77, "Message",ExpressionUUID->"d69f49c6-5a12-4ad2-af36-d3eb8ecbbfd9"],
Cell[1636255, 28917, 2988, 46, 77, "Message",ExpressionUUID->"f44638bf-4edf-4339-a0fe-b7589c206db5"],
Cell[1639246, 28965, 2988, 46, 77, "Message",ExpressionUUID->"c4198df9-3563-470a-89c8-a635c09ed53d"],
Cell[1642237, 29013, 802, 15, 22, "Message",ExpressionUUID->"c129d0c6-ad43-4ad1-93f6-526f87b5d84c"],
Cell[1643042, 29030, 770, 15, 22, "Message",ExpressionUUID->"cabe2f12-b6bb-40da-9cf4-21b82c941624"],
Cell[1643815, 29047, 565, 10, 35, "Output",ExpressionUUID->"157c0b2f-5621-4589-a0f4-a2fd7967c380"]
}, Open  ]],
Cell[1644395, 29060, 559, 13, 55, "Input",ExpressionUUID->"b4968e0e-64bd-46fe-9b7c-f71b069938de"],
Cell[1644957, 29075, 2156, 58, 216, "Input",ExpressionUUID->"b79ec68d-fef2-4f02-905e-39a4dc02492a"],
Cell[CellGroupData[{
Cell[1647138, 29137, 5281, 132, 280, "Input",ExpressionUUID->"3b1f59de-eff6-45e3-b21f-e85a5fe81981"],
Cell[1652422, 29271, 13426, 234, 699, "Output",ExpressionUUID->"107a2ad7-8661-4ffe-a35f-bf4dbbc52b89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1665885, 29510, 151, 3, 45, "Subsubsection",ExpressionUUID->"b9b12da5-c7f0-4659-823b-53dce16f696d"],
Cell[1666039, 29515, 521, 11, 55, "Input",ExpressionUUID->"367a72b1-8c54-4677-891c-57a1a04958d2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1666609, 29532, 426, 9, 99, "Subsection",ExpressionUUID->"a3455c46-fe3d-4c7b-8d5e-6b12b187d299"],
Cell[1667038, 29543, 366, 8, 55, "Input",ExpressionUUID->"869e9ce0-16e4-4d9c-bc1e-97a89f288141"],
Cell[1667407, 29553, 2886, 72, 170, "Input",ExpressionUUID->"15df7bb4-e36b-4a26-ab2a-31cc5db5a155"],
Cell[1670296, 29627, 2154, 62, 101, "Input",ExpressionUUID->"0ac21cc1-7309-455e-b1cf-db463a637340"],
Cell[1672453, 29691, 789, 14, 55, "Input",ExpressionUUID->"db88f736-c5b2-4e14-9ce1-7fa5a461f4db"],
Cell[CellGroupData[{
Cell[1673267, 29709, 162, 3, 45, "Subsubsection",ExpressionUUID->"439e846b-4d73-457c-a186-f895a887de33"],
Cell[1673432, 29714, 1373, 33, 60, "Input",ExpressionUUID->"252b1a44-6652-46fa-b066-f012f816a4df"],
Cell[1674808, 29749, 6077, 154, 323, "Input",ExpressionUUID->"329edbca-c103-4502-aed5-5186a2358f42"],
Cell[1680888, 29905, 279303, 4665, 216, "Output",ExpressionUUID->"4de0ed09-e9bd-4f1d-95b8-a6f11b962e14",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[CellGroupData[{
Cell[1960216, 34574, 2291, 57, 185, "Input",ExpressionUUID->"21948cd9-c3e8-4cee-9d49-dafbb8154540"],
Cell[1962510, 34633, 73242, 1244, 431, "Output",ExpressionUUID->"f46ae931-6ca8-4854-bd42-17836b4dd254"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2035789, 35882, 3362, 90, 231, "Input",ExpressionUUID->"4966e525-66ee-412c-a86d-eb6a86945e37"],
Cell[2039154, 35974, 53819, 942, 226, "Output",ExpressionUUID->"64d2c227-b944-481f-99bf-23ad306b80e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2093010, 36921, 1794, 47, 185, "Input",ExpressionUUID->"3b2a9dbf-1fd0-4ff0-bf04-324e2a828218"],
Cell[2094807, 36970, 56515, 970, 441, "Output",ExpressionUUID->"924d69e1-9d02-4191-8e71-30d4c6f54e5f"]
}, Open  ]],
Cell[2151337, 37943, 1391, 33, 85, "Input",ExpressionUUID->"7bfb9d16-faab-418b-8f3e-df56f03d2aca",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2152731, 37978, 7240, 188, 394, "Input",ExpressionUUID->"bfd52aa7-2211-4651-a5a9-c9da15e44e1b"],
Cell[2159974, 38168, 30749, 610, 238, "Output",ExpressionUUID->"71aa5dd8-35ef-4eac-98de-5c0076bd530d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[CellGroupData[{
Cell[2190748, 38782, 5959, 160, 434, "Input",ExpressionUUID->"906ab7f5-a428-43c3-b1c7-58e60d0fc4e1"],
Cell[2196710, 38944, 14260, 290, 238, "Output",ExpressionUUID->"179cc16d-fe78-4eda-911c-c794f5529ea9"],
Cell[2210973, 39236, 9535, 197, 238, "Output",ExpressionUUID->"778bbdcc-a9c6-4127-83c5-de5207fa8e9c"]
}, Open  ]],
Cell[2220523, 39436, 3459, 74, 185, "Input",ExpressionUUID->"ac003b57-7690-4b92-869b-e0701c969bc6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2223985, 39512, 72526, 1228, 212, "Output",ExpressionUUID->"4441c29b-0a00-4482-98a1-6006f75b4183"],
Cell[CellGroupData[{
Cell[2296536, 40744, 2501, 60, 211, "Input",ExpressionUUID->"31284001-c35b-458c-ab5c-9408be7ebf74"],
Cell[2299040, 40806, 44908, 758, 250, "Output",ExpressionUUID->"bd898ec0-fb49-4544-965c-c08b030c919c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2343985, 41569, 1218, 31, 135, "Input",ExpressionUUID->"fe2b928e-3921-4468-957c-614542c47aa4"],
Cell[2345206, 41602, 5372, 108, 273, "Output",ExpressionUUID->"b283bf00-c01d-4c53-b457-437c47945f4e"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2350651, 41718, 300, 5, 72, "Section",ExpressionUUID->"6b0f0702-84d4-4082-bb82-dda6dfe8171e"],
Cell[2350954, 41725, 637, 12, 78, "Input",ExpressionUUID->"5aedd531-9dac-4114-9f46-a7f7b311d022"],
Cell[2351594, 41739, 1781, 46, 101, "Input",ExpressionUUID->"c53d1a5e-5eed-4f4d-8078-e05a5c9e1a68"],
Cell[CellGroupData[{
Cell[2353400, 41789, 214, 4, 31, "Input",ExpressionUUID->"d62f9e53-8364-4603-9463-a1d95344995b"],
Cell[2353617, 41795, 1364, 20, 132, "Print",ExpressionUUID->"623a0c81-32fd-4cf7-abb5-e28883082cff",
 CellTags->"Info2123832596575-9208266"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2355018, 41820, 880, 18, 55, "Input",ExpressionUUID->"b20d84d1-6a76-4fc7-9804-bddd8202f344"],
Cell[2355901, 41840, 691, 14, 35, "Output",ExpressionUUID->"bda5e3da-4b23-4c0c-aaa9-98100fddf58f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2356629, 41859, 295, 6, 55, "Input",ExpressionUUID->"7d5dcbe1-3f8d-482e-97d4-1d6dc60da5c5"],
Cell[2356927, 41867, 721579, 16158, 185, "Output",ExpressionUUID->"77ae9348-2c72-483c-a552-9d1cb47d90a2"]
}, Open  ]],
Cell[3078521, 58028, 1011, 19, 173, "Text",ExpressionUUID->"78f28b44-437e-4e56-b338-77dde12877a0"],
Cell[CellGroupData[{
Cell[3079557, 58051, 255, 4, 61, "Subsubsection",ExpressionUUID->"0d75f3a7-425b-4d69-b146-9e64f3ac093d"],
Cell[3079815, 58057, 3678, 101, 482, "Input",ExpressionUUID->"4dfa5a8a-a0fd-4bf9-a347-b03a0f3c0796"],
Cell[3083496, 58160, 1751, 45, 124, "Input",ExpressionUUID->"ff032d0e-f2e2-4a27-8b37-e38aa6309a2e"],
Cell[CellGroupData[{
Cell[3085272, 58209, 1247, 20, 80, "Input",ExpressionUUID->"93834f83-72f0-4b03-8a5e-8b9c621014f5"],
Cell[3086522, 58231, 1463, 22, 35, "Output",ExpressionUUID->"0b71027f-ccbc-417d-af9f-60c02e642084"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3088022, 58258, 1239, 26, 62, "Input",ExpressionUUID->"c01112bc-092a-43c6-91de-00396d72858b"],
Cell[3089264, 58286, 210, 5, 35, "Output",ExpressionUUID->"f69798d2-72d2-44ec-898f-70a6add0572a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3089511, 58296, 1399, 36, 78, "Input",ExpressionUUID->"b33fd26d-6db1-44bb-af5d-306a4ba63472"],
Cell[3090913, 58334, 747, 13, 35, "Output",ExpressionUUID->"57cd049e-39c1-41a7-aa1b-14678ce24de0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3091697, 58352, 9793, 295, 400, "Input",ExpressionUUID->"caf22be7-2a66-4359-9e38-4a2495f506ff"],
Cell[3101493, 58649, 812, 14, 35, "Output",ExpressionUUID->"99db2dc1-bca1-4e5d-87af-9a78eded1bab"]
}, Open  ]],
Cell[3102320, 58666, 744, 13, 55, "Input",ExpressionUUID->"d5040b98-aa94-4a04-988d-0c24ec9e49e2"],
Cell[3103067, 58681, 5114, 118, 239, "Input",ExpressionUUID->"8d92da4b-7fcc-47a4-b01a-3c37f6bf9aed"],
Cell[3108184, 58801, 1065, 18, 55, "Input",ExpressionUUID->"4ee9d478-fa05-4733-bf83-da646a48024d"],
Cell[CellGroupData[{
Cell[3109274, 58823, 1407, 31, 101, "Input",ExpressionUUID->"166d19e9-6fac-4c6b-a914-47e03b03d606"],
Cell[3110684, 58856, 2950, 57, 113, "Output",ExpressionUUID->"48bb610c-9aed-4f0a-b483-7ed731ea46e0"],
Cell[3113637, 58915, 2940, 57, 113, "Output",ExpressionUUID->"80f2a074-4426-4bc3-81b6-143b4393cb06"],
Cell[3116580, 58974, 2035, 33, 50, "Output",ExpressionUUID->"dddf78c5-39fb-4366-b2f6-5ce8ccf258df"]
}, Open  ]],
Cell[3118630, 59010, 3046, 83, 116, "Input",ExpressionUUID->"2e04dc66-db9a-40f0-9cb2-2d265184ce24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3121713, 59098, 257, 4, 45, "Subsubsection",ExpressionUUID->"0b2a16fe-eb15-4f7b-83bf-9731a452fc24"],
Cell[CellGroupData[{
Cell[3121995, 59106, 239, 5, 55, "Input",ExpressionUUID->"2709928c-3d3d-4ac8-a6f9-663733ca0ff7"],
Cell[3122237, 59113, 334, 6, 46, "Print",ExpressionUUID->"2097cf84-6116-4446-86ef-794fdf71a7fc",
 CellTags->"Info3033777738308-2748660"]
}, Open  ]],
Cell[3122586, 59122, 1752, 46, 118, "Input",ExpressionUUID->"bc9d5bc9-b6eb-4cbb-821f-8b6669810268"],
Cell[3124341, 59170, 4225, 134, 193, "Input",ExpressionUUID->"0da7df2a-2c21-40c4-88d3-70d73d3989e1"],
Cell[3128569, 59306, 1121, 31, 85, "Text",ExpressionUUID->"d6a2d381-6278-43b4-9fac-a5cb05fb66f4"],
Cell[3129693, 59339, 2120, 53, 170, "Input",ExpressionUUID->"ad44acf4-dc8c-4b3c-9578-6b6c9cc0d4b3"],
Cell[3131816, 59394, 1968, 51, 70, "Input",ExpressionUUID->"432acb9c-656b-44d7-a8bc-efe29ff2e30c"],
Cell[3133787, 59447, 1121, 31, 70, "Text",ExpressionUUID->"b1eff9c0-62c8-41dc-bb1c-1dbf0d57b4d8"],
Cell[CellGroupData[{
Cell[3134933, 59482, 1146, 25, 70, "Input",ExpressionUUID->"20f6d80e-166c-48e2-822e-f334a55c280f"],
Cell[3136082, 59509, 1736, 38, 70, "Output",ExpressionUUID->"162448d1-6cc6-444d-a269-abe47679b030"],
Cell[3137821, 59549, 1734, 38, 70, "Output",ExpressionUUID->"cec745b1-7236-45b6-95bc-4ef64fe02191"]
}, Open  ]],
Cell[3139570, 59590, 339, 8, 70, "Text",ExpressionUUID->"bdd3cf7b-5026-4042-89a0-f85b0c4bb1e0"],
Cell[3139912, 59600, 6187, 163, 70, "Input",ExpressionUUID->"7b6118fa-2a34-4fd3-a6fa-c27b19b358ad"],
Cell[CellGroupData[{
Cell[3146124, 59767, 1805, 50, 70, "Input",ExpressionUUID->"3b84447f-c2d1-4f0f-a5da-d73a44b521d2"],
Cell[3147932, 59819, 29870, 589, 70, "Output",ExpressionUUID->"795b7e0c-c5c2-47ba-ae29-b58f89273b8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3177839, 60413, 2191, 60, 70, "Input",ExpressionUUID->"9fed26c3-2429-4ea7-b902-aa65d01820eb"],
Cell[3180033, 60475, 22107, 378, 70, "Output",ExpressionUUID->"93be3b58-0739-47d3-9c38-b451f1d07b3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3202177, 60858, 1826, 50, 101, "Input",ExpressionUUID->"e1a6e8bb-f2d1-4ffb-a7df-0db1365a717f"],
Cell[3204006, 60910, 43946, 819, 227, "Output",ExpressionUUID->"d92e51b4-8906-4341-a3f4-c24767da6586"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3247989, 61734, 1891, 52, 124, "Input",ExpressionUUID->"9dfce497-291e-4394-b352-b8b1b09f4ddd"],
Cell[3249883, 61788, 43918, 819, 227, "Output",ExpressionUUID->"816a0c4e-0a60-4000-866d-cbea9d49986f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3293838, 62612, 1828, 50, 78, "Input",ExpressionUUID->"0ce67354-2cd5-45ca-8f41-613dc9580912"],
Cell[3295669, 62664, 79120, 1397, 224, "Output",ExpressionUUID->"3fdf35c4-214f-4e53-b48c-244ea37fe30d"]
}, Open  ]],
Cell[3374804, 64064, 178, 3, 31, "Input",ExpressionUUID->"7eb19dbe-ab38-470c-9487-d59f03b8f783"],
Cell[CellGroupData[{
Cell[3375007, 64071, 1016, 25, 105, "Input",ExpressionUUID->"5aa39eed-87ce-4ced-bc3c-a61be4933976"],
Cell[3376026, 64098, 511, 8, 37, "Output",ExpressionUUID->"e0b6ce2e-a4cd-45e5-afef-2f4ca674118c"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3376598, 64113, 403, 6, 72, "Section",ExpressionUUID->"5dd97302-0485-41c2-ad53-fa5c56889885"],
Cell[3377004, 64121, 2770, 75, 147, "Input",ExpressionUUID->"8dd17eaf-386d-497e-b3f8-59bde3b209d1"],
Cell[CellGroupData[{
Cell[3379799, 64200, 258, 5, 55, "Input",ExpressionUUID->"65f9b43f-8f6e-4185-be01-887c90313401"],
Cell[CellGroupData[{
Cell[3380082, 64209, 1029, 17, 96, "Print",ExpressionUUID->"14e8fc95-7e2a-475f-9b52-4f6dccfbf824",
 CellTags->"Info1763832600411-9863370"],
Cell[3381114, 64228, 325, 6, 46, "Print",ExpressionUUID->"05478a0e-72d8-4ab4-aaee-8d0e6ffaca3a",
 CellTags->"Info1773832600411-9863370"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3381488, 64240, 171, 3, 55, "Subsection",ExpressionUUID->"a2d40803-6a35-4c59-b545-bb2895de396d"],
Cell[CellGroupData[{
Cell[3381684, 64247, 2285, 55, 193, "Input",ExpressionUUID->"2838f40c-a84b-4e7b-99aa-1d618303ab86"],
Cell[3383972, 64304, 577, 12, 22, "Message",ExpressionUUID->"eb9c32f8-7160-47a6-a8bb-a41606532270"],
Cell[3384552, 64318, 372, 7, 35, "Output",ExpressionUUID->"70ce9e89-0b30-46e2-a4c7-dae6568671dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3384961, 64330, 2135, 53, 193, "Input",ExpressionUUID->"bea6303b-d868-49ff-a480-cbed4413ead9"],
Cell[3387099, 64385, 462, 11, 22, "Message",ExpressionUUID->"a49fea1a-a6a5-41fe-8e22-754036c0fea5"],
Cell[3387564, 64398, 257, 6, 35, "Output",ExpressionUUID->"ccc562f9-538d-4c3f-884d-512d6915e70f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3387858, 64409, 2914, 88, 224, "Input",ExpressionUUID->"ed11a43e-a71d-4af7-80be-dd172eed5908"],
Cell[3390775, 64499, 872, 23, 105, "Output",ExpressionUUID->"07e39d99-5456-4c9b-b232-0720f248b138"]
}, Open  ]],
Cell[3391662, 64525, 383, 9, 55, "Input",ExpressionUUID->"46f4a108-5089-4697-b5b5-8132d505d983"],
Cell[3392048, 64536, 1743, 50, 147, "Input",ExpressionUUID->"01654f07-bfda-4cb8-8b66-b37c908bb6f1"],
Cell[3393794, 64588, 346, 8, 55, "Input",ExpressionUUID->"02057100-cd80-4d5f-8ee5-3741645ae59a"],
Cell[CellGroupData[{
Cell[3394165, 64600, 976, 20, 147, "Input",ExpressionUUID->"f46bb024-2312-4d95-82c2-459a09be4c15"],
Cell[3395144, 64622, 4657, 103, 173, "Output",ExpressionUUID->"8a38aa65-a483-4119-ad20-55972b7a70df"],
Cell[3399804, 64727, 1637, 25, 35, "Output",ExpressionUUID->"771ff824-fc4f-4fa0-92e5-98d52f9b7150"],
Cell[3401444, 64754, 4235, 95, 173, "Output",ExpressionUUID->"5ebe74bb-1643-4a7c-8be7-98a1440ff465"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3405728, 64855, 443, 7, 55, "Subsection",ExpressionUUID->"e5670fd4-492e-4e05-a353-7770691aec67"],
Cell[3406174, 64864, 1969, 42, 173, "Text",ExpressionUUID->"a6d616bc-5c5e-4f18-a236-617d1bb598fa"],
Cell[3408146, 64908, 485, 13, 58, "Text",ExpressionUUID->"5f1c2dd0-2446-4ad6-96b8-e4126e81a18f"],
Cell[CellGroupData[{
Cell[3408656, 64925, 2434, 57, 124, "Input",ExpressionUUID->"06de226b-ae9d-47d8-ad07-19f67ae25249"],
Cell[3411093, 64984, 436, 10, 22, "Message",ExpressionUUID->"591548ed-3997-48be-b92f-d29c5b4ddeec"],
Cell[3411532, 64996, 307, 6, 35, "Output",ExpressionUUID->"4b60fa02-01d5-4256-bc13-3a923bb93899"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3411876, 65007, 2288, 55, 124, "Input",ExpressionUUID->"e21be740-4048-4d9b-aedd-3202be4927ef"],
Cell[3414167, 65064, 438, 10, 22, "Message",ExpressionUUID->"549decb9-4262-4796-b1fe-da7f52a5c993"],
Cell[3414608, 65076, 231, 5, 35, "Output",ExpressionUUID->"7f647e34-bddf-4c15-8aad-7a69b21ebbbd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3414876, 65086, 2914, 88, 224, "Input",ExpressionUUID->"6ca90a0b-d347-4337-88a1-131661529824"],
Cell[3417793, 65176, 1021, 26, 105, "Output",ExpressionUUID->"929324ea-37a7-4c63-b363-f729d425a661"]
}, Open  ]],
Cell[3418829, 65205, 383, 9, 55, "Input",ExpressionUUID->"f0d408ac-50b1-4cbf-9935-9e2847346fac"],
Cell[3419215, 65216, 419, 12, 58, "Text",ExpressionUUID->"11767069-6b85-4a50-b262-162af89b0543"],
Cell[3419637, 65230, 1692, 49, 124, "Input",ExpressionUUID->"ec1c9368-64aa-4ba0-b8f0-32c589fa4ab5"],
Cell[3421332, 65281, 2151, 57, 150, "Text",ExpressionUUID->"b57c4059-de16-4f2a-a7d1-38c6abe50c7d"],
Cell[3423486, 65340, 8091, 207, 271, "Input",ExpressionUUID->"1de1a200-e591-4fd9-b9cf-7a9fc4cdf60d"],
Cell[3431580, 65549, 1394, 40, 81, "Text",ExpressionUUID->"de7b1f95-6e5e-4fa4-8584-2c737f30f5a2"],
Cell[3432977, 65591, 1602, 44, 55, "Input",ExpressionUUID->"fb1f02e1-d85f-4260-96f1-e82b68182bbd"],
Cell[CellGroupData[{
Cell[3434604, 65639, 535, 14, 101, "Input",ExpressionUUID->"6ce28a30-e8f9-48df-b7af-3a41c7b31c6e"],
Cell[3435142, 65655, 3677, 92, 181, "Output",ExpressionUUID->"223a2ec1-76a9-4382-83fc-417a4ceda3ca"],
Cell[3438822, 65749, 3521, 90, 173, "Output",ExpressionUUID->"8495cc77-dcef-4d99-ac58-6412daada748"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3442404, 65846, 194, 4, 68, "Section",ExpressionUUID->"96a1eab0-85b3-457a-80b4-f29d05318863"],
Cell[3442601, 65852, 271, 6, 31, "Input",ExpressionUUID->"86c63792-273d-43ed-aa99-36c5adcc3cbf"],
Cell[CellGroupData[{
Cell[3442897, 65862, 973, 20, 124, "Input",ExpressionUUID->"bb639085-742d-47b7-aedd-92facbb370ea"],
Cell[3443873, 65884, 4627, 112, 173, "Output",ExpressionUUID->"89c48780-86e8-4c83-8563-f96dedf3c393"],
Cell[3448503, 65998, 994, 19, 35, "Output",ExpressionUUID->"2687a102-6888-4a4d-ba80-160865c56fbf"],
Cell[3449500, 66019, 4338, 105, 181, "Output",ExpressionUUID->"d3ff7033-14a6-48cd-a78d-23ff8961548d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3453887, 66130, 192, 3, 72, "Section",ExpressionUUID->"c7260e57-432c-4532-85bf-967e77f5c627"],
Cell[CellGroupData[{
Cell[3454104, 66137, 216, 6, 99, "Subsection",ExpressionUUID->"c84704a3-75d5-40f9-9430-7b3a855ba535"],
Cell[3454323, 66145, 1423, 31, 55, "Input",ExpressionUUID->"75fce76e-d857-47eb-873a-db55e53dd7a8"],
Cell[3455749, 66178, 2643, 45, 31, "Input",ExpressionUUID->"8bbbd89f-66c8-4e99-886c-22773d66be62"],
Cell[3458395, 66225, 1176, 26, 55, "Input",ExpressionUUID->"67cd6ddb-3a17-4866-8e16-2e39caa2630e"],
Cell[CellGroupData[{
Cell[3459596, 66255, 747, 12, 55, "Input",ExpressionUUID->"9f78186d-4293-466d-83ec-72e1d61117b6"],
Cell[3460346, 66269, 2462, 35, 37, "Output",ExpressionUUID->"d9a84454-643a-4127-923b-2259a51f1a2b"]
}, Open  ]],
Cell[3462823, 66307, 2167, 56, 178, "Input",ExpressionUUID->"33ce08ac-f543-4823-92b5-e144c76cadbb"],
Cell[CellGroupData[{
Cell[3465015, 66367, 2144, 49, 163, "Input",ExpressionUUID->"bab264dd-95c1-4b25-b07e-254b0d4912d3"],
Cell[3467162, 66418, 8285, 152, 243, "Output",ExpressionUUID->"f60bc507-1f64-41c0-ae64-128b4979ab64"],
Cell[3475450, 66572, 4791, 88, 338, "Output",ExpressionUUID->"751c349f-2b47-4f47-a8a5-d9f15057a940"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3480278, 66665, 1983, 38, 55, "Input",ExpressionUUID->"1c02465a-72d7-42ed-be9a-3aab322edf44"],
Cell[3482264, 66705, 18211, 310, 245, "Output",ExpressionUUID->"55468491-f9de-4289-9700-2c0c7394290f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3500512, 67020, 160, 6, 71, "Subsubsection",ExpressionUUID->"01da1102-3ce3-48d6-a088-2840b48e3f9a"],
Cell[CellGroupData[{
Cell[3500697, 67030, 2385, 60, 102, "Input",ExpressionUUID->"58e453e0-8a68-4d90-9fb1-6368be3dc420"],
Cell[3503085, 67092, 33744, 608, 734, "Output",ExpressionUUID->"eafa423b-93c1-416e-9f78-834ab993adb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3536866, 67705, 5859, 138, 361, "Input",ExpressionUUID->"273099cf-773c-4780-9b1b-59b342bbaca8"],
Cell[3542728, 67845, 4585, 95, 715, "Output",ExpressionUUID->"2b1ed740-5bab-42db-9334-aab344637b01"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3547374, 67947, 276, 7, 83, "Subsection",ExpressionUUID->"b847f2ac-cb7a-47e8-bae8-3bcbdffef393"],
Cell[3547653, 67956, 334, 8, 55, "Input",ExpressionUUID->"2351e5a2-a8bf-4e5f-93ec-f55dc3735752"],
Cell[CellGroupData[{
Cell[3548012, 67968, 891, 24, 31, "Input",ExpressionUUID->"a99505ef-de4e-4208-8c51-2b02208b8827"],
Cell[3548906, 67994, 426, 9, 35, "Output",ExpressionUUID->"184bb809-56c3-4885-b967-d8ede6c0083e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3549369, 68008, 738, 19, 31, "Input",ExpressionUUID->"39d6471b-111b-4ca5-9e7c-46a5fbcafb1f"],
Cell[3550110, 68029, 401, 8, 35, "Output",ExpressionUUID->"392d749b-1852-42aa-a86b-63ab1039251f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3550548, 68042, 4892, 92, 78, "Input",ExpressionUUID->"04f62cbc-8e68-416b-aefd-25872535a2ed"],
Cell[3555443, 68136, 394, 8, 35, "Output",ExpressionUUID->"756569c5-209c-48ec-9433-a9a411bc1d40"]
}, Open  ]],
Cell[3555852, 68147, 1050, 25, 84, "Input",ExpressionUUID->"60b2cf5d-ad08-4528-a441-13433436ad4b"],
Cell[CellGroupData[{
Cell[3556927, 68176, 899, 15, 101, "Input",ExpressionUUID->"9f14f164-50e7-4396-a044-533cb02f9b3a"],
Cell[3557829, 68193, 1825, 26, 37, "Output",ExpressionUUID->"1d77d32c-bebe-4d60-b7de-71c288d2045b"],
Cell[3559657, 68221, 1823, 26, 37, "Output",ExpressionUUID->"6450e35c-3b5f-4c63-a782-6f5bea166a75"]
}, Open  ]],
Cell[3561495, 68250, 851, 22, 94, "Input",ExpressionUUID->"2bfe5e20-7e9d-4d06-b22e-8b9c557c191d"],
Cell[3562349, 68274, 515, 14, 56, "Input",ExpressionUUID->"e7db723a-948d-4077-a7e3-394723c2860a"],
Cell[CellGroupData[{
Cell[3562889, 68292, 2229, 54, 140, "Input",ExpressionUUID->"e98fb6ac-4c1c-486c-bab1-f7baf6a485bd"],
Cell[3565121, 68348, 56926, 1041, 530, "Output",ExpressionUUID->"af264687-2120-4efc-8f3a-d5912e913a97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3622084, 69394, 2029, 51, 140, "Input",ExpressionUUID->"1e3aea65-1310-438a-8a37-e2d90f69fcf5"],
Cell[3624116, 69447, 61232, 1114, 530, "Output",ExpressionUUID->"583eb642-ce5a-46f7-b290-a5f9b62bc84f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3685385, 70566, 2356, 60, 238, "Input",ExpressionUUID->"858202b2-488b-4111-9c18-05992b4a2d39"],
Cell[3687744, 70628, 5210, 107, 396, "Output",ExpressionUUID->"8a734d86-409b-41b3-aee1-326e7aca3d0f"],
Cell[3692957, 70737, 5606, 109, 610, "Output",ExpressionUUID->"d7f866c5-813f-4c0a-9225-6cc72ed52ff3"]
}, Open  ]],
Cell[3698578, 70849, 1565, 41, 95, "Input",ExpressionUUID->"2f21f3bb-2f04-40b3-9f81-6c9a3c98e77e"],
Cell[CellGroupData[{
Cell[3700168, 70894, 1304, 30, 115, "Input",ExpressionUUID->"fa7d14ad-052e-4a97-882d-b225cfd075cf"],
Cell[3701475, 70926, 4162, 88, 555, "Output",ExpressionUUID->"0888333f-fb7a-488e-affd-6ce1108fe4a8"]
}, Open  ]],
Cell[3705652, 71017, 149, 3, 55, "Input",ExpressionUUID->"42597c69-6d9b-43cc-9aa9-e24b6af6c9bb"],
Cell[CellGroupData[{
Cell[3705826, 71024, 464, 12, 55, "Input",ExpressionUUID->"ddcd426e-04d0-4a47-b8f8-08707fd4fe1a"],
Cell[3706293, 71038, 535, 13, 35, "Output",ExpressionUUID->"115e1535-a06d-4f29-a8f0-df1e10d9c011"],
Cell[3706831, 71053, 456, 10, 35, "Output",ExpressionUUID->"d5ebcc66-af72-47af-9bc0-cc579b994e7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3707324, 71068, 252, 6, 56, "Input",ExpressionUUID->"1e3e5175-ef56-44d2-b14f-829bdc405148"],
Cell[3707579, 71076, 195, 3, 35, "Output",ExpressionUUID->"ea0e6ff7-4df3-4f11-ad94-418612c462d2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3707823, 71085, 169, 6, 83, "Subsection",ExpressionUUID->"7cdb6dc4-c6a6-423b-8c26-2fa6542be9c4"],
Cell[CellGroupData[{
Cell[3708017, 71095, 3039, 90, 224, "Input",ExpressionUUID->"a25c2e6c-e1f6-45fc-b9d2-9227fe757e1f"],
Cell[3711059, 71187, 1168, 29, 105, "Output",ExpressionUUID->"1e3d1c1c-27be-4b2e-bbdf-ca70d7e7c6e9"]
}, Open  ]],
Cell[3712242, 71219, 1966, 50, 147, "Input",ExpressionUUID->"43cbb2cd-0b7b-4814-9e2e-e9278e8fd945"],
Cell[CellGroupData[{
Cell[3714233, 71273, 430, 10, 55, "Input",ExpressionUUID->"ff6144cb-7461-4443-85eb-cc8528739741"],
Cell[3714666, 71285, 823, 23, 40, "Output",ExpressionUUID->"0600b16a-1a29-446e-ba36-ea9fd66678ad"]
}, Open  ]],
Cell[3715504, 71311, 1879, 42, 124, "Input",ExpressionUUID->"a2899105-3838-4f0d-aab2-54e15465539d"],
Cell[3717386, 71355, 688, 17, 55, "Input",ExpressionUUID->"249faab6-ad63-493e-83fa-09e7ce0f4eb9"],
Cell[3718077, 71374, 537, 15, 56, "Input",ExpressionUUID->"fc00c469-2bd4-484f-8c41-8b2507ebca9d"],
Cell[CellGroupData[{
Cell[3718639, 71393, 3263, 87, 175, "Input",ExpressionUUID->"9cce0d60-4044-4a30-9f8f-c434a8b99522"],
Cell[3721905, 71482, 413, 8, 35, "Output",ExpressionUUID->"a62faaf8-212b-4f20-acbe-d03f7b72d62c"]
}, Open  ]],
Cell[3722333, 71493, 3291, 81, 161, "Input",ExpressionUUID->"1cbcb307-263a-48f1-805b-4740643781ad"],
Cell[3725627, 71576, 2392, 67, 124, "Input",ExpressionUUID->"b9382118-a853-4ecb-9356-66961ac661d2"],
Cell[3728022, 71645, 1826, 44, 78, "Input",ExpressionUUID->"ce3db94c-e189-4ebd-8444-742c7ef3fd99"],
Cell[3729851, 71691, 4179, 82, 124, "Input",ExpressionUUID->"1051f9b9-122f-410b-be33-6a4aab35de56"],
Cell[3734033, 71775, 3421, 82, 277, "Input",ExpressionUUID->"5cc9204f-72b1-4baf-9ba1-b79086747a56"],
Cell[CellGroupData[{
Cell[3737479, 71861, 222, 4, 31, "Input",ExpressionUUID->"823edfd2-cbc7-4e2b-b382-020d9203d8d3"],
Cell[3737704, 71867, 204, 4, 35, "Output",ExpressionUUID->"876be144-5a1a-4acf-a42d-baec41bb1a7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3737945, 71876, 601, 17, 86, "Input",ExpressionUUID->"89fb5bb4-f570-49d5-8ccd-541974c2b430"],
Cell[3738549, 71895, 432, 7, 37, "Output",ExpressionUUID->"fd57c522-f69c-4445-a505-d456f310bf3b"]
}, Open  ]],
Cell[3738996, 71905, 1110, 24, 59, "Input",ExpressionUUID->"24b63c5e-334e-4fc7-9dc4-cd068fa2f7a9"],
Cell[CellGroupData[{
Cell[3740131, 71933, 1144, 29, 114, "Input",ExpressionUUID->"508126e5-0ebe-41c9-aa74-d65b909e9b88"],
Cell[3741278, 71964, 3543, 79, 680, "Output",ExpressionUUID->"2375f0a1-7f06-44cb-a208-60246504c1e3"]
}, Open  ]],
Cell[3744836, 72046, 2222, 54, 147, "Input",ExpressionUUID->"e6106f47-dcb3-4d5b-a6b4-95c029c72227"],
Cell[3747061, 72102, 41628, 699, 711, "Input",ExpressionUUID->"099ba5d2-781f-47ca-b489-47156c9cef63"],
Cell[3788692, 72803, 1437, 40, 78, "Input",ExpressionUUID->"180aec91-ed13-4ed1-9b59-39413a70ca19"],
Cell[3790132, 72845, 274, 6, 31, "Text",ExpressionUUID->"eebd03fd-15aa-4a59-aa22-98581cb6adcb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3790455, 72857, 179, 3, 68, "Section",ExpressionUUID->"9ac56fe4-0760-45b0-95ad-ef5c2bbdcf66"],
Cell[3790637, 72862, 149, 3, 55, "Input",ExpressionUUID->"4ed9d14f-8fea-4dfb-8042-bfe15aab654d"],
Cell[3790789, 72867, 443, 7, 31, "Input",ExpressionUUID->"aca2dbdf-8441-4878-87b8-5f0b9d6cf4b8"],
Cell[3791235, 72876, 2607, 79, 252, "Input",ExpressionUUID->"64db702b-da6f-4126-a32f-b4700f8441f3"],
Cell[3793845, 72957, 857, 22, 78, "Input",ExpressionUUID->"6dc056cf-21fa-4cf2-aca3-d1a1d02f0b9f"],
Cell[3794705, 72981, 1635, 43, 147, "Input",ExpressionUUID->"3cd58353-1a32-44ef-a3cf-2ddb5c82919f"],
Cell[CellGroupData[{
Cell[3796365, 73028, 322, 8, 55, "Input",ExpressionUUID->"4712f989-a63c-4726-9856-466c1d179e9e"],
Cell[3796690, 73038, 182, 3, 35, "Output",ExpressionUUID->"f191692a-b831-4cf6-ac4b-1d58d995b8fd"]
}, Open  ]],
Cell[3796887, 73044, 8091, 207, 317, "Input",ExpressionUUID->"55cd378d-6a44-4520-886a-4f0d73292c3e"],
Cell[3804981, 73253, 1602, 44, 55, "Input",ExpressionUUID->"73f046da-3a9f-46cf-b979-7e53ea62540b"],
Cell[3806586, 73299, 1966, 50, 147, "Input",ExpressionUUID->"f5e60cc1-02b1-4580-82ed-a55b0227a716"],
Cell[3808555, 73351, 1415, 36, 124, "Input",ExpressionUUID->"145416b8-639a-4ae7-9bd4-5f6d72b93f27"],
Cell[3809973, 73389, 3162, 78, 277, "Input",ExpressionUUID->"1df611dc-81ea-4ae2-94ec-f0f7af8a911b"],
Cell[CellGroupData[{
Cell[3813160, 73471, 204, 7, 83, "Subsection",ExpressionUUID->"e47cad0f-b9cc-4804-b765-f3f0ea4283c3"],
Cell[CellGroupData[{
Cell[3813389, 73482, 985, 27, 70, "Input",ExpressionUUID->"7a1ba02a-053e-42e7-9844-639218db1ded"],
Cell[3814377, 73511, 373, 7, 70, "Output",ExpressionUUID->"6a6c8580-6100-4138-b2aa-3823eb78d2c1"]
}, Open  ]],
Cell[3814765, 73521, 551, 15, 70, "Input",ExpressionUUID->"305cddf5-0959-4686-9604-b181a9149584"],
Cell[3815319, 73538, 443, 12, 70, "Input",ExpressionUUID->"870f82a0-c74b-482d-b66c-55cd6022f9c0"],
Cell[3815765, 73552, 520, 13, 70, "Input",ExpressionUUID->"c20b7829-bdb5-402f-9418-c8978ca2fd16"],
Cell[3816288, 73567, 1266, 33, 70, "Input",ExpressionUUID->"50f3b3a8-c56b-45c6-b6f4-4ed557a0f5df"],
Cell[CellGroupData[{
Cell[3817579, 73604, 1080, 21, 70, "Input",ExpressionUUID->"c91f207b-b41c-4131-be51-9cf43dd472f6"],
Cell[3818662, 73627, 27085, 464, 70, "Output",ExpressionUUID->"7529af3d-7bc0-4d27-a693-91b117a49649"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3845784, 74096, 1542, 40, 70, "Input",ExpressionUUID->"50dfc92b-44d2-4290-9257-907bec1da97f"],
Cell[3847329, 74138, 37458, 627, 70, "Output",ExpressionUUID->"50db82a9-36f2-4ac3-9567-77ac2775ba14"]
}, Open  ]],
Cell[3884802, 74768, 1207, 33, 70, "Input",ExpressionUUID->"f0c929b7-f293-4252-9d65-62d71fa0e88c"],
Cell[CellGroupData[{
Cell[3886034, 74805, 1091, 28, 70, "Input",ExpressionUUID->"968f032f-fc7a-4492-a384-d7b0b99b2fac"],
Cell[3887128, 74835, 36534, 697, 70, "Output",ExpressionUUID->"1147acbc-cc7b-432c-a4b4-56089d5de244"]
}, Open  ]],
Cell[3923677, 75535, 2800, 78, 70, "Input",ExpressionUUID->"56769b67-f2d2-4711-b61b-ccc450b05088"],
Cell[CellGroupData[{
Cell[3926502, 75617, 971, 21, 70, "Input",ExpressionUUID->"ef81b07a-f298-4479-80fc-c8f8885ce73d"],
Cell[3927476, 75640, 46682, 862, 70, "Output",ExpressionUUID->"3221eaa8-9a44-41f2-bc48-e1777fa9c40a"]
}, Open  ]],
Cell[3974173, 76505, 1395, 38, 70, "Input",ExpressionUUID->"e1e43786-a02e-4aab-ba45-050495a7b0ab"],
Cell[CellGroupData[{
Cell[3975593, 76547, 398, 9, 70, "Input",ExpressionUUID->"ba4a681a-2c1f-42b0-9fa2-0d063f1e7b0f"],
Cell[3975994, 76558, 309, 5, 70, "Output",ExpressionUUID->"79fdb958-5809-42f6-8948-8e1a40c546d6"],
Cell[3976306, 76565, 522, 11, 70, "Output",ExpressionUUID->"163a0f56-6cf5-45a5-b20d-c93beb245339"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3976865, 76581, 6692, 180, 70, "Input",ExpressionUUID->"6fe7b5e5-1afc-46c0-aa27-effa211de393"],
Cell[3983560, 76763, 8597, 166, 70, "Output",ExpressionUUID->"aedf1859-7211-4538-83e4-1c9999bef10b"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

